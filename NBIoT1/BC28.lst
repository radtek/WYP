

HI-TECH Software PIC PRO Macro Assembler V9.71a build 6446 
                                                                                               Wed Apr 10 11:12:29 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 6446
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text1994,local,class=CODE,delta=2
    17                           	psect	text2001,local,class=CODE,delta=2
    18                           	psect	text2020,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text2057,local,class=CODE,delta=2
    21                           	psect	text2059,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x320,16
    24                           	dabs	1,0x2A0,80
    25                           	dabs	1,0x23A,54
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  8007  FE5A               	dw	65114	;#
    31  8008  FEFC               	dw	65276	;_ATCommand_RxList
    32                           
    33                           	psect	idataBANK0
    34  0000                     __pidataBANK0:	
    35                           
    36                           	psect	stringtext
    37  1000                     __pstringtext:	
    38  1000                     __stringtab:	
    39  1000  3400               	retlw	0
    40  1001                     _SegCode:	
    41  1001  343F               	retlw	63
    42  1002  3406               	retlw	6
    43  1003  345B               	retlw	91
    44  1004  344F               	retlw	79
    45  1005  3466               	retlw	102
    46  1006  346D               	retlw	109
    47  1007  347D               	retlw	125
    48  1008  3407               	retlw	7
    49  1009  347F               	retlw	127
    50  100A  346F               	retlw	111
    51  100B  3477               	retlw	119
    52  100C  347C               	retlw	124
    53  100D  3439               	retlw	57
    54  100E  345E               	retlw	94
    55  100F  3479               	retlw	121
    56  1010  3471               	retlw	113
    57  1011  3450               	retlw	80
    58  1012  3440               	retlw	64
    59  1013                     _DS18X20_ToDecicel:	
    60  1013  3400               	retlw	0
    61  1014  3401               	retlw	1
    62  1015  3401               	retlw	1
    63  1016  3402               	retlw	2
    64  1017  3403               	retlw	3
    65  1018  3403               	retlw	3
    66  1019  3404               	retlw	4
    67  101A  3404               	retlw	4
    68  101B  3405               	retlw	5
    69  101C  3406               	retlw	6
    70  101D  3406               	retlw	6
    71  101E  3407               	retlw	7
    72  101F  3408               	retlw	8
    73  1020  3408               	retlw	8
    74  1021  3409               	retlw	9
    75  1022  3409               	retlw	9
    76  001B                     _PR2	set	27
    77  0018                     _T1CON	set	24
    78  001C                     _T2CON	set	28
    79  0017                     _TMR1H	set	23
    80  0016                     _TMR1L	set	22
    81  0018                     _CARRY	set	24
    82  005F                     _GIE	set	95
    83  005E                     _PEIE	set	94
    84  0069                     _RB1	set	105
    85  006A                     _RB2	set	106
    86  006F                     _RB7	set	111
    87  008D                     _RCIF	set	141
    88  007E                     _RD6	set	126
    89  0088                     _TMR1IF	set	136
    90  00C0                     _TMR1ON	set	192
    91  0089                     _TMR2IF	set	137
    92  00E2                     _TMR2ON	set	226
    93  009E                     _ADCON1	set	158
    94  048D                     _RCIE	set	1165
    95  0488                     _TMR1IE	set	1160
    96  0489                     _TMR2IE	set	1161
    97  0463                     _TRISA3	set	1123
    98  0464                     _TRISA4	set	1124
    99  0469                     _TRISB1	set	1129
   100  046A                     _TRISB2	set	1130
   101  046F                     _TRISB7	set	1135
   102  0476                     _TRISC6	set	1142
   103  0477                     _TRISC7	set	1143
   104  047C                     _TRISD4	set	1148
   105  047D                     _TRISD5	set	1149
   106  047E                     _TRISD6	set	1150
   107  047F                     _TRISD7	set	1151
   108  04AF                     _nWPUEN	set	1199
   109  0863                     _LATA3	set	2147
   110  0864                     _LATA4	set	2148
   111  0869                     _LATB1	set	2153
   112  087D                     _LATD5	set	2173
   113  087E                     _LATD6	set	2174
   114  087F                     _LATD7	set	2175
   115  018C                     _ANSELA	set	396
   116  018D                     _ANSELB	set	397
   117  018F                     _ANSELD	set	399
   118  0190                     _ANSELE	set	400
   119  0191                     _EEADRL	set	401
   120  0195                     _EECON1	set	405
   121  0196                     _EECON2	set	406
   122  0193                     _EEDATA	set	403
   123  0199                     _RCREG	set	409
   124  019D                     _RCSTA	set	413
   125  019B                     _SPBRG	set	411
   126  019A                     _TXREG	set	410
   127  019E                     _TXSTA	set	414
   128  0CEC                     _CREN	set	3308
   129  0CE9                     _OERR	set	3305
   130  0CA8                     _RD	set	3240
   131  0CF1                     _TRMT	set	3313
   132  0CA9                     _WR	set	3241
   133  0CAA                     _WREN	set	3242
   134  106F                     _WPUB7	set	4207
   135  0791                     _LCDCON	set	1937
   136  0794                     _LCDCST	set	1940
   137  07A0                     _LCDDATA0	set	1952
   138  07A1                     _LCDDATA1	set	1953
   139  07AA                     _LCDDATA10	set	1962
   140  07AB                     _LCDDATA11	set	1963
   141  07A2                     _LCDDATA2	set	1954
   142  07A3                     _LCDDATA3	set	1955
   143  07A4                     _LCDDATA4	set	1956
   144  07A5                     _LCDDATA5	set	1957
   145  07A6                     _LCDDATA6	set	1958
   146  07A7                     _LCDDATA7	set	1959
   147  07A8                     _LCDDATA8	set	1960
   148  07A9                     _LCDDATA9	set	1961
   149  0792                     _LCDPS	set	1938
   150  0793                     _LCDREF	set	1939
   151  0795                     _LCDRL	set	1941
   152  0798                     _LCDSE0	set	1944
   153  0799                     _LCDSE1	set	1945
   154  079A                     _LCDSE2	set	1946
   155  3C8F                     _LCDEN	set	15503
   156  3CCB                     _SEG11	set	15563
   157  3D0B                     _SEG11COM0	set	15627
   158  3D23                     _SEG11COM1	set	15651
   159  3D3B                     _SEG11COM2	set	15675
   160  3D53                     _SEG11COM3	set	15699
   161  3CD0                     _SEG16	set	15568
   162  3D10                     _SEG16COM0	set	15632
   163  3D28                     _SEG16COM1	set	15656
   164  3D40                     _SEG16COM2	set	15680
   165  3D58                     _SEG16COM3	set	15704
   166  3CD5                     _SEG21	set	15573
   167  3D2D                     _SEG21COM1	set	15661
   168  3D45                     _SEG21COM2	set	15685
   169  3D5D                     _SEG21COM3	set	15709
   170  3CD6                     _SEG22	set	15574
   171  3CD7                     _SEG23	set	15575
   172  3D17                     _SEG23COM0	set	15639
   173  3D2F                     _SEG23COM1	set	15663
   174  3D47                     _SEG23COM2	set	15687
   175  3D5F                     _SEG23COM3	set	15711
   176  3CC3                     _SEG3	set	15555
   177  3D03                     _SEG3COM0	set	15619
   178  3D1B                     _SEG3COM1	set	15643
   179  3D33                     _SEG3COM2	set	15667
   180  3D4B                     _SEG3COM3	set	15691
   181  3CC5                     _SEG5	set	15557
   182  3D05                     _SEG5COM0	set	15621
   183  3D1D                     _SEG5COM1	set	15645
   184  3D35                     _SEG5COM2	set	15669
   185  3D4D                     _SEG5COM3	set	15693
   186  3CC6                     _SEG6	set	15558
   187  3D4E                     _SEG6COM3	set	15694
   188  3C94                     _WA	set	15508
   189  3C8D                     _WERR	set	15501
   190  1023                     STR_4:	
   191  1023  3441               	retlw	65	;'A'
   192  1024  3454               	retlw	84	;'T'
   193  1025  342B               	retlw	43	;'+'
   194  1026  3443               	retlw	67	;'C'
   195  1027  3450               	retlw	80	;'P'
   196  1028  3453               	retlw	83	;'S'
   197  1029  344D               	retlw	77	;'M'
   198  102A  3453               	retlw	83	;'S'
   199  102B  343D               	retlw	61	;'='
   200  102C  3431               	retlw	49	;'1'
   201  102D  342C               	retlw	44	;','
   202  102E  342C               	retlw	44	;','
   203  102F  342C               	retlw	44	;','
   204  1030  3422               	retlw	34	;'"'
   205  1031  3431               	retlw	49	;'1'
   206  1032  3431               	retlw	49	;'1'
   207  1033  3431               	retlw	49	;'1'
   208  1034  3430               	retlw	48	;'0'
   209  1035  3430               	retlw	48	;'0'
   210  1036  3430               	retlw	48	;'0'
   211  1037  3430               	retlw	48	;'0'
   212  1038  3430               	retlw	48	;'0'
   213  1039  3422               	retlw	34	;'"'
   214  103A  342C               	retlw	44	;','
   215  103B  3422               	retlw	34	;'"'
   216  103C  3431               	retlw	49	;'1'
   217  103D  3431               	retlw	49	;'1'
   218  103E  3431               	retlw	49	;'1'
   219  103F  3430               	retlw	48	;'0'
   220  1040  3430               	retlw	48	;'0'
   221  1041  3430               	retlw	48	;'0'
   222  1042  3430               	retlw	48	;'0'
   223  1043  3430               	retlw	48	;'0'
   224  1044  3422               	retlw	34	;'"'
   225  1045  3400               	retlw	0
   226  1046  3400               	retlw	0
   227  1047                     STR_2:	
   228  1047  3441               	retlw	65	;'A'
   229  1048  3454               	retlw	84	;'T'
   230  1049  342B               	retlw	43	;'+'
   231  104A  344E               	retlw	78	;'N'
   232  104B  3453               	retlw	83	;'S'
   233  104C  344F               	retlw	79	;'O'
   234  104D  3443               	retlw	67	;'C'
   235  104E  344F               	retlw	79	;'O'
   236  104F  343D               	retlw	61	;'='
   237  1050  3432               	retlw	50	;'2'
   238  1051  342C               	retlw	44	;','
   239  1052  3422               	retlw	34	;'"'
   240  1053  3477               	retlw	119	;'w'
   241  1054  3477               	retlw	119	;'w'
   242  1055  3477               	retlw	119	;'w'
   243  1056  342E               	retlw	46	;'.'
   244  1057  3477               	retlw	119	;'w'
   245  1058  346C               	retlw	108	;'l'
   246  1059  3477               	retlw	119	;'w'
   247  105A  3464               	retlw	100	;'d'
   248  105B  346A               	retlw	106	;'j'
   249  105C  3463               	retlw	99	;'c'
   250  105D  3479               	retlw	121	;'y'
   251  105E  342E               	retlw	46	;'.'
   252  105F  3463               	retlw	99	;'c'
   253  1060  346F               	retlw	111	;'o'
   254  1061  346D               	retlw	109	;'m'
   255  1062  3422               	retlw	34	;'"'
   256  1063  342C               	retlw	44	;','
   257  1064  3431               	retlw	49	;'1'
   258  1065  3432               	retlw	50	;'2'
   259  1066  3431               	retlw	49	;'1'
   260  1067  3432               	retlw	50	;'2'
   261  1068  3439               	retlw	57	;'9'
   262  1069  3400               	retlw	0
   263  106A  3400               	retlw	0
   264  106B                     STR_1:	
   265  106B  3441               	retlw	65	;'A'
   266  106C  3454               	retlw	84	;'T'
   267  106D  342B               	retlw	43	;'+'
   268  106E  344E               	retlw	78	;'N'
   269  106F  3453               	retlw	83	;'S'
   270  1070  344F               	retlw	79	;'O'
   271  1071  3443               	retlw	67	;'C'
   272  1072  3452               	retlw	82	;'R'
   273  1073  343D               	retlw	61	;'='
   274  1074  3453               	retlw	83	;'S'
   275  1075  3454               	retlw	84	;'T'
   276  1076  3452               	retlw	82	;'R'
   277  1077  3445               	retlw	69	;'E'
   278  1078  3441               	retlw	65	;'A'
   279  1079  344D               	retlw	77	;'M'
   280  107A  342C               	retlw	44	;','
   281  107B  3436               	retlw	54	;'6'
   282  107C  342C               	retlw	44	;','
   283  107D  3430               	retlw	48	;'0'
   284  107E  342C               	retlw	44	;','
   285  107F  3431               	retlw	49	;'1'
   286  1080  3400               	retlw	0
   287  1081  3400               	retlw	0
   288  1082                     STR_16:	
   289  1082  3441               	retlw	65	;'A'
   290  1083  3454               	retlw	84	;'T'
   291  1084  342B               	retlw	43	;'+'
   292  1085  344E               	retlw	78	;'N'
   293  1086  3453               	retlw	83	;'S'
   294  1087  344F               	retlw	79	;'O'
   295  1088  3453               	retlw	83	;'S'
   296  1089  3444               	retlw	68	;'D'
   297  108A  343D               	retlw	61	;'='
   298  108B  3432               	retlw	50	;'2'
   299  108C  342C               	retlw	44	;','
   300  108D  3436               	retlw	54	;'6'
   301  108E  3438               	retlw	56	;'8'
   302  108F  3437               	retlw	55	;'7'
   303  1090  342C               	retlw	44	;','
   304  1091  3400               	retlw	0
   305  1092  3400               	retlw	0
   306  1093                     STR_8:	
   307  1093  3441               	retlw	65	;'A'
   308  1094  3454               	retlw	84	;'T'
   309  1095  342B               	retlw	43	;'+'
   310  1096  344E               	retlw	78	;'N'
   311  1097  3453               	retlw	83	;'S'
   312  1098  344F               	retlw	79	;'O'
   313  1099  3453               	retlw	83	;'S'
   314  109A  3444               	retlw	68	;'D'
   315  109B  343D               	retlw	61	;'='
   316  109C  3432               	retlw	50	;'2'
   317  109D  342C               	retlw	44	;','
   318  109E  3433               	retlw	51	;'3'
   319  109F  3432               	retlw	50	;'2'
   320  10A0  342C               	retlw	44	;','
   321  10A1  3400               	retlw	0
   322  10A2  3400               	retlw	0
   323  10A3                     STR_18:	
   324  10A3  3441               	retlw	65	;'A'
   325  10A4  3454               	retlw	84	;'T'
   326  10A5  342B               	retlw	43	;'+'
   327  10A6  344E               	retlw	78	;'N'
   328  10A7  3453               	retlw	83	;'S'
   329  10A8  344F               	retlw	79	;'O'
   330  10A9  3453               	retlw	83	;'S'
   331  10AA  3444               	retlw	68	;'D'
   332  10AB  343D               	retlw	61	;'='
   333  10AC  3432               	retlw	50	;'2'
   334  10AD  342C               	retlw	44	;','
   335  10AE  3438               	retlw	56	;'8'
   336  10AF  3437               	retlw	55	;'7'
   337  10B0  342C               	retlw	44	;','
   338  10B1  3400               	retlw	0
   339  10B2  3400               	retlw	0
   340  10B3                     STR_17:	
   341  10B3  3441               	retlw	65	;'A'
   342  10B4  3454               	retlw	84	;'T'
   343  10B5  342B               	retlw	43	;'+'
   344  10B6  344E               	retlw	78	;'N'
   345  10B7  3453               	retlw	83	;'S'
   346  10B8  344F               	retlw	79	;'O'
   347  10B9  3453               	retlw	83	;'S'
   348  10BA  3444               	retlw	68	;'D'
   349  10BB  343D               	retlw	61	;'='
   350  10BC  3432               	retlw	50	;'2'
   351  10BD  342C               	retlw	44	;','
   352  10BE  3400               	retlw	0
   353  10BF  3400               	retlw	0
   354  10C0                     STR_5:	
   355  10C0  3441               	retlw	65	;'A'
   356  10C1  3454               	retlw	84	;'T'
   357  10C2  342B               	retlw	43	;'+'
   358  10C3  344E               	retlw	78	;'N'
   359  10C4  3450               	retlw	80	;'P'
   360  10C5  3453               	retlw	83	;'S'
   361  10C6  344D               	retlw	77	;'M'
   362  10C7  3452               	retlw	82	;'R'
   363  10C8  343D               	retlw	61	;'='
   364  10C9  3431               	retlw	49	;'1'
   365  10CA  3400               	retlw	0
   366  10CB  3400               	retlw	0
   367  10CC                     STR_3:	
   368  10CC  3441               	retlw	65	;'A'
   369  10CD  3454               	retlw	84	;'T'
   370  10CE  342B               	retlw	43	;'+'
   371  10CF  344E               	retlw	78	;'N'
   372  10D0  3453               	retlw	83	;'S'
   373  10D1  344F               	retlw	79	;'O'
   374  10D2  3443               	retlw	67	;'C'
   375  10D3  344C               	retlw	76	;'L'
   376  10D4  343D               	retlw	61	;'='
   377  10D5  3432               	retlw	50	;'2'
   378  10D6  3400               	retlw	0
   379  10D7  3400               	retlw	0
   380  10D8                     STR_32:	
   381  10D8  3441               	retlw	65	;'A'
   382  10D9  3454               	retlw	84	;'T'
   383  10DA  342B               	retlw	43	;'+'
   384  10DB  3443               	retlw	67	;'C'
   385  10DC  3445               	retlw	69	;'E'
   386  10DD  3452               	retlw	82	;'R'
   387  10DE  3445               	retlw	69	;'E'
   388  10DF  3447               	retlw	71	;'G'
   389  10E0  343D               	retlw	61	;'='
   390  10E1  3434               	retlw	52	;'4'
   391  10E2  3400               	retlw	0
   392  10E3  3400               	retlw	0
   393  10E4                     STR_7:	
   394  10E4  3441               	retlw	65	;'A'
   395  10E5  3454               	retlw	84	;'T'
   396  10E6  342B               	retlw	43	;'+'
   397  10E7  3443               	retlw	67	;'C'
   398  10E8  3445               	retlw	69	;'E'
   399  10E9  3452               	retlw	82	;'R'
   400  10EA  3445               	retlw	69	;'E'
   401  10EB  3447               	retlw	71	;'G'
   402  10EC  343F               	retlw	63	;'?'
   403  10ED  3400               	retlw	0
   404  10EE  3400               	retlw	0
   405  10EF                     STR_6:	
   406  10EF  3441               	retlw	65	;'A'
   407  10F0  3454               	retlw	84	;'T'
   408  10F1  342B               	retlw	43	;'+'
   409  10F2  344E               	retlw	78	;'N'
   410  10F3  3450               	retlw	80	;'P'
   411  10F4  3453               	retlw	83	;'S'
   412  10F5  344D               	retlw	77	;'M'
   413  10F6  3452               	retlw	82	;'R'
   414  10F7  343F               	retlw	63	;'?'
   415  10F8  3400               	retlw	0
   416  10F9  3400               	retlw	0
   417  10FA                     STR_34:	
   418  10FA  342B               	retlw	43	;'+'
   419  10FB  3443               	retlw	67	;'C'
   420  10FC  3445               	retlw	69	;'E'
   421  10FD  3452               	retlw	82	;'R'
   422  10FE  3445               	retlw	69	;'E'
   423  10FF  3447               	retlw	71	;'G'
   424  1100  343A               	retlw	58	;':'
   425  1101  3434               	retlw	52	;'4'
   426  1102  342C               	retlw	44	;','
   427  1103  3431               	retlw	49	;'1'
   428  1104  3400               	retlw	0
   429  1105                     STR_28:	
   430  1105  3441               	retlw	65	;'A'
   431  1106  3454               	retlw	84	;'T'
   432  1107  342B               	retlw	43	;'+'
   433  1108  344E               	retlw	78	;'N'
   434  1109  3443               	retlw	67	;'C'
   435  110A  3443               	retlw	67	;'C'
   436  110B  3449               	retlw	73	;'I'
   437  110C  3444               	retlw	68	;'D'
   438  110D  3400               	retlw	0
   439  110E  3400               	retlw	0
   440  110F                     STR_9:	
   441  110F  3440               	retlw	64	;'@'
   442  1110  3423               	retlw	35	;'#'
   443  1111  3470               	retlw	112	;'p'
   444  1112  3474               	retlw	116	;'t'
   445  1113  3423               	retlw	35	;'#'
   446  1114  3431               	retlw	49	;'1'
   447  1115  3423               	retlw	35	;'#'
   448  1116  3400               	retlw	0
   449  1117  3400               	retlw	0
   450  1118                     STR_19:	
   451  1118  3440               	retlw	64	;'@'
   452  1119  3423               	retlw	35	;'#'
   453  111A  3470               	retlw	112	;'p'
   454  111B  3474               	retlw	116	;'t'
   455  111C  3423               	retlw	35	;'#'
   456  111D  3432               	retlw	50	;'2'
   457  111E  3423               	retlw	35	;'#'
   458  111F  3400               	retlw	0
   459  1120  3400               	retlw	0
   460  1121                     STR_13:	
   461  1121  3440               	retlw	64	;'@'
   462  1122  3423               	retlw	35	;'#'
   463  1123  3470               	retlw	112	;'p'
   464  1124  3474               	retlw	116	;'t'
   465  1125  3423               	retlw	35	;'#'
   466  1126  3433               	retlw	51	;'3'
   467  1127  3423               	retlw	35	;'#'
   468  1128  3400               	retlw	0
   469  1129  3400               	retlw	0
   470  112A                     STR_27:	
   471  112A  3441               	retlw	65	;'A'
   472  112B  3454               	retlw	84	;'T'
   473  112C  342B               	retlw	43	;'+'
   474  112D  3443               	retlw	67	;'C'
   475  112E  3449               	retlw	73	;'I'
   476  112F  344D               	retlw	77	;'M'
   477  1130  3449               	retlw	73	;'I'
   478  1131  3400               	retlw	0
   479  1132  3400               	retlw	0
   480  1133                     STR_30:	
   481  1133  3441               	retlw	65	;'A'
   482  1134  3454               	retlw	84	;'T'
   483  1135  342B               	retlw	43	;'+'
   484  1136  3443               	retlw	67	;'C'
   485  1137  3453               	retlw	83	;'S'
   486  1138  3451               	retlw	81	;'Q'
   487  1139  3400               	retlw	0
   488  113A  3400               	retlw	0
   489  113B                     STR_22:	
   490  113B  344E               	retlw	78	;'N'
   491  113C  3453               	retlw	83	;'S'
   492  113D  344F               	retlw	79	;'O'
   493  113E  344E               	retlw	78	;'N'
   494  113F  344D               	retlw	77	;'M'
   495  1140  3449               	retlw	73	;'I'
   496  1141  3400               	retlw	0
   497  1142                     STR_26:	
   498  1142  3441               	retlw	65	;'A'
   499  1143  3454               	retlw	84	;'T'
   500  1144  3445               	retlw	69	;'E'
   501  1145  3431               	retlw	49	;'1'
   502  1146  3400               	retlw	0
   503  1147  3400               	retlw	0
   504  1148                     STR_31:	
   505  1148  342B               	retlw	43	;'+'
   506  1149  3443               	retlw	67	;'C'
   507  114A  3453               	retlw	83	;'S'
   508  114B  3451               	retlw	81	;'Q'
   509  114C  343A               	retlw	58	;':'
   510  114D  3400               	retlw	0
   511  114E                     STR_23:	
   512  114E  3445               	retlw	69	;'E'
   513  114F  3452               	retlw	82	;'R'
   514  1150  3452               	retlw	82	;'R'
   515  1151  344F               	retlw	79	;'O'
   516  1152  3452               	retlw	82	;'R'
   517  1153  3400               	retlw	0
   518  1154                     STR_11:	
   519  1154  3431               	retlw	49	;'1'
   520  1155  3430               	retlw	48	;'0'
   521  1156  3423               	retlw	35	;'#'
   522  1157  3400               	retlw	0
   523  1158  3400               	retlw	0
   524  1159                     STR_10:	
   525  1159  3436               	retlw	54	;'6'
   526  115A  3430               	retlw	48	;'0'
   527  115B  3423               	retlw	35	;'#'
   528  115C  3400               	retlw	0
   529  115D  3400               	retlw	0
   530  115E                     STR_29:	
   531  115E  3438               	retlw	56	;'8'
   532  115F  3439               	retlw	57	;'9'
   533  1160  3438               	retlw	56	;'8'
   534  1161  3436               	retlw	54	;'6'
   535  1162  3400               	retlw	0
   536  1163                     STR_25:	
   537  1163  3441               	retlw	65	;'A'
   538  1164  3454               	retlw	84	;'T'
   539  1165  3400               	retlw	0
   540  1166  3400               	retlw	0
   541  1167                     STR_35:	
   542  1167  344F               	retlw	79	;'O'
   543  1168  344B               	retlw	75	;'K'
   544  1169  3400               	retlw	0
   545  116A                     STR_24:	
   546  116A  340D               	retlw	13
   547  116B  3400               	retlw	0
   548  116C  3400               	retlw	0
   549  116A                     
   550                           	psect	cinit
   551  081B                     start_initialization:	
   552  215A                     	;BIGRAM
   553                           
   554                           ; Clear objects allocated to BIGRAM
   555  081B  305A               	movlw	90
   556  081C  0084               	movwf	4
   557  081D  3021               	movlw	33
   558  081E  0085               	movwf	5
   559  081F  3096               	movlw	150
   560  0820  00FE               	movwf	126
   561  0821  3000               	movlw	0
   562  0822  01FF               	clrf	127
   563  0823  3185  25C8  3188   	fcall	clear_ram
   564                           
   565                           ; Clear objects allocated to COMMON
   566  0826  01F7               	clrf	__pbssCOMMON& (0+127)
   567  0827  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   568  0828  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   569  0829  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   570  082A  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   571                           
   572                           ; Clear objects allocated to BANK0
   573  082B  304F               	movlw	low __pbssBANK0
   574  082C  0084               	movwf	4
   575  082D  3000               	movlw	high __pbssBANK0
   576  082E  0085               	movwf	5
   577  082F  301B               	movlw	27
   578  0830  00FE               	movwf	126
   579  0831  3000               	movlw	0
   580  0832  00FF               	movwf	127
   581  0833  3185  25C8  3188   	fcall	clear_ram
   582                           
   583                           ; Clear objects allocated to BANK1
   584  0836  30A0               	movlw	low __pbssBANK1
   585  0837  0084               	movwf	4
   586  0838  3000               	movlw	high __pbssBANK1
   587  0839  0085               	movwf	5
   588  083A  303C               	movlw	60
   589  083B  00FE               	movwf	126
   590  083C  3000               	movlw	0
   591  083D  00FF               	movwf	127
   592  083E  3185  25C8  3188   	fcall	clear_ram
   593                           
   594                           ; Clear objects allocated to BANK2
   595  0841  3020               	movlw	low __pbssBANK2
   596  0842  0084               	movwf	4
   597  0843  3001               	movlw	high __pbssBANK2
   598  0844  0085               	movwf	5
   599  0845  3018               	movlw	24
   600  0846  00FE               	movwf	126
   601  0847  3000               	movlw	0
   602  0848  00FF               	movwf	127
   603  0849  3185  25C8  3188   	fcall	clear_ram
   604                           
   605                           ;initializer for _DpyNum
   606  084C  3040               	movlw	64
   607  084D  00EA               	movwf	__pdataBANK0& (0+127)
   608  084E  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   609  084F  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   610  0850  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   611  0851  00EE               	movwf	(__pdataBANK0+4)& (0+127)
   612  0852  00EF               	movwf	(__pdataBANK0+5)& (0+127)
   613  0853                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616  0853  0020               	movlb	0
   617  0854  2855               	ljmp	_main	;jump to C main() function
   618  0855                     __pmaintext:	
   619 ;;Data sizes: Strings 330, constant 34, data 6, bss 116, persistent 0 stack 0
   620 ;;Auto spaces:   Size  Autos    Used
   621 ;; COMMON          14      7      12
   622 ;; BANK0           80     47      80
   623 ;; BANK1           80      0      60
   624 ;; BANK2           80      0      24
   625 ;; BANK3           80      0       0
   626 ;; BANK4           26      0       0
   627 ;; BANK5            0      0       0
   628 ;; BANK6            0      0       0
   629 ;;
   630 ;; Pointer list with targets:
   631 ;; ?_strchr	PTR unsigned char  size(2) Largest target is 150
   632 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   633 ;;
   634 ;; ?_strncmp	int  size(1) Largest target is 0
   635 ;;
   636 ;; ?_strlen	unsigned int  size(2) Largest target is 15
   637 ;;		 -> STR_34(CODE[11]), STR_31(CODE[6]), STR_29(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   638 ;;		 -> ATCommand_OkString(BANK1[15]), 
   639 ;;
   640 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   641 ;;
   642 ;; ?_atoi	int  size(1) Largest target is 0
   643 ;;
   644 ;; ?_strstr	PTR unsigned char  size(2) Largest target is 150
   645 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   646 ;;
   647 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 15
   648 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   649 ;;
   650 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   651 ;;
   652 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   653 ;;
   654 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
   655 ;;		 -> STR_34(CODE[11]), STR_31(CODE[6]), STR_29(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   656 ;;		 -> ATCommand_OkString(BANK1[15]), 
   657 ;;
   658 ;; strncmp@s1	PTR const unsigned char  size(2) Largest target is 150
   659 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   660 ;;
   661 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 15
   662 ;;		 -> STR_34(CODE[11]), STR_31(CODE[6]), STR_29(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   663 ;;		 -> ATCommand_OkString(BANK1[15]), 
   664 ;;
   665 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 15
   666 ;;		 -> STR_34(CODE[11]), STR_31(CODE[6]), STR_29(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   667 ;;		 -> ATCommand_OkString(BANK1[15]), 
   668 ;;
   669 ;; strchr@ptr	PTR const unsigned char  size(2) Largest target is 150
   670 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   671 ;;
   672 ;; sp__strchr	PTR unsigned char  size(2) Largest target is 150
   673 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   674 ;;
   675 ;; strstr@s2	PTR const unsigned char  size(2) Largest target is 15
   676 ;;		 -> STR_34(CODE[11]), STR_31(CODE[6]), STR_29(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   677 ;;		 -> ATCommand_OkString(BANK1[15]), 
   678 ;;
   679 ;; strstr@s1	PTR const unsigned char  size(2) Largest target is 150
   680 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   681 ;;
   682 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 7
   683 ;;		 -> STR_41(CODE[6]), STR_40(CODE[3]), STR_39(CODE[6]), STR_38(CODE[3]), 
   684 ;;		 -> STR_36(CODE[6]), STR_35(CODE[3]), STR_23(CODE[6]), STR_22(CODE[7]), 
   685 ;;
   686 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 15
   687 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   688 ;;
   689 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 15
   690 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   691 ;;
   692 ;; atoi@s	PTR const unsigned char  size(2) Largest target is 150
   693 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   694 ;;
   695 ;; GetVerify_CRC8@pBuff	PTR unsigned char  size(1) Largest target is 9
   696 ;;		 -> DS18X20_Scratchpad(BANK1[9]), 
   697 ;;
   698 ;; GetVerify_Sum@pBuff	PTR unsigned char  size(1) Largest target is 2
   699 ;;		 -> RomParams(BANK0[2]), 
   700 ;;
   701 ;; Uart1_PutString_Hex@pString	PTR const unsigned char  size(2) Largest target is 21
   702 ;;		 -> STR_21(CODE[5]), STR_20(CODE[5]), STR_19(CODE[9]), STR_15(CODE[5]), 
   703 ;;		 -> STR_14(CODE[5]), STR_13(CODE[9]), STR_11(CODE[5]), STR_10(CODE[5]), 
   704 ;;		 -> ICCID(BANK1[21]), STR_9(CODE[9]), 
   705 ;;
   706 ;; Uart1_PutString@pString	PTR const unsigned char  size(2) Largest target is 36
   707 ;;		 -> STR_37(CODE[3]), STR_33(CODE[11]), STR_32(CODE[12]), STR_30(CODE[8]), 
   708 ;;		 -> STR_28(CODE[10]), STR_27(CODE[9]), STR_26(CODE[6]), STR_25(CODE[4]), 
   709 ;;		 -> STR_24(CODE[3]), STR_18(CODE[16]), STR_17(CODE[13]), STR_16(CODE[17]), 
   710 ;;		 -> STR_12(CODE[16]), STR_8(CODE[16]), STR_7(CODE[11]), STR_6(CODE[11]), 
   711 ;;		 -> STR_5(CODE[12]), STR_4(CODE[36]), STR_3(CODE[12]), STR_2(CODE[36]), 
   712 ;;		 -> STR_1(CODE[23]), 
   713 ;;
   714 ;; ATCommand_WaitData@strx	PTR unsigned char  size(2) Largest target is 150
   715 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   716 ;;
   717 ;; ATCommand_SendCmd@cmd	PTR const unsigned char  size(2) Largest target is 36
   718 ;;		 -> STR_33(CODE[11]), STR_32(CODE[12]), STR_30(CODE[8]), STR_28(CODE[10]), 
   719 ;;		 -> STR_27(CODE[9]), STR_26(CODE[6]), STR_25(CODE[4]), STR_7(CODE[11]), 
   720 ;;		 -> STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[36]), STR_3(CODE[12]), 
   721 ;;		 -> STR_2(CODE[36]), STR_1(CODE[23]), 
   722 ;;
   723 ;; ATCommand_SendCmd@strx	PTR unsigned char  size(2) Largest target is 150
   724 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   725 ;;
   726 ;; sp__strstr	PTR unsigned char  size(2) Largest target is 150
   727 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   728 ;;
   729 ;; InitGPRS@strx	PTR unsigned char  size(2) Largest target is 150
   730 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   731 ;;
   732 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 15
   733 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   734 ;;
   735 ;;
   736 ;; Critical Paths under _main in COMMON
   737 ;;
   738 ;;   None.
   739 ;;
   740 ;; Critical Paths under _highISR in COMMON
   741 ;;
   742 ;;   _highISR->_ATCommand_ProcRx
   743 ;;   _ATCommand_ProcRx->_isgraph
   744 ;;
   745 ;; Critical Paths under _main in BANK0
   746 ;;
   747 ;;   _main->_TestProc
   748 ;;   _TestProc->_CallProc
   749 ;;   _CallProc->_CallSend
   750 ;;   _InitSystem->_ReadTData
   751 ;;   _CallSend->_InteractServer
   752 ;;   _ReadTData->_DS18X20_ReadMeas
   753 ;;   _InteractServer->_ATCommand_WaitData
   754 ;;   _InitGPRS->_ATCommand_SendCmd
   755 ;;   _DS18X20_ReadMeas->_GetVerify_CRC8
   756 ;;   _DS18X20_StartMeas->_OneWire_Command
   757 ;;   _OneWire_Command->_OneWire_WriteByte
   758 ;;   _ATCommand_WaitData->_strstr
   759 ;;   _Uart1_PutString_Hex->_Uart1_PutHex
   760 ;;   _ATCommand_SendCmd->_strstr
   761 ;;   _PowerON->___delay_20ms
   762 ;;   _TCN75_ReadReg->_SimI2C_SendByte
   763 ;;   _TCN75_SetConfig->_SimI2C_SendByte
   764 ;;   _InitVariable->_GetRomData
   765 ;;   _InitVariable->_SaveRomData
   766 ;;   _atoi->___wmul
   767 ;;   _strstr->_strncmp
   768 ;;   _Uart1_PutHex->_Uart1_PutChar
   769 ;;   _Uart1_PutString->_Uart1_PutChar
   770 ;;   _ATCommand_Init->_strcpy
   771 ;;   _SaveRomData->_GetVerify_Sum
   772 ;;   _GetRomData->_GetVerify_Sum
   773 ;;   _LcdDisplay_Err->___lbmod
   774 ;;   _LcdDisplay_CurTemp->___lbmod
   775 ;;   _LcdDisplay_CSQ->___lbmod
   776 ;;   _strncmp->_strlen
   777 ;;
   778 ;; Critical Paths under _highISR in BANK0
   779 ;;
   780 ;;   None.
   781 ;;
   782 ;; Critical Paths under _main in BANK1
   783 ;;
   784 ;;   None.
   785 ;;
   786 ;; Critical Paths under _highISR in BANK1
   787 ;;
   788 ;;   None.
   789 ;;
   790 ;; Critical Paths under _main in BANK2
   791 ;;
   792 ;;   None.
   793 ;;
   794 ;; Critical Paths under _highISR in BANK2
   795 ;;
   796 ;;   None.
   797 ;;
   798 ;; Critical Paths under _main in BANK3
   799 ;;
   800 ;;   None.
   801 ;;
   802 ;; Critical Paths under _highISR in BANK3
   803 ;;
   804 ;;   None.
   805 ;;
   806 ;; Critical Paths under _main in BANK4
   807 ;;
   808 ;;   None.
   809 ;;
   810 ;; Critical Paths under _highISR in BANK4
   811 ;;
   812 ;;   None.
   813 ;;
   814 ;; Critical Paths under _main in BANK5
   815 ;;
   816 ;;   None.
   817 ;;
   818 ;; Critical Paths under _highISR in BANK5
   819 ;;
   820 ;;   None.
   821 ;;
   822 ;; Critical Paths under _main in BANK6
   823 ;;
   824 ;;   None.
   825 ;;
   826 ;; Critical Paths under _highISR in BANK6
   827 ;;
   828 ;;   None.
   829 ;;
   830 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   831 ;;
   832 ;;
   833 ;;Call Graph Tables:
   834 ;;
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   837 ;; ---------------------------------------------------------------------------------
   838 ;; (0) _main                                                 4     4      0   29040
   839 ;;                                             43 BANK0      4     4      0
   840 ;;                         _InitSystem
   841 ;;                       ___delay_20ms
   842 ;;                           _TestProc
   843 ;;                          _ReadTData
   844 ;;                           _CallProc
   845 ;;                             ___bmul
   846 ;;                       _eeprom_write
   847 ;; ---------------------------------------------------------------------------------
   848 ;; (1) _TestProc                                             2     2      0   12883
   849 ;;                                             41 BANK0      2     2      0
   850 ;;                      _LcdDisplayAll
   851 ;;                       ___delay_20ms
   852 ;;                          _ReadTData
   853 ;;                     _LcdDisplay_Err
   854 ;;                           _CallProc
   855 ;; ---------------------------------------------------------------------------------
   856 ;; (1) _CallProc                                             1     1      0   10064
   857 ;;                                             40 BANK0      1     1      0
   858 ;;                    _LcdDisplay_CALL
   859 ;;                           _CallSend
   860 ;;                 _LcdDisplay_CurTemp
   861 ;;                       ___delay_20ms
   862 ;;                     _LcdDisplay_Err
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (1) _InitSystem                                           1     1      0    3402
   865 ;;                                             13 BANK0      1     1      0
   866 ;;                            _InitMCU
   867 ;;                       _InitVariable
   868 ;;                        _DisplayInit
   869 ;;                     _ATCommand_Init
   870 ;;                      _OneWire_Reset
   871 ;;                         _TCN75_Init
   872 ;;                    _TCN75_SetConfig
   873 ;;                       ___delay_20ms
   874 ;;                          _ReadTData
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (2) _CallSend                                             2     2      0    9069
   877 ;;                                             38 BANK0      2     2      0
   878 ;;                           _InitGPRS
   879 ;;                       ___delay_20ms
   880 ;;                  _ATCommand_SendCmd
   881 ;;                     _InteractServer
   882 ;; ---------------------------------------------------------------------------------
   883 ;; (1) _ReadTData                                            1     1      0    2304
   884 ;;                                             12 BANK0      1     1      0
   885 ;;                  _DS18X20_StartMeas
   886 ;;                       ___delay_20ms
   887 ;;                   _DS18X20_ReadMeas
   888 ;;                    _TCN75_SetConfig
   889 ;;                      _TCN75_ReadReg
   890 ;;                 _LcdDisplay_CurTemp
   891 ;; ---------------------------------------------------------------------------------
   892 ;; (3) _InteractServer                                      16    16      0    4761
   893 ;;                                             22 BANK0     16    16      0
   894 ;;                    _Uart1_PutString
   895 ;;                _Uart1_PutString_Hex
   896 ;;                       _Uart1_PutHex
   897 ;;                  _MakeTxTemperature
   898 ;;                            ___lwdiv
   899 ;;                      _Uart1_PutChar
   900 ;;                            ___lwmod
   901 ;;                             ___bmul
   902 ;;                        _eeprom_read
   903 ;;                             _strcpy
   904 ;;                 _ATCommand_WaitData
   905 ;;                       ___delay_20ms
   906 ;; ---------------------------------------------------------------------------------
   907 ;; (3) _InitGPRS                                             8     8      0    3184
   908 ;;                                             25 BANK0      8     8      0
   909 ;;                            _PowerON
   910 ;;                  _ATCommand_SendCmd
   911 ;;                       ___delay_20ms
   912 ;;                             _strstr
   913 ;;                               _atoi
   914 ;;                     _LcdDisplay_CSQ
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (2) _DS18X20_ReadMeas                                     2     2      0     763
   917 ;;                                             10 BANK0      2     2      0
   918 ;;                      _OneWire_Reset
   919 ;;                    _OneWire_Command
   920 ;;                   _OneWire_ReadByte
   921 ;;                     _GetVerify_CRC8
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (2) _DS18X20_StartMeas                                    0     0      0     285
   924 ;;                      _OneWire_Reset
   925 ;;                    _OneWire_Command
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (3) _OneWire_Command                                      1     1      0     215
   928 ;;                                              4 BANK0      1     1      0
   929 ;;                      _OneWire_Reset
   930 ;;                  _OneWire_WriteByte
   931 ;; ---------------------------------------------------------------------------------
   932 ;; (4) _ATCommand_WaitData                                   5     5      0     749
   933 ;;                                             17 BANK0      5     5      0
   934 ;;                             _strstr
   935 ;;                             _strcpy
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (4) _Uart1_PutString_Hex                                  3     1      2     337
   938 ;;                                              3 BANK0      3     1      2
   939 ;;                       _Uart1_PutHex
   940 ;; ---------------------------------------------------------------------------------
   941 ;; (3) _ATCommand_SendCmd                                    8     6      2    1000
   942 ;;                                             17 BANK0      8     6      2
   943 ;;                    _Uart1_PutString
   944 ;;                             _strstr
   945 ;;                       ___delay_20ms
   946 ;;                             _strcpy
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (4) _PowerON                                              0     0      0      22
   949 ;;                       ___delay_20ms
   950 ;; ---------------------------------------------------------------------------------
   951 ;; (2) _TCN75_ReadReg                                        3     3      0     383
   952 ;;                                              3 BANK0      3     3      0
   953 ;;                       _SimI2C_Start
   954 ;;                    _SimI2C_SendByte
   955 ;;                      _SimI2C_RecAck
   956 ;;                    _SimI2C_ReadByte
   957 ;;                         _SimI2C_Ack
   958 ;;                       _SimI2C_NoAck
   959 ;;                        _SimI2C_Stop
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (2) _TCN75_SetConfig                                      2     2      0     244
   962 ;;                                              3 BANK0      2     2      0
   963 ;;                       _SimI2C_Start
   964 ;;                    _SimI2C_SendByte
   965 ;;                      _SimI2C_RecAck
   966 ;;                        _SimI2C_Stop
   967 ;; ---------------------------------------------------------------------------------
   968 ;; (2) _InitVariable                                         0     0      0     621
   969 ;;                         _GetRomData
   970 ;;                        _SaveRomData
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (3) _SimI2C_Stop                                          0     0      0       0
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (3) _SimI2C_NoAck                                         0     0      0       0
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (3) _SimI2C_Ack                                           0     0      0       0
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (3) _SimI2C_ReadByte                                      2     2      0     108
   979 ;;                                              0 BANK0      2     2      0
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (3) _SimI2C_RecAck                                        1     1      0      34
   982 ;;                                              0 BANK0      1     1      0
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (3) _SimI2C_SendByte                                      3     3      0     139
   985 ;;                                              0 BANK0      3     3      0
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (3) _SimI2C_Start                                         0     0      0       0
   988 ;; ---------------------------------------------------------------------------------
   989 ;; (4) _OneWire_WriteByte                                    4     4      0     114
   990 ;;                                              0 BANK0      4     4      0
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (3) _OneWire_ReadByte                                     4     4      0     115
   993 ;;                                              0 BANK0      4     4      0
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (4) _atoi                                                 9     7      2     569
   996 ;;                                              6 BANK0      9     7      2
   997 ;;                             ___wmul
   998 ;;                            _isdigit
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (5) _strstr                                               4     0      4     562
  1001 ;;                                             13 BANK0      4     0      4
  1002 ;;                             _strlen
  1003 ;;                            _strncmp
  1004 ;;                             _strchr
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (4) _Uart1_PutHex                                         2     2      0     238
  1007 ;;                                              1 BANK0      2     2      0
  1008 ;;                      _Uart1_PutChar
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (4) _Uart1_PutString                                      3     1      2     130
  1011 ;;                                              1 BANK0      3     1      2
  1012 ;;                      _Uart1_PutChar
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (2) ___delay_20ms                                         4     2      2      22
  1015 ;;                                              0 BANK0      4     2      2
  1016 ;; ---------------------------------------------------------------------------------
  1017 ;; (2) _TCN75_Init                                           0     0      0       0
  1018 ;;                        _SimI2C_Init
  1019 ;; ---------------------------------------------------------------------------------
  1020 ;; (4) _OneWire_Reset                                        3     3      0      70
  1021 ;;                                              0 BANK0      3     3      0
  1022 ;; ---------------------------------------------------------------------------------
  1023 ;; (2) _ATCommand_Init                                       0     0      0      73
  1024 ;;                             _strcpy
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (3) _SaveRomData                                          1     1      0     312
  1027 ;;                                              7 BANK0      1     1      0
  1028 ;;                      _GetVerify_Sum
  1029 ;;                       _eeprom_write
  1030 ;; ---------------------------------------------------------------------------------
  1031 ;; (3) _GetRomData                                           1     1      0     309
  1032 ;;                                              7 BANK0      1     1      0
  1033 ;;                        _eeprom_read
  1034 ;;                      _GetVerify_Sum
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (2) _LcdDisplay_CALL                                      0     0      0       0
  1037 ;;                      _LcdDisplayNum
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (2) _LcdDisplay_Err                                       0     0      0     400
  1040 ;;                            ___lbdiv
  1041 ;;                            ___lbmod
  1042 ;;                      _LcdDisplayNum
  1043 ;; ---------------------------------------------------------------------------------
  1044 ;; (2) _LcdDisplay_CurTemp                                   4     4      0     536
  1045 ;;                                              5 BANK0      4     4      0
  1046 ;;                            ___lbdiv
  1047 ;;                            ___lbmod
  1048 ;;                      _LcdDisplayNum
  1049 ;; ---------------------------------------------------------------------------------
  1050 ;; (4) _LcdDisplay_CSQ                                       2     2      0     468
  1051 ;;                                              5 BANK0      2     2      0
  1052 ;;                            ___lbdiv
  1053 ;;                            ___lbmod
  1054 ;;                      _LcdDisplayNum
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (2) _LcdDisplayAll                                        1     1      0      93
  1057 ;;                                              0 BANK0      1     1      0
  1058 ;;                      _LcdDisplayNum
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (3) ___lbmod                                              5     4      1     159
  1061 ;;                                              0 BANK0      5     4      1
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (3) ___lbdiv                                              4     3      1     241
  1064 ;;                                              0 BANK0      4     3      1
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (4) ___lwmod                                              5     1      4     232
  1067 ;;                                              0 BANK0      5     1      4
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (4) ___lwdiv                                              7     3      4     241
  1070 ;;                                              0 BANK0      7     3      4
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (5) ___wmul                                               6     2      4     136
  1073 ;;                                              0 BANK0      6     2      4
  1074 ;; ---------------------------------------------------------------------------------
  1075 ;; (1) ___bmul                                               3     2      1     136
  1076 ;;                                              0 BANK0      3     2      1
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; (6) _strchr                                               6     2      4      88
  1079 ;;                                              0 BANK0      6     2      4
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (6) _strncmp                                              7     1      6     134
  1082 ;;                                              6 BANK0      7     1      6
  1083 ;;                             _strlen (ARG)
  1084 ;; ---------------------------------------------------------------------------------
  1085 ;; (6) _strlen                                               6     4      2      89
  1086 ;;                                              0 BANK0      6     4      2
  1087 ;; ---------------------------------------------------------------------------------
  1088 ;; (5) _isdigit                                              2     2      0      99
  1089 ;;                                              0 BANK0      2     2      0
  1090 ;; ---------------------------------------------------------------------------------
  1091 ;; (3) _SimI2C_Init                                          0     0      0       0
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; (3) _GetVerify_CRC8                                      10     8      2     233
  1094 ;;                                              0 BANK0     10     8      2
  1095 ;; ---------------------------------------------------------------------------------
  1096 ;; (4) _GetVerify_Sum                                        7     5      2     120
  1097 ;;                                              0 BANK0      7     5      2
  1098 ;; ---------------------------------------------------------------------------------
  1099 ;; (5) _strcpy                                               6     4      2      73
  1100 ;;                                              0 BANK0      6     4      2
  1101 ;; ---------------------------------------------------------------------------------
  1102 ;; (4) _eeprom_read                                          3     3      0      22
  1103 ;;                                              0 BANK0      3     3      0
  1104 ;; ---------------------------------------------------------------------------------
  1105 ;; (4) _Uart1_PutChar                                        1     1      0      31
  1106 ;;                                              0 BANK0      1     1      0
  1107 ;; ---------------------------------------------------------------------------------
  1108 ;; (4) _MakeTxTemperature                                    3     1      2     556
  1109 ;;                                              0 BANK0      3     1      2
  1110 ;; ---------------------------------------------------------------------------------
  1111 ;; (1) _eeprom_write                                         2     1      1      62
  1112 ;;                                              0 BANK0      2     1      1
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (2) _InitMCU                                              0     0      0       0
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; (2) _DisplayInit                                          0     0      0       0
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (3) _LcdDisplayNum                                        0     0      0       0
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; Estimated maximum stack depth 6
  1121 ;; ---------------------------------------------------------------------------------
  1122 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (8) _highISR                                              1     1      0     179
  1125 ;;                                              6 COMMON     1     1      0
  1126 ;;                   _ATCommand_ProcRx
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (9) _ATCommand_ProcRx                                     4     4      0     156
  1129 ;;                                              2 COMMON     4     4      0
  1130 ;;                            _isgraph
  1131 ;; ---------------------------------------------------------------------------------
  1132 ;; (10) _isgraph                                             2     2      0      68
  1133 ;;                                              0 COMMON     2     2      0
  1134 ;; ---------------------------------------------------------------------------------
  1135 ;; Estimated maximum stack depth 10
  1136 ;; ---------------------------------------------------------------------------------
  1137 ;; Call Graph Graphs:
  1138 ;; _main (ROOT)
  1139 ;;   _InitSystem
  1140 ;;     _InitMCU
  1141 ;;     _InitVariable
  1142 ;;       _GetRomData
  1143 ;;         _eeprom_read
  1144 ;;         _GetVerify_Sum
  1145 ;;       _SaveRomData
  1146 ;;         _GetVerify_Sum
  1147 ;;         _eeprom_write
  1148 ;;     _DisplayInit
  1149 ;;     _ATCommand_Init
  1150 ;;       _strcpy
  1151 ;;     _OneWire_Reset
  1152 ;;     _TCN75_Init
  1153 ;;       _SimI2C_Init
  1154 ;;     _TCN75_SetConfig
  1155 ;;       _SimI2C_Start
  1156 ;;       _SimI2C_SendByte
  1157 ;;       _SimI2C_RecAck
  1158 ;;       _SimI2C_Stop
  1159 ;;     ___delay_20ms
  1160 ;;     _ReadTData
  1161 ;;       _DS18X20_StartMeas
  1162 ;;         _OneWire_Reset
  1163 ;;         _OneWire_Command
  1164 ;;           _OneWire_Reset
  1165 ;;           _OneWire_WriteByte
  1166 ;;       ___delay_20ms
  1167 ;;       _DS18X20_ReadMeas
  1168 ;;         _OneWire_Reset
  1169 ;;         _OneWire_Command
  1170 ;;           _OneWire_Reset
  1171 ;;           _OneWire_WriteByte
  1172 ;;         _OneWire_ReadByte
  1173 ;;         _GetVerify_CRC8
  1174 ;;       _TCN75_SetConfig
  1175 ;;         _SimI2C_Start
  1176 ;;         _SimI2C_SendByte
  1177 ;;         _SimI2C_RecAck
  1178 ;;         _SimI2C_Stop
  1179 ;;       _TCN75_ReadReg
  1180 ;;         _SimI2C_Start
  1181 ;;         _SimI2C_SendByte
  1182 ;;         _SimI2C_RecAck
  1183 ;;         _SimI2C_ReadByte
  1184 ;;         _SimI2C_Ack
  1185 ;;         _SimI2C_NoAck
  1186 ;;         _SimI2C_Stop
  1187 ;;       _LcdDisplay_CurTemp
  1188 ;;         ___lbdiv
  1189 ;;         ___lbmod
  1190 ;;         _LcdDisplayNum
  1191 ;;   ___delay_20ms
  1192 ;;   _TestProc
  1193 ;;     _LcdDisplayAll
  1194 ;;       _LcdDisplayNum
  1195 ;;     ___delay_20ms
  1196 ;;     _ReadTData
  1197 ;;       _DS18X20_StartMeas
  1198 ;;         _OneWire_Reset
  1199 ;;         _OneWire_Command
  1200 ;;           _OneWire_Reset
  1201 ;;           _OneWire_WriteByte
  1202 ;;       ___delay_20ms
  1203 ;;       _DS18X20_ReadMeas
  1204 ;;         _OneWire_Reset
  1205 ;;         _OneWire_Command
  1206 ;;           _OneWire_Reset
  1207 ;;           _OneWire_WriteByte
  1208 ;;         _OneWire_ReadByte
  1209 ;;         _GetVerify_CRC8
  1210 ;;       _TCN75_SetConfig
  1211 ;;         _SimI2C_Start
  1212 ;;         _SimI2C_SendByte
  1213 ;;         _SimI2C_RecAck
  1214 ;;         _SimI2C_Stop
  1215 ;;       _TCN75_ReadReg
  1216 ;;         _SimI2C_Start
  1217 ;;         _SimI2C_SendByte
  1218 ;;         _SimI2C_RecAck
  1219 ;;         _SimI2C_ReadByte
  1220 ;;         _SimI2C_Ack
  1221 ;;         _SimI2C_NoAck
  1222 ;;         _SimI2C_Stop
  1223 ;;       _LcdDisplay_CurTemp
  1224 ;;         ___lbdiv
  1225 ;;         ___lbmod
  1226 ;;         _LcdDisplayNum
  1227 ;;     _LcdDisplay_Err
  1228 ;;       ___lbdiv
  1229 ;;       ___lbmod
  1230 ;;       _LcdDisplayNum
  1231 ;;     _CallProc
  1232 ;;       _LcdDisplay_CALL
  1233 ;;         _LcdDisplayNum
  1234 ;;       _CallSend
  1235 ;;         _InitGPRS
  1236 ;;           _PowerON
  1237 ;;             ___delay_20ms
  1238 ;;           _ATCommand_SendCmd
  1239 ;;             _Uart1_PutString
  1240 ;;               _Uart1_PutChar
  1241 ;;             _strstr
  1242 ;;               _strlen
  1243 ;;               _strncmp
  1244 ;;                 _strlen (ARG)
  1245 ;;               _strchr
  1246 ;;             ___delay_20ms
  1247 ;;             _strcpy
  1248 ;;           ___delay_20ms
  1249 ;;           _strstr
  1250 ;;             _strlen
  1251 ;;             _strncmp
  1252 ;;               _strlen (ARG)
  1253 ;;             _strchr
  1254 ;;           _atoi
  1255 ;;             ___wmul
  1256 ;;             _isdigit
  1257 ;;           _LcdDisplay_CSQ
  1258 ;;             ___lbdiv
  1259 ;;             ___lbmod
  1260 ;;             _LcdDisplayNum
  1261 ;;         ___delay_20ms
  1262 ;;         _ATCommand_SendCmd
  1263 ;;           _Uart1_PutString
  1264 ;;             _Uart1_PutChar
  1265 ;;           _strstr
  1266 ;;             _strlen
  1267 ;;             _strncmp
  1268 ;;               _strlen (ARG)
  1269 ;;             _strchr
  1270 ;;           ___delay_20ms
  1271 ;;           _strcpy
  1272 ;;         _InteractServer
  1273 ;;           _Uart1_PutString
  1274 ;;             _Uart1_PutChar
  1275 ;;           _Uart1_PutString_Hex
  1276 ;;             _Uart1_PutHex
  1277 ;;               _Uart1_PutChar
  1278 ;;           _Uart1_PutHex
  1279 ;;             _Uart1_PutChar
  1280 ;;           _MakeTxTemperature
  1281 ;;           ___lwdiv
  1282 ;;           _Uart1_PutChar
  1283 ;;           ___lwmod
  1284 ;;           ___bmul
  1285 ;;           _eeprom_read
  1286 ;;           _strcpy
  1287 ;;           _ATCommand_WaitData
  1288 ;;             _strstr
  1289 ;;               _strlen
  1290 ;;               _strncmp
  1291 ;;                 _strlen (ARG)
  1292 ;;               _strchr
  1293 ;;             _strcpy
  1294 ;;           ___delay_20ms
  1295 ;;       _LcdDisplay_CurTemp
  1296 ;;         ___lbdiv
  1297 ;;         ___lbmod
  1298 ;;         _LcdDisplayNum
  1299 ;;       ___delay_20ms
  1300 ;;       _LcdDisplay_Err
  1301 ;;         ___lbdiv
  1302 ;;         ___lbmod
  1303 ;;         _LcdDisplayNum
  1304 ;;   _ReadTData
  1305 ;;     _DS18X20_StartMeas
  1306 ;;       _OneWire_Reset
  1307 ;;       _OneWire_Command
  1308 ;;         _OneWire_Reset
  1309 ;;         _OneWire_WriteByte
  1310 ;;     ___delay_20ms
  1311 ;;     _DS18X20_ReadMeas
  1312 ;;       _OneWire_Reset
  1313 ;;       _OneWire_Command
  1314 ;;         _OneWire_Reset
  1315 ;;         _OneWire_WriteByte
  1316 ;;       _OneWire_ReadByte
  1317 ;;       _GetVerify_CRC8
  1318 ;;     _TCN75_SetConfig
  1319 ;;       _SimI2C_Start
  1320 ;;       _SimI2C_SendByte
  1321 ;;       _SimI2C_RecAck
  1322 ;;       _SimI2C_Stop
  1323 ;;     _TCN75_ReadReg
  1324 ;;       _SimI2C_Start
  1325 ;;       _SimI2C_SendByte
  1326 ;;       _SimI2C_RecAck
  1327 ;;       _SimI2C_ReadByte
  1328 ;;       _SimI2C_Ack
  1329 ;;       _SimI2C_NoAck
  1330 ;;       _SimI2C_Stop
  1331 ;;     _LcdDisplay_CurTemp
  1332 ;;       ___lbdiv
  1333 ;;       ___lbmod
  1334 ;;       _LcdDisplayNum
  1335 ;;   _CallProc
  1336 ;;     _LcdDisplay_CALL
  1337 ;;       _LcdDisplayNum
  1338 ;;     _CallSend
  1339 ;;       _InitGPRS
  1340 ;;         _PowerON
  1341 ;;           ___delay_20ms
  1342 ;;         _ATCommand_SendCmd
  1343 ;;           _Uart1_PutString
  1344 ;;             _Uart1_PutChar
  1345 ;;           _strstr
  1346 ;;             _strlen
  1347 ;;             _strncmp
  1348 ;;               _strlen (ARG)
  1349 ;;             _strchr
  1350 ;;           ___delay_20ms
  1351 ;;           _strcpy
  1352 ;;         ___delay_20ms
  1353 ;;         _strstr
  1354 ;;           _strlen
  1355 ;;           _strncmp
  1356 ;;             _strlen (ARG)
  1357 ;;           _strchr
  1358 ;;         _atoi
  1359 ;;           ___wmul
  1360 ;;           _isdigit
  1361 ;;         _LcdDisplay_CSQ
  1362 ;;           ___lbdiv
  1363 ;;           ___lbmod
  1364 ;;           _LcdDisplayNum
  1365 ;;       ___delay_20ms
  1366 ;;       _ATCommand_SendCmd
  1367 ;;         _Uart1_PutString
  1368 ;;           _Uart1_PutChar
  1369 ;;         _strstr
  1370 ;;           _strlen
  1371 ;;           _strncmp
  1372 ;;             _strlen (ARG)
  1373 ;;           _strchr
  1374 ;;         ___delay_20ms
  1375 ;;         _strcpy
  1376 ;;       _InteractServer
  1377 ;;         _Uart1_PutString
  1378 ;;           _Uart1_PutChar
  1379 ;;         _Uart1_PutString_Hex
  1380 ;;           _Uart1_PutHex
  1381 ;;             _Uart1_PutChar
  1382 ;;         _Uart1_PutHex
  1383 ;;           _Uart1_PutChar
  1384 ;;         _MakeTxTemperature
  1385 ;;         ___lwdiv
  1386 ;;         _Uart1_PutChar
  1387 ;;         ___lwmod
  1388 ;;         ___bmul
  1389 ;;         _eeprom_read
  1390 ;;         _strcpy
  1391 ;;         _ATCommand_WaitData
  1392 ;;           _strstr
  1393 ;;             _strlen
  1394 ;;             _strncmp
  1395 ;;               _strlen (ARG)
  1396 ;;             _strchr
  1397 ;;           _strcpy
  1398 ;;         ___delay_20ms
  1399 ;;     _LcdDisplay_CurTemp
  1400 ;;       ___lbdiv
  1401 ;;       ___lbmod
  1402 ;;       _LcdDisplayNum
  1403 ;;     ___delay_20ms
  1404 ;;     _LcdDisplay_Err
  1405 ;;       ___lbdiv
  1406 ;;       ___lbmod
  1407 ;;       _LcdDisplayNum
  1408 ;;   ___bmul
  1409 ;;   _eeprom_write
  1410 ;;
  1411 ;; _highISR (ROOT)
  1412 ;;   _ATCommand_ProcRx
  1413 ;;     _isgraph
  1414 ;;
  1415 ;; Address spaces:
  1416 ;;Name               Size   Autos  Total    Cost      Usage
  1417 ;;BIGRAM             1F0      0       0       0        0.0%
  1418 ;;EEDATA             100      0       0       0        0.0%
  1419 ;;NULL                 0      0       0       0        0.0%
  1420 ;;CODE                 0      0       0       0        0.0%
  1421 ;;BITCOMMON            E      0       0       1        0.0%
  1422 ;;BITSFR0              0      0       0       1        0.0%
  1423 ;;SFR0                 0      0       0       1        0.0%
  1424 ;;COMMON               E      7       C       2       85.7%
  1425 ;;BITSFR1              0      0       0       2        0.0%
  1426 ;;SFR1                 0      0       0       2        0.0%
  1427 ;;BITSFR2              0      0       0       3        0.0%
  1428 ;;SFR2                 0      0       0       3        0.0%
  1429 ;;STACK                0      0       D       3        0.0%
  1430 ;;BITSFR3              0      0       0       4        0.0%
  1431 ;;SFR3                 0      0       0       4        0.0%
  1432 ;;ABS                  0      0      B0       4        0.0%
  1433 ;;BITBANK0            50      0       0       5        0.0%
  1434 ;;BITSFR4              0      0       0       5        0.0%
  1435 ;;SFR4                 0      0       0       5        0.0%
  1436 ;;BANK0               50     2F      50       6      100.0%
  1437 ;;BITSFR5              0      0       0       6        0.0%
  1438 ;;SFR5                 0      0       0       6        0.0%
  1439 ;;BITBANK1            50      0       0       7        0.0%
  1440 ;;BITSFR6              0      0       0       7        0.0%
  1441 ;;SFR6                 0      0       0       7        0.0%
  1442 ;;BANK1               50      0      3C       8       75.0%
  1443 ;;BITSFR7              0      0       0       8        0.0%
  1444 ;;SFR7                 0      0       0       8        0.0%
  1445 ;;BITBANK2            50      0       0       9        0.0%
  1446 ;;BITSFR8              0      0       0       9        0.0%
  1447 ;;SFR8                 0      0       0       9        0.0%
  1448 ;;BANK2               50      0      18      10       30.0%
  1449 ;;BITSFR9              0      0       0      10        0.0%
  1450 ;;SFR9                 0      0       0      10        0.0%
  1451 ;;BITBANK3            50      0       0      11        0.0%
  1452 ;;BITSFR10             0      0       0      11        0.0%
  1453 ;;SFR10                0      0       0      11        0.0%
  1454 ;;BANK3               50      0       0      12        0.0%
  1455 ;;BITSFR11             0      0       0      12        0.0%
  1456 ;;SFR11                0      0       0      12        0.0%
  1457 ;;BITBANK4            50      0       0      13        0.0%
  1458 ;;BITSFR12             0      0       0      13        0.0%
  1459 ;;SFR12                0      0       0      13        0.0%
  1460 ;;BANK4               1A      0       0      14        0.0%
  1461 ;;BITSFR13             0      0       0      14        0.0%
  1462 ;;SFR13                0      0       0      14        0.0%
  1463 ;;BITBANK5            50      0       0      15        0.0%
  1464 ;;BITSFR14             0      0       0      15        0.0%
  1465 ;;SFR14                0      0       0      15        0.0%
  1466 ;;BITSFR15             0      0       0      16        0.0%
  1467 ;;SFR15                0      0       0      16        0.0%
  1468 ;;BANK5                0      0       0      16        0.0%
  1469 ;;BITBANK6            10      0       0      17        0.0%
  1470 ;;BITSFR16             0      0       0      17        0.0%
  1471 ;;SFR16                0      0       0      17        0.0%
  1472 ;;BITSFR17             0      0       0      18        0.0%
  1473 ;;SFR17                0      0       0      18        0.0%
  1474 ;;BANK6                0      0       0      18        0.0%
  1475 ;;BITSFR18             0      0       0      19        0.0%
  1476 ;;SFR18                0      0       0      19        0.0%
  1477 ;;DATA                 0      0      BD      19        0.0%
  1478 ;;BITSFR19             0      0       0      20        0.0%
  1479 ;;SFR19                0      0       0      20        0.0%
  1480 ;;BITSFR20             0      0       0      21        0.0%
  1481 ;;SFR20                0      0       0      21        0.0%
  1482 ;;BITSFR21             0      0       0      22        0.0%
  1483 ;;SFR21                0      0       0      22        0.0%
  1484 ;;BITSFR22             0      0       0      23        0.0%
  1485 ;;SFR22                0      0       0      23        0.0%
  1486 ;;BITSFR23             0      0       0      24        0.0%
  1487 ;;SFR23                0      0       0      24        0.0%
  1488 ;;BITSFR24             0      0       0      25        0.0%
  1489 ;;SFR24                0      0       0      25        0.0%
  1490 ;;BITSFR25             0      0       0      26        0.0%
  1491 ;;SFR25                0      0       0      26        0.0%
  1492 ;;BITSFR26             0      0       0      27        0.0%
  1493 ;;SFR26                0      0       0      27        0.0%
  1494 ;;BITSFR27             0      0       0      28        0.0%
  1495 ;;SFR27                0      0       0      28        0.0%
  1496 ;;BITSFR28             0      0       0      29        0.0%
  1497 ;;SFR28                0      0       0      29        0.0%
  1498 ;;BITSFR29             0      0       0      30        0.0%
  1499 ;;SFR29                0      0       0      30        0.0%
  1500 ;;BITSFR30             0      0       0      31        0.0%
  1501 ;;SFR30                0      0       0      31        0.0%
  1502 ;;BITSFR31             0      0       0      32        0.0%
  1503 ;;SFR31                0      0       0      32        0.0%
  1504                           
  1505                           
  1506 ;; *************** function _main *****************
  1507 ;; Defined at:
  1508 ;;		line 12 in file "F:\work\WYP\NBIoT1\Main.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  i               1   46[BANK0 ] unsigned char 
  1513 ;;  addr            1   45[BANK0 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;		None               void
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 17F/0
  1520 ;;		On exit  : 1F/F
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1523 ;;      Params:         0       0       0       0       0       0       0       0
  1524 ;;      Locals:         0       2       0       0       0       0       0       0
  1525 ;;      Temps:          0       2       0       0       0       0       0       0
  1526 ;;      Totals:         0       4       0       0       0       0       0       0
  1527 ;;Total ram usage:        4 bytes
  1528 ;; Hardware stack levels required when called:   10
  1529 ;; This function calls:
  1530 ;;		_InitSystem
  1531 ;;		___delay_20ms
  1532 ;;		_TestProc
  1533 ;;		_ReadTData
  1534 ;;		_CallProc
  1535 ;;		___bmul
  1536 ;;		_eeprom_write
  1537 ;; This function is called by:
  1538 ;;		Startup code after reset
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541  0855                     _main:	
  1542                           
  1543                           ;Main.c: 13: unsigned char addr,i;
  1544                           ;Main.c: 14: InitSystem();
  1545                           
  1546                           ; Regs used in _main: [wreg-btemp+0+pclath+cstack]
  1547  0855  3180  20E8  3188   	fcall	_InitSystem
  1548                           
  1549                           ;Main.c: 15: __delay_20ms(250);
  1550  0858  30FA               	movlw	250
  1551  0859  00A0               	movwf	?___delay_20ms
  1552  085A  01A1               	clrf	?___delay_20ms+1
  1553  085B  2313               	fcall	___delay_20ms
  1554                           
  1555                           ;Main.c: 16: gFlags.bFirst=1;
  1556  085C  1566               	bsf	_gFlags,2
  1557                           
  1558                           ;Main.c: 17: TestProc();
  1559  085D  3183  2306  3188   	fcall	_TestProc
  1560                           
  1561                           ;Main.c: 18: ReadTData();
  1562  0860  20F3  3188         	fcall	_ReadTData
  1563                           
  1564                           ;Main.c: 19: CallProc();
  1565  0862  2672  3188         	fcall	_CallProc
  1566                           
  1567                           ;Main.c: 20: gFlags.bFirst=0;
  1568  0864  0020               	movlb	0	; select bank0
  1569  0865  1166               	bcf	_gFlags,2
  1570                           
  1571                           ;Main.c: 21: MeasurementTick=SystemTick;
  1572  0866  085E               	movf	_SystemTick+1,w
  1573  0867  00DA               	movwf	_MeasurementTick+1
  1574  0868  085D               	movf	_SystemTick,w
  1575  0869  00D9               	movwf	_MeasurementTick
  1576  086A                     l33433:	
  1577                           
  1578                           ;Main.c: 23: {
  1579                           ;Main.c: 24: if(RB2==0)
  1580  086A  0020               	movlb	0	; select bank0
  1581  086B  190D               	btfsc	13,2
  1582  086C  2880               	goto	l33447
  1583                           
  1584                           ;Main.c: 25: {
  1585                           ;Main.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1586  086D  301A               	movlw	26
  1587  086E  00CC               	movwf	??_main+1
  1588  086F  30F8               	movlw	248
  1589  0870  00CB               	movwf	??_main
  1590  0871                     u7767:	
  1591  0871  0BCB               	decfsz	??_main,f
  1592  0872  2871               	goto	u7767
  1593  0873  0BCC               	decfsz	??_main+1,f
  1594  0874  2871               	goto	u7767
  1595  0875  0064               	clrwdt
  1596                           
  1597                           ;Main.c: 27: if(RB2==0)
  1598  0876  0020               	movlb	0	; select bank0
  1599  0877  190D               	btfsc	13,2
  1600  0878  2880               	goto	l33447
  1601                           
  1602                           ;Main.c: 28: {
  1603                           ;Main.c: 29: gFlags.bNotify=1;
  1604  0879  1466               	bsf	_gFlags,0
  1605                           
  1606                           ;Main.c: 30: ReadTData();
  1607  087A  20F3  3188         	fcall	_ReadTData
  1608                           
  1609                           ;Main.c: 31: CallProc();
  1610  087C  2672  3188         	fcall	_CallProc
  1611                           
  1612                           ;Main.c: 32: gFlags.bNotify=0;
  1613  087E  0020               	movlb	0	; select bank0
  1614  087F  1066               	bcf	_gFlags,0
  1615  0880                     l33447:	
  1616                           
  1617                           ;Main.c: 33: }
  1618                           ;Main.c: 34: }
  1619                           ;Main.c: 35: if((SystemTick-RunTick)>20)
  1620  0880  0877               	movf	_RunTick,w
  1621  0881  025D               	subwf	_SystemTick,w
  1622  0882  00CB               	movwf	??_main
  1623  0883  0878               	movf	_RunTick+1,w
  1624  0884  3B5E               	subwfb	_SystemTick+1,w
  1625  0885  00CC               	movwf	??_main+1
  1626  0886  3000               	movlw	0
  1627  0887  024C               	subwf	??_main+1,w
  1628  0888  3015               	movlw	21
  1629  0889  1903               	skipnz
  1630  088A  024B               	subwf	??_main,w
  1631  088B  1C03               	skipc
  1632  088C  289A               	goto	l33455
  1633                           
  1634                           ;Main.c: 36: {
  1635                           ;Main.c: 37: RunTick=SystemTick;
  1636  088D  085E               	movf	_SystemTick+1,w
  1637  088E  00F8               	movwf	_RunTick+1
  1638  088F  085D               	movf	_SystemTick,w
  1639  0890  00F7               	movwf	_RunTick
  1640  0891                     l6410:	
  1641                           ;Main.c: 39: while(WA==0);
  1642                           
  1643  0891  002F               	movlb	15	; select bank15
  1644  0892  1E12               	btfss	18,4
  1645  0893  2891               	goto	l6410
  1646                           
  1647                           ;Main.c: 40: SEG3COM0=!SEG3COM0;
  1648  0894  3008               	movlw	8
  1649  0895  06A0               	xorwf	32,f
  1650  0896                     l6413:	
  1651                           ;Main.c: 41: while(WA==0);
  1652                           
  1653  0896  1E12               	btfss	18,4
  1654  0897  2896               	goto	l6413
  1655                           
  1656                           ;Main.c: 42: SEG11COM0=!SEG11COM0;
  1657  0898  3008               	movlw	8
  1658  0899  06A1               	xorwf	33,f
  1659  089A                     l33455:	
  1660                           
  1661                           ;Main.c: 44: }
  1662                           ;Main.c: 45: if((SystemTick-MeasurementTick)>NeedMeasurementTick)
  1663  089A  0020               	movlb	0	; select bank0
  1664  089B  0859               	movf	_MeasurementTick,w
  1665  089C  025D               	subwf	_SystemTick,w
  1666  089D  00CB               	movwf	??_main
  1667  089E  085A               	movf	_MeasurementTick+1,w
  1668  089F  3B5E               	subwfb	_SystemTick+1,w
  1669  08A0  00CC               	movwf	??_main+1
  1670  08A1  025C               	subwf	_NeedMeasurementTick+1,w
  1671  08A2  1D03               	skipz
  1672  08A3  28A6               	goto	u7695
  1673  08A4  084B               	movf	??_main,w
  1674  08A5  025B               	subwf	_NeedMeasurementTick,w
  1675  08A6                     u7695:	
  1676  08A6  1803               	skipnc
  1677  08A7  28EE               	goto	l33505
  1678                           
  1679                           ;Main.c: 46: {
  1680                           ;Main.c: 47: MeasurementTick=SystemTick;
  1681  08A8  085E               	movf	_SystemTick+1,w
  1682  08A9  00DA               	movwf	_MeasurementTick+1
  1683  08AA  085D               	movf	_SystemTick,w
  1684  08AB  00D9               	movwf	_MeasurementTick
  1685                           
  1686                           ;Main.c: 48: ReadTData();
  1687  08AC  20F3  3188         	fcall	_ReadTData
  1688                           
  1689                           ;Main.c: 49: TList.T[TListIndex++]=CurTemp;
  1690  08AE  0020               	movlb	0	; select bank0
  1691  08AF  3565               	lslf	_TListIndex,w
  1692  08B0  3E20               	addlw	_TList& (0+255)
  1693  08B1  0086               	movwf	6
  1694  08B2  3001               	movlw	1	; select bank2/3
  1695  08B3  0087               	movwf	7
  1696  08B4  0857               	movf	_CurTemp,w
  1697  08B5  3FC0               	movwi [0]fsr1
  1698  08B6  0858               	movf	_CurTemp+1,w
  1699  08B7  3FC1               	movwi [1]fsr1
  1700  08B8  0AE5               	incf	_TListIndex,f
  1701                           
  1702                           ;Main.c: 50: if(TListIndex>=12)
  1703  08B9  300C               	movlw	12
  1704  08BA  0265               	subwf	_TListIndex,w
  1705  08BB  1C03               	skipc
  1706  08BC  28EE               	goto	l33505
  1707                           
  1708                           ;Main.c: 51: {
  1709                           ;Main.c: 52: CallProc();
  1710  08BD  2672  3188         	fcall	_CallProc
  1711                           
  1712                           ;Main.c: 53: TListIndex=0;
  1713  08BF  0020               	movlb	0	; select bank0
  1714  08C0  01E5               	clrf	_TListIndex
  1715                           
  1716                           ;Main.c: 54: if(ErrState!=NoErr)
  1717  08C1  0863               	movf	_ErrState,w
  1718  08C2  1903               	btfsc	3,2
  1719  08C3  28EB               	goto	l33501
  1720                           
  1721                           ;Main.c: 55: {
  1722                           ;Main.c: 56: if(TxErrDataIndex==0xff)
  1723  08C4  0869               	movf	_TxErrDataIndex,w
  1724  08C5  3AFF               	xorlw	255
  1725  08C6  1D03               	skipz
  1726  08C7  28C9               	goto	l33477
  1727                           
  1728                           ;Main.c: 57: TxErrDataIndex=0;
  1729  08C8  01E9               	clrf	_TxErrDataIndex
  1730  08C9                     l33477:	
  1731                           
  1732                           ;Main.c: 58: addr=TxErrDataIndex*12;
  1733  08C9  300C               	movlw	12
  1734  08CA  00A0               	movwf	?___bmul
  1735  08CB  0869               	movf	_TxErrDataIndex,w
  1736  08CC  262B  3188         	fcall	___bmul
  1737  08CE  00CD               	movwf	main@addr
  1738                           
  1739                           ;Main.c: 59: addr+=16;
  1740  08CF  3010               	movlw	16
  1741  08D0  07CD               	addwf	main@addr,f
  1742                           
  1743                           ;Main.c: 60: for(i=0;i<24;i++)
  1744  08D1  01CE               	clrf	main@i
  1745  08D2                     l33487:	
  1746                           
  1747                           ;Main.c: 61: {
  1748                           ;Main.c: 62: eeprom_write(addr+i,TList.All[i]);
  1749  08D2  084E               	movf	main@i,w
  1750  08D3  3E20               	addlw	_TList& (0+255)
  1751  08D4  0086               	movwf	6
  1752  08D5  3001               	movlw	1	; select bank2/3
  1753  08D6  0087               	movwf	7
  1754  08D7  0801               	movf	1,w
  1755  08D8  00A0               	movwf	?_eeprom_write
  1756  08D9  084D               	movf	main@addr,w
  1757  08DA  074E               	addwf	main@i,w
  1758  08DB  2706  3188         	fcall	_eeprom_write
  1759  08DD  0020               	movlb	0	; select bank0
  1760  08DE  0ACE               	incf	main@i,f
  1761  08DF  3018               	movlw	24
  1762  08E0  024E               	subwf	main@i,w
  1763  08E1  1C03               	skipc
  1764  08E2  28D2               	goto	l33487
  1765                           
  1766                           ;Main.c: 63: }
  1767                           ;Main.c: 64: TxErrDataIndex++;
  1768  08E3  0AE9               	incf	_TxErrDataIndex,f
  1769                           
  1770                           ;Main.c: 65: if(TxErrDataIndex>=10)
  1771  08E4  300A               	movlw	10
  1772  08E5  0269               	subwf	_TxErrDataIndex,w
  1773  08E6  1C03               	skipc
  1774  08E7  28EE               	goto	l33505
  1775                           
  1776                           ;Main.c: 66: {
  1777                           ;Main.c: 67: gFlags.bErrFull=1;
  1778  08E8  15E6               	bsf	_gFlags,3
  1779                           
  1780                           ;Main.c: 68: TxErrDataIndex=0;
  1781  08E9  01E9               	clrf	_TxErrDataIndex
  1782  08EA  28EE               	goto	l33505
  1783  08EB                     l33501:	
  1784                           
  1785                           ;Main.c: 71: else
  1786                           ;Main.c: 72: {
  1787                           ;Main.c: 73: TxErrDataIndex=0xff;
  1788  08EB  30FF               	movlw	255
  1789  08EC  00E9               	movwf	_TxErrDataIndex
  1790                           
  1791                           ;Main.c: 74: gFlags.bErrFull=0;
  1792  08ED  11E6               	bcf	_gFlags,3
  1793  08EE                     l33505:	
  1794                           
  1795                           ;Main.c: 75: }
  1796                           ;Main.c: 76: }
  1797                           ;Main.c: 77: }
  1798                           ;Main.c: 78: if(WERR==1)
  1799  08EE  002F               	movlb	15	; select bank15
  1800  08EF  1E91               	btfss	17,5
  1801  08F0  286A               	goto	l33433
  1802                           
  1803                           ;Main.c: 79: {
  1804                           ;Main.c: 80: WERR=0;
  1805  08F1  1291               	bcf	17,5
  1806  08F2  286A               	goto	l33433
  1807  08F3                     __end_of_main:	
  1808  08F3                     __ptext1998:	
  1809 ;; =============== function _CallSend ends ============
  1810                           
  1811                           
  1812 ;; *************** function _ReadTData *****************
  1813 ;; Defined at:
  1814 ;;		line 108 in file "F:\work\WYP\NBIoT1\Main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  retry           1   12[BANK0 ] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 10/0
  1825 ;;		On exit  : 1F/F
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1828 ;;      Params:         0       0       0       0       0       0       0       0
  1829 ;;      Locals:         0       1       0       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0       0
  1831 ;;      Totals:         0       1       0       0       0       0       0       0
  1832 ;;Total ram usage:        1 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    6
  1835 ;; This function calls:
  1836 ;;		_DS18X20_StartMeas
  1837 ;;		___delay_20ms
  1838 ;;		_DS18X20_ReadMeas
  1839 ;;		_TCN75_SetConfig
  1840 ;;		_TCN75_ReadReg
  1841 ;;		_LcdDisplay_CurTemp
  1842 ;; This function is called by:
  1843 ;;		_InitSystem
  1844 ;;		_main
  1845 ;;		_TestProc
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848  08F3                     _ReadTData:	
  1849                           
  1850                           ;Main.c: 109: unsigned char retry;
  1851                           ;Main.c: 110: if(gFlags.b18B20)
  1852                           
  1853                           ; Regs used in _ReadTData: [wreg-status,0+pclath+cstack]
  1854  08F3  0020               	movlb	0	; select bank0
  1855  08F4  1CE6               	btfss	_gFlags,1
  1856  08F5  291D               	goto	l6436
  1857                           
  1858                           ;Main.c: 111: {
  1859                           ;Main.c: 112: retry=5;
  1860  08F6  3005               	movlw	5
  1861  08F7  00AC               	movwf	ReadTData@retry
  1862  08F8                     l6437:	
  1863                           ;Main.c: 113: while(retry!=0)
  1864                           
  1865  08F8  08AC               	movf	ReadTData@retry,f
  1866  08F9  1903               	btfsc	3,2
  1867  08FA  2916               	goto	l33241
  1868                           
  1869                           ;Main.c: 114: {
  1870                           ;Main.c: 115: if(DS18X20_StartMeas()!=0x00)
  1871  08FB  27F2  3188         	fcall	_DS18X20_StartMeas
  1872  08FD  3A00               	xorlw	0
  1873  08FE  1903               	skipnz
  1874  08FF  2903               	goto	l33231
  1875  0900                     l33229:	
  1876                           
  1877                           ;Main.c: 116: {
  1878                           ;Main.c: 117: retry--;
  1879  0900  0020               	movlb	0	; select bank0
  1880  0901  03AC               	decf	ReadTData@retry,f
  1881                           
  1882                           ;Main.c: 118: }
  1883  0902  28F8               	goto	l6437
  1884  0903                     l33231:	
  1885                           
  1886                           ;Main.c: 119: else
  1887                           ;Main.c: 120: {
  1888                           ;Main.c: 121: __delay_20ms(50);
  1889  0903  3032               	movlw	50
  1890  0904  00A0               	movwf	?___delay_20ms
  1891  0905  01A1               	clrf	?___delay_20ms+1
  1892  0906  2313               	fcall	___delay_20ms
  1893                           
  1894                           ;Main.c: 122: if(DS18X20_ReadMeas(1)==0x00)
  1895  0907  3001               	movlw	1
  1896  0908  3180  202C  3188   	fcall	_DS18X20_ReadMeas
  1897  090B  3800               	iorlw	0
  1898  090C  1D03               	skipz
  1899  090D  2900               	goto	l33229
  1900                           
  1901                           ;Main.c: 123: {
  1902                           ;Main.c: 124: CurTemp.u8L=DS18X20_Scratchpad[0];
  1903  090E  0021               	movlb	1	; select bank1
  1904  090F  0853               	movf	_DS18X20_Scratchpad^(0+128),w
  1905  0910  0020               	movlb	0	; select bank0
  1906  0911  00D7               	movwf	_CurTemp
  1907                           
  1908                           ;Main.c: 125: CurTemp.u8H=DS18X20_Scratchpad[1];
  1909  0912  0021               	movlb	1	; select bank1
  1910  0913  0854               	movf	(_DS18X20_Scratchpad^(0+128)+1),w
  1911  0914  0020               	movlb	0	; select bank0
  1912  0915  00D8               	movwf	_CurTemp+1
  1913  0916                     l33241:	
  1914                           ;Main.c: 126: break;
  1915                           
  1916                           
  1917                           ;Main.c: 131: }
  1918                           ;Main.c: 132: }
  1919                           ;Main.c: 133: }
  1920                           ;Main.c: 134: if(retry==0)
  1921  0916  08AC               	movf	ReadTData@retry,f
  1922  0917  1D03               	skipz
  1923  0918  293C               	goto	l33255
  1924  0919                     l33243:	
  1925                           
  1926                           ;Main.c: 135: CurTemp.u16=0xf000;
  1927  0919  01D7               	clrf	_CurTemp
  1928  091A  30F0               	movlw	240
  1929  091B  00D8               	movwf	_CurTemp+1
  1930  091C  293C               	goto	l33255
  1931  091D                     l6436:	
  1932                           
  1933                           ;Main.c: 137: else
  1934                           ;Main.c: 138: {
  1935                           ;Main.c: 139: TCN75_Config.OneShot=1;
  1936  091D  17E4               	bsf	_TCN75_Config,7
  1937                           
  1938                           ;Main.c: 140: if(TCN75_SetConfig()==1)
  1939  091E  3182  220C  3188   	fcall	_TCN75_SetConfig
  1940  0921  3A01               	xorlw	1
  1941  0922  1D03               	skipz
  1942  0923  2919               	goto	l33243
  1943                           
  1944                           ;Main.c: 141: {
  1945                           ;Main.c: 142: __delay_20ms(25);
  1946  0924  3019               	movlw	25
  1947  0925  00A0               	movwf	?___delay_20ms
  1948  0926  01A1               	clrf	?___delay_20ms+1
  1949  0927  2313               	fcall	___delay_20ms
  1950                           
  1951                           ;Main.c: 143: if(TCN75_ReadReg(TCN75_TEMP)==1)
  1952  0928  3000               	movlw	0
  1953  0929  3182  2234  3188   	fcall	_TCN75_ReadReg
  1954  092C  3A01               	xorlw	1
  1955  092D  1D03               	skipz
  1956  092E  2919               	goto	l33243
  1957                           
  1958                           ;Main.c: 144: {
  1959                           ;Main.c: 145: CurTemp.u16=TCN75_RegReadResualt.u16>>4;
  1960  092F  0860               	movf	_TCN75_RegReadResualt+1,w
  1961  0930  00D8               	movwf	_CurTemp+1
  1962  0931  085F               	movf	_TCN75_RegReadResualt,w
  1963  0932  00D7               	movwf	_CurTemp
  1964  0933  0ED7               	swapf	_CurTemp,f
  1965  0934  0ED8               	swapf	_CurTemp+1,f
  1966  0935  300F               	movlw	15
  1967  0936  05D7               	andwf	_CurTemp,f
  1968  0937  0858               	movf	_CurTemp+1,w
  1969  0938  39F0               	andlw	240
  1970  0939  04D7               	iorwf	_CurTemp,f
  1971  093A  300F               	movlw	15
  1972  093B  05D8               	andwf	_CurTemp+1,f
  1973  093C                     l33255:	
  1974                           ;Main.c: 146: }
  1975                           
  1976                           
  1977                           ;Main.c: 155: }
  1978                           ;Main.c: 156: }
  1979                           ;Main.c: 158: LcdDisplay_CurTemp();
  1980  093C  2EB4               	ljmp	l32337
  1981  093D                     __end_of_ReadTData:	
  1982  093D                     __ptext1997:	
  1983 ;; =============== function _InitSystem ends ============
  1984                           
  1985                           
  1986 ;; *************** function _CallSend *****************
  1987 ;; Defined at:
  1988 ;;		line 54 in file "F:\work\WYP\NBIoT1\Function.c"
  1989 ;; Parameters:    Size  Location     Type
  1990 ;;		None
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  i               1   39[BANK0 ] unsigned char 
  1993 ;;  ret             1   38[BANK0 ] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;		None               void
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 1F/0
  2000 ;;		On exit  : 1F/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2003 ;;      Params:         0       0       0       0       0       0       0       0
  2004 ;;      Locals:         0       2       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0
  2006 ;;      Totals:         0       2       0       0       0       0       0       0
  2007 ;;Total ram usage:        2 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    7
  2010 ;; This function calls:
  2011 ;;		_InitGPRS
  2012 ;;		___delay_20ms
  2013 ;;		_ATCommand_SendCmd
  2014 ;;		_InteractServer
  2015 ;; This function is called by:
  2016 ;;		_CallProc
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019  093D                     _CallSend:	
  2020                           
  2021                           ;Function.c: 55: unsigned char ret,i;
  2022                           ;Function.c: 56: ErrState=NoErr;
  2023                           
  2024                           ; Regs used in _CallSend: [wreg-btemp+0+pclath+cstack]
  2025  093D  01E3               	clrf	_ErrState
  2026                           
  2027                           ;Function.c: 57: InitGPRS();
  2028  093E  21A9  3188         	fcall	_InitGPRS
  2029                           
  2030                           ;Function.c: 58: if(ErrState!=NoErr)
  2031  0940  0863               	movf	_ErrState,w
  2032  0941  1903               	btfsc	3,2
  2033  0942  294F               	goto	l33273
  2034                           
  2035                           ;Function.c: 59: {
  2036                           ;Function.c: 60: __delay_20ms(3000);
  2037  0943  30B8               	movlw	184
  2038  0944  00A0               	movwf	?___delay_20ms
  2039  0945  300B               	movlw	11
  2040  0946  00A1               	movwf	?___delay_20ms+1
  2041  0947  2313  3188         	fcall	___delay_20ms
  2042                           
  2043                           ;Function.c: 61: ErrState=NoErr;
  2044  0949  01E3               	clrf	_ErrState
  2045                           
  2046                           ;Function.c: 62: InitGPRS();
  2047  094A  21A9  3188         	fcall	_InitGPRS
  2048                           
  2049                           ;Function.c: 63: if(ErrState!=NoErr)
  2050  094C  0863               	movf	_ErrState,w
  2051  094D  1D03               	skipz
  2052  094E  0008               	return
  2053  094F                     l33273:	
  2054                           
  2055                           ;Function.c: 65: }
  2056                           ;Function.c: 69: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  2057  094F  306B               	movlw	low (STR_1| (0+32768))
  2058  0950  00B1               	movwf	?_ATCommand_SendCmd
  2059  0951  3090               	movlw	high (STR_1| (0+32768))
  2060  0952  00B2               	movwf	?_ATCommand_SendCmd+1
  2061  0953  22A1  3188         	fcall	_ATCommand_SendCmd
  2062  0955  3A01               	xorlw	1
  2063  0956  1903               	skipnz
  2064  0957  295B               	goto	l8560
  2065                           
  2066                           ;Function.c: 70: {
  2067                           ;Function.c: 71: ErrState=MissAT_NSOCR;
  2068  0958  3023               	movlw	35
  2069  0959  00E3               	movwf	_ErrState
  2070  095A  0008               	return
  2071  095B                     l8560:	
  2072                           
  2073                           ;Function.c: 73: }
  2074                           ;Function.c: 74: ATCommand_RetryTimes=1;
  2075  095B  01E1               	clrf	_ATCommand_RetryTimes
  2076  095C  0AE1               	incf	_ATCommand_RetryTimes,f
  2077                           
  2078                           ;Function.c: 75: ATCommand_WaitACKTimes=1200;
  2079  095D  30B0               	movlw	176
  2080  095E  00D5               	movwf	_ATCommand_WaitACKTimes
  2081  095F  3004               	movlw	4
  2082  0960  00D6               	movwf	_ATCommand_WaitACKTimes+1
  2083                           
  2084                           ;Function.c: 76: if(ATCommand_SendCmd("AT+NSOCO=2,\"www.wlwdjcy.com\",12129\0")!=ATACK_O
      +                          K)
  2085  0961  3047               	movlw	low (STR_2| (0+32768))
  2086  0962  00B1               	movwf	?_ATCommand_SendCmd
  2087  0963  3090               	movlw	high (STR_2| (0+32768))
  2088  0964  00B2               	movwf	?_ATCommand_SendCmd+1
  2089  0965  22A1  3188         	fcall	_ATCommand_SendCmd
  2090  0967  3A01               	xorlw	1
  2091  0968  1903               	skipnz
  2092  0969  296D               	goto	l33287
  2093                           
  2094                           ;Function.c: 78: {
  2095                           ;Function.c: 79: ErrState=MissAT_NSOCO;
  2096  096A  3024               	movlw	36
  2097  096B  00E3               	movwf	_ErrState
  2098  096C  0008               	return
  2099  096D                     l33287:	
  2100                           
  2101                           ;Function.c: 81: }
  2102                           ;Function.c: 83: __delay_20ms(50);
  2103  096D  3032               	movlw	50
  2104  096E  00A0               	movwf	?___delay_20ms
  2105  096F  01A1               	clrf	?___delay_20ms+1
  2106  0970  2313  3188         	fcall	___delay_20ms
  2107                           
  2108                           ;Function.c: 85: ret=InteractServer();
  2109  0972  2362  3188         	fcall	_InteractServer
  2110  0974  00C6               	movwf	CallSend@ret
  2111                           
  2112                           ;Function.c: 86: if(ret!=ATACK_OK)
  2113  0975  0346               	decf	CallSend@ret,w
  2114  0976  1903               	skipnz
  2115  0977  297A               	goto	l33295
  2116                           
  2117                           ;Function.c: 87: {
  2118                           ;Function.c: 88: gFlags.bRetry=1;
  2119  0978  1666               	bsf	_gFlags,4
  2120                           
  2121                           ;Function.c: 89: return;
  2122  0979  0008               	return
  2123  097A                     l33295:	
  2124                           
  2125                           ;Function.c: 90: }
  2126                           ;Function.c: 91: ATCommand_SendCmd("AT+NSOCL=2\0");
  2127  097A  30CC               	movlw	low (STR_3| (0+32768))
  2128  097B  00B1               	movwf	?_ATCommand_SendCmd
  2129  097C  3090               	movlw	high (STR_3| (0+32768))
  2130  097D  00B2               	movwf	?_ATCommand_SendCmd+1
  2131  097E  22A1  3188         	fcall	_ATCommand_SendCmd
  2132                           
  2133                           ;Function.c: 92: ATCommand_SendCmd("AT+CPSMS=1,,,\"11100000\",\"11100000\"\0");
  2134  0980  3023               	movlw	low (STR_4| (0+32768))
  2135  0981  00B1               	movwf	?_ATCommand_SendCmd
  2136  0982  3090               	movlw	high (STR_4| (0+32768))
  2137  0983  00B2               	movwf	?_ATCommand_SendCmd+1
  2138  0984  22A1  3188         	fcall	_ATCommand_SendCmd
  2139                           
  2140                           ;Function.c: 94: ATCommand_SendCmd("AT+NPSMR=1\0");
  2141  0986  30C0               	movlw	low (STR_5| (0+32768))
  2142  0987  00B1               	movwf	?_ATCommand_SendCmd
  2143  0988  3090               	movlw	high (STR_5| (0+32768))
  2144  0989  00B2               	movwf	?_ATCommand_SendCmd+1
  2145  098A  22A1  3188         	fcall	_ATCommand_SendCmd
  2146                           
  2147                           ;Function.c: 95: for(i=0;i<100;i++)
  2148  098C  01C7               	clrf	CallSend@i
  2149  098D                     l33303:	
  2150                           
  2151                           ;Function.c: 96: {
  2152                           ;Function.c: 97: ATCommand_SendCmd("AT+NPSMR?\0");
  2153  098D  30EF               	movlw	low (STR_6| (0+32768))
  2154  098E  00B1               	movwf	?_ATCommand_SendCmd
  2155  098F  3090               	movlw	high (STR_6| (0+32768))
  2156  0990  00B2               	movwf	?_ATCommand_SendCmd+1
  2157  0991  22A1  3188         	fcall	_ATCommand_SendCmd
  2158                           
  2159                           ;Function.c: 98: __delay_20ms(50);
  2160  0993  3032               	movlw	50
  2161  0994  00A0               	movwf	?___delay_20ms
  2162  0995  01A1               	clrf	?___delay_20ms+1
  2163  0996  2313  3188         	fcall	___delay_20ms
  2164                           
  2165                           ;Function.c: 99: ATCommand_SendCmd("AT+CEREG?\0");
  2166  0998  30E4               	movlw	low (STR_7| (0+32768))
  2167  0999  00B1               	movwf	?_ATCommand_SendCmd
  2168  099A  3090               	movlw	high (STR_7| (0+32768))
  2169  099B  00B2               	movwf	?_ATCommand_SendCmd+1
  2170  099C  22A1  3188         	fcall	_ATCommand_SendCmd
  2171                           
  2172                           ;Function.c: 100: __delay_20ms(50);
  2173  099E  3032               	movlw	50
  2174  099F  00A0               	movwf	?___delay_20ms
  2175  09A0  01A1               	clrf	?___delay_20ms+1
  2176  09A1  2313  3188         	fcall	___delay_20ms
  2177  09A3  0AC7               	incf	CallSend@i,f
  2178  09A4  3064               	movlw	100
  2179  09A5  0247               	subwf	CallSend@i,w
  2180  09A6  1803               	btfsc	3,0
  2181  09A7  0008               	return
  2182  09A8  298D               	goto	l33303
  2183  09A9                     __end_of_CallSend:	
  2184  09A9                     __ptext2000:	
  2185 ;; =============== function _InteractServer ends ============
  2186                           
  2187                           
  2188 ;; *************** function _InitGPRS *****************
  2189 ;; Defined at:
  2190 ;;		line 335 in file "F:\work\WYP\NBIoT1\Function.c"
  2191 ;; Parameters:    Size  Location     Type
  2192 ;;		None
  2193 ;; Auto vars:     Size  Location     Type
  2194 ;;  strx            2   30[BANK0 ] PTR unsigned char 
  2195 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2196 ;;  retry           1   32[BANK0 ] unsigned char 
  2197 ;;  i               1   29[BANK0 ] unsigned char 
  2198 ;; Return value:  Size  Location     Type
  2199 ;;		None               void
  2200 ;; Registers used:
  2201 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2202 ;; Tracked objects:
  2203 ;;		On entry : 1F/0
  2204 ;;		On exit  : 1F/0
  2205 ;;		Unchanged: 0/0
  2206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2207 ;;      Params:         0       0       0       0       0       0       0       0
  2208 ;;      Locals:         0       4       0       0       0       0       0       0
  2209 ;;      Temps:          0       4       0       0       0       0       0       0
  2210 ;;      Totals:         0       8       0       0       0       0       0       0
  2211 ;;Total ram usage:        8 bytes
  2212 ;; Hardware stack levels used:    1
  2213 ;; Hardware stack levels required when called:    6
  2214 ;; This function calls:
  2215 ;;		_PowerON
  2216 ;;		_ATCommand_SendCmd
  2217 ;;		___delay_20ms
  2218 ;;		_strstr
  2219 ;;		_atoi
  2220 ;;		_LcdDisplay_CSQ
  2221 ;; This function is called by:
  2222 ;;		_CallSend
  2223 ;; This function uses a non-reentrant model
  2224 ;;
  2225  09A9                     _InitGPRS:	
  2226                           
  2227                           ;Function.c: 338: PowerON();
  2228                           
  2229                           ; Regs used in _InitGPRS: [wreg-status,0+pclath+cstack]
  2230  09A9  27E2  3188         	fcall	_PowerON
  2231                           
  2232                           ;Function.c: 339: if(ATCommand_SendCmd("AT\0")!=ATACK_OK)
  2233  09AB  3063               	movlw	low (STR_25| (0+32768))
  2234  09AC  00B1               	movwf	?_ATCommand_SendCmd
  2235  09AD  3091               	movlw	high (STR_25| (0+32768))
  2236  09AE  00B2               	movwf	?_ATCommand_SendCmd+1
  2237  09AF  22A1  3188         	fcall	_ATCommand_SendCmd
  2238  09B1  3A01               	xorlw	1
  2239  09B2  1903               	skipnz
  2240  09B3  29B7               	goto	l32845
  2241                           
  2242                           ;Function.c: 340: {
  2243                           ;Function.c: 341: ErrState=MissAT;
  2244  09B4  3003               	movlw	3
  2245  09B5  00E3               	movwf	_ErrState
  2246  09B6  0008               	return
  2247  09B7                     l32845:	
  2248                           
  2249                           ;Function.c: 343: }
  2250                           ;Function.c: 345: if(ATCommand_SendCmd("ATE1\0")!=ATACK_OK)
  2251  09B7  3042               	movlw	low (STR_26| (0+32768))
  2252  09B8  00B1               	movwf	?_ATCommand_SendCmd
  2253  09B9  3091               	movlw	high (STR_26| (0+32768))
  2254  09BA  00B2               	movwf	?_ATCommand_SendCmd+1
  2255  09BB  22A1  3188         	fcall	_ATCommand_SendCmd
  2256  09BD  3A01               	xorlw	1
  2257  09BE  1903               	skipnz
  2258  09BF  29C3               	goto	l32851
  2259                           
  2260                           ;Function.c: 346: {
  2261                           ;Function.c: 347: ErrState=MissAT_ATE1;
  2262  09C0  300C               	movlw	12
  2263  09C1  00E3               	movwf	_ErrState
  2264  09C2  0008               	return
  2265  09C3                     l32851:	
  2266                           
  2267                           ;Function.c: 349: }
  2268                           ;Function.c: 350: retry=10;
  2269  09C3  300A               	movlw	10
  2270  09C4  00C0               	movwf	InitGPRS@retry
  2271  09C5                     l32861:	
  2272                           ;Function.c: 351: while(retry!=0)
  2273                           
  2274  09C5  08C0               	movf	InitGPRS@retry,f
  2275  09C6  1903               	btfsc	3,2
  2276  09C7  29D8               	goto	l32863
  2277                           
  2278                           ;Function.c: 352: {
  2279                           ;Function.c: 353: if(ATCommand_SendCmd("AT+CIMI\0")==ATACK_OK)
  2280  09C8  302A               	movlw	low (STR_27| (0+32768))
  2281  09C9  00B1               	movwf	?_ATCommand_SendCmd
  2282  09CA  3091               	movlw	high (STR_27| (0+32768))
  2283  09CB  00B2               	movwf	?_ATCommand_SendCmd+1
  2284  09CC  22A1  3188         	fcall	_ATCommand_SendCmd
  2285  09CE  3A01               	xorlw	1
  2286  09CF  1903               	btfsc	3,2
  2287  09D0  29D8               	goto	l32863
  2288                           
  2289                           ;Function.c: 356: }
  2290                           ;Function.c: 357: __delay_20ms(150);
  2291  09D1  3096               	movlw	150
  2292  09D2  00A0               	movwf	?___delay_20ms
  2293  09D3  01A1               	clrf	?___delay_20ms+1
  2294  09D4  2313  3188         	fcall	___delay_20ms
  2295                           
  2296                           ;Function.c: 358: retry--;
  2297  09D6  03C0               	decf	InitGPRS@retry,f
  2298  09D7  29C5               	goto	l32861
  2299  09D8                     l32863:	
  2300                           
  2301                           ;Function.c: 359: }
  2302                           ;Function.c: 360: if(retry==0)
  2303  09D8  08C0               	movf	InitGPRS@retry,f
  2304  09D9  1D03               	skipz
  2305  09DA  29DE               	goto	l32869
  2306                           
  2307                           ;Function.c: 361: {
  2308                           ;Function.c: 362: ErrState=MissSimCard;
  2309  09DB  3004               	movlw	4
  2310  09DC  00E3               	movwf	_ErrState
  2311  09DD  0008               	return
  2312  09DE                     l32869:	
  2313                           
  2314                           ;Function.c: 364: }
  2315                           ;Function.c: 365: retry=10;
  2316  09DE  300A               	movlw	10
  2317  09DF  00C0               	movwf	InitGPRS@retry
  2318                           
  2319                           ;Function.c: 366: while(retry!=0)
  2320  09E0  29E7               	goto	l32897
  2321  09E1                     l32893:	
  2322                           ;Function.c: 379: break;
  2323                           
  2324                           
  2325                           ;Function.c: 381: else
  2326                           ;Function.c: 382: {
  2327                           ;Function.c: 383: retry--;
  2328  09E1  03C0               	decf	InitGPRS@retry,f
  2329                           
  2330                           ;Function.c: 384: __delay_20ms(150);
  2331  09E2  3096               	movlw	150
  2332  09E3  00A0               	movwf	?___delay_20ms
  2333  09E4  01A1               	clrf	?___delay_20ms+1
  2334  09E5  2313  3188         	fcall	___delay_20ms
  2335  09E7                     l32897:	
  2336  09E7  08C0               	movf	InitGPRS@retry,f
  2337  09E8  1903               	btfsc	3,2
  2338  09E9  2A20               	goto	l32899
  2339                           
  2340                           ;Function.c: 367: {
  2341                           ;Function.c: 369: if(ATCommand_SendCmd("AT+NCCID\0")==ATACK_OK)
  2342  09EA  3005               	movlw	low (STR_28| (0+32768))
  2343  09EB  00B1               	movwf	?_ATCommand_SendCmd
  2344  09EC  3091               	movlw	high (STR_28| (0+32768))
  2345  09ED  00B2               	movwf	?_ATCommand_SendCmd+1
  2346  09EE  22A1  3188         	fcall	_ATCommand_SendCmd
  2347  09F0  3A01               	xorlw	1
  2348  09F1  1D03               	skipz
  2349  09F2  29E7               	goto	l32897
  2350                           
  2351                           ;Function.c: 370: {
  2352                           ;Function.c: 371: strx=strstr((const char*)ATCommand_RxList,"8986");
  2353  09F3  305A               	movlw	90
  2354  09F4  00AD               	movwf	?_strstr
  2355  09F5  3021               	movlw	33
  2356  09F6  00AE               	movwf	?_strstr+1
  2357  09F7  305E               	movlw	low (STR_29| (0+32768))
  2358  09F8  00AF               	movwf	?_strstr+2
  2359  09F9  3091               	movlw	high (STR_29| (0+32768))
  2360  09FA  00B0               	movwf	?_strstr+3
  2361  09FB  2327  3188         	fcall	_strstr
  2362  09FD  082E               	movf	?_strstr+1,w
  2363  09FE  00BF               	movwf	InitGPRS@strx+1
  2364  09FF  082D               	movf	?_strstr,w
  2365  0A00  00BE               	movwf	InitGPRS@strx
  2366                           
  2367                           ;Function.c: 372: if(strx!=0)
  2368  0A01  043F               	iorwf	InitGPRS@strx+1,w
  2369  0A02  1903               	skipnz
  2370  0A03  29E1               	goto	l32893
  2371                           
  2372                           ;Function.c: 373: {
  2373                           ;Function.c: 374: for(i=0;i<15;i++)
  2374  0A04  01BD               	clrf	InitGPRS@i
  2375  0A05                     l32883:	
  2376                           
  2377                           ;Function.c: 375: {
  2378                           ;Function.c: 376: ICCID[i]=strx[i+5];
  2379  0A05  083D               	movf	InitGPRS@i,w
  2380  0A06  3EA0               	addlw	_ICCID& (0+255)
  2381  0A07  0086               	movwf	6
  2382  0A08  0187               	clrf	7
  2383  0A09  083D               	movf	InitGPRS@i,w
  2384  0A0A  00B9               	movwf	??_InitGPRS
  2385  0A0B  01BA               	clrf	??_InitGPRS+1
  2386  0A0C  073E               	addwf	InitGPRS@strx,w
  2387  0A0D  00BB               	movwf	??_InitGPRS+2
  2388  0A0E  083A               	movf	??_InitGPRS+1,w
  2389  0A0F  3D3F               	addwfc	InitGPRS@strx+1,w
  2390  0A10  00BC               	movwf	??_InitGPRS+3
  2391  0A11  083B               	movf	??_InitGPRS+2,w
  2392  0A12  3E05               	addlw	5
  2393  0A13  0084               	movwf	4
  2394  0A14  3000               	movlw	0
  2395  0A15  3D3C               	addwfc	??_InitGPRS+3,w
  2396  0A16  0085               	movwf	5
  2397  0A17  0800               	movf	0,w
  2398  0A18  0081               	movwf	1
  2399  0A19  0ABD               	incf	InitGPRS@i,f
  2400  0A1A  300F               	movlw	15
  2401  0A1B  023D               	subwf	InitGPRS@i,w
  2402  0A1C  1C03               	skipc
  2403  0A1D  2A05               	goto	l32883
  2404                           
  2405                           ;Function.c: 377: }
  2406                           ;Function.c: 378: ICCID[15]='\0';
  2407  0A1E  0021               	movlb	1	; select bank1
  2408  0A1F  01AF               	clrf	(_ICCID^(0+128)+15)
  2409  0A20                     l32899:	
  2410                           
  2411                           ;Function.c: 385: }
  2412                           ;Function.c: 386: }
  2413                           ;Function.c: 388: }
  2414                           ;Function.c: 389: retry=100;
  2415  0A20  3064               	movlw	100
  2416  0A21  0020               	movlb	0	; select bank0
  2417  0A22  00C0               	movwf	InitGPRS@retry
  2418                           
  2419                           ;Function.c: 390: CSQ=0xff;
  2420  0A23  30FF               	movlw	255
  2421  0A24  00E2               	movwf	_CSQ
  2422  0A25                     l32927:	
  2423                           ;Function.c: 391: while(retry!=0)
  2424                           
  2425  0A25  08C0               	movf	InitGPRS@retry,f
  2426  0A26  1903               	btfsc	3,2
  2427  0A27  2A62               	goto	l32929
  2428                           
  2429                           ;Function.c: 392: {
  2430                           ;Function.c: 393: if(ATCommand_SendCmd("AT+CSQ\0")==ATACK_OK)
  2431  0A28  3033               	movlw	low (STR_30| (0+32768))
  2432  0A29  00B1               	movwf	?_ATCommand_SendCmd
  2433  0A2A  3091               	movlw	high (STR_30| (0+32768))
  2434  0A2B  00B2               	movwf	?_ATCommand_SendCmd+1
  2435  0A2C  22A1  3188         	fcall	_ATCommand_SendCmd
  2436  0A2E  3A01               	xorlw	1
  2437  0A2F  1D03               	skipz
  2438  0A30  2A25               	goto	l32927
  2439                           
  2440                           ;Function.c: 394: {
  2441                           ;Function.c: 395: strx=strstr((const char*)ATCommand_RxList,"+CSQ:");
  2442  0A31  305A               	movlw	90
  2443  0A32  00AD               	movwf	?_strstr
  2444  0A33  3021               	movlw	33
  2445  0A34  00AE               	movwf	?_strstr+1
  2446  0A35  3048               	movlw	low (STR_31| (0+32768))
  2447  0A36  00AF               	movwf	?_strstr+2
  2448  0A37  3091               	movlw	high (STR_31| (0+32768))
  2449  0A38  00B0               	movwf	?_strstr+3
  2450  0A39  2327  3188         	fcall	_strstr
  2451  0A3B  082E               	movf	?_strstr+1,w
  2452  0A3C  00BF               	movwf	InitGPRS@strx+1
  2453  0A3D  082D               	movf	?_strstr,w
  2454  0A3E  00BE               	movwf	InitGPRS@strx
  2455                           
  2456                           ;Function.c: 396: if(strx!=0)
  2457  0A3F  043F               	iorwf	InitGPRS@strx+1,w
  2458  0A40  1903               	skipnz
  2459  0A41  2A5B               	goto	l32919
  2460                           
  2461                           ;Function.c: 397: {
  2462                           ;Function.c: 398: CSQ=atoi(strx+5);
  2463  0A42  083E               	movf	InitGPRS@strx,w
  2464  0A43  3E05               	addlw	5
  2465  0A44  00B9               	movwf	??_InitGPRS
  2466  0A45  3000               	movlw	0
  2467  0A46  3D3F               	addwfc	InitGPRS@strx+1,w
  2468  0A47  00BA               	movwf	??_InitGPRS+1
  2469  0A48  0839               	movf	??_InitGPRS,w
  2470  0A49  00A6               	movwf	?_atoi
  2471  0A4A  083A               	movf	??_InitGPRS+1,w
  2472  0A4B  00A7               	movwf	?_atoi+1
  2473  0A4C  3185  253F  3188   	fcall	_atoi
  2474  0A4F  0826               	movf	?_atoi,w
  2475  0A50  00E2               	movwf	_CSQ
  2476                           
  2477                           ;Function.c: 400: LcdDisplay_CSQ();
  2478  0A51  27A9  3188         	fcall	_LcdDisplay_CSQ
  2479                           
  2480                           ;Function.c: 402: if(CSQ!=0 && CSQ!=99)
  2481  0A53  0020               	movlb	0	; select bank0
  2482  0A54  0862               	movf	_CSQ,w
  2483  0A55  1903               	btfsc	3,2
  2484  0A56  2A5B               	goto	l32919
  2485  0A57  0862               	movf	_CSQ,w
  2486  0A58  3A63               	xorlw	99
  2487  0A59  1D03               	btfss	3,2
  2488  0A5A  2A62               	goto	l32929
  2489  0A5B                     l32919:	
  2490                           
  2491                           ;Function.c: 404: else
  2492                           ;Function.c: 405: {
  2493                           ;Function.c: 406: retry--;
  2494  0A5B  03C0               	decf	InitGPRS@retry,f
  2495                           
  2496                           ;Function.c: 407: __delay_20ms(150);
  2497  0A5C  3096               	movlw	150
  2498  0A5D  00A0               	movwf	?___delay_20ms
  2499  0A5E  01A1               	clrf	?___delay_20ms+1
  2500  0A5F  2313  3188         	fcall	___delay_20ms
  2501  0A61  2A25               	goto	l32927
  2502  0A62                     l32929:	
  2503                           
  2504                           ;Function.c: 414: }
  2505                           ;Function.c: 415: }
  2506                           ;Function.c: 416: }
  2507                           ;Function.c: 417: if(retry==0 && CSQ!=0xff)
  2508  0A62  08C0               	movf	InitGPRS@retry,f
  2509  0A63  1D03               	skipz
  2510  0A64  2A6C               	goto	l32937
  2511  0A65  0862               	movf	_CSQ,w
  2512  0A66  3AFF               	xorlw	255
  2513  0A67  1903               	skipnz
  2514  0A68  2A6C               	goto	l32937
  2515                           
  2516                           ;Function.c: 418: {
  2517                           ;Function.c: 419: ErrState=MissAT_CSQ;
  2518  0A69  300F               	movlw	15
  2519  0A6A  00E3               	movwf	_ErrState
  2520  0A6B  0008               	return
  2521  0A6C                     l32937:	
  2522                           
  2523                           ;Function.c: 421: }
  2524                           ;Function.c: 422: ATCommand_SendCmd("AT+CEREG=4\0");
  2525  0A6C  30D8               	movlw	low (STR_32| (0+32768))
  2526  0A6D  00B1               	movwf	?_ATCommand_SendCmd
  2527  0A6E  3090               	movlw	high (STR_32| (0+32768))
  2528  0A6F  00B2               	movwf	?_ATCommand_SendCmd+1
  2529  0A70  22A1  3188         	fcall	_ATCommand_SendCmd
  2530                           
  2531                           ;Function.c: 423: retry=20;
  2532  0A72  3014               	movlw	20
  2533  0A73  00C0               	movwf	InitGPRS@retry
  2534  0A74                     l32957:	
  2535                           ;Function.c: 424: while(retry!=0)
  2536                           
  2537  0A74  08C0               	movf	InitGPRS@retry,f
  2538  0A75  1903               	btfsc	3,2
  2539  0A76  2A9B               	goto	l32959
  2540                           
  2541                           ;Function.c: 425: {
  2542                           ;Function.c: 426: if(ATCommand_SendCmd("AT+CEREG?\0")!=ATACK_OK)
  2543  0A77  30E4               	movlw	low (STR_7| (0+32768))
  2544  0A78  00B1               	movwf	?_ATCommand_SendCmd
  2545  0A79  3090               	movlw	high (STR_7| (0+32768))
  2546  0A7A  00B2               	movwf	?_ATCommand_SendCmd+1
  2547  0A7B  22A1  3188         	fcall	_ATCommand_SendCmd
  2548  0A7D  3A01               	xorlw	1
  2549  0A7E  1903               	skipnz
  2550  0A7F  2A83               	goto	l32947
  2551                           
  2552                           ;Function.c: 427: {
  2553                           ;Function.c: 428: ErrState=MissAT_COPS;
  2554  0A80  3010               	movlw	16
  2555  0A81  00E3               	movwf	_ErrState
  2556  0A82  0008               	return
  2557  0A83                     l32947:	
  2558                           
  2559                           ;Function.c: 430: }
  2560                           ;Function.c: 431: strx=strstr((const char*)ATCommand_RxList,"+CEREG:4,1");
  2561  0A83  305A               	movlw	90
  2562  0A84  00AD               	movwf	?_strstr
  2563  0A85  3021               	movlw	33
  2564  0A86  00AE               	movwf	?_strstr+1
  2565  0A87  30FA               	movlw	low (STR_34| (0+32768))
  2566  0A88  00AF               	movwf	?_strstr+2
  2567  0A89  3090               	movlw	high (STR_34| (0+32768))
  2568  0A8A  00B0               	movwf	?_strstr+3
  2569  0A8B  2327  3188         	fcall	_strstr
  2570  0A8D  082E               	movf	?_strstr+1,w
  2571  0A8E  00BF               	movwf	InitGPRS@strx+1
  2572  0A8F  082D               	movf	?_strstr,w
  2573  0A90  00BE               	movwf	InitGPRS@strx
  2574                           
  2575                           ;Function.c: 432: if(strx!=0)
  2576  0A91  043F               	iorwf	InitGPRS@strx+1,w
  2577  0A92  1D03               	btfss	3,2
  2578  0A93  2A9B               	goto	l32959
  2579                           
  2580                           ;Function.c: 435: }
  2581                           ;Function.c: 436: __delay_20ms(150);
  2582  0A94  3096               	movlw	150
  2583  0A95  00A0               	movwf	?___delay_20ms
  2584  0A96  01A1               	clrf	?___delay_20ms+1
  2585  0A97  2313  3188         	fcall	___delay_20ms
  2586                           
  2587                           ;Function.c: 437: retry--;
  2588  0A99  03C0               	decf	InitGPRS@retry,f
  2589  0A9A  2A74               	goto	l32957
  2590  0A9B                     l32959:	
  2591                           
  2592                           ;Function.c: 438: }
  2593                           ;Function.c: 439: if(retry==0)
  2594  0A9B  08C0               	movf	InitGPRS@retry,f
  2595  0A9C  1D03               	skipz
  2596  0A9D  0008               	return
  2597                           
  2598                           ;Function.c: 440: {
  2599                           ;Function.c: 441: ErrState=MissNet;
  2600  0A9E  3005               	movlw	5
  2601  0A9F  00E3               	movwf	_ErrState
  2602  0AA0  0008               	return
  2603  0AA1                     __end_of_InitGPRS:	
  2604  0AA1                     __ptext2006:	
  2605 ;; =============== function _Uart1_PutString_Hex ends ============
  2606                           
  2607                           
  2608 ;; *************** function _ATCommand_SendCmd *****************
  2609 ;; Defined at:
  2610 ;;		line 71 in file "F:\work\WYP\NBIoT1\ATCommand.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  cmd             2   17[BANK0 ] PTR const unsigned char 
  2613 ;;		 -> STR_33(11), STR_32(12), STR_30(8), STR_28(10), 
  2614 ;;		 -> STR_27(9), STR_26(6), STR_25(4), STR_7(11), 
  2615 ;;		 -> STR_6(11), STR_5(12), STR_4(36), STR_3(12), 
  2616 ;;		 -> STR_2(36), STR_1(23), 
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  strx            2   22[BANK0 ] PTR unsigned char 
  2619 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2620 ;;  res             1   24[BANK0 ] unsigned char 
  2621 ;;  retry           1   21[BANK0 ] unsigned char 
  2622 ;; Return value:  Size  Location     Type
  2623 ;;                  1    wreg      unsigned char 
  2624 ;; Registers used:
  2625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2626 ;; Tracked objects:
  2627 ;;		On entry : 1F/0
  2628 ;;		On exit  : 1F/0
  2629 ;;		Unchanged: 0/0
  2630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2631 ;;      Params:         0       2       0       0       0       0       0       0
  2632 ;;      Locals:         0       4       0       0       0       0       0       0
  2633 ;;      Temps:          0       2       0       0       0       0       0       0
  2634 ;;      Totals:         0       8       0       0       0       0       0       0
  2635 ;;Total ram usage:        8 bytes
  2636 ;; Hardware stack levels used:    1
  2637 ;; Hardware stack levels required when called:    5
  2638 ;; This function calls:
  2639 ;;		_Uart1_PutString
  2640 ;;		_strstr
  2641 ;;		___delay_20ms
  2642 ;;		_strcpy
  2643 ;; This function is called by:
  2644 ;;		_CallSend
  2645 ;;		_InitGPRS
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648  0AA1                     _ATCommand_SendCmd:	
  2649                           
  2650                           ;ATCommand.c: 73: unsigned char retry;
  2651                           ;ATCommand.c: 74: char *strx=0;
  2652                           
  2653                           ; Regs used in _ATCommand_SendCmd: [wreg-status,0+pclath+cstack]
  2654  0AA1  01B6               	clrf	ATCommand_SendCmd@strx
  2655  0AA2  01B7               	clrf	ATCommand_SendCmd@strx+1
  2656                           
  2657                           ;ATCommand.c: 76: retry=ATCommand_RetryTimes;
  2658  0AA3  0861               	movf	_ATCommand_RetryTimes,w
  2659  0AA4  00B5               	movwf	ATCommand_SendCmd@retry
  2660                           
  2661                           ;ATCommand.c: 77: res=ATACK_Null;
  2662  0AA5  01B8               	clrf	ATCommand_SendCmd@res
  2663  0AA6                     l32701:	
  2664                           ;ATCommand.c: 78: while(retry!=0)
  2665                           
  2666  0AA6  08B5               	movf	ATCommand_SendCmd@retry,f
  2667  0AA7  1903               	btfsc	3,2
  2668  0AA8  2AFE               	goto	l32703
  2669                           
  2670                           ;ATCommand.c: 79: {
  2671                           ;ATCommand.c: 80: Uart1_PutString(cmd);
  2672  0AA9  0832               	movf	ATCommand_SendCmd@cmd+1,w
  2673  0AAA  00A2               	movwf	?_Uart1_PutString+1
  2674  0AAB  0831               	movf	ATCommand_SendCmd@cmd,w
  2675  0AAC  00A1               	movwf	?_Uart1_PutString
  2676  0AAD  261A  3188         	fcall	_Uart1_PutString
  2677                           
  2678                           ;ATCommand.c: 81: Uart1_PutString("\r\0");
  2679  0AAF  306A               	movlw	low (STR_24| (0+32768))
  2680  0AB0  00A1               	movwf	?_Uart1_PutString
  2681  0AB1  3091               	movlw	high (STR_24| (0+32768))
  2682  0AB2  00A2               	movwf	?_Uart1_PutString+1
  2683  0AB3  261A               	fcall	_Uart1_PutString
  2684                           
  2685                           ;ATCommand.c: 82: ATCommand_Flags.bRx=0;
  2686  0AB4  10FA               	bcf	_ATCommand_Flags,1
  2687                           
  2688                           ;ATCommand.c: 83: ATCommand_Flags.bChar=0;
  2689  0AB5  107A               	bcf	_ATCommand_Flags,0
  2690                           
  2691                           ;ATCommand.c: 84: ATCommand_WaitACKTick=SystemTick;
  2692  0AB6  085E               	movf	_SystemTick+1,w
  2693  0AB7  00D4               	movwf	_ATCommand_WaitACKTick+1
  2694  0AB8  085D               	movf	_SystemTick,w
  2695  0AB9  00D3               	movwf	_ATCommand_WaitACKTick
  2696                           
  2697                           ;ATCommand.c: 85: ATCommand_RxCount=0;
  2698  0ABA  01FB               	clrf	_ATCommand_RxCount
  2699                           
  2700                           ;ATCommand.c: 86: ATCommand_Flags.bWaitData=1;
  2701  0ABB  157A               	bsf	_ATCommand_Flags,2
  2702                           
  2703                           ;ATCommand.c: 87: ATCommand_RxList[ATCommand_RxCount]='\0';
  2704  0ABC  3185  2536  3188   	fcall	PL3	;call to abstracted procedure
  2705  0ABF                     l14923:	
  2706                           ;ATCommand.c: 88: while(1)
  2707                           
  2708                           
  2709                           ;ATCommand.c: 89: {
  2710                           ;ATCommand.c: 90: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  2711  0ABF  305A               	movlw	90
  2712  0AC0  00AD               	movwf	?_strstr
  2713  0AC1  3021               	movlw	33
  2714  0AC2  00AE               	movwf	?_strstr+1
  2715  0AC3  30C4               	movlw	_ATCommand_OkString& (0+255)
  2716  0AC4  00AF               	movwf	?_strstr+2
  2717  0AC5  01B0               	clrf	?_strstr+3
  2718  0AC6  2327  3188         	fcall	_strstr
  2719  0AC8  082E               	movf	?_strstr+1,w
  2720  0AC9  00B7               	movwf	ATCommand_SendCmd@strx+1
  2721  0ACA  082D               	movf	?_strstr,w
  2722  0ACB  00B6               	movwf	ATCommand_SendCmd@strx
  2723                           
  2724                           ;ATCommand.c: 91: if(strx!=0)
  2725  0ACC  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2726  0ACD  1903               	skipnz
  2727  0ACE  2AD2               	goto	l32681
  2728                           
  2729                           ;ATCommand.c: 92: {
  2730                           ;ATCommand.c: 93: res=ATACK_OK;
  2731  0ACF  01B8               	clrf	ATCommand_SendCmd@res
  2732  0AD0  0AB8               	incf	ATCommand_SendCmd@res,f
  2733  0AD1  2AE4               	goto	l32687
  2734  0AD2                     l32681:	
  2735                           ;ATCommand.c: 95: break;
  2736                           
  2737                           ;ATCommand.c: 94: ATCommand_Flags.bRx=1;
  2738                           
  2739                           
  2740                           ;ATCommand.c: 97: else
  2741                           ;ATCommand.c: 98: {
  2742                           ;ATCommand.c: 99: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2743  0AD2  305A               	movlw	90
  2744  0AD3  00AD               	movwf	?_strstr
  2745  0AD4  3021               	movlw	33
  2746  0AD5  00AE               	movwf	?_strstr+1
  2747  0AD6  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2748  0AD7  00AF               	movwf	?_strstr+2
  2749  0AD8  01B0               	clrf	?_strstr+3
  2750  0AD9  2327  3188         	fcall	_strstr
  2751  0ADB  082E               	movf	?_strstr+1,w
  2752  0ADC  00B7               	movwf	ATCommand_SendCmd@strx+1
  2753  0ADD  082D               	movf	?_strstr,w
  2754  0ADE  00B6               	movwf	ATCommand_SendCmd@strx
  2755                           
  2756                           ;ATCommand.c: 100: if(strx!=0)
  2757  0ADF  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2758  0AE0  1903               	skipnz
  2759  0AE1  2AE6               	goto	l32689
  2760                           
  2761                           ;ATCommand.c: 101: {
  2762                           ;ATCommand.c: 102: res=ATACK_Err;
  2763  0AE2  3002               	movlw	2
  2764  0AE3  00B8               	movwf	ATCommand_SendCmd@res
  2765  0AE4                     l32687:	
  2766                           
  2767                           ;ATCommand.c: 103: ATCommand_Flags.bRx=1;
  2768  0AE4  14FA               	bsf	_ATCommand_Flags,1
  2769                           
  2770                           ;ATCommand.c: 104: break;
  2771  0AE5  2AF3               	goto	l14925
  2772  0AE6                     l32689:	
  2773                           
  2774                           ;ATCommand.c: 105: }
  2775                           ;ATCommand.c: 106: }
  2776                           ;ATCommand.c: 107: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2777  0AE6  0853               	movf	_ATCommand_WaitACKTick,w
  2778  0AE7  025D               	subwf	_SystemTick,w
  2779  0AE8  00B3               	movwf	??_ATCommand_SendCmd
  2780  0AE9  0854               	movf	_ATCommand_WaitACKTick+1,w
  2781  0AEA  3B5E               	subwfb	_SystemTick+1,w
  2782  0AEB  00B4               	movwf	??_ATCommand_SendCmd+1
  2783  0AEC  0256               	subwf	_ATCommand_WaitACKTimes+1,w
  2784  0AED  1D03               	skipz
  2785  0AEE  2AF1               	goto	u6785
  2786  0AEF  0833               	movf	??_ATCommand_SendCmd,w
  2787  0AF0  0255               	subwf	_ATCommand_WaitACKTimes,w
  2788  0AF1                     u6785:	
  2789  0AF1  1803               	skipnc
  2790  0AF2  2ABF               	goto	l14923
  2791  0AF3                     l14925:	
  2792                           
  2793                           ;ATCommand.c: 109: }
  2794                           ;ATCommand.c: 110: ATCommand_Flags.bWaitData=0;
  2795  0AF3  117A               	bcf	_ATCommand_Flags,2
  2796                           
  2797                           ;ATCommand.c: 111: if(res==ATACK_OK)
  2798  0AF4  0B38               	decfsz	ATCommand_SendCmd@res,w
  2799  0AF5  2AF7               	goto	l32697
  2800  0AF6  2AFE               	goto	l32703
  2801  0AF7                     l32697:	
  2802                           
  2803                           ;ATCommand.c: 113: __delay_20ms(100);;
  2804  0AF7  3064               	movlw	100
  2805  0AF8  00A0               	movwf	?___delay_20ms
  2806  0AF9  01A1               	clrf	?___delay_20ms+1
  2807  0AFA  2313  3188         	fcall	___delay_20ms
  2808                           
  2809                           ;ATCommand.c: 114: retry--;
  2810  0AFC  03B5               	decf	ATCommand_SendCmd@retry,f
  2811  0AFD  2AA6               	goto	l32701
  2812  0AFE                     l32703:	
  2813                           
  2814                           ;ATCommand.c: 115: }
  2815                           ;ATCommand.c: 116: strcpy(ATCommand_OkString,"OK");
  2816  0AFE  3067               	movlw	low (STR_35| (0+32768))
  2817  0AFF  00A0               	movwf	?_strcpy
  2818  0B00  3091               	movlw	high (STR_35| (0+32768))
  2819  0B01  00A1               	movwf	?_strcpy+1
  2820  0B02  30C4               	movlw	_ATCommand_OkString& (0+255)
  2821  0B03  2637  3188         	fcall	_strcpy
  2822                           
  2823                           ;ATCommand.c: 117: strcpy(ATCommand_ErrString,"ERROR");
  2824  0B05  304E               	movlw	low (STR_23| (0+32768))
  2825  0B06  00A0               	movwf	?_strcpy
  2826  0B07  3091               	movlw	high (STR_23| (0+32768))
  2827  0B08  00A1               	movwf	?_strcpy+1
  2828  0B09  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2829  0B0A  2637               	fcall	_strcpy
  2830                           
  2831                           ;ATCommand.c: 118: ATCommand_Clear='\0';
  2832  0B0B  01F9               	clrf	_ATCommand_Clear
  2833                           
  2834                           ;ATCommand.c: 120: ATCommand_RetryTimes=3;
  2835  0B0C  3003               	movlw	3
  2836  0B0D  00E1               	movwf	_ATCommand_RetryTimes
  2837                           
  2838                           ;ATCommand.c: 121: ATCommand_WaitACKTimes=50;
  2839  0B0E  3032               	movlw	50
  2840  0B0F  00D5               	movwf	_ATCommand_WaitACKTimes
  2841  0B10  01D6               	clrf	_ATCommand_WaitACKTimes+1
  2842                           
  2843                           ;ATCommand.c: 122: return res;
  2844  0B11  0838               	movf	ATCommand_SendCmd@res,w
  2845  0B12  0008               	return
  2846  0B13                     __end_of_ATCommand_SendCmd:	
  2847  0B13                     __ptext2024:	
  2848 ;; =============== function _Uart1_PutString ends ============
  2849                           
  2850                           
  2851 ;; *************** function ___delay_20ms *****************
  2852 ;; Defined at:
  2853 ;;		line 8 in file "F:\work\WYP\NBIoT1\afx.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  x               2    0[BANK0 ] unsigned int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;		None               void
  2860 ;; Registers used:
  2861 ;;		wreg
  2862 ;; Tracked objects:
  2863 ;;		On entry : 1F/0
  2864 ;;		On exit  : 1F/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2867 ;;      Params:         0       2       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0
  2869 ;;      Temps:          0       2       0       0       0       0       0       0
  2870 ;;      Totals:         0       4       0       0       0       0       0       0
  2871 ;;Total ram usage:        4 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    3
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_InitSystem
  2878 ;;		_main
  2879 ;;		_ReadTData
  2880 ;;		_PowerON
  2881 ;;		_CallProc
  2882 ;;		_CallSend
  2883 ;;		_InteractServer
  2884 ;;		_InitGPRS
  2885 ;;		_TestProc
  2886 ;;		_ATCommand_SendCmd
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889  0B13                     ___delay_20ms:	
  2890  0B13                     l12781:	
  2891                           ;afx.c: 9: while(x--)
  2892                           
  2893                           ; Regs used in ___delay_20ms: [wreg]
  2894                           
  2895  0B13  3001               	movlw	1
  2896  0B14  0020               	movlb	0	; select bank0
  2897  0B15  02A0               	subwf	___delay_20ms@x,f
  2898  0B16  3000               	movlw	0
  2899  0B17  3BA1               	subwfb	___delay_20ms@x+1,f
  2900  0B18  0A20               	incf	___delay_20ms@x,w
  2901  0B19  1903               	skipnz
  2902  0B1A  0A21               	incf	___delay_20ms@x+1,w
  2903  0B1B  1903               	btfsc	3,2
  2904  0B1C  0008               	return
  2905                           
  2906                           ;afx.c: 10: {
  2907                           ;afx.c: 11: _delay((unsigned long)((20)*(4000000/4000.0)));
  2908  0B1D  301A               	movlw	26
  2909  0B1E  00A3               	movwf	??___delay_20ms+1
  2910  0B1F  30F8               	movlw	248
  2911  0B20  00A2               	movwf	??___delay_20ms
  2912  0B21                     u7807:	
  2913  0B21  0BA2               	decfsz	??___delay_20ms,f
  2914  0B22  2B21               	goto	u7807
  2915  0B23  0BA3               	decfsz	??___delay_20ms+1,f
  2916  0B24  2B21               	goto	u7807
  2917  0B25  0064               	clrwdt
  2918  0B26  2B13               	goto	l12781
  2919  0B27                     __end_of___delay_20ms:	
  2920  0B27                     __ptext2021:	
  2921 ;; =============== function _atoi ends ============
  2922                           
  2923                           
  2924 ;; *************** function _strstr *****************
  2925 ;; Defined at:
  2926 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strstr.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  s1              2   13[BANK0 ] PTR const unsigned char 
  2929 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2930 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
  2931 ;;		 -> STR_34(11), STR_31(6), STR_29(5), ATCommand_ErrString(15), 
  2932 ;;		 -> ATCommand_OkString(15), 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;		None
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    wreg      PTR unsigned char 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 1F/0
  2941 ;;		On exit  : 1F/0
  2942 ;;		Unchanged: FFFE0/0
  2943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2944 ;;      Params:         0       4       0       0       0       0       0       0
  2945 ;;      Locals:         0       0       0       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0       0
  2947 ;;      Totals:         0       4       0       0       0       0       0       0
  2948 ;;Total ram usage:        4 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:    4
  2951 ;; This function calls:
  2952 ;;		_strlen
  2953 ;;		_strncmp
  2954 ;;		_strchr
  2955 ;; This function is called by:
  2956 ;;		_InitGPRS
  2957 ;;		_ATCommand_SendCmd
  2958 ;;		_ATCommand_WaitData
  2959 ;; This function uses a non-reentrant model
  2960 ;;
  2961  0B27                     _strstr:	
  2962                           
  2963                           ; Regs used in _strstr: [wreg-status,0+pclath+cstack]
  2964  0B27  2B54               	goto	l32467
  2965  0B28                     l32461:	
  2966  0B28  082E               	movf	strstr@s1+1,w
  2967  0B29  00A7               	movwf	?_strncmp+1
  2968  0B2A  082D               	movf	strstr@s1,w
  2969  0B2B  00A6               	movwf	?_strncmp
  2970  0B2C  0830               	movf	strstr@s2+1,w
  2971  0B2D  00A9               	movwf	?_strncmp+3
  2972  0B2E  082F               	movf	strstr@s2,w
  2973  0B2F  00A8               	movwf	?_strncmp+2
  2974  0B30  0830               	movf	strstr@s2+1,w
  2975  0B31  00A1               	movwf	?_strlen+1
  2976  0B32  082F               	movf	strstr@s2,w
  2977  0B33  00A0               	movwf	?_strlen
  2978  0B34  2722  3188         	fcall	_strlen
  2979  0B36  0821               	movf	?_strlen+1,w
  2980  0B37  00AB               	movwf	?_strncmp+5
  2981  0B38  0820               	movf	?_strlen,w
  2982  0B39  00AA               	movwf	?_strncmp+4
  2983  0B3A  2741  3188         	fcall	_strncmp
  2984  0B3C  0827               	movf	?_strncmp+1,w
  2985  0B3D  0426               	iorwf	?_strncmp,w
  2986  0B3E  1903               	btfsc	3,2
  2987  0B3F  0008               	return
  2988  0B40  082E               	movf	strstr@s1+1,w
  2989  0B41  00A1               	movwf	?_strchr+1
  2990  0B42  082D               	movf	strstr@s1,w
  2991  0B43  00A0               	movwf	?_strchr
  2992  0B44  0AA0               	incf	?_strchr,f
  2993  0B45  1903               	skipnz
  2994  0B46  0AA1               	incf	?_strchr+1,f
  2995  0B47  082F               	movf	strstr@s2,w
  2996  0B48  0084               	movwf	4
  2997  0B49  0830               	movf	strstr@s2+1,w
  2998  0B4A  0085               	movwf	5
  2999  0B4B  0800               	movf	0,w	;code access
  3000  0B4C  00A2               	movwf	?_strchr+2
  3001  0B4D  01A3               	clrf	?_strchr+3
  3002  0B4E  2779  3188         	fcall	_strchr
  3003  0B50  0821               	movf	?_strchr+1,w
  3004  0B51  00AE               	movwf	strstr@s1+1
  3005  0B52  0820               	movf	?_strchr,w
  3006  0B53  00AD               	movwf	strstr@s1
  3007  0B54                     l32467:	
  3008  0B54  082E               	movf	strstr@s1+1,w
  3009  0B55  042D               	iorwf	strstr@s1,w
  3010  0B56  1903               	skipnz
  3011  0B57  2B5F               	goto	l32471
  3012  0B58  082D               	movf	strstr@s1,w
  3013  0B59  0086               	movwf	6
  3014  0B5A  082E               	movf	strstr@s1+1,w
  3015  0B5B  0087               	movwf	7
  3016  0B5C  0881               	movf	1,f
  3017  0B5D  1D03               	skipz
  3018  0B5E  2B28               	goto	l32461
  3019  0B5F                     l32471:	
  3020  0B5F  01AD               	clrf	?_strstr
  3021  0B60  01AE               	clrf	?_strstr+1
  3022  0B61  0008               	return
  3023  0B62                     __end_of_strstr:	
  3024  0B62                     __ptext1999:	
  3025 ;; =============== function _ReadTData ends ============
  3026                           
  3027                           
  3028 ;; *************** function _InteractServer *****************
  3029 ;; Defined at:
  3030 ;;		line 104 in file "F:\work\WYP\NBIoT1\Function.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;		None
  3033 ;; Auto vars:     Size  Location     Type
  3034 ;;  j               2   28[BANK0 ] int 
  3035 ;;  i               2   26[BANK0 ] int 
  3036 ;;  i               2   24[BANK0 ] int 
  3037 ;;  t               2   32[BANK0 ] struct .
  3038 ;;  txLen           2   30[BANK0 ] unsigned int 
  3039 ;;  i               1   37[BANK0 ] unsigned char 
  3040 ;;  k               1   36[BANK0 ] unsigned char 
  3041 ;;  j               1   35[BANK0 ] unsigned char 
  3042 ;;  addr            1   34[BANK0 ] unsigned char 
  3043 ;;  res             1   23[BANK0 ] unsigned char 
  3044 ;;  retry           1   22[BANK0 ] unsigned char 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  1    wreg      unsigned char 
  3047 ;; Registers used:
  3048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  3049 ;; Tracked objects:
  3050 ;;		On entry : 1F/0
  3051 ;;		On exit  : 1F/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3054 ;;      Params:         0       0       0       0       0       0       0       0
  3055 ;;      Locals:         0      16       0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0
  3057 ;;      Totals:         0      16       0       0       0       0       0       0
  3058 ;;Total ram usage:       16 bytes
  3059 ;; Hardware stack levels used:    1
  3060 ;; Hardware stack levels required when called:    6
  3061 ;; This function calls:
  3062 ;;		_Uart1_PutString
  3063 ;;		_Uart1_PutString_Hex
  3064 ;;		_Uart1_PutHex
  3065 ;;		_MakeTxTemperature
  3066 ;;		___lwdiv
  3067 ;;		_Uart1_PutChar
  3068 ;;		___lwmod
  3069 ;;		___bmul
  3070 ;;		_eeprom_read
  3071 ;;		_strcpy
  3072 ;;		_ATCommand_WaitData
  3073 ;;		___delay_20ms
  3074 ;; This function is called by:
  3075 ;;		_CallSend
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078  0B62                     _InteractServer:	
  3079                           
  3080                           ;Function.c: 106: unsigned char retry,i,j,k,addr;
  3081                           ;Function.c: 107: uint t;
  3082                           ;Function.c: 108: unsigned int txLen;
  3083                           ;Function.c: 109: retry=1;
  3084                           
  3085                           ; Regs used in _InteractServer: [wreg-btemp+0+pclath+cstack]
  3086  0B62  01B6               	clrf	InteractServer@retry
  3087  0B63  0AB6               	incf	InteractServer@retry,f
  3088                           
  3089                           ;Function.c: 110: res=ATACK_Null;
  3090  0B64  01B7               	clrf	InteractServer@res
  3091  0B65                     l33217:	
  3092                           ;Function.c: 111: while(retry!=0)
  3093                           
  3094  0B65  08B6               	movf	InteractServer@retry,f
  3095  0B66  1903               	btfsc	3,2
  3096  0B67  2D89               	goto	l33219
  3097                           
  3098                           ;Function.c: 112: {
  3099                           ;Function.c: 113: if(gFlags.bFirst)
  3100  0B68  1D66               	btfss	_gFlags,2
  3101  0B69  2BAC               	goto	l8569
  3102                           
  3103                           ;Function.c: 114: {
  3104                           ;Function.c: 115: Uart1_PutString("AT+NSOSD=2,32,\0");
  3105  0B6A  3093               	movlw	low (STR_8| (0+32768))
  3106  0B6B  00A1               	movwf	?_Uart1_PutString
  3107  0B6C  3090               	movlw	high (STR_8| (0+32768))
  3108  0B6D  00A2               	movwf	?_Uart1_PutString+1
  3109  0B6E  261A  3188         	fcall	_Uart1_PutString
  3110                           
  3111                           ;Function.c: 116: Uart1_PutString_Hex("@#pt#1#\0");
  3112  0B70  300F               	movlw	low (STR_9| (0+32768))
  3113  0B71  00A3               	movwf	?_Uart1_PutString_Hex
  3114  0B72  3091               	movlw	high (STR_9| (0+32768))
  3115  0B73  00A4               	movwf	?_Uart1_PutString_Hex+1
  3116  0B74  25AA  3188         	fcall	_Uart1_PutString_Hex
  3117                           
  3118                           ;Function.c: 117: Uart1_PutString_Hex(ICCID);
  3119  0B76  30A0               	movlw	_ICCID& (0+255)
  3120  0B77  00A3               	movwf	?_Uart1_PutString_Hex
  3121  0B78  01A4               	clrf	?_Uart1_PutString_Hex+1
  3122  0B79  25AA  3188         	fcall	_Uart1_PutString_Hex
  3123                           
  3124                           ;Function.c: 118: Uart1_PutHex('#');
  3125  0B7B  3023               	movlw	35
  3126  0B7C  258B  3188         	fcall	_Uart1_PutHex
  3127                           
  3128                           ;Function.c: 119: if(RomParams.bWinter==0)
  3129  0B7E  0020               	movlb	0	; select bank0
  3130  0B7F  08E8               	movf	_RomParams+1,f
  3131  0B80  1D03               	skipz
  3132  0B81  2B86               	goto	l32977
  3133                           
  3134                           ;Function.c: 120: {
  3135                           ;Function.c: 121: Uart1_PutString_Hex("60#\0");
  3136  0B82  3059               	movlw	low (STR_10| (0+32768))
  3137  0B83  00A3               	movwf	?_Uart1_PutString_Hex
  3138  0B84  3091               	movlw	high (STR_10| (0+32768))
  3139  0B85  2B89               	goto	L1
  3140  0B86                     l32977:	
  3141                           ;Function.c: 122: }
  3142                           
  3143                           
  3144                           ;Function.c: 123: else
  3145                           ;Function.c: 124: {
  3146                           ;Function.c: 125: Uart1_PutString_Hex("10#\0");
  3147  0B86  3054               	movlw	low (STR_11| (0+32768))
  3148  0B87  00A3               	movwf	?_Uart1_PutString_Hex
  3149  0B88  3091               	movlw	high (STR_11| (0+32768))
  3150  0B89                     L1:	
  3151  0B89  00A4               	movwf	?_Uart1_PutString_Hex+1
  3152  0B8A  25AA  3188         	fcall	_Uart1_PutString_Hex
  3153                           
  3154                           ;Function.c: 126: }
  3155                           ;Function.c: 127: MakeTxTemperature(CurTemp);
  3156  0B8C  0858               	movf	_CurTemp+1,w
  3157  0B8D  00A1               	movwf	?_MakeTxTemperature+1
  3158  0B8E  0857               	movf	_CurTemp,w
  3159  0B8F  00A0               	movwf	?_MakeTxTemperature
  3160  0B90  25BA  3188         	fcall	_MakeTxTemperature
  3161                           
  3162                           ;Function.c: 128: for(int i=0;i<4;i++)
  3163  0B92  01B8               	clrf	InteractServer@i_10580
  3164  0B93  01B9               	clrf	InteractServer@i_10580+1
  3165  0B94                     l32987:	
  3166                           
  3167                           ;Function.c: 129: {
  3168                           ;Function.c: 130: Uart1_PutHex(TxTemperature[i]);
  3169  0B94  0020               	movlb	0	; select bank0
  3170  0B95  0838               	movf	InteractServer@i_10580,w
  3171  0B96  3E4F               	addlw	_TxTemperature& (0+255)
  3172  0B97  0086               	movwf	6
  3173  0B98  0187               	clrf	7
  3174  0B99  0801               	movf	1,w
  3175  0B9A  258B  3188         	fcall	_Uart1_PutHex
  3176  0B9C  0020               	movlb	0	; select bank0
  3177  0B9D  0AB8               	incf	InteractServer@i_10580,f
  3178  0B9E  1903               	skipnz
  3179  0B9F  0AB9               	incf	InteractServer@i_10580+1,f
  3180  0BA0  0839               	movf	InteractServer@i_10580+1,w
  3181  0BA1  3A80               	xorlw	128
  3182  0BA2  00FE               	movwf	126
  3183  0BA3  3080               	movlw	128
  3184  0BA4  027E               	subwf	126,w
  3185  0BA5  1D03               	skipz
  3186  0BA6  2BA9               	goto	u7145
  3187  0BA7  3004               	movlw	4
  3188  0BA8  0238               	subwf	InteractServer@i_10580,w
  3189  0BA9                     u7145:	
  3190  0BA9  1803               	btfsc	3,0
  3191  0BAA  2D5B               	goto	l33195
  3192  0BAB  2B94               	goto	l32987
  3193  0BAC                     l8569:	
  3194                           
  3195                           ;Function.c: 133: else if(gFlags.bNotify)
  3196  0BAC  1C66               	btfss	_gFlags,0
  3197  0BAD  2BF0               	goto	l33017
  3198                           
  3199                           ;Function.c: 134: {
  3200                           ;Function.c: 135: Uart1_PutString("AT+NSOSD=2,32,\0");
  3201  0BAE  3093               	movlw	low (STR_8| (0+32768))
  3202  0BAF  00A1               	movwf	?_Uart1_PutString
  3203  0BB0  3090               	movlw	high (STR_8| (0+32768))
  3204  0BB1  00A2               	movwf	?_Uart1_PutString+1
  3205  0BB2  261A  3188         	fcall	_Uart1_PutString
  3206                           
  3207                           ;Function.c: 136: Uart1_PutString_Hex("@#pt#3#\0");
  3208  0BB4  3021               	movlw	low (STR_13| (0+32768))
  3209  0BB5  00A3               	movwf	?_Uart1_PutString_Hex
  3210  0BB6  3091               	movlw	high (STR_13| (0+32768))
  3211  0BB7  00A4               	movwf	?_Uart1_PutString_Hex+1
  3212  0BB8  25AA  3188         	fcall	_Uart1_PutString_Hex
  3213                           
  3214                           ;Function.c: 137: Uart1_PutString_Hex(ICCID);
  3215  0BBA  30A0               	movlw	_ICCID& (0+255)
  3216  0BBB  00A3               	movwf	?_Uart1_PutString_Hex
  3217  0BBC  01A4               	clrf	?_Uart1_PutString_Hex+1
  3218  0BBD  25AA  3188         	fcall	_Uart1_PutString_Hex
  3219                           
  3220                           ;Function.c: 138: Uart1_PutHex('#');
  3221  0BBF  3023               	movlw	35
  3222  0BC0  258B  3188         	fcall	_Uart1_PutHex
  3223                           
  3224                           ;Function.c: 139: if(RomParams.bWinter==0)
  3225  0BC2  0020               	movlb	0	; select bank0
  3226  0BC3  08E8               	movf	_RomParams+1,f
  3227  0BC4  1D03               	skipz
  3228  0BC5  2BCA               	goto	l33001
  3229                           
  3230                           ;Function.c: 140: {
  3231                           ;Function.c: 141: Uart1_PutString_Hex("60#\0");
  3232  0BC6  3059               	movlw	low (STR_10| (0+32768))
  3233  0BC7  00A3               	movwf	?_Uart1_PutString_Hex
  3234  0BC8  3091               	movlw	high (STR_10| (0+32768))
  3235  0BC9  2BCD               	goto	L2
  3236  0BCA                     l33001:	
  3237                           ;Function.c: 142: }
  3238                           
  3239                           
  3240                           ;Function.c: 143: else
  3241                           ;Function.c: 144: {
  3242                           ;Function.c: 145: Uart1_PutString_Hex("10#\0");
  3243  0BCA  3054               	movlw	low (STR_11| (0+32768))
  3244  0BCB  00A3               	movwf	?_Uart1_PutString_Hex
  3245  0BCC  3091               	movlw	high (STR_11| (0+32768))
  3246  0BCD                     L2:	
  3247  0BCD  00A4               	movwf	?_Uart1_PutString_Hex+1
  3248  0BCE  25AA  3188         	fcall	_Uart1_PutString_Hex
  3249                           
  3250                           ;Function.c: 146: }
  3251                           ;Function.c: 147: MakeTxTemperature(CurTemp);
  3252  0BD0  0858               	movf	_CurTemp+1,w
  3253  0BD1  00A1               	movwf	?_MakeTxTemperature+1
  3254  0BD2  0857               	movf	_CurTemp,w
  3255  0BD3  00A0               	movwf	?_MakeTxTemperature
  3256  0BD4  25BA  3188         	fcall	_MakeTxTemperature
  3257                           
  3258                           ;Function.c: 148: for(int i=0;i<4;i++)
  3259  0BD6  01BA               	clrf	InteractServer@i_10585
  3260  0BD7  01BB               	clrf	InteractServer@i_10585+1
  3261  0BD8                     l33011:	
  3262                           
  3263                           ;Function.c: 149: {
  3264                           ;Function.c: 150: Uart1_PutHex(TxTemperature[i]);
  3265  0BD8  0020               	movlb	0	; select bank0
  3266  0BD9  083A               	movf	InteractServer@i_10585,w
  3267  0BDA  3E4F               	addlw	_TxTemperature& (0+255)
  3268  0BDB  0086               	movwf	6
  3269  0BDC  0187               	clrf	7
  3270  0BDD  0801               	movf	1,w
  3271  0BDE  258B  3188         	fcall	_Uart1_PutHex
  3272  0BE0  0020               	movlb	0	; select bank0
  3273  0BE1  0ABA               	incf	InteractServer@i_10585,f
  3274  0BE2  1903               	skipnz
  3275  0BE3  0ABB               	incf	InteractServer@i_10585+1,f
  3276  0BE4  083B               	movf	InteractServer@i_10585+1,w
  3277  0BE5  3A80               	xorlw	128
  3278  0BE6  00FE               	movwf	126
  3279  0BE7  3080               	movlw	128
  3280  0BE8  027E               	subwf	126,w
  3281  0BE9  1D03               	skipz
  3282  0BEA  2BED               	goto	u7175
  3283  0BEB  3004               	movlw	4
  3284  0BEC  023A               	subwf	InteractServer@i_10585,w
  3285  0BED                     u7175:	
  3286  0BED  1803               	btfsc	3,0
  3287  0BEE  2D5B               	goto	l33195
  3288  0BEF  2BD8               	goto	l33011
  3289  0BF0                     l33017:	
  3290                           
  3291                           ;Function.c: 153: else
  3292                           ;Function.c: 154: {
  3293                           ;Function.c: 155: if(TxErrDataIndex!=0xff)
  3294  0BF0  0869               	movf	_TxErrDataIndex,w
  3295  0BF1  3AFF               	xorlw	255
  3296  0BF2  1903               	skipnz
  3297  0BF3  2C59               	goto	l33041
  3298                           
  3299                           ;Function.c: 156: {
  3300                           ;Function.c: 157: if(gFlags.bErrFull)
  3301  0BF4  1DE6               	btfss	_gFlags,3
  3302  0BF5  2BFA               	goto	l33023
  3303                           
  3304                           ;Function.c: 158: {
  3305                           ;Function.c: 159: Uart1_PutString("AT+NSOSD=2,687,\0");
  3306  0BF6  3082               	movlw	low (STR_16| (0+32768))
  3307  0BF7  00A1               	movwf	?_Uart1_PutString
  3308  0BF8  3090               	movlw	high (STR_16| (0+32768))
  3309  0BF9  2C5C               	goto	L3
  3310  0BFA                     l33023:	
  3311                           ;Function.c: 160: }
  3312                           
  3313                           
  3314                           ;Function.c: 161: else
  3315                           ;Function.c: 162: {
  3316                           ;Function.c: 163: Uart1_PutString("AT+NSOSD=2,\0");
  3317  0BFA  30B3               	movlw	low (STR_17| (0+32768))
  3318  0BFB  00A1               	movwf	?_Uart1_PutString
  3319  0BFC  3090               	movlw	high (STR_17| (0+32768))
  3320  0BFD  00A2               	movwf	?_Uart1_PutString+1
  3321  0BFE  261A  3188         	fcall	_Uart1_PutString
  3322                           
  3323                           ;Function.c: 164: txLen=28;
  3324  0C00  301C               	movlw	28
  3325  0C01  00BE               	movwf	InteractServer@txLen
  3326  0C02  01BF               	clrf	InteractServer@txLen+1
  3327                           
  3328                           ;Function.c: 165: for(i=0;i<TxErrDataIndex;i++)
  3329  0C03  01C5               	clrf	InteractServer@i
  3330  0C04                     l33033:	
  3331  0C04  0869               	movf	_TxErrDataIndex,w
  3332  0C05  0245               	subwf	InteractServer@i,w
  3333  0C06  1803               	btfsc	3,0
  3334  0C07  2C0E               	goto	l33035
  3335                           
  3336                           ;Function.c: 166: {
  3337                           ;Function.c: 167: txLen+=60;
  3338  0C08  303C               	movlw	60
  3339  0C09  07BE               	addwf	InteractServer@txLen,f
  3340  0C0A  1803               	skipnc
  3341  0C0B  0ABF               	incf	InteractServer@txLen+1,f
  3342  0C0C  0AC5               	incf	InteractServer@i,f
  3343  0C0D  2C04               	goto	l33033
  3344  0C0E                     l33035:	
  3345                           
  3346                           ;Function.c: 168: }
  3347                           ;Function.c: 169: txLen+=59;
  3348  0C0E  303B               	movlw	59
  3349  0C0F  07BE               	addwf	InteractServer@txLen,f
  3350  0C10  1803               	skipnc
  3351  0C11  0ABF               	incf	InteractServer@txLen+1,f
  3352                           
  3353                           ;Function.c: 170: if(txLen/100!=0)
  3354  0C12  3064               	movlw	100
  3355  0C13  00A0               	movwf	?___lwdiv
  3356  0C14  01A1               	clrf	?___lwdiv+1
  3357  0C15  083F               	movf	InteractServer@txLen+1,w
  3358  0C16  00A3               	movwf	?___lwdiv+3
  3359  0C17  083E               	movf	InteractServer@txLen,w
  3360  0C18  00A2               	movwf	?___lwdiv+2
  3361  0C19  264D  3188         	fcall	___lwdiv
  3362  0C1B  0821               	movf	?___lwdiv+1,w
  3363  0C1C  0420               	iorwf	?___lwdiv,w
  3364                           
  3365                           ;Function.c: 171: Uart1_PutChar('0'+txLen/100);
  3366  0C1D  3064               	movlw	100
  3367  0C1E  1903               	skipnz
  3368  0C1F  2C2D               	goto	L5
  3369  0C20  00A0               	movwf	?___lwdiv
  3370  0C21  01A1               	clrf	?___lwdiv+1
  3371  0C22  083F               	movf	InteractServer@txLen+1,w
  3372  0C23  00A3               	movwf	?___lwdiv+3
  3373  0C24  083E               	movf	InteractServer@txLen,w
  3374  0C25  00A2               	movwf	?___lwdiv+2
  3375  0C26  264D  3188         	fcall	___lwdiv
  3376  0C28  0820               	movf	?___lwdiv,w
  3377  0C29  3E30               	addlw	48
  3378  0C2A  2610  3188         	fcall	_Uart1_PutChar
  3379                           
  3380                           ;Function.c: 172: txLen=txLen%100;
  3381  0C2C  3064               	movlw	100
  3382  0C2D                     L5:	
  3383  0C2D  0020               	movlb	0	; select bank0
  3384  0C2E  00A0               	movwf	?___lwmod
  3385  0C2F  01A1               	clrf	?___lwmod+1
  3386  0C30  083F               	movf	InteractServer@txLen+1,w
  3387  0C31  00A3               	movwf	?___lwmod+3
  3388  0C32  083E               	movf	InteractServer@txLen,w
  3389  0C33  00A2               	movwf	?___lwmod+2
  3390  0C34  2694  3188         	fcall	___lwmod
  3391  0C36  0821               	movf	?___lwmod+1,w
  3392  0C37  00BF               	movwf	InteractServer@txLen+1
  3393  0C38  0820               	movf	?___lwmod,w
  3394  0C39  00BE               	movwf	InteractServer@txLen
  3395                           
  3396                           ;Function.c: 173: Uart1_PutChar('0'+txLen/10);
  3397  0C3A  300A               	movlw	10
  3398  0C3B  00A0               	movwf	?___lwdiv
  3399  0C3C  01A1               	clrf	?___lwdiv+1
  3400  0C3D  083F               	movf	InteractServer@txLen+1,w
  3401  0C3E  00A3               	movwf	?___lwdiv+3
  3402  0C3F  083E               	movf	InteractServer@txLen,w
  3403  0C40  00A2               	movwf	?___lwdiv+2
  3404  0C41  264D  3188         	fcall	___lwdiv
  3405  0C43  0820               	movf	?___lwdiv,w
  3406  0C44  3E30               	addlw	48
  3407  0C45  2610  3188         	fcall	_Uart1_PutChar
  3408                           
  3409                           ;Function.c: 174: Uart1_PutChar('0'+txLen%10);
  3410  0C47  300A               	movlw	10
  3411  0C48  0020               	movlb	0	; select bank0
  3412  0C49  00A0               	movwf	?___lwmod
  3413  0C4A  01A1               	clrf	?___lwmod+1
  3414  0C4B  083F               	movf	InteractServer@txLen+1,w
  3415  0C4C  00A3               	movwf	?___lwmod+3
  3416  0C4D  083E               	movf	InteractServer@txLen,w
  3417  0C4E  00A2               	movwf	?___lwmod+2
  3418  0C4F  2694  3188         	fcall	___lwmod
  3419  0C51  0820               	movf	?___lwmod,w
  3420  0C52  3E30               	addlw	48
  3421  0C53  2610  3188         	fcall	_Uart1_PutChar
  3422                           
  3423                           ;Function.c: 175: Uart1_PutChar(',');
  3424  0C55  302C               	movlw	44
  3425  0C56  2610  3188         	fcall	_Uart1_PutChar
  3426  0C58  2C5F               	goto	l8588
  3427  0C59                     l33041:	
  3428                           
  3429                           ;Function.c: 178: else
  3430                           ;Function.c: 179: {
  3431                           ;Function.c: 180: Uart1_PutString("AT+NSOSD=2,87,\0");
  3432  0C59  30A3               	movlw	low (STR_18| (0+32768))
  3433  0C5A  00A1               	movwf	?_Uart1_PutString
  3434  0C5B  3090               	movlw	high (STR_18| (0+32768))
  3435  0C5C                     L3:	
  3436  0C5C  00A2               	movwf	?_Uart1_PutString+1
  3437  0C5D  261A  3188         	fcall	_Uart1_PutString
  3438  0C5F                     l8588:	
  3439                           
  3440                           ;Function.c: 181: }
  3441                           ;Function.c: 182: Uart1_PutString_Hex("@#pt#2#\0");
  3442  0C5F  3018               	movlw	low (STR_19| (0+32768))
  3443  0C60  0020               	movlb	0	; select bank0
  3444  0C61  00A3               	movwf	?_Uart1_PutString_Hex
  3445  0C62  3091               	movlw	high (STR_19| (0+32768))
  3446  0C63  00A4               	movwf	?_Uart1_PutString_Hex+1
  3447  0C64  25AA  3188         	fcall	_Uart1_PutString_Hex
  3448                           
  3449                           ;Function.c: 183: Uart1_PutString_Hex(ICCID);
  3450  0C66  30A0               	movlw	_ICCID& (0+255)
  3451  0C67  00A3               	movwf	?_Uart1_PutString_Hex
  3452  0C68  01A4               	clrf	?_Uart1_PutString_Hex+1
  3453  0C69  25AA  3188         	fcall	_Uart1_PutString_Hex
  3454                           
  3455                           ;Function.c: 184: Uart1_PutHex('#');
  3456  0C6B  3023               	movlw	35
  3457  0C6C  258B  3188         	fcall	_Uart1_PutHex
  3458                           
  3459                           ;Function.c: 185: if(RomParams.bWinter==0)
  3460  0C6E  0020               	movlb	0	; select bank0
  3461  0C6F  08E8               	movf	_RomParams+1,f
  3462  0C70  1D03               	skipz
  3463  0C71  2C76               	goto	l33049
  3464                           
  3465                           ;Function.c: 186: {
  3466                           ;Function.c: 187: Uart1_PutString_Hex("60#\0");
  3467  0C72  3059               	movlw	low (STR_10| (0+32768))
  3468  0C73  00A3               	movwf	?_Uart1_PutString_Hex
  3469  0C74  3091               	movlw	high (STR_10| (0+32768))
  3470  0C75  2C79               	goto	L4
  3471  0C76                     l33049:	
  3472                           ;Function.c: 188: }
  3473                           
  3474                           
  3475                           ;Function.c: 189: else
  3476                           ;Function.c: 190: {
  3477                           ;Function.c: 191: Uart1_PutString_Hex("10#\0");
  3478  0C76  3054               	movlw	low (STR_11| (0+32768))
  3479  0C77  00A3               	movwf	?_Uart1_PutString_Hex
  3480  0C78  3091               	movlw	high (STR_11| (0+32768))
  3481  0C79                     L4:	
  3482  0C79  00A4               	movwf	?_Uart1_PutString_Hex+1
  3483  0C7A  25AA  3188         	fcall	_Uart1_PutString_Hex
  3484                           
  3485                           ;Function.c: 192: }
  3486                           ;Function.c: 193: if(TxErrDataIndex!=0xff)
  3487  0C7C  0869               	movf	_TxErrDataIndex,w
  3488  0C7D  3AFF               	xorlw	255
  3489  0C7E  1903               	skipnz
  3490  0C7F  2D27               	goto	l33167
  3491                           
  3492                           ;Function.c: 194: {
  3493                           ;Function.c: 195: if(gFlags.bErrFull)
  3494  0C80  1DE6               	btfss	_gFlags,3
  3495  0C81  2CF1               	goto	l33131
  3496                           
  3497                           ;Function.c: 196: {
  3498                           ;Function.c: 197: for(i=(TxErrDataIndex-1);i<10;i--)
  3499  0C82  0869               	movf	_TxErrDataIndex,w
  3500  0C83  3EFF               	addlw	255
  3501  0C84  00C5               	movwf	InteractServer@i
  3502  0C85                     l33057:	
  3503  0C85  300A               	movlw	10
  3504  0C86  0245               	subwf	InteractServer@i,w
  3505  0C87  1803               	btfsc	3,0
  3506  0C88  2CBA               	goto	l33095
  3507                           
  3508                           ;Function.c: 198: {
  3509                           ;Function.c: 199: for(j=0;j<12;j++)
  3510  0C89  01C3               	clrf	InteractServer@j
  3511  0C8A                     l33067:	
  3512                           
  3513                           ;Function.c: 200: {
  3514                           ;Function.c: 201: addr=(i)*12;
  3515  0C8A  300C               	movlw	12
  3516  0C8B  00A0               	movwf	?___bmul
  3517  0C8C  0845               	movf	InteractServer@i,w
  3518  0C8D  262B  3188         	fcall	___bmul
  3519  0C8F  00C2               	movwf	InteractServer@addr
  3520                           
  3521                           ;Function.c: 202: addr+=16;
  3522  0C90  3010               	movlw	16
  3523  0C91  07C2               	addwf	InteractServer@addr,f
  3524                           
  3525                           ;Function.c: 203: addr+=(j<<1);
  3526  0C92  3543               	lslf	InteractServer@j,w
  3527  0C93  07C2               	addwf	InteractServer@addr,f
  3528                           
  3529                           ;Function.c: 204: t.u8s[0]=eeprom_read(addr);
  3530  0C94  0842               	movf	InteractServer@addr,w
  3531  0C95  25F9  3188         	fcall	_eeprom_read
  3532  0C97  0020               	movlb	0	; select bank0
  3533  0C98  00C0               	movwf	InteractServer@t
  3534                           
  3535                           ;Function.c: 205: t.u8s[1]=eeprom_read(addr+1);
  3536  0C99  0A42               	incf	InteractServer@addr,w
  3537  0C9A  25F9  3188         	fcall	_eeprom_read
  3538  0C9C  0020               	movlb	0	; select bank0
  3539  0C9D  00C1               	movwf	InteractServer@t+1
  3540                           
  3541                           ;Function.c: 206: MakeTxTemperature(t);
  3542  0C9E  00A1               	movwf	?_MakeTxTemperature+1
  3543  0C9F  0840               	movf	InteractServer@t,w
  3544  0CA0  00A0               	movwf	?_MakeTxTemperature
  3545  0CA1  25BA  3188         	fcall	_MakeTxTemperature
  3546                           
  3547                           ;Function.c: 207: for(k=0;k<4;k++)
  3548  0CA3  01C4               	clrf	InteractServer@k
  3549  0CA4                     l33079:	
  3550                           
  3551                           ;Function.c: 208: {
  3552                           ;Function.c: 209: Uart1_PutHex(TxTemperature[k]);
  3553  0CA4  0844               	movf	InteractServer@k,w
  3554  0CA5  3E4F               	addlw	_TxTemperature& (0+255)
  3555  0CA6  0086               	movwf	6
  3556  0CA7  0187               	clrf	7
  3557  0CA8  0801               	movf	1,w
  3558  0CA9  258B  3188         	fcall	_Uart1_PutHex
  3559  0CAB  0020               	movlb	0	; select bank0
  3560  0CAC  0AC4               	incf	InteractServer@k,f
  3561  0CAD  3004               	movlw	4
  3562  0CAE  0244               	subwf	InteractServer@k,w
  3563  0CAF  1C03               	skipc
  3564  0CB0  2CA4               	goto	l33079
  3565                           
  3566                           ;Function.c: 210: }
  3567                           ;Function.c: 211: Uart1_PutHex('|');
  3568  0CB1  307C               	movlw	124
  3569  0CB2  258B  3188         	fcall	_Uart1_PutHex
  3570  0CB4  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3571  0CB6  1C03               	skipc
  3572  0CB7  2C8A               	goto	l33067
  3573  0CB8  03C5               	decf	InteractServer@i,f
  3574  0CB9  2C85               	goto	l33057
  3575  0CBA                     l33095:	
  3576                           
  3577                           ;Function.c: 212: }
  3578                           ;Function.c: 213: }
  3579                           ;Function.c: 214: for(i=9;i>TxErrDataIndex;i--)
  3580  0CBA  3009               	movlw	9
  3581  0CBB  00C5               	movwf	InteractServer@i
  3582  0CBC                     l33129:	
  3583  0CBC  0845               	movf	InteractServer@i,w
  3584  0CBD  0269               	subwf	_TxErrDataIndex,w
  3585  0CBE  1803               	btfsc	3,0
  3586  0CBF  2D27               	goto	l33167
  3587                           
  3588                           ;Function.c: 215: {
  3589                           ;Function.c: 216: for(j=0;j<12;j++)
  3590  0CC0  01C3               	clrf	InteractServer@j
  3591  0CC1                     l33103:	
  3592                           
  3593                           ;Function.c: 217: {
  3594                           ;Function.c: 218: addr=(i)*12;
  3595  0CC1  300C               	movlw	12
  3596  0CC2  00A0               	movwf	?___bmul
  3597  0CC3  0845               	movf	InteractServer@i,w
  3598  0CC4  262B  3188         	fcall	___bmul
  3599  0CC6  00C2               	movwf	InteractServer@addr
  3600                           
  3601                           ;Function.c: 219: addr+=16;
  3602  0CC7  3010               	movlw	16
  3603  0CC8  07C2               	addwf	InteractServer@addr,f
  3604                           
  3605                           ;Function.c: 220: addr+=(j<<1);
  3606  0CC9  3543               	lslf	InteractServer@j,w
  3607  0CCA  07C2               	addwf	InteractServer@addr,f
  3608                           
  3609                           ;Function.c: 221: t.u8s[0]=eeprom_read(addr);
  3610  0CCB  0842               	movf	InteractServer@addr,w
  3611  0CCC  25F9  3188         	fcall	_eeprom_read
  3612  0CCE  0020               	movlb	0	; select bank0
  3613  0CCF  00C0               	movwf	InteractServer@t
  3614                           
  3615                           ;Function.c: 222: t.u8s[1]=eeprom_read(addr+1);
  3616  0CD0  0A42               	incf	InteractServer@addr,w
  3617  0CD1  25F9  3188         	fcall	_eeprom_read
  3618  0CD3  0020               	movlb	0	; select bank0
  3619  0CD4  00C1               	movwf	InteractServer@t+1
  3620                           
  3621                           ;Function.c: 223: MakeTxTemperature(t);
  3622  0CD5  00A1               	movwf	?_MakeTxTemperature+1
  3623  0CD6  0840               	movf	InteractServer@t,w
  3624  0CD7  00A0               	movwf	?_MakeTxTemperature
  3625  0CD8  25BA  3188         	fcall	_MakeTxTemperature
  3626                           
  3627                           ;Function.c: 224: for(k=0;k<4;k++)
  3628  0CDA  01C4               	clrf	InteractServer@k
  3629  0CDB                     l33115:	
  3630                           
  3631                           ;Function.c: 225: {
  3632                           ;Function.c: 226: Uart1_PutHex(TxTemperature[k]);
  3633  0CDB  0844               	movf	InteractServer@k,w
  3634  0CDC  3E4F               	addlw	_TxTemperature& (0+255)
  3635  0CDD  0086               	movwf	6
  3636  0CDE  0187               	clrf	7
  3637  0CDF  0801               	movf	1,w
  3638  0CE0  258B  3188         	fcall	_Uart1_PutHex
  3639  0CE2  0020               	movlb	0	; select bank0
  3640  0CE3  0AC4               	incf	InteractServer@k,f
  3641  0CE4  3004               	movlw	4
  3642  0CE5  0244               	subwf	InteractServer@k,w
  3643  0CE6  1C03               	skipc
  3644  0CE7  2CDB               	goto	l33115
  3645                           
  3646                           ;Function.c: 227: }
  3647                           ;Function.c: 228: Uart1_PutHex('|');
  3648  0CE8  307C               	movlw	124
  3649  0CE9  258B  3188         	fcall	_Uart1_PutHex
  3650  0CEB  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3651  0CED  1C03               	skipc
  3652  0CEE  2CC1               	goto	l33103
  3653  0CEF  03C5               	decf	InteractServer@i,f
  3654  0CF0  2CBC               	goto	l33129
  3655  0CF1                     l33131:	
  3656                           
  3657                           ;Function.c: 232: else
  3658                           ;Function.c: 233: {
  3659                           ;Function.c: 234: for(i=0;i<TxErrDataIndex;i++)
  3660  0CF1  01C5               	clrf	InteractServer@i
  3661  0CF2                     l33165:	
  3662  0CF2  0869               	movf	_TxErrDataIndex,w
  3663  0CF3  0245               	subwf	InteractServer@i,w
  3664  0CF4  1803               	btfsc	3,0
  3665  0CF5  2D27               	goto	l33167
  3666                           
  3667                           ;Function.c: 235: {
  3668                           ;Function.c: 236: for(j=0;j<12;j++)
  3669  0CF6  01C3               	clrf	InteractServer@j
  3670  0CF7                     l33139:	
  3671                           
  3672                           ;Function.c: 237: {
  3673                           ;Function.c: 238: addr=i*12;
  3674  0CF7  300C               	movlw	12
  3675  0CF8  00A0               	movwf	?___bmul
  3676  0CF9  0845               	movf	InteractServer@i,w
  3677  0CFA  262B  3188         	fcall	___bmul
  3678  0CFC  00C2               	movwf	InteractServer@addr
  3679                           
  3680                           ;Function.c: 239: addr+=16;
  3681  0CFD  3010               	movlw	16
  3682  0CFE  07C2               	addwf	InteractServer@addr,f
  3683                           
  3684                           ;Function.c: 240: addr+=(j<<1);
  3685  0CFF  3543               	lslf	InteractServer@j,w
  3686  0D00  07C2               	addwf	InteractServer@addr,f
  3687                           
  3688                           ;Function.c: 241: t.u8s[0]=eeprom_read(addr);
  3689  0D01  0842               	movf	InteractServer@addr,w
  3690  0D02  25F9  3188         	fcall	_eeprom_read
  3691  0D04  0020               	movlb	0	; select bank0
  3692  0D05  00C0               	movwf	InteractServer@t
  3693                           
  3694                           ;Function.c: 242: t.u8s[1]=eeprom_read(addr+1);
  3695  0D06  0A42               	incf	InteractServer@addr,w
  3696  0D07  25F9  3188         	fcall	_eeprom_read
  3697  0D09  0020               	movlb	0	; select bank0
  3698  0D0A  00C1               	movwf	InteractServer@t+1
  3699                           
  3700                           ;Function.c: 243: MakeTxTemperature(t);
  3701  0D0B  00A1               	movwf	?_MakeTxTemperature+1
  3702  0D0C  0840               	movf	InteractServer@t,w
  3703  0D0D  00A0               	movwf	?_MakeTxTemperature
  3704  0D0E  25BA  3188         	fcall	_MakeTxTemperature
  3705                           
  3706                           ;Function.c: 244: for(k=0;k<4;k++)
  3707  0D10  01C4               	clrf	InteractServer@k
  3708  0D11                     l33151:	
  3709                           
  3710                           ;Function.c: 245: {
  3711                           ;Function.c: 246: Uart1_PutHex(TxTemperature[k]);
  3712  0D11  0844               	movf	InteractServer@k,w
  3713  0D12  3E4F               	addlw	_TxTemperature& (0+255)
  3714  0D13  0086               	movwf	6
  3715  0D14  0187               	clrf	7
  3716  0D15  0801               	movf	1,w
  3717  0D16  258B  3188         	fcall	_Uart1_PutHex
  3718  0D18  0020               	movlb	0	; select bank0
  3719  0D19  0AC4               	incf	InteractServer@k,f
  3720  0D1A  3004               	movlw	4
  3721  0D1B  0244               	subwf	InteractServer@k,w
  3722  0D1C  1C03               	skipc
  3723  0D1D  2D11               	goto	l33151
  3724                           
  3725                           ;Function.c: 247: }
  3726                           ;Function.c: 248: Uart1_PutHex('|');
  3727  0D1E  307C               	movlw	124
  3728  0D1F  258B  3188         	fcall	_Uart1_PutHex
  3729  0D21  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3730  0D23  1C03               	skipc
  3731  0D24  2CF7               	goto	l33139
  3732  0D25  0AC5               	incf	InteractServer@i,f
  3733  0D26  2CF2               	goto	l33165
  3734  0D27                     l33167:	
  3735                           
  3736                           ;Function.c: 249: }
  3737                           ;Function.c: 250: }
  3738                           ;Function.c: 251: }
  3739                           ;Function.c: 252: }
  3740                           ;Function.c: 253: for(i=0;i<12;i++)
  3741  0D27  01C5               	clrf	InteractServer@i
  3742  0D28                     l33169:	
  3743  0D28  300C               	movlw	12
  3744  0D29  0245               	subwf	InteractServer@i,w
  3745  0D2A  1803               	btfsc	3,0
  3746  0D2B  2D5B               	goto	l33195
  3747                           
  3748                           ;Function.c: 254: {
  3749                           ;Function.c: 255: MakeTxTemperature(TList.T[i]);
  3750  0D2C  3545               	lslf	InteractServer@i,w
  3751  0D2D  3E20               	addlw	_TList& (0+255)
  3752  0D2E  0086               	movwf	6
  3753  0D2F  3001               	movlw	1	; select bank2/3
  3754  0D30  0087               	movwf	7
  3755  0D31  3F40               	moviw [0]fsr1
  3756  0D32  00A0               	movwf	?_MakeTxTemperature
  3757  0D33  3F41               	moviw [1]fsr1
  3758  0D34  00A1               	movwf	?_MakeTxTemperature+1
  3759  0D35  25BA  3188         	fcall	_MakeTxTemperature
  3760                           
  3761                           ;Function.c: 256: for(int j=0;j<4;j++)
  3762  0D37  01BC               	clrf	InteractServer@j_10592
  3763  0D38  01BD               	clrf	InteractServer@j_10592+1
  3764  0D39                     l33181:	
  3765                           
  3766                           ;Function.c: 257: {
  3767                           ;Function.c: 258: Uart1_PutHex(TxTemperature[j]);
  3768  0D39  0020               	movlb	0	; select bank0
  3769  0D3A  083C               	movf	InteractServer@j_10592,w
  3770  0D3B  3E4F               	addlw	_TxTemperature& (0+255)
  3771  0D3C  0086               	movwf	6
  3772  0D3D  0187               	clrf	7
  3773  0D3E  0801               	movf	1,w
  3774  0D3F  258B  3188         	fcall	_Uart1_PutHex
  3775  0D41  0020               	movlb	0	; select bank0
  3776  0D42  0ABC               	incf	InteractServer@j_10592,f
  3777  0D43  1903               	skipnz
  3778  0D44  0ABD               	incf	InteractServer@j_10592+1,f
  3779  0D45  083D               	movf	InteractServer@j_10592+1,w
  3780  0D46  3A80               	xorlw	128
  3781  0D47  00FE               	movwf	126
  3782  0D48  3080               	movlw	128
  3783  0D49  027E               	subwf	126,w
  3784  0D4A  1D03               	skipz
  3785  0D4B  2D4E               	goto	u7355
  3786  0D4C  3004               	movlw	4
  3787  0D4D  023C               	subwf	InteractServer@j_10592,w
  3788  0D4E                     u7355:	
  3789  0D4E  1C03               	skipc
  3790  0D4F  2D39               	goto	l33181
  3791                           
  3792                           ;Function.c: 259: }
  3793                           ;Function.c: 260: if(i!=(12-1))
  3794  0D50  0020               	movlb	0	; select bank0
  3795  0D51  0845               	movf	InteractServer@i,w
  3796  0D52  3A0B               	xorlw	11
  3797  0D53  1903               	skipnz
  3798  0D54  2D58               	goto	l33191
  3799                           
  3800                           ;Function.c: 261: {
  3801                           ;Function.c: 262: Uart1_PutHex('|');
  3802  0D55  307C               	movlw	124
  3803  0D56  258B  3188         	fcall	_Uart1_PutHex
  3804  0D58                     l33191:	
  3805  0D58  0020               	movlb	0	; select bank0
  3806  0D59  0AC5               	incf	InteractServer@i,f
  3807  0D5A  2D28               	goto	l33169
  3808  0D5B                     l33195:	
  3809                           
  3810                           ;Function.c: 263: }
  3811                           ;Function.c: 264: }
  3812                           ;Function.c: 265: }
  3813                           ;Function.c: 266: Uart1_PutHex('#');
  3814  0D5B  3023               	movlw	35
  3815  0D5C  258B  3188         	fcall	_Uart1_PutHex
  3816                           
  3817                           ;Function.c: 267: Uart1_PutHex('@');
  3818  0D5E  3040               	movlw	64
  3819  0D5F  258B  3188         	fcall	_Uart1_PutHex
  3820                           
  3821                           ;Function.c: 268: ATCommand_WaitACKTimes=400;
  3822  0D61  3090               	movlw	144
  3823  0D62  0020               	movlb	0	; select bank0
  3824  0D63  00D5               	movwf	_ATCommand_WaitACKTimes
  3825  0D64  3001               	movlw	1
  3826  0D65  00D6               	movwf	_ATCommand_WaitACKTimes+1
  3827                           
  3828                           ;Function.c: 269: strcpy(ATCommand_OkString,"NSONMI");
  3829  0D66  303B               	movlw	low (STR_22| (0+32768))
  3830  0D67  00A0               	movwf	?_strcpy
  3831  0D68  3091               	movlw	high (STR_22| (0+32768))
  3832  0D69  00A1               	movwf	?_strcpy+1
  3833  0D6A  30C4               	movlw	_ATCommand_OkString& (0+255)
  3834  0D6B  2637  3188         	fcall	_strcpy
  3835                           
  3836                           ;Function.c: 270: strcpy(ATCommand_ErrString,"ERROR");
  3837  0D6D  304E               	movlw	low (STR_23| (0+32768))
  3838  0D6E  00A0               	movwf	?_strcpy
  3839  0D6F  3091               	movlw	high (STR_23| (0+32768))
  3840  0D70  00A1               	movwf	?_strcpy+1
  3841  0D71  30B5               	movlw	_ATCommand_ErrString& (0+255)
  3842  0D72  2637  3188         	fcall	_strcpy
  3843                           
  3844                           ;Function.c: 271: ATCommand_Clear='+';
  3845  0D74  302B               	movlw	43
  3846  0D75  00F9               	movwf	_ATCommand_Clear
  3847                           
  3848                           ;Function.c: 272: Uart1_PutString("\r\0");
  3849  0D76  306A               	movlw	low (STR_24| (0+32768))
  3850  0D77  00A1               	movwf	?_Uart1_PutString
  3851  0D78  3091               	movlw	high (STR_24| (0+32768))
  3852  0D79  00A2               	movwf	?_Uart1_PutString+1
  3853  0D7A  261A               	fcall	_Uart1_PutString
  3854                           
  3855                           ;Function.c: 273: res=ATCommand_WaitData();
  3856  0D7B  3184  24DF  3188   	fcall	_ATCommand_WaitData
  3857  0D7E  00B7               	movwf	InteractServer@res
  3858                           
  3859                           ;Function.c: 274: if(res!=ATACK_Null)
  3860  0D7F  0837               	movf	InteractServer@res,w
  3861  0D80  1D03               	skipz
  3862  0D81  2D89               	goto	l33219
  3863                           
  3864                           ;Function.c: 276: __delay_20ms(100);;
  3865  0D82  3064               	movlw	100
  3866  0D83  00A0               	movwf	?___delay_20ms
  3867  0D84  01A1               	clrf	?___delay_20ms+1
  3868  0D85  2313  3188         	fcall	___delay_20ms
  3869                           
  3870                           ;Function.c: 277: retry--;
  3871  0D87  03B6               	decf	InteractServer@retry,f
  3872  0D88  2B65               	goto	l33217
  3873  0D89                     l33219:	
  3874                           
  3875                           ;Function.c: 278: }
  3876                           ;Function.c: 279: return res;
  3877  0D89  0837               	movf	InteractServer@res,w
  3878  0D8A  0008               	return
  3879  0D8B                     __end_of_InteractServer:	
  3880  0D8B                     __ptext2022:	
  3881 ;; =============== function _strstr ends ============
  3882                           
  3883                           
  3884 ;; *************** function _Uart1_PutHex *****************
  3885 ;; Defined at:
  3886 ;;		line 88 in file "F:\work\WYP\NBIoT1\Uart.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  c               1    wreg     unsigned char 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;  c               1    1[BANK0 ] unsigned char 
  3891 ;;  b               1    2[BANK0 ] unsigned char 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;		None               void
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, pclath, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 1F/3
  3899 ;;		Unchanged: FFFE0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3901 ;;      Params:         0       0       0       0       0       0       0       0
  3902 ;;      Locals:         0       2       0       0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0
  3904 ;;      Totals:         0       2       0       0       0       0       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:    4
  3908 ;; This function calls:
  3909 ;;		_Uart1_PutChar
  3910 ;; This function is called by:
  3911 ;;		_InteractServer
  3912 ;;		_Uart1_PutString_Hex
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915  0D8B                     _Uart1_PutHex:	
  3916                           
  3917                           ; Regs used in _Uart1_PutHex: [wreg+status,2+status,0+pclath+cstack]
  3918                           ;Uart1_PutHex@c stored from wreg
  3919  0D8B  0020               	movlb	0	; select bank0
  3920  0D8C  00A1               	movwf	Uart1_PutHex@c
  3921                           
  3922                           ;Uart.c: 89: unsigned char b;
  3923                           ;Uart.c: 90: b=(c>>4);
  3924  0D8D  0E21               	swapf	Uart1_PutHex@c,w
  3925  0D8E  390F               	andlw	15
  3926  0D8F  00A2               	movwf	Uart1_PutHex@b
  3927                           
  3928                           ;Uart.c: 91: if (b>9)
  3929  0D90  300A               	movlw	10
  3930  0D91  0222               	subwf	Uart1_PutHex@b,w
  3931  0D92  1C03               	skipc
  3932  0D93  2D96               	goto	l32443
  3933                           
  3934                           ;Uart.c: 92: b += 'A'-10;
  3935  0D94  3037               	movlw	55
  3936  0D95  2D97               	goto	L6
  3937  0D96                     l32443:	
  3938                           
  3939                           ;Uart.c: 93: else
  3940                           ;Uart.c: 94: b += '0';
  3941  0D96  3030               	movlw	48
  3942  0D97                     L6:	
  3943  0D97  07A2               	addwf	Uart1_PutHex@b,f
  3944                           
  3945                           ;Uart.c: 95: Uart1_PutChar(b);
  3946  0D98  0822               	movf	Uart1_PutHex@b,w
  3947  0D99  2610  3188         	fcall	_Uart1_PutChar
  3948                           
  3949                           ;Uart.c: 96: b=(c&0x0F);
  3950  0D9B  0020               	movlb	0	; select bank0
  3951  0D9C  0821               	movf	Uart1_PutHex@c,w
  3952  0D9D  00A2               	movwf	Uart1_PutHex@b
  3953  0D9E  300F               	movlw	15
  3954  0D9F  05A2               	andwf	Uart1_PutHex@b,f
  3955                           
  3956                           ;Uart.c: 97: if (b>9)
  3957  0DA0  300A               	movlw	10
  3958  0DA1  0222               	subwf	Uart1_PutHex@b,w
  3959  0DA2  1C03               	skipc
  3960  0DA3  2DA6               	goto	l32455
  3961                           
  3962                           ;Uart.c: 98: b += 'A'-10;
  3963  0DA4  3037               	movlw	55
  3964  0DA5  2DA7               	goto	L7
  3965  0DA6                     l32455:	
  3966                           
  3967                           ;Uart.c: 99: else
  3968                           ;Uart.c: 100: b += '0';
  3969  0DA6  3030               	movlw	48
  3970  0DA7                     L7:	
  3971  0DA7  07A2               	addwf	Uart1_PutHex@b,f
  3972                           
  3973                           ;Uart.c: 101: Uart1_PutChar(b);
  3974  0DA8  0822               	movf	Uart1_PutHex@b,w
  3975  0DA9  2E10               	ljmp	_Uart1_PutChar
  3976  0DAA                     __end_of_Uart1_PutHex:	
  3977  0DAA                     __ptext2005:	
  3978 ;; =============== function _ATCommand_WaitData ends ============
  3979                           
  3980                           
  3981 ;; *************** function _Uart1_PutString_Hex *****************
  3982 ;; Defined at:
  3983 ;;		line 75 in file "F:\work\WYP\NBIoT1\Uart.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  pString         2    3[BANK0 ] PTR const unsigned char 
  3986 ;;		 -> STR_21(5), STR_20(5), STR_19(9), STR_15(5), 
  3987 ;;		 -> STR_14(5), STR_13(9), STR_11(5), STR_10(5), 
  3988 ;;		 -> ICCID(21), STR_9(9), 
  3989 ;; Auto vars:     Size  Location     Type
  3990 ;;  c               1    5[BANK0 ] unsigned char 
  3991 ;; Return value:  Size  Location     Type
  3992 ;;		None               void
  3993 ;; Registers used:
  3994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3995 ;; Tracked objects:
  3996 ;;		On entry : 1F/0
  3997 ;;		On exit  : 1F/0
  3998 ;;		Unchanged: FFFE0/0
  3999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4000 ;;      Params:         0       2       0       0       0       0       0       0
  4001 ;;      Locals:         0       1       0       0       0       0       0       0
  4002 ;;      Temps:          0       0       0       0       0       0       0       0
  4003 ;;      Totals:         0       3       0       0       0       0       0       0
  4004 ;;Total ram usage:        3 bytes
  4005 ;; Hardware stack levels used:    1
  4006 ;; Hardware stack levels required when called:    5
  4007 ;; This function calls:
  4008 ;;		_Uart1_PutHex
  4009 ;; This function is called by:
  4010 ;;		_InteractServer
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013  0DAA                     _Uart1_PutString_Hex:	
  4014  0DAA                     l23230:	
  4015                           ; Regs used in _Uart1_PutString_Hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4016                           ;Uart.c: 76: char c;
  4017                           ;Uart.c: 77: while(1)
  4018                           
  4019                           
  4020                           ;Uart.c: 78: {
  4021                           ;Uart.c: 79: c=*pString;
  4022  0DAA  0823               	movf	Uart1_PutString_Hex@pString,w
  4023  0DAB  0084               	movwf	4
  4024  0DAC  0824               	movf	Uart1_PutString_Hex@pString+1,w
  4025  0DAD  0085               	movwf	5
  4026  0DAE  0800               	movf	0,w	;code access
  4027  0DAF  00A5               	movwf	Uart1_PutString_Hex@c
  4028                           
  4029                           ;Uart.c: 80: if(c=='\0')
  4030  0DB0  08A5               	movf	Uart1_PutString_Hex@c,f
  4031  0DB1  1903               	btfsc	3,2
  4032  0DB2  0008               	return
  4033                           
  4034                           ;Uart.c: 82: Uart1_PutHex(c);
  4035  0DB3  258B  3188         	fcall	_Uart1_PutHex
  4036                           
  4037                           ;Uart.c: 83: pString++;
  4038  0DB5  0020               	movlb	0	; select bank0
  4039  0DB6  0AA3               	incf	Uart1_PutString_Hex@pString,f
  4040  0DB7  1903               	skipnz
  4041  0DB8  0AA4               	incf	Uart1_PutString_Hex@pString+1,f
  4042  0DB9  2DAA               	goto	l23230
  4043  0DBA                     __end_of_Uart1_PutString_Hex:	
  4044  0DBA                     __ptext2051:	
  4045 ;; =============== function _Uart1_PutChar ends ============
  4046                           
  4047                           
  4048 ;; *************** function _MakeTxTemperature *****************
  4049 ;; Defined at:
  4050 ;;		line 282 in file "F:\work\WYP\NBIoT1\Function.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  T               2    0[BANK0 ] struct .
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  x               1    2[BANK0 ] unsigned char 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;		None               void
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 1F/0
  4061 ;;		On exit  : 1F/0
  4062 ;;		Unchanged: FFFE0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4064 ;;      Params:         0       2       0       0       0       0       0       0
  4065 ;;      Locals:         0       1       0       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0       0       0
  4067 ;;      Totals:         0       3       0       0       0       0       0       0
  4068 ;;Total ram usage:        3 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    3
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		_InteractServer
  4075 ;; This function uses a non-reentrant model
  4076 ;;
  4077  0DBA                     _MakeTxTemperature:	
  4078                           
  4079                           ;Function.c: 283: unsigned char x;
  4080                           ;Function.c: 284: x=(T.u8H>>4);
  4081                           
  4082                           ; Regs used in _MakeTxTemperature: [wreg+status,2+status,0]
  4083  0DBA  0E21               	swapf	MakeTxTemperature@T+1,w
  4084  0DBB  390F               	andlw	15
  4085  0DBC  00A2               	movwf	MakeTxTemperature@x
  4086                           
  4087                           ;Function.c: 285: if(x>9)
  4088  0DBD  300A               	movlw	10
  4089  0DBE  0222               	subwf	MakeTxTemperature@x,w
  4090  0DBF  1C03               	skipc
  4091  0DC0  2DC5               	goto	l32153
  4092                           
  4093                           ;Function.c: 286: {
  4094                           ;Function.c: 287: x=x-10;
  4095  0DC1  30F6               	movlw	246
  4096  0DC2  07A2               	addwf	MakeTxTemperature@x,f
  4097                           
  4098                           ;Function.c: 288: x=x+0x41;
  4099  0DC3  3041               	movlw	65
  4100  0DC4  2DC6               	goto	L12
  4101  0DC5                     l32153:	
  4102                           ;Function.c: 290: }
  4103                           
  4104                           
  4105                           ;Function.c: 291: else
  4106                           ;Function.c: 292: {
  4107                           ;Function.c: 293: x=x+'0';
  4108  0DC5  3030               	movlw	48
  4109  0DC6                     L12:	
  4110  0DC6  07A2               	addwf	MakeTxTemperature@x,f
  4111                           
  4112                           ;Function.c: 289: TxTemperature[0]=x;
  4113  0DC7  0822               	movf	MakeTxTemperature@x,w
  4114  0DC8  00CF               	movwf	_TxTemperature
  4115                           
  4116                           ;Function.c: 295: }
  4117                           ;Function.c: 296: x=(T.u8H&0x0F);
  4118  0DC9  0821               	movf	MakeTxTemperature@T+1,w
  4119  0DCA  00A2               	movwf	MakeTxTemperature@x
  4120  0DCB  300F               	movlw	15
  4121  0DCC  05A2               	andwf	MakeTxTemperature@x,f
  4122                           
  4123                           ;Function.c: 297: if(x>9)
  4124  0DCD  300A               	movlw	10
  4125  0DCE  0222               	subwf	MakeTxTemperature@x,w
  4126  0DCF  1C03               	skipc
  4127  0DD0  2DD5               	goto	l32165
  4128                           
  4129                           ;Function.c: 298: {
  4130                           ;Function.c: 299: x=x-10;
  4131  0DD1  30F6               	movlw	246
  4132  0DD2  07A2               	addwf	MakeTxTemperature@x,f
  4133                           
  4134                           ;Function.c: 300: x=x+0x41;
  4135  0DD3  3041               	movlw	65
  4136  0DD4  2DD6               	goto	L13
  4137  0DD5                     l32165:	
  4138                           ;Function.c: 302: }
  4139                           
  4140                           
  4141                           ;Function.c: 303: else
  4142                           ;Function.c: 304: {
  4143                           ;Function.c: 305: x=x+'0';
  4144  0DD5  3030               	movlw	48
  4145  0DD6                     L13:	
  4146  0DD6  07A2               	addwf	MakeTxTemperature@x,f
  4147                           
  4148                           ;Function.c: 301: TxTemperature[1]=x;
  4149  0DD7  0822               	movf	MakeTxTemperature@x,w
  4150  0DD8  00D0               	movwf	_TxTemperature+1
  4151                           
  4152                           ;Function.c: 307: }
  4153                           ;Function.c: 308: x=(T.u8L>>4);
  4154  0DD9  0E20               	swapf	MakeTxTemperature@T,w
  4155  0DDA  390F               	andlw	15
  4156  0DDB  00A2               	movwf	MakeTxTemperature@x
  4157                           
  4158                           ;Function.c: 309: if(x>9)
  4159  0DDC  300A               	movlw	10
  4160  0DDD  0222               	subwf	MakeTxTemperature@x,w
  4161  0DDE  1C03               	skipc
  4162  0DDF  2DE4               	goto	l32175
  4163                           
  4164                           ;Function.c: 310: {
  4165                           ;Function.c: 311: x=x-10;
  4166  0DE0  30F6               	movlw	246
  4167  0DE1  07A2               	addwf	MakeTxTemperature@x,f
  4168                           
  4169                           ;Function.c: 312: x=x+0x41;
  4170  0DE2  3041               	movlw	65
  4171  0DE3  2DE5               	goto	L14
  4172  0DE4                     l32175:	
  4173                           ;Function.c: 314: }
  4174                           
  4175                           
  4176                           ;Function.c: 315: else
  4177                           ;Function.c: 316: {
  4178                           ;Function.c: 317: x=x+'0';
  4179  0DE4  3030               	movlw	48
  4180  0DE5                     L14:	
  4181  0DE5  07A2               	addwf	MakeTxTemperature@x,f
  4182                           
  4183                           ;Function.c: 313: TxTemperature[2]=x;
  4184  0DE6  0822               	movf	MakeTxTemperature@x,w
  4185  0DE7  00D1               	movwf	_TxTemperature+2
  4186                           
  4187                           ;Function.c: 319: }
  4188                           ;Function.c: 320: x=(T.u8L&0x0F);
  4189  0DE8  0820               	movf	MakeTxTemperature@T,w
  4190  0DE9  00A2               	movwf	MakeTxTemperature@x
  4191  0DEA  300F               	movlw	15
  4192  0DEB  05A2               	andwf	MakeTxTemperature@x,f
  4193                           
  4194                           ;Function.c: 321: if(x>9)
  4195  0DEC  300A               	movlw	10
  4196  0DED  0222               	subwf	MakeTxTemperature@x,w
  4197  0DEE  1C03               	skipc
  4198  0DEF  2DF7               	goto	l32187
  4199                           
  4200                           ;Function.c: 322: {
  4201                           ;Function.c: 323: x=x-10;
  4202  0DF0  30F6               	movlw	246
  4203  0DF1  07A2               	addwf	MakeTxTemperature@x,f
  4204                           
  4205                           ;Function.c: 324: x=x+0x41;
  4206  0DF2  3041               	movlw	65
  4207  0DF3                     L11:	
  4208  0DF3  07A2               	addwf	MakeTxTemperature@x,f
  4209                           
  4210                           ;Function.c: 325: TxTemperature[3]=x;
  4211  0DF4  0822               	movf	MakeTxTemperature@x,w
  4212  0DF5  00D2               	movwf	_TxTemperature+3
  4213                           
  4214                           ;Function.c: 326: }
  4215  0DF6  0008               	return
  4216  0DF7                     l32187:	
  4217                           
  4218                           ;Function.c: 327: else
  4219                           ;Function.c: 328: {
  4220                           ;Function.c: 329: x=x+'0';
  4221  0DF7  3030               	movlw	48
  4222  0DF8  2DF3               	goto	L11
  4223  0DF9                     __end_of_MakeTxTemperature:	
  4224  0DF9                     __ptext2049:	
  4225 ;; =============== function _strcpy ends ============
  4226                           
  4227                           
  4228 ;; *************** function _eeprom_read *****************
  4229 ;; Defined at:
  4230 ;;		line 8 in file "eeread.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  addr            1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  addr            1    2[BANK0 ] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 1F/0
  4241 ;;		On exit  : 1F/3
  4242 ;;		Unchanged: FFFE0/0
  4243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4244 ;;      Params:         0       0       0       0       0       0       0       0
  4245 ;;      Locals:         0       1       0       0       0       0       0       0
  4246 ;;      Temps:          0       2       0       0       0       0       0       0
  4247 ;;      Totals:         0       3       0       0       0       0       0       0
  4248 ;;Total ram usage:        3 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    3
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_InteractServer
  4255 ;;		_GetRomData
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258  0DF9                     _eeprom_read:	
  4259                           
  4260                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4261                           ;eeprom_read@addr stored from wreg
  4262  0DF9  00A2               	movwf	eeprom_read@addr
  4263  0DFA                     l27395:	
  4264  0DFA  0064               	clrwdt	;#
  4265  0DFB  0023               	movlb	3	; select bank3
  4266  0DFC  1895               	btfsc	21,1
  4267  0DFD  2DFA               	goto	l27395
  4268  0DFE  0020               	movlb	0	; select bank0
  4269  0DFF  0822               	movf	eeprom_read@addr,w
  4270  0E00  0023               	movlb	3	; select bank3
  4271  0E01  0091               	movwf	17	;volatile
  4272  0E02  303F               	movlw	63
  4273  0E03  0595               	andwf	21,f	;volatile
  4274  0E04  1415               	bsf	21,0
  4275  0E05  1003               	clrc
  4276  0E06  1815               	btfsc	21,0
  4277  0E07  1403               	setc
  4278  0E08  3000               	movlw	0
  4279  0E09  3D09               	addwfc	9,w
  4280  0E0A  0020               	movlb	0	; select bank0
  4281  0E0B  00A0               	movwf	??_eeprom_read
  4282  0E0C  01A1               	clrf	??_eeprom_read+1
  4283  0E0D  0023               	movlb	3	; select bank3
  4284  0E0E  0813               	movf	19,w	;volatile
  4285  0E0F  0008               	return
  4286  0E10                     __end_of_eeprom_read:	
  4287  0E10                     __ptext2050:	
  4288 ;; =============== function _eeprom_read ends ============
  4289                           
  4290                           
  4291 ;; *************** function _Uart1_PutChar *****************
  4292 ;; Defined at:
  4293 ;;		line 47 in file "F:\work\WYP\NBIoT1\Uart.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;  c               1    wreg     unsigned char 
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;  c               1    0[BANK0 ] unsigned char 
  4298 ;; Return value:  Size  Location     Type
  4299 ;;		None               void
  4300 ;; Registers used:
  4301 ;;		wreg
  4302 ;; Tracked objects:
  4303 ;;		On entry : 1C/0
  4304 ;;		On exit  : 1F/3
  4305 ;;		Unchanged: FFFE0/0
  4306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4307 ;;      Params:         0       0       0       0       0       0       0       0
  4308 ;;      Locals:         0       1       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0
  4310 ;;      Totals:         0       1       0       0       0       0       0       0
  4311 ;;Total ram usage:        1 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    3
  4314 ;; This function calls:
  4315 ;;		Nothing
  4316 ;; This function is called by:
  4317 ;;		_InteractServer
  4318 ;;		_Uart1_PutString
  4319 ;;		_Uart1_PutHex
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322  0E10                     _Uart1_PutChar:	
  4323                           
  4324                           ; Regs used in _Uart1_PutChar: [wreg]
  4325                           ;Uart1_PutChar@c stored from wreg
  4326  0E10  0020               	movlb	0	; select bank0
  4327  0E11  00A0               	movwf	Uart1_PutChar@c
  4328  0E12                     l23211:	
  4329                           ;Uart.c: 48: while(TRMT==0);
  4330                           
  4331  0E12  0023               	movlb	3	; select bank3
  4332  0E13  1C9E               	btfss	30,1
  4333  0E14  2E12               	goto	l23211
  4334                           
  4335                           ;Uart.c: 52: TXREG=c;
  4336  0E15  0020               	movlb	0	; select bank0
  4337  0E16  0820               	movf	Uart1_PutChar@c,w
  4338  0E17  0023               	movlb	3	; select bank3
  4339  0E18  009A               	movwf	26	;volatile
  4340  0E19  0008               	return
  4341  0E1A                     __end_of_Uart1_PutChar:	
  4342  0E1A                     __ptext2023:	
  4343 ;; =============== function _Uart1_PutHex ends ============
  4344                           
  4345                           
  4346 ;; *************** function _Uart1_PutString *****************
  4347 ;; Defined at:
  4348 ;;		line 63 in file "F:\work\WYP\NBIoT1\Uart.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  pString         2    1[BANK0 ] PTR const unsigned char 
  4351 ;;		 -> STR_37(3), STR_33(11), STR_32(12), STR_30(8), 
  4352 ;;		 -> STR_28(10), STR_27(9), STR_26(6), STR_25(4), 
  4353 ;;		 -> STR_24(3), STR_18(16), STR_17(13), STR_16(17), 
  4354 ;;		 -> STR_12(16), STR_8(16), STR_7(11), STR_6(11), 
  4355 ;;		 -> STR_5(12), STR_4(36), STR_3(12), STR_2(36), 
  4356 ;;		 -> STR_1(23), 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  c               1    3[BANK0 ] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;		None               void
  4361 ;; Registers used:
  4362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4363 ;; Tracked objects:
  4364 ;;		On entry : 1F/0
  4365 ;;		On exit  : 1F/0
  4366 ;;		Unchanged: FFFE0/0
  4367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4368 ;;      Params:         0       2       0       0       0       0       0       0
  4369 ;;      Locals:         0       1       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0       0
  4371 ;;      Totals:         0       3       0       0       0       0       0       0
  4372 ;;Total ram usage:        3 bytes
  4373 ;; Hardware stack levels used:    1
  4374 ;; Hardware stack levels required when called:    4
  4375 ;; This function calls:
  4376 ;;		_Uart1_PutChar
  4377 ;; This function is called by:
  4378 ;;		_InteractServer
  4379 ;;		_ATCommand_SendCmd
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382  0E1A                     _Uart1_PutString:	
  4383  0E1A                     l23223:	
  4384                           ; Regs used in _Uart1_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4385                           ;Uart.c: 64: char c;
  4386                           ;Uart.c: 65: while(1)
  4387                           
  4388                           
  4389                           ;Uart.c: 66: {
  4390                           ;Uart.c: 67: c=*pString;
  4391  0E1A  0821               	movf	Uart1_PutString@pString,w
  4392  0E1B  0084               	movwf	4
  4393  0E1C  0822               	movf	Uart1_PutString@pString+1,w
  4394  0E1D  0085               	movwf	5
  4395  0E1E  0800               	movf	0,w	;code access
  4396  0E1F  00A3               	movwf	Uart1_PutString@c
  4397                           
  4398                           ;Uart.c: 68: if(c=='\0')
  4399  0E20  08A3               	movf	Uart1_PutString@c,f
  4400  0E21  1903               	btfsc	3,2
  4401  0E22  0008               	return
  4402                           
  4403                           ;Uart.c: 70: Uart1_PutChar(c);
  4404  0E23  0823               	movf	Uart1_PutString@c,w
  4405  0E24  2610  3188         	fcall	_Uart1_PutChar
  4406                           
  4407                           ;Uart.c: 71: pString++;
  4408  0E26  0020               	movlb	0	; select bank0
  4409  0E27  0AA1               	incf	Uart1_PutString@pString,f
  4410  0E28  1903               	skipnz
  4411  0E29  0AA2               	incf	Uart1_PutString@pString+1,f
  4412  0E2A  2E1A               	goto	l23223
  4413  0E2B                     __end_of_Uart1_PutString:	
  4414  0E2B                     __ptext2040:	
  4415 ;; =============== function ___wmul ends ============
  4416                           
  4417                           
  4418 ;; *************** function ___bmul *****************
  4419 ;; Defined at:
  4420 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\bmul.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  multiplier      1    wreg     unsigned char 
  4423 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4426 ;;  product         1    1[BANK0 ] unsigned char 
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      unsigned char 
  4429 ;; Registers used:
  4430 ;;		wreg, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 1F/0
  4433 ;;		On exit  : 1F/0
  4434 ;;		Unchanged: FFFE0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4436 ;;      Params:         0       1       0       0       0       0       0       0
  4437 ;;      Locals:         0       2       0       0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0
  4439 ;;      Totals:         0       3       0       0       0       0       0       0
  4440 ;;Total ram usage:        3 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    3
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_main
  4447 ;;		_InteractServer
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450  0E2B                     ___bmul:	
  4451                           
  4452                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4453                           ;___bmul@multiplier stored from wreg
  4454  0E2B  00A2               	movwf	___bmul@multiplier
  4455  0E2C  01A1               	clrf	___bmul@product
  4456  0E2D                     l32211:	
  4457  0E2D  0820               	movf	___bmul@multiplicand,w
  4458  0E2E  1822               	btfsc	___bmul@multiplier,0
  4459  0E2F  07A1               	addwf	___bmul@product,f
  4460  0E30  35A0               	lslf	___bmul@multiplicand,f
  4461  0E31  36A2               	lsrf	___bmul@multiplier,f
  4462  0E32  08A2               	movf	___bmul@multiplier,f
  4463  0E33  1D03               	skipz
  4464  0E34  2E2D               	goto	l32211
  4465  0E35  0821               	movf	___bmul@product,w
  4466  0E36  0008               	return
  4467  0E37                     __end_of___bmul:	
  4468  0E37                     __ptext2048:	
  4469 ;; =============== function _GetVerify_Sum ends ============
  4470                           
  4471                           
  4472 ;; *************** function _strcpy *****************
  4473 ;; Defined at:
  4474 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strcpy.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  to              1    wreg     PTR unsigned char 
  4477 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4478 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4479 ;;		 -> STR_41(6), STR_40(3), STR_39(6), STR_38(3), 
  4480 ;;		 -> STR_36(6), STR_35(3), STR_23(6), STR_22(7), 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4483 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4484 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  4485 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      PTR unsigned char 
  4488 ;; Registers used:
  4489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4490 ;; Tracked objects:
  4491 ;;		On entry : 1F/0
  4492 ;;		On exit  : 1F/0
  4493 ;;		Unchanged: FFFE0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4495 ;;      Params:         0       2       0       0       0       0       0       0
  4496 ;;      Locals:         0       2       0       0       0       0       0       0
  4497 ;;      Temps:          0       2       0       0       0       0       0       0
  4498 ;;      Totals:         0       6       0       0       0       0       0       0
  4499 ;;Total ram usage:        6 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    3
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_InteractServer
  4506 ;;		_ATCommand_Init
  4507 ;;		_ATCommand_SendCmd
  4508 ;;		_ATCommand_WaitData
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511  0E37                     _strcpy:	
  4512                           
  4513                           ; Regs used in _strcpy: [wreg-status,0+pclath]
  4514                           ;strcpy@to stored from wreg
  4515  0E37  00A4               	movwf	strcpy@to
  4516  0E38  00A5               	movwf	strcpy@cp
  4517  0E39                     l30455:	
  4518  0E39  0825               	movf	strcpy@cp,w
  4519  0E3A  0086               	movwf	6
  4520  0E3B  0187               	clrf	7
  4521  0E3C  0AA5               	incf	strcpy@cp,f
  4522  0E3D  0821               	movf	strcpy@from+1,w
  4523  0E3E  00A3               	movwf	??_strcpy+1
  4524  0E3F  0820               	movf	strcpy@from,w
  4525  0E40  00A2               	movwf	??_strcpy
  4526  0E41  0AA0               	incf	strcpy@from,f
  4527  0E42  1903               	skipnz
  4528  0E43  0AA1               	incf	strcpy@from+1,f
  4529  0E44  0084               	movwf	4
  4530  0E45  0823               	movf	??_strcpy+1,w
  4531  0E46  0085               	movwf	5
  4532  0E47  0800               	movf	0,w	;code access
  4533  0E48  3FC0               	movwi [0]fsr1
  4534  0E49  0889               	movf	9,f
  4535  0E4A  1903               	btfsc	3,2
  4536  0E4B  0008               	return
  4537  0E4C  2E39               	goto	l30455
  4538  0E4D                     __end_of_strcpy:	
  4539  0E4D                     __ptext2038:	
  4540 ;; =============== function ___lwmod ends ============
  4541                           
  4542                           
  4543 ;; *************** function ___lwdiv *****************
  4544 ;; Defined at:
  4545 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  divisor         2    0[BANK0 ] unsigned int 
  4548 ;;  dividend        2    2[BANK0 ] unsigned int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  quotient        2    5[BANK0 ] unsigned int 
  4551 ;;  counter         1    4[BANK0 ] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2    0[BANK0 ] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 1F/0
  4558 ;;		On exit  : 1F/0
  4559 ;;		Unchanged: FFFE0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4561 ;;      Params:         0       4       0       0       0       0       0       0
  4562 ;;      Locals:         0       3       0       0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0
  4564 ;;      Totals:         0       7       0       0       0       0       0       0
  4565 ;;Total ram usage:        7 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    3
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_InteractServer
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574  0E4D                     ___lwdiv:	
  4575                           
  4576                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4577  0E4D  01A5               	clrf	___lwdiv@quotient
  4578  0E4E  01A6               	clrf	___lwdiv@quotient+1
  4579  0E4F  0821               	movf	___lwdiv@divisor+1,w
  4580  0E50  0420               	iorwf	___lwdiv@divisor,w
  4581  0E51  1903               	skipnz
  4582  0E52  2E6D               	goto	l32263
  4583  0E53  01A4               	clrf	___lwdiv@counter
  4584  0E54                     L10:	
  4585  0E54  0AA4               	incf	___lwdiv@counter,f
  4586  0E55  1BA1               	btfsc	___lwdiv@divisor+1,7
  4587  0E56  2E5A               	goto	l32251
  4588  0E57  35A0               	lslf	___lwdiv@divisor,f
  4589  0E58  0DA1               	rlf	___lwdiv@divisor+1,f
  4590  0E59  2E54               	goto	L10
  4591  0E5A                     l32251:	
  4592  0E5A  35A5               	lslf	___lwdiv@quotient,f
  4593  0E5B  0DA6               	rlf	___lwdiv@quotient+1,f
  4594  0E5C  0821               	movf	___lwdiv@divisor+1,w
  4595  0E5D  0223               	subwf	___lwdiv@dividend+1,w
  4596  0E5E  1D03               	skipz
  4597  0E5F  2E62               	goto	u6275
  4598  0E60  0820               	movf	___lwdiv@divisor,w
  4599  0E61  0222               	subwf	___lwdiv@dividend,w
  4600  0E62                     u6275:	
  4601  0E62  1C03               	skipc
  4602  0E63  2E69               	goto	l32259
  4603  0E64  0820               	movf	___lwdiv@divisor,w
  4604  0E65  02A2               	subwf	___lwdiv@dividend,f
  4605  0E66  0821               	movf	___lwdiv@divisor+1,w
  4606  0E67  3BA3               	subwfb	___lwdiv@dividend+1,f
  4607  0E68  1425               	bsf	___lwdiv@quotient,0
  4608  0E69                     l32259:	
  4609  0E69  36A1               	lsrf	___lwdiv@divisor+1,f
  4610  0E6A  0CA0               	rrf	___lwdiv@divisor,f
  4611  0E6B  0BA4               	decfsz	___lwdiv@counter,f
  4612  0E6C  2E5A               	goto	l32251
  4613  0E6D                     l32263:	
  4614  0E6D  0826               	movf	___lwdiv@quotient+1,w
  4615  0E6E  00A1               	movwf	?___lwdiv+1
  4616  0E6F  0825               	movf	___lwdiv@quotient,w
  4617  0E70  00A0               	movwf	?___lwdiv
  4618  0E71  0008               	return
  4619  0E72                     __end_of___lwdiv:	
  4620  0E72                     __ptext1995:	
  4621 ;; =============== function _TestProc ends ============
  4622                           
  4623                           
  4624 ;; *************** function _CallProc *****************
  4625 ;; Defined at:
  4626 ;;		line 14 in file "F:\work\WYP\NBIoT1\Function.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  retry           1   40[BANK0 ] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;		None               void
  4633 ;; Registers used:
  4634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 10/F
  4637 ;;		On exit  : 1F/F
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4640 ;;      Params:         0       0       0       0       0       0       0       0
  4641 ;;      Locals:         0       1       0       0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0
  4643 ;;      Totals:         0       1       0       0       0       0       0       0
  4644 ;;Total ram usage:        1 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    8
  4647 ;; This function calls:
  4648 ;;		_LcdDisplay_CALL
  4649 ;;		_CallSend
  4650 ;;		_LcdDisplay_CurTemp
  4651 ;;		___delay_20ms
  4652 ;;		_LcdDisplay_Err
  4653 ;; This function is called by:
  4654 ;;		_main
  4655 ;;		_TestProc
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658  0E72                     _CallProc:	
  4659                           
  4660                           ;Function.c: 16: if(gFlags.bNotify)
  4661                           
  4662                           ; Regs used in _CallProc: [wreg-btemp+0+pclath+cstack]
  4663  0E72  0020               	movlb	0	; select bank0
  4664  0E73  1C66               	btfss	_gFlags,0
  4665  0E74  2E77               	goto	l33359
  4666                           
  4667                           ;Function.c: 17: {
  4668                           ;Function.c: 18: LcdDisplay_CALL();
  4669  0E75  27DC  3188         	fcall	_LcdDisplay_CALL
  4670  0E77                     l33359:	
  4671                           
  4672                           ;Function.c: 19: }
  4673                           ;Function.c: 21: unsigned char retry=2;
  4674  0E77  3002               	movlw	2
  4675  0E78  0020               	movlb	0	; select bank0
  4676  0E79  00C8               	movwf	CallProc@retry
  4677                           
  4678                           ;Function.c: 22: while(retry!=0)
  4679  0E7A  2E85               	goto	l33375
  4680  0E7B                     l33369:	
  4681                           
  4682                           ;Function.c: 28: {
  4683                           ;Function.c: 29: retry--;
  4684  0E7B  03C8               	decf	CallProc@retry,f
  4685                           
  4686                           ;Function.c: 34: LcdDisplay_CurTemp();
  4687  0E7C  26B4  3188         	fcall	_LcdDisplay_CurTemp
  4688                           
  4689                           ;Function.c: 35: __delay_20ms(3000);
  4690  0E7E  30B8               	movlw	184
  4691  0E7F  0020               	movlb	0	; select bank0
  4692  0E80  00A0               	movwf	?___delay_20ms
  4693  0E81  300B               	movlw	11
  4694  0E82  00A1               	movwf	?___delay_20ms+1
  4695  0E83  2313  3188         	fcall	___delay_20ms
  4696  0E85                     l33375:	
  4697                           ;Function.c: 36: }
  4698                           
  4699  0E85  08C8               	movf	CallProc@retry,f
  4700  0E86  1903               	btfsc	3,2
  4701  0E87  2E8E               	goto	l33377
  4702                           
  4703                           ;Function.c: 23: {
  4704                           ;Function.c: 24: ErrState=NoErr;
  4705  0E88  01E3               	clrf	_ErrState
  4706                           
  4707                           ;Function.c: 25: gFlags.bRetry=0;
  4708  0E89  1266               	bcf	_gFlags,4
  4709                           
  4710                           ;Function.c: 26: CallSend();
  4711  0E8A  213D  3188         	fcall	_CallSend
  4712                           
  4713                           ;Function.c: 27: if(gFlags.bRetry)
  4714  0E8C  1A66               	btfsc	_gFlags,4
  4715  0E8D  2E7B               	goto	l33369
  4716  0E8E                     l33377:	
  4717                           
  4718                           ;Function.c: 39: }
  4719                           ;Function.c: 42: if(ErrState!=NoErr)
  4720  0E8E  0863               	movf	_ErrState,w
  4721  0E8F  1903               	btfsc	3,2
  4722  0E90  2E93               	goto	l33381
  4723                           
  4724                           ;Function.c: 43: {
  4725                           ;Function.c: 44: LcdDisplay_Err();
  4726  0E91  3183  2B67         	ljmp	l2252
  4727  0E93                     l33381:	
  4728                           ;Function.c: 45: }
  4729                           
  4730                           
  4731                           ;Function.c: 46: else
  4732                           ;Function.c: 47: {
  4733                           ;Function.c: 48: LcdDisplay_CurTemp();
  4734  0E93  2EB4               	ljmp	l32337
  4735  0E94                     __end_of_CallProc:	
  4736  0E94                     __ptext2037:	
  4737 ;; =============== function ___lbdiv ends ============
  4738                           
  4739                           
  4740 ;; *************** function ___lwmod *****************
  4741 ;; Defined at:
  4742 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  divisor         2    0[BANK0 ] unsigned int 
  4745 ;;  dividend        2    2[BANK0 ] unsigned int 
  4746 ;; Auto vars:     Size  Location     Type
  4747 ;;  counter         1    4[BANK0 ] unsigned char 
  4748 ;; Return value:  Size  Location     Type
  4749 ;;                  2    0[BANK0 ] unsigned int 
  4750 ;; Registers used:
  4751 ;;		wreg, status,2, status,0
  4752 ;; Tracked objects:
  4753 ;;		On entry : 1F/0
  4754 ;;		On exit  : 1F/0
  4755 ;;		Unchanged: FFFE0/0
  4756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4757 ;;      Params:         0       4       0       0       0       0       0       0
  4758 ;;      Locals:         0       1       0       0       0       0       0       0
  4759 ;;      Temps:          0       0       0       0       0       0       0       0
  4760 ;;      Totals:         0       5       0       0       0       0       0       0
  4761 ;;Total ram usage:        5 bytes
  4762 ;; Hardware stack levels used:    1
  4763 ;; Hardware stack levels required when called:    3
  4764 ;; This function calls:
  4765 ;;		Nothing
  4766 ;; This function is called by:
  4767 ;;		_InteractServer
  4768 ;; This function uses a non-reentrant model
  4769 ;;
  4770  0E94                     ___lwmod:	
  4771                           
  4772                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4773  0E94  0821               	movf	___lwmod@divisor+1,w
  4774  0E95  0420               	iorwf	___lwmod@divisor,w
  4775  0E96  1903               	skipnz
  4776  0E97  2EAF               	goto	l32283
  4777  0E98  01A4               	clrf	___lwmod@counter
  4778  0E99                     L9:	
  4779  0E99  0AA4               	incf	___lwmod@counter,f
  4780  0E9A  1BA1               	btfsc	___lwmod@divisor+1,7
  4781  0E9B  2E9F               	goto	l32275
  4782  0E9C  35A0               	lslf	___lwmod@divisor,f
  4783  0E9D  0DA1               	rlf	___lwmod@divisor+1,f
  4784  0E9E  2E99               	goto	L9
  4785  0E9F                     l32275:	
  4786  0E9F  0821               	movf	___lwmod@divisor+1,w
  4787  0EA0  0223               	subwf	___lwmod@dividend+1,w
  4788  0EA1  1D03               	skipz
  4789  0EA2  2EA5               	goto	u6315
  4790  0EA3  0820               	movf	___lwmod@divisor,w
  4791  0EA4  0222               	subwf	___lwmod@dividend,w
  4792  0EA5                     u6315:	
  4793  0EA5  1C03               	skipc
  4794  0EA6  2EAB               	goto	l32279
  4795  0EA7  0820               	movf	___lwmod@divisor,w
  4796  0EA8  02A2               	subwf	___lwmod@dividend,f
  4797  0EA9  0821               	movf	___lwmod@divisor+1,w
  4798  0EAA  3BA3               	subwfb	___lwmod@dividend+1,f
  4799  0EAB                     l32279:	
  4800  0EAB  36A1               	lsrf	___lwmod@divisor+1,f
  4801  0EAC  0CA0               	rrf	___lwmod@divisor,f
  4802  0EAD  0BA4               	decfsz	___lwmod@counter,f
  4803  0EAE  2E9F               	goto	l32275
  4804  0EAF                     l32283:	
  4805  0EAF  0823               	movf	___lwmod@dividend+1,w
  4806  0EB0  00A1               	movwf	?___lwmod+1
  4807  0EB1  0822               	movf	___lwmod@dividend,w
  4808  0EB2  00A0               	movwf	?___lwmod
  4809  0EB3  0008               	return
  4810  0EB4                     __end_of___lwmod:	
  4811  0EB4                     __ptext2032:	
  4812 ;; =============== function _LcdDisplay_Err ends ============
  4813                           
  4814                           
  4815 ;; *************** function _LcdDisplay_CurTemp *****************
  4816 ;; Defined at:
  4817 ;;		line 280 in file "F:\work\WYP\NBIoT1\Display.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;		None
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  t2              1    8[BANK0 ] unsigned char 
  4822 ;;  t1              1    7[BANK0 ] unsigned char 
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4827 ;; Tracked objects:
  4828 ;;		On entry : 1F/0
  4829 ;;		On exit  : 1F/F
  4830 ;;		Unchanged: FFFE0/0
  4831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4832 ;;      Params:         0       0       0       0       0       0       0       0
  4833 ;;      Locals:         0       2       0       0       0       0       0       0
  4834 ;;      Temps:          0       2       0       0       0       0       0       0
  4835 ;;      Totals:         0       4       0       0       0       0       0       0
  4836 ;;Total ram usage:        4 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; Hardware stack levels required when called:    4
  4839 ;; This function calls:
  4840 ;;		___lbdiv
  4841 ;;		___lbmod
  4842 ;;		_LcdDisplayNum
  4843 ;; This function is called by:
  4844 ;;		_ReadTData
  4845 ;;		_CallProc
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848  0EB4                     _LcdDisplay_CurTemp:	
  4849  0EB4                     l32337:	
  4850                           ; Regs used in _LcdDisplay_CurTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4851                           
  4852                           
  4853                           ;Display.c: 281: unsigned char t1,t2;
  4854                           ;Display.c: 285: if(CurTemp.u16==0xf000)
  4855  0EB4  0858               	movf	_CurTemp+1,w
  4856  0EB5  3AF0               	xorlw	240
  4857  0EB6  0457               	iorwf	_CurTemp,w
  4858  0EB7  1D03               	skipz
  4859  0EB8  2EC7               	goto	l2243
  4860                           
  4861                           ;Display.c: 286: {
  4862                           ;Display.c: 287: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  4863  0EB9  3079               	movlw	121
  4864  0EBA  00EA               	movwf	_DpyNum
  4865                           
  4866                           ;Display.c: 288: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20;
  4867  0EBB  303F               	movlw	63
  4868  0EBC  00EB               	movwf	_DpyNum+1
  4869                           
  4870                           ;Display.c: 289: DpyNum[2]=0x02 | 0x04;
  4871  0EBD  3006               	movlw	6
  4872  0EBE  00EC               	movwf	_DpyNum+2
  4873  0EBF                     l2236:	
  4874                           ;Display.c: 290: while(WA==0);
  4875                           
  4876  0EBF  002F               	movlb	15	; select bank15
  4877  0EC0  1E12               	btfss	18,4
  4878  0EC1  2EBF               	goto	l2236
  4879                           
  4880                           ;Display.c: 291: SEG3COM0=0;
  4881  0EC2  11A0               	bcf	32,3
  4882  0EC3                     l2239:	
  4883                           ;Display.c: 292: while(WA==0);
  4884                           
  4885  0EC3  1E12               	btfss	18,4
  4886  0EC4  2EC3               	goto	l2239
  4887                           
  4888                           ;Display.c: 293: SEG11COM0=0;
  4889  0EC5  11A1               	bcf	33,3
  4890                           
  4891                           ;Display.c: 294: }
  4892  0EC6  2F04               	goto	l32357
  4893  0EC7                     l2243:	
  4894  0EC7  002F               	movlb	15	; select bank15
  4895  0EC8  1E12               	btfss	18,4
  4896  0EC9  2EC7               	goto	l2243
  4897                           
  4898                           ;Display.c: 298: SEG3COM0=1;
  4899  0ECA  15A0               	bsf	32,3
  4900  0ECB                     l2246:	
  4901                           ;Display.c: 299: while(WA==0);
  4902                           
  4903  0ECB  1E12               	btfss	18,4
  4904  0ECC  2ECB               	goto	l2246
  4905                           
  4906                           ;Display.c: 300: SEG11COM0=1;
  4907  0ECD  15A1               	bsf	33,3
  4908                           
  4909                           ;Display.c: 301: t1=CurTemp.u16>>4;
  4910  0ECE  0020               	movlb	0	; select bank0
  4911  0ECF  0858               	movf	_CurTemp+1,w
  4912  0ED0  00A6               	movwf	??_LcdDisplay_CurTemp+1
  4913  0ED1  0857               	movf	_CurTemp,w
  4914  0ED2  00A5               	movwf	??_LcdDisplay_CurTemp
  4915  0ED3  3004               	movlw	4
  4916  0ED4                     u6455:	
  4917  0ED4  36A6               	lsrf	??_LcdDisplay_CurTemp+1,f
  4918  0ED5  0CA5               	rrf	??_LcdDisplay_CurTemp,f
  4919  0ED6  0B89               	decfsz	9,f
  4920  0ED7  2ED4               	goto	u6455
  4921  0ED8  0825               	movf	??_LcdDisplay_CurTemp,w
  4922  0ED9  00A7               	movwf	LcdDisplay_CurTemp@t1
  4923                           
  4924                           ;Display.c: 302: t2=CurTemp.u16&0x0f;
  4925  0EDA  0857               	movf	_CurTemp,w
  4926  0EDB  00A8               	movwf	LcdDisplay_CurTemp@t2
  4927  0EDC  300F               	movlw	15
  4928  0EDD  05A8               	andwf	LcdDisplay_CurTemp@t2,f
  4929                           
  4930                           ;Display.c: 303: t2=DS18X20_ToDecicel[t2];
  4931  0EDE  0828               	movf	LcdDisplay_CurTemp@t2,w
  4932  0EDF  3E13               	addlw	low (_DS18X20_ToDecicel| (0+32768))
  4933  0EE0  0084               	movwf	4
  4934  0EE1  3090               	movlw	high (_DS18X20_ToDecicel| (0+32768))
  4935  0EE2  1803               	skipnc
  4936  0EE3  3E01               	addlw	1
  4937  0EE4  0085               	movwf	5
  4938  0EE5  0800               	movf	0,w	;code access
  4939  0EE6  00A8               	movwf	LcdDisplay_CurTemp@t2
  4940                           
  4941                           ;Display.c: 304: DpyNum[0]=SegCode[t1/10];
  4942  0EE7  300A               	movlw	10
  4943  0EE8  00A0               	movwf	?___lbdiv
  4944  0EE9  0827               	movf	LcdDisplay_CurTemp@t1,w
  4945  0EEA  2791  3188         	fcall	___lbdiv
  4946  0EEC  3E01               	addlw	low (_SegCode| (0+32768))
  4947  0EED  0084               	movwf	4
  4948  0EEE  3090               	movlw	high (_SegCode| (0+32768))
  4949  0EEF  1803               	skipnc
  4950  0EF0  3E01               	addlw	1
  4951  0EF1  0085               	movwf	5
  4952  0EF2  0800               	movf	0,w	;code access
  4953  0EF3  00EA               	movwf	_DpyNum
  4954                           
  4955                           ;Display.c: 305: DpyNum[1]=SegCode[t1%10];
  4956  0EF4  300A               	movlw	10
  4957  0EF5  00A0               	movwf	?___lbmod
  4958  0EF6  0827               	movf	LcdDisplay_CurTemp@t1,w
  4959  0EF7  27C4               	fcall	___lbmod
  4960  0EF8  3184  2490         	fcall	PL4	;call to abstracted procedure
  4961                           
  4962                           ;Display.c: 306: DpyNum[1] |= 0x80;
  4963  0EFA  17EB               	bsf	_DpyNum+1,7
  4964                           
  4965                           ;Display.c: 307: DpyNum[2]=SegCode[t2];
  4966  0EFB  0828               	movf	LcdDisplay_CurTemp@t2,w
  4967  0EFC  3E01               	addlw	low (_SegCode| (0+32768))
  4968  0EFD  0084               	movwf	4
  4969  0EFE  3090               	movlw	high (_SegCode| (0+32768))
  4970  0EFF  1803               	skipnc
  4971  0F00  3E01               	addlw	1
  4972  0F01  0085               	movwf	5
  4973  0F02  0800               	movf	0,w	;code access
  4974  0F03  00EC               	movwf	_DpyNum+2
  4975  0F04                     l32357:	
  4976                           
  4977                           ;Display.c: 308: }
  4978                           ;Display.c: 309: LcdDisplayNum();
  4979  0F04  3183  2B87         	ljmp	l31991
  4980  0F06                     __end_of_LcdDisplay_CurTemp:	
  4981  0F06                     __ptext2052:	
  4982 ;; =============== function _MakeTxTemperature ends ============
  4983                           
  4984                           
  4985 ;; *************** function _eeprom_write *****************
  4986 ;; Defined at:
  4987 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\eewrite.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  addr            1    wreg     unsigned char 
  4990 ;;  value           1    0[BANK0 ] unsigned char 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;  addr            1    1[BANK0 ] unsigned char 
  4993 ;; Return value:  Size  Location     Type
  4994 ;;		None               void
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 1F/0
  4999 ;;		On exit  : 1F/3
  5000 ;;		Unchanged: FFFE0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5002 ;;      Params:         0       1       0       0       0       0       0       0
  5003 ;;      Locals:         0       1       0       0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0       0       0       0
  5005 ;;      Totals:         0       2       0       0       0       0       0       0
  5006 ;;Total ram usage:        2 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    3
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_main
  5013 ;;		_SaveRomData
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016  0F06                     _eeprom_write:	
  5017                           
  5018                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5019                           ;eeprom_write@addr stored from wreg
  5020  0F06  00A1               	movwf	eeprom_write@addr
  5021  0F07                     l27417:	
  5022  0F07  0023               	movlb	3	; select bank3
  5023  0F08  1895               	btfsc	21,1
  5024  0F09  2F07               	goto	l27417
  5025  0F0A  0020               	movlb	0	; select bank0
  5026  0F0B  0821               	movf	eeprom_write@addr,w
  5027  0F0C  0023               	movlb	3	; select bank3
  5028  0F0D  0091               	movwf	17	;volatile
  5029  0F0E  0020               	movlb	0	; select bank0
  5030  0F0F  0820               	movf	eeprom_write@value,w
  5031  0F10  0023               	movlb	3	; select bank3
  5032  0F11  0093               	movwf	19	;volatile
  5033  0F12  303F               	movlw	63
  5034  0F13  0595               	andwf	21,f	;volatile
  5035  0F14  1003               	bcf	3,0
  5036  0F15  1B8B               	btfsc	11,7
  5037  0F16  1403               	bsf	3,0
  5038  0F17  138B               	bcf	11,7
  5039  0F18  1515               	bsf	21,2
  5040  0F19  3055               	movlw	85
  5041  0F1A  0096               	movwf	22	;volatile
  5042  0F1B  30AA               	movlw	170
  5043  0F1C  0096               	movwf	22	;volatile
  5044  0F1D  1495               	bsf	21,1
  5045  0F1E  1115               	bcf	21,2
  5046  0F1F  1803               	btfsc	3,0
  5047  0F20  178B               	bsf	11,7
  5048  0F21  0008               	return
  5049  0F22                     __end_of_eeprom_write:	
  5050  0F22                     __ptext2043:	
  5051 ;; =============== function _strncmp ends ============
  5052                           
  5053                           
  5054 ;; *************** function _strlen *****************
  5055 ;; Defined at:
  5056 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strlen.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5059 ;;		 -> STR_34(11), STR_31(6), STR_29(5), ATCommand_ErrString(15), 
  5060 ;;		 -> ATCommand_OkString(15), 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  5063 ;;		 -> STR_34(11), STR_31(6), STR_29(5), ATCommand_ErrString(15), 
  5064 ;;		 -> ATCommand_OkString(15), 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  2    0[BANK0 ] unsigned int 
  5067 ;; Registers used:
  5068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5069 ;; Tracked objects:
  5070 ;;		On entry : 1F/0
  5071 ;;		On exit  : 1F/0
  5072 ;;		Unchanged: FFFE0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5074 ;;      Params:         0       2       0       0       0       0       0       0
  5075 ;;      Locals:         0       2       0       0       0       0       0       0
  5076 ;;      Temps:          0       2       0       0       0       0       0       0
  5077 ;;      Totals:         0       6       0       0       0       0       0       0
  5078 ;;Total ram usage:        6 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    3
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_strstr
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087  0F22                     _strlen:	
  5088                           
  5089                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  5090  0F22  0821               	movf	strlen@s+1,w
  5091  0F23  00A5               	movwf	strlen@cp+1
  5092  0F24  0820               	movf	strlen@s,w
  5093  0F25  00A4               	movwf	strlen@cp
  5094  0F26                     l30529:	
  5095  0F26  0825               	movf	strlen@cp+1,w
  5096  0F27  00A3               	movwf	??_strlen+1
  5097  0F28  0824               	movf	strlen@cp,w
  5098  0F29  00A2               	movwf	??_strlen
  5099  0F2A  0AA4               	incf	strlen@cp,f
  5100  0F2B  1903               	skipnz
  5101  0F2C  0AA5               	incf	strlen@cp+1,f
  5102  0F2D  0084               	movwf	4
  5103  0F2E  0823               	movf	??_strlen+1,w
  5104  0F2F  0085               	movwf	5
  5105  0F30  0800               	movf	0,w	;code access
  5106  0F31  3800               	iorlw	0
  5107  0F32  1D03               	skipz
  5108  0F33  2F26               	goto	l30529
  5109  0F34  0820               	movf	strlen@s,w
  5110  0F35  0224               	subwf	strlen@cp,w
  5111  0F36  00A2               	movwf	??_strlen
  5112  0F37  0821               	movf	strlen@s+1,w
  5113  0F38  3B25               	subwfb	strlen@cp+1,w
  5114  0F39  00A3               	movwf	??_strlen+1
  5115  0F3A  0822               	movf	??_strlen,w
  5116  0F3B  3EFF               	addlw	255
  5117  0F3C  00A0               	movwf	?_strlen
  5118  0F3D  30FF               	movlw	255
  5119  0F3E  3D23               	addwfc	??_strlen+1,w
  5120  0F3F  00A1               	movwf	?_strlen+1
  5121  0F40  0008               	return
  5122  0F41                     __end_of_strlen:	
  5123  0F41                     __ptext2042:	
  5124 ;; =============== function _strchr ends ============
  5125                           
  5126                           
  5127 ;; *************** function _strncmp *****************
  5128 ;; Defined at:
  5129 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strncmp.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  5132 ;;		 -> ATCommand_RxList(150), RAM(128), 
  5133 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  5134 ;;		 -> STR_34(11), STR_31(6), STR_29(5), ATCommand_ErrString(15), 
  5135 ;;		 -> ATCommand_OkString(15), 
  5136 ;;  len             2   10[BANK0 ] unsigned int 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  2    6[BANK0 ] int 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5143 ;; Tracked objects:
  5144 ;;		On entry : 1F/0
  5145 ;;		On exit  : 1F/0
  5146 ;;		Unchanged: FFFE0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5148 ;;      Params:         0       6       0       0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0
  5150 ;;      Temps:          0       1       0       0       0       0       0       0
  5151 ;;      Totals:         0       7       0       0       0       0       0       0
  5152 ;;Total ram usage:        7 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    3
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_strstr
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161  0F41                     _strncmp:	
  5162  0F41                     l30547:	
  5163                           ; Regs used in _strncmp: [wreg-status,0+pclath]
  5164                           
  5165  0F41  3001               	movlw	1
  5166  0F42  02AA               	subwf	strncmp@len,f
  5167  0F43  3000               	movlw	0
  5168  0F44  3BAB               	subwfb	strncmp@len+1,f
  5169  0F45  0A2A               	incf	strncmp@len,w
  5170  0F46  1903               	skipnz
  5171  0F47  0A2B               	incf	strncmp@len+1,w
  5172  0F48  1903               	btfsc	3,2
  5173  0F49  2F76               	goto	l30549
  5174  0F4A  0826               	movf	strncmp@s1,w
  5175  0F4B  0086               	movwf	6
  5176  0F4C  0827               	movf	strncmp@s1+1,w
  5177  0F4D  0087               	movwf	7
  5178  0F4E  0801               	movf	1,w
  5179  0F4F  3A00               	xorlw	0
  5180  0F50  1903               	skipnz
  5181  0F51  2F60               	goto	l30541
  5182  0F52  0828               	movf	strncmp@s2,w
  5183  0F53  0084               	movwf	4
  5184  0F54  0829               	movf	strncmp@s2+1,w
  5185  0F55  0085               	movwf	5
  5186  0F56  0800               	movf	0,w	;code access
  5187  0F57  00AC               	movwf	??_strncmp
  5188  0F58  0826               	movf	strncmp@s1,w
  5189  0F59  0086               	movwf	6
  5190  0F5A  0827               	movf	strncmp@s1+1,w
  5191  0F5B  0087               	movwf	7
  5192  0F5C  0801               	movf	1,w
  5193  0F5D  062C               	xorwf	??_strncmp,w
  5194  0F5E  1903               	skipnz
  5195  0F5F  2F6F               	goto	l30545
  5196  0F60                     l30541:	
  5197  0F60  0826               	movf	strncmp@s1,w
  5198  0F61  0086               	movwf	6
  5199  0F62  0827               	movf	strncmp@s1+1,w
  5200  0F63  0087               	movwf	7
  5201  0F64  0828               	movf	strncmp@s2,w
  5202  0F65  0084               	movwf	4
  5203  0F66  0829               	movf	strncmp@s2+1,w
  5204  0F67  0085               	movwf	5
  5205  0F68  0800               	movf	0,w	;code access
  5206  0F69  0201               	subwf	1,w
  5207  0F6A  00A6               	movwf	?_strncmp
  5208  0F6B  01A7               	clrf	?_strncmp+1
  5209  0F6C  1C03               	skipc
  5210  0F6D  03A7               	decf	?_strncmp+1,f
  5211  0F6E  0008               	return
  5212  0F6F                     l30545:	
  5213  0F6F  0AA6               	incf	strncmp@s1,f
  5214  0F70  1903               	skipnz
  5215  0F71  0AA7               	incf	strncmp@s1+1,f
  5216  0F72  0AA8               	incf	strncmp@s2,f
  5217  0F73  1903               	skipnz
  5218  0F74  0AA9               	incf	strncmp@s2+1,f
  5219  0F75  2F41               	goto	l30547
  5220  0F76                     l30549:	
  5221  0F76  01A6               	clrf	?_strncmp
  5222  0F77  01A7               	clrf	?_strncmp+1
  5223  0F78  0008               	return
  5224  0F79                     __end_of_strncmp:	
  5225  0F79                     __ptext2041:	
  5226 ;; =============== function ___bmul ends ============
  5227                           
  5228                           
  5229 ;; *************** function _strchr *****************
  5230 ;; Defined at:
  5231 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strchr.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  5234 ;;		 -> ATCommand_RxList(150), RAM(128), 
  5235 ;;  chr             2    2[BANK0 ] int 
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2    wreg      PTR unsigned char 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5242 ;; Tracked objects:
  5243 ;;		On entry : 1F/0
  5244 ;;		On exit  : 1F/0
  5245 ;;		Unchanged: FFFE0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5247 ;;      Params:         0       4       0       0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0       0       0       0
  5249 ;;      Temps:          0       2       0       0       0       0       0       0
  5250 ;;      Totals:         0       6       0       0       0       0       0       0
  5251 ;;Total ram usage:        6 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    3
  5254 ;; This function calls:
  5255 ;;		Nothing
  5256 ;; This function is called by:
  5257 ;;		_strstr
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260  0F79                     _strchr:	
  5261  0F79                     l27810:	
  5262                           ; Regs used in _strchr: [wreg+fsr1l-status,0]
  5263                           
  5264  0F79  0820               	movf	strchr@ptr,w
  5265  0F7A  0086               	movwf	6
  5266  0F7B  0821               	movf	strchr@ptr+1,w
  5267  0F7C  0087               	movwf	7
  5268  0F7D  0801               	movf	1,w
  5269  0F7E  0622               	xorwf	strchr@chr,w
  5270  0F7F  1903               	btfsc	3,2
  5271  0F80  0008               	return
  5272  0F81  0821               	movf	strchr@ptr+1,w
  5273  0F82  00A5               	movwf	??_strchr+1
  5274  0F83  0820               	movf	strchr@ptr,w
  5275  0F84  00A4               	movwf	??_strchr
  5276  0F85  0AA0               	incf	strchr@ptr,f
  5277  0F86  1903               	skipnz
  5278  0F87  0AA1               	incf	strchr@ptr+1,f
  5279  0F88  0086               	movwf	6
  5280  0F89  0825               	movf	??_strchr+1,w
  5281  0F8A  0087               	movwf	7
  5282  0F8B  0881               	movf	1,f
  5283  0F8C  1D03               	skipz
  5284  0F8D  2F79               	goto	l27810
  5285  0F8E  01A0               	clrf	?_strchr
  5286  0F8F  01A1               	clrf	?_strchr+1
  5287  0F90  0008               	return
  5288  0F91                     __end_of_strchr:	
  5289  0F91                     __ptext2036:	
  5290 ;; =============== function ___lbmod ends ============
  5291                           
  5292                           
  5293 ;; *************** function ___lbdiv *****************
  5294 ;; Defined at:
  5295 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbdiv.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  dividend        1    wreg     unsigned char 
  5298 ;;  divisor         1    0[BANK0 ] unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  dividend        1    1[BANK0 ] unsigned char 
  5301 ;;  quotient        1    3[BANK0 ] unsigned char 
  5302 ;;  counter         1    2[BANK0 ] unsigned char 
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      unsigned char 
  5305 ;; Registers used:
  5306 ;;		wreg, status,2, status,0
  5307 ;; Tracked objects:
  5308 ;;		On entry : 1F/0
  5309 ;;		On exit  : 1F/0
  5310 ;;		Unchanged: FFFE0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5312 ;;      Params:         0       1       0       0       0       0       0       0
  5313 ;;      Locals:         0       3       0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0       0       0
  5315 ;;      Totals:         0       4       0       0       0       0       0       0
  5316 ;;Total ram usage:        4 bytes
  5317 ;; Hardware stack levels used:    1
  5318 ;; Hardware stack levels required when called:    3
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_LcdDisplay_CSQ
  5323 ;;		_LcdDisplay_CurTemp
  5324 ;;		_LcdDisplay_Err
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327  0F91                     ___lbdiv:	
  5328                           
  5329                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5330                           ;___lbdiv@dividend stored from wreg
  5331  0F91  00A1               	movwf	___lbdiv@dividend
  5332  0F92  01A3               	clrf	___lbdiv@quotient
  5333  0F93  0820               	movf	___lbdiv@divisor,w
  5334  0F94  1903               	btfsc	3,2
  5335  0F95  2FA7               	goto	l32307
  5336  0F96  01A2               	clrf	___lbdiv@counter
  5337  0F97                     l32293:	
  5338  0F97  0AA2               	incf	___lbdiv@counter,f
  5339  0F98  1BA0               	btfsc	___lbdiv@divisor,7
  5340  0F99  2F9C               	goto	l27508
  5341  0F9A  35A0               	lslf	___lbdiv@divisor,f
  5342  0F9B  2F97               	goto	l32293
  5343  0F9C                     l27508:	
  5344  0F9C  35A3               	lslf	___lbdiv@quotient,f
  5345  0F9D  0820               	movf	___lbdiv@divisor,w
  5346  0F9E  0221               	subwf	___lbdiv@dividend,w
  5347  0F9F  1C03               	skipc
  5348  0FA0  2FA4               	goto	l32303
  5349  0FA1  0820               	movf	___lbdiv@divisor,w
  5350  0FA2  02A1               	subwf	___lbdiv@dividend,f
  5351  0FA3  1423               	bsf	___lbdiv@quotient,0
  5352  0FA4                     l32303:	
  5353  0FA4  36A0               	lsrf	___lbdiv@divisor,f
  5354  0FA5  0BA2               	decfsz	___lbdiv@counter,f
  5355  0FA6  2F9C               	goto	l27508
  5356  0FA7                     l32307:	
  5357  0FA7  0823               	movf	___lbdiv@quotient,w
  5358  0FA8  0008               	return
  5359  0FA9                     __end_of___lbdiv:	
  5360  0FA9                     __ptext2033:	
  5361 ;; =============== function _LcdDisplay_CurTemp ends ============
  5362                           
  5363                           
  5364 ;; *************** function _LcdDisplay_CSQ *****************
  5365 ;; Defined at:
  5366 ;;		line 267 in file "F:\work\WYP\NBIoT1\Display.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;		None
  5369 ;; Auto vars:     Size  Location     Type
  5370 ;;  t2              1    6[BANK0 ] unsigned char 
  5371 ;;  t1              1    5[BANK0 ] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 1F/0
  5378 ;;		On exit  : 1F/F
  5379 ;;		Unchanged: FFFE0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5381 ;;      Params:         0       0       0       0       0       0       0       0
  5382 ;;      Locals:         0       2       0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0
  5384 ;;      Totals:         0       2       0       0       0       0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; Hardware stack levels required when called:    4
  5388 ;; This function calls:
  5389 ;;		___lbdiv
  5390 ;;		___lbmod
  5391 ;;		_LcdDisplayNum
  5392 ;; This function is called by:
  5393 ;;		_InitGPRS
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396  0FA9                     _LcdDisplay_CSQ:	
  5397                           
  5398                           ;Display.c: 268: unsigned char t1,t2;
  5399                           ;Display.c: 272: t1=CSQ/10;
  5400                           
  5401                           ; Regs used in _LcdDisplay_CSQ: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5402  0FA9  300A               	movlw	10
  5403  0FAA  00A0               	movwf	?___lbdiv
  5404  0FAB  0862               	movf	_CSQ,w
  5405  0FAC  2791  3188         	fcall	___lbdiv
  5406  0FAE  00A5               	movwf	LcdDisplay_CSQ@t1
  5407                           
  5408                           ;Display.c: 273: t2=CSQ%10;
  5409  0FAF  300A               	movlw	10
  5410  0FB0  00A0               	movwf	?___lbmod
  5411  0FB1  0862               	movf	_CSQ,w
  5412  0FB2  27C4               	fcall	___lbmod
  5413  0FB3  00A6               	movwf	LcdDisplay_CSQ@t2
  5414                           
  5415                           ;Display.c: 274: DpyNum[0]=0x01 | 0x02 | 0x10 | 0x20 | 0x40;
  5416  0FB4  3073               	movlw	115
  5417  0FB5  00EA               	movwf	_DpyNum
  5418                           
  5419                           ;Display.c: 275: DpyNum[1]=SegCode[t1];
  5420  0FB6  0825               	movf	LcdDisplay_CSQ@t1,w
  5421  0FB7  3184  2490         	fcall	PL4	;call to abstracted procedure
  5422                           
  5423                           ;Display.c: 276: DpyNum[2]=SegCode[t2];
  5424  0FB9  0826               	movf	LcdDisplay_CSQ@t2,w
  5425  0FBA  3E01               	addlw	low (_SegCode| (0+32768))
  5426  0FBB  0084               	movwf	4
  5427  0FBC  3090               	movlw	high (_SegCode| (0+32768))
  5428  0FBD  1803               	skipnc
  5429  0FBE  3E01               	addlw	1
  5430  0FBF  0085               	movwf	5
  5431  0FC0  0800               	movf	0,w	;code access
  5432  0FC1  00EC               	movwf	_DpyNum+2
  5433                           
  5434                           ;Display.c: 277: LcdDisplayNum();
  5435  0FC2  3183  2B87         	ljmp	l31991
  5436  0FC4                     __end_of_LcdDisplay_CSQ:	
  5437  0FC4                     __ptext2035:	
  5438 ;; =============== function _LcdDisplayAll ends ============
  5439                           
  5440                           
  5441 ;; *************** function ___lbmod *****************
  5442 ;; Defined at:
  5443 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbmod.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  dividend        1    wreg     unsigned char 
  5446 ;;  divisor         1    0[BANK0 ] unsigned char 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  dividend        1    2[BANK0 ] unsigned char 
  5449 ;;  rem             1    4[BANK0 ] unsigned char 
  5450 ;;  counter         1    3[BANK0 ] unsigned char 
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      unsigned char 
  5453 ;; Registers used:
  5454 ;;		wreg, status,2, status,0
  5455 ;; Tracked objects:
  5456 ;;		On entry : 1F/0
  5457 ;;		On exit  : 1F/0
  5458 ;;		Unchanged: FFFE0/0
  5459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5460 ;;      Params:         0       1       0       0       0       0       0       0
  5461 ;;      Locals:         0       3       0       0       0       0       0       0
  5462 ;;      Temps:          0       1       0       0       0       0       0       0
  5463 ;;      Totals:         0       5       0       0       0       0       0       0
  5464 ;;Total ram usage:        5 bytes
  5465 ;; Hardware stack levels used:    1
  5466 ;; Hardware stack levels required when called:    3
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_LcdDisplay_CSQ
  5471 ;;		_LcdDisplay_CurTemp
  5472 ;;		_LcdDisplay_Err
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475  0FC4                     ___lbmod:	
  5476                           
  5477                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5478                           ;___lbmod@dividend stored from wreg
  5479  0FC4  00A2               	movwf	___lbmod@dividend
  5480  0FC5  3008               	movlw	8
  5481  0FC6  00A3               	movwf	___lbmod@counter
  5482  0FC7  01A4               	clrf	___lbmod@rem
  5483  0FC8                     l30669:	
  5484  0FC8  0822               	movf	___lbmod@dividend,w
  5485  0FC9  00A1               	movwf	??___lbmod
  5486  0FCA  3007               	movlw	7
  5487  0FCB                     u3935:	
  5488  0FCB  36A1               	lsrf	??___lbmod,f
  5489  0FCC  0B89               	decfsz	9,f
  5490  0FCD  2FCB               	goto	u3935
  5491  0FCE  3524               	lslf	___lbmod@rem,w
  5492  0FCF  0421               	iorwf	??___lbmod,w
  5493  0FD0  00A4               	movwf	___lbmod@rem
  5494  0FD1  35A2               	lslf	___lbmod@dividend,f
  5495  0FD2  0820               	movf	___lbmod@divisor,w
  5496  0FD3  0224               	subwf	___lbmod@rem,w
  5497  0FD4  1C03               	skipc
  5498  0FD5  2FD8               	goto	l30677
  5499  0FD6  0820               	movf	___lbmod@divisor,w
  5500  0FD7  02A4               	subwf	___lbmod@rem,f
  5501  0FD8                     l30677:	
  5502  0FD8  0BA3               	decfsz	___lbmod@counter,f
  5503  0FD9  2FC8               	goto	l30669
  5504  0FDA  0824               	movf	___lbmod@rem,w
  5505  0FDB  0008               	return
  5506  0FDC                     __end_of___lbmod:	
  5507  0FDC                     __ptext2030:	
  5508 ;; =============== function _GetRomData ends ============
  5509                           
  5510                           
  5511 ;; *************** function _LcdDisplay_CALL *****************
  5512 ;; Defined at:
  5513 ;;		line 326 in file "F:\work\WYP\NBIoT1\Display.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;		None               void
  5520 ;; Registers used:
  5521 ;;		wreg, status,2, status,0, pclath, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 1F/0
  5524 ;;		On exit  : 1F/F
  5525 ;;		Unchanged: FFFE0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5527 ;;      Params:         0       0       0       0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0       0       0
  5530 ;;      Totals:         0       0       0       0       0       0       0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used:    1
  5533 ;; Hardware stack levels required when called:    4
  5534 ;; This function calls:
  5535 ;;		_LcdDisplayNum
  5536 ;; This function is called by:
  5537 ;;		_CallProc
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540  0FDC                     _LcdDisplay_CALL:	
  5541                           
  5542                           ;Display.c: 327: DpyNum[0]=0x40;
  5543                           
  5544                           ; Regs used in _LcdDisplay_CALL: [wreg+status,2+status,0+pclath+cstack]
  5545  0FDC  3040               	movlw	64
  5546  0FDD  00EA               	movwf	_DpyNum
  5547                           
  5548                           ;Display.c: 328: DpyNum[1]=0x40;
  5549  0FDE  00EB               	movwf	_DpyNum+1
  5550                           
  5551                           ;Display.c: 329: DpyNum[2]=0x40;
  5552  0FDF  00EC               	movwf	_DpyNum+2
  5553                           
  5554                           ;Display.c: 330: LcdDisplayNum();
  5555  0FE0  3183  2B87         	ljmp	l31991
  5556  0FE2                     __end_of_LcdDisplay_CALL:	
  5557  0FE2                     __ptext2007:	
  5558 ;; =============== function _ATCommand_SendCmd ends ============
  5559                           
  5560                           
  5561 ;; *************** function _PowerON *****************
  5562 ;; Defined at:
  5563 ;;		line 7 in file "F:\work\WYP\NBIoT1\Function.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;		None               void
  5570 ;; Registers used:
  5571 ;;		wreg, status,2, status,0, pclath, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 1F/0
  5574 ;;		On exit  : 1F/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5577 ;;      Params:         0       0       0       0       0       0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    4
  5584 ;; This function calls:
  5585 ;;		___delay_20ms
  5586 ;; This function is called by:
  5587 ;;		_InitGPRS
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590  0FE2                     _PowerON:	
  5591                           
  5592                           ;Function.c: 8: LATD5=1;
  5593                           
  5594                           ; Regs used in _PowerON: [wreg+status,2+status,0+pclath+cstack]
  5595  0FE2  0022               	movlb	2	; select bank2
  5596  0FE3  168F               	bsf	15,5
  5597                           
  5598                           ;Function.c: 9: __delay_20ms(5);
  5599  0FE4  3005               	movlw	5
  5600  0FE5  0020               	movlb	0	; select bank0
  5601  0FE6  00A0               	movwf	?___delay_20ms
  5602  0FE7  01A1               	clrf	?___delay_20ms+1
  5603  0FE8  2313  3188         	fcall	___delay_20ms
  5604                           
  5605                           ;Function.c: 10: LATD5=0;
  5606  0FEA  0022               	movlb	2	; select bank2
  5607  0FEB  128F               	bcf	15,5
  5608                           
  5609                           ;Function.c: 11: __delay_20ms(500);
  5610  0FEC  30F4               	movlw	244
  5611  0FED  0020               	movlb	0	; select bank0
  5612  0FEE  00A0               	movwf	?___delay_20ms
  5613  0FEF  3001               	movlw	1
  5614  0FF0  00A1               	movwf	?___delay_20ms+1
  5615  0FF1  2B13               	ljmp	l12781
  5616  0FF2                     __end_of_PowerON:	
  5617  0FF2                     __ptext2002:	
  5618 ;; =============== function _DS18X20_ReadMeas ends ============
  5619                           
  5620                           
  5621 ;; *************** function _DS18X20_StartMeas *****************
  5622 ;; Defined at:
  5623 ;;		line 133 in file "F:\work\WYP\NBIoT1\DS18x20.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      unsigned char 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, pclath, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 10/0
  5634 ;;		On exit  : 1F/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5637 ;;      Params:         0       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:    5
  5644 ;; This function calls:
  5645 ;;		_OneWire_Reset
  5646 ;;		_OneWire_Command
  5647 ;; This function is called by:
  5648 ;;		_ReadTData
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651  0FF2                     _DS18X20_StartMeas:	
  5652                           
  5653                           ;DS18x20.c: 134: if(OneWire_Reset())
  5654                           
  5655                           ; Regs used in _DS18X20_StartMeas: [wreg+status,2+status,0+pclath+cstack]
  5656  0FF2  3181  2193  3188   	fcall	_OneWire_Reset
  5657  0FF5  3A00               	xorlw	0
  5658  0FF6  1D03               	btfss	3,2
  5659                           
  5660                           ;DS18x20.c: 135: return 0x01;
  5661  0FF7  3401               	retlw	1
  5662                           
  5663                           ;DS18x20.c: 136: return OneWire_Command( 0x44);
  5664  0FF8  3044               	movlw	68
  5665  0FF9  3180  28B3         	ljmp	_OneWire_Command
  5666  0FFB                     __end_of_DS18X20_StartMeas:	
  5667  0FFB                     PL5:	
  5668  0FFB  0020               	movlb	0	; select bank0
  5669  0FFC  0AC3               	incf	InteractServer@j,f
  5670  0FFD  300C               	movlw	12
  5671  0FFE  0243               	subwf	InteractServer@j,w
  5672  0FFF  0008               	return
  5673                           
  5674                           	psect	bssCOMMON
  5675  0077                     __pbssCOMMON:	
  5676  0077                     _RunTick:	
  5677  0077                     	ds	2
  5678  0079                     _ATCommand_Clear:	
  5679  0079                     	ds	1
  5680  007A                     _ATCommand_Flags:	
  5681  007A                     	ds	1
  5682  007B                     _ATCommand_RxCount:	
  5683  007B                     	ds	1
  5684                           
  5685                           	psect	bssBANK0
  5686  004F                     __pbssBANK0:	
  5687  004F                     _TxTemperature:	
  5688  004F                     	ds	4
  5689  0053                     _ATCommand_WaitACKTick:	
  5690  0053                     	ds	2
  5691  0055                     _ATCommand_WaitACKTimes:	
  5692  0055                     	ds	2
  5693  0057                     _CurTemp:	
  5694  0057                     	ds	2
  5695  0059                     _MeasurementTick:	
  5696  0059                     	ds	2
  5697  005B                     _NeedMeasurementTick:	
  5698  005B                     	ds	2
  5699  005D                     _SystemTick:	
  5700  005D                     	ds	2
  5701  005F                     _TCN75_RegReadResualt:	
  5702  005F                     	ds	2
  5703  0061                     _ATCommand_RetryTimes:	
  5704  0061                     	ds	1
  5705  0062                     _CSQ:	
  5706  0062                     	ds	1
  5707  0063                     _ErrState:	
  5708  0063                     	ds	1
  5709  0064                     _TCN75_Config:	
  5710  0064                     	ds	1
  5711  0065                     _TListIndex:	
  5712  0065                     	ds	1
  5713  0066                     _gFlags:	
  5714  0066                     	ds	1
  5715  0067                     _RomParams:	
  5716  0067                     	ds	2
  5717  0069                     _TxErrDataIndex:	
  5718  0069                     	ds	1
  5719                           
  5720                           	psect	dataBANK0
  5721  006A                     __pdataBANK0:	
  5722  006A                     _DpyNum:	
  5723  006A                     	ds	6
  5724                           
  5725                           	psect	bssBANK1
  5726  00A0                     __pbssBANK1:	
  5727  00A0                     _ICCID:	
  5728  00A0                     	ds	21
  5729  00B5                     _ATCommand_ErrString:	
  5730  00B5                     	ds	15
  5731  00C4                     _ATCommand_OkString:	
  5732  00C4                     	ds	15
  5733  00D3                     _DS18X20_Scratchpad:	
  5734  00D3                     	ds	9
  5735                           
  5736                           	psect	bssBANK2
  5737  0120                     __pbssBANK2:	
  5738  0120                     _TList:	
  5739  0120                     	ds	24
  5740                           
  5741                           	psect	clrtext
  5742  05C8                     clear_ram:	
  5743                           ;	Called with FSR0 containing the base address, and
  5744                           ;	btemp/btemp+1 has the size to clear
  5745                           
  5746  05C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  5747  05C9                     clrloop:	
  5748  05C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  5749  05CA  3101               	addfsr 0,1
  5750  05CB  3001               	movlw	1
  5751  05CC  02FE               	subwf	126,f
  5752  05CD  3000               	movlw	0
  5753  05CE  3BFF               	subwfb	127,f
  5754  05CF  087F               	movf	127,w
  5755  05D0  047E               	iorwf	126,w
  5756  05D1  1903               	btfsc	3,2
  5757  05D2  3400               	retlw	0	;all done for this memory range, return
  5758  05D3  2DC9               	goto	clrloop	;have we reached the end yet?
  5759                           
  5760                           	psect	cstackCOMMON
  5761  0070                     __pcstackCOMMON:	
  5762  0070                     ?_SaveRomData:	
  5763  0070                     ?_ATCommand_Init:	
  5764                           ; 0 bytes @ 0x0
  5765                           
  5766  0070                     ?_TCN75_Init:	
  5767                           ; 0 bytes @ 0x0
  5768                           
  5769  0070                     ?_ReadTData:	
  5770                           ; 0 bytes @ 0x0
  5771                           
  5772  0070                     ?_TestProc:	
  5773                           ; 0 bytes @ 0x0
  5774                           
  5775  0070                     ?_CallProc:	
  5776                           ; 0 bytes @ 0x0
  5777                           
  5778  0070                     ?_ATCommand_ProcRx:	
  5779                           ; 0 bytes @ 0x0
  5780                           
  5781  0070                     ?_CallSend:	
  5782                           ; 0 bytes @ 0x0
  5783                           
  5784  0070                     ?_InitGPRS:	
  5785                           ; 0 bytes @ 0x0
  5786                           
  5787  0070                     ?_Uart1_PutHex:	
  5788                           ; 0 bytes @ 0x0
  5789                           
  5790  0070                     ?_Uart1_PutChar:	
  5791                           ; 0 bytes @ 0x0
  5792                           
  5793  0070                     ?_isgraph:	
  5794                           ; 0 bytes @ 0x0
  5795                           
  5796  0070                     ??_isgraph:	
  5797                           ; 1 bit 
  5798                           
  5799  0070                     ?_OneWire_WriteByte:	
  5800                           ; 0 bytes @ 0x0
  5801                           
  5802  0070                     ?_SimI2C_Init:	
  5803                           ; 0 bytes @ 0x0
  5804                           
  5805  0070                     ?_SimI2C_Start:	
  5806                           ; 0 bytes @ 0x0
  5807                           
  5808  0070                     ?_SimI2C_SendByte:	
  5809                           ; 0 bytes @ 0x0
  5810                           
  5811  0070                     ?_SimI2C_Ack:	
  5812                           ; 0 bytes @ 0x0
  5813                           
  5814  0070                     ?_SimI2C_NoAck:	
  5815                           ; 0 bytes @ 0x0
  5816                           
  5817  0070                     ?_SimI2C_Stop:	
  5818                           ; 0 bytes @ 0x0
  5819                           
  5820  0070                     ?_isdigit:	
  5821                           ; 0 bytes @ 0x0
  5822                           
  5823  0070                     ?_LcdDisplayNum:	
  5824                           ; 1 bit 
  5825                           
  5826  0070                     ?_LcdDisplayAll:	
  5827                           ; 0 bytes @ 0x0
  5828                           
  5829  0070                     ?_LcdDisplay_CSQ:	
  5830                           ; 0 bytes @ 0x0
  5831                           
  5832  0070                     ?_LcdDisplay_CurTemp:	
  5833                           ; 0 bytes @ 0x0
  5834                           
  5835  0070                     ?_LcdDisplay_Err:	
  5836                           ; 0 bytes @ 0x0
  5837                           
  5838  0070                     ?_LcdDisplay_CALL:	
  5839                           ; 0 bytes @ 0x0
  5840                           
  5841  0070                     ?_DisplayInit:	
  5842                           ; 0 bytes @ 0x0
  5843                           
  5844  0070                     ?_InitMCU:	
  5845                           ; 0 bytes @ 0x0
  5846                           
  5847  0070                     ?_InitVariable:	
  5848                           ; 0 bytes @ 0x0
  5849                           
  5850  0070                     ?_InitSystem:	
  5851                           ; 0 bytes @ 0x0
  5852                           
  5853  0070                     ?_main:	
  5854                           ; 0 bytes @ 0x0
  5855                           
  5856  0070                     ?_highISR:	
  5857                           ; 0 bytes @ 0x0
  5858                           
  5859  0070                     ?_PowerON:	
  5860                           ; 0 bytes @ 0x0
  5861                           
  5862  0070                     ?_GetRomData:	
  5863                           ; 0 bytes @ 0x0
  5864                           
  5865  0070                     ?_OneWire_Reset:	
  5866                           ; 1 bytes @ 0x0
  5867                           
  5868  0070                     ?_TCN75_SetConfig:	
  5869                           ; 1 bytes @ 0x0
  5870                           
  5871  0070                     ?_DS18X20_StartMeas:	
  5872                           ; 1 bytes @ 0x0
  5873                           
  5874  0070                     ?_DS18X20_ReadMeas:	
  5875                           ; 1 bytes @ 0x0
  5876                           
  5877  0070                     ?_TCN75_ReadReg:	
  5878                           ; 1 bytes @ 0x0
  5879                           
  5880  0070                     ?_InteractServer:	
  5881                           ; 1 bytes @ 0x0
  5882                           
  5883  0070                     ?_eeprom_read:	
  5884                           ; 1 bytes @ 0x0
  5885                           
  5886  0070                     ?_ATCommand_WaitData:	
  5887                           ; 1 bytes @ 0x0
  5888                           
  5889  0070                     ?_OneWire_Command:	
  5890                           ; 1 bytes @ 0x0
  5891                           
  5892  0070                     ?_OneWire_ReadByte:	
  5893                           ; 1 bytes @ 0x0
  5894                           
  5895  0070                     ?_SimI2C_RecAck:	
  5896                           ; 1 bytes @ 0x0
  5897                           
  5898  0070                     ?_SimI2C_ReadByte:	
  5899                           ; 1 bytes @ 0x0
  5900                           
  5901  0070                     _isgraph$31776:	
  5902                           ; 1 bytes @ 0x0
  5903                           
  5904                           
  5905                           ; 1 bytes @ 0x0
  5906  0070                     	ds	1
  5907  0071                     isgraph@c:	
  5908                           
  5909                           ; 1 bytes @ 0x1
  5910  0071                     	ds	1
  5911  0072                     ??_ATCommand_ProcRx:	
  5912                           
  5913                           ; 0 bytes @ 0x2
  5914  0072                     	ds	3
  5915  0075                     ATCommand_ProcRx@rx:	
  5916                           
  5917                           ; 1 bytes @ 0x5
  5918  0075                     	ds	1
  5919  0076                     ??_highISR:	
  5920  0076                     highISR@rx:	
  5921                           ; 0 bytes @ 0x6
  5922                           
  5923                           
  5924                           ; 1 bytes @ 0x6
  5925  0076                     	ds	1
  5926                           
  5927                           	psect	cstackBANK0
  5928  0020                     __pcstackBANK0:	
  5929  0020                     ??_OneWire_Reset:	
  5930  0020                     ??_TCN75_Init:	
  5931                           ; 0 bytes @ 0x0
  5932                           
  5933  0020                     ?___delay_20ms:	
  5934                           ; 0 bytes @ 0x0
  5935                           
  5936  0020                     ?_eeprom_write:	
  5937                           ; 0 bytes @ 0x0
  5938                           
  5939  0020                     ?_MakeTxTemperature:	
  5940                           ; 0 bytes @ 0x0
  5941                           
  5942  0020                     ??_Uart1_PutChar:	
  5943                           ; 0 bytes @ 0x0
  5944                           
  5945  0020                     ??_eeprom_read:	
  5946                           ; 0 bytes @ 0x0
  5947                           
  5948  0020                     ??_OneWire_ReadByte:	
  5949                           ; 0 bytes @ 0x0
  5950                           
  5951  0020                     ??_OneWire_WriteByte:	
  5952                           ; 0 bytes @ 0x0
  5953                           
  5954  0020                     ??_SimI2C_Init:	
  5955                           ; 0 bytes @ 0x0
  5956                           
  5957  0020                     ??_SimI2C_Start:	
  5958                           ; 0 bytes @ 0x0
  5959                           
  5960  0020                     ??_SimI2C_SendByte:	
  5961                           ; 0 bytes @ 0x0
  5962                           
  5963  0020                     ??_SimI2C_RecAck:	
  5964                           ; 0 bytes @ 0x0
  5965                           
  5966  0020                     ??_SimI2C_ReadByte:	
  5967                           ; 0 bytes @ 0x0
  5968                           
  5969  0020                     ??_SimI2C_Ack:	
  5970                           ; 0 bytes @ 0x0
  5971                           
  5972  0020                     ??_SimI2C_NoAck:	
  5973                           ; 0 bytes @ 0x0
  5974                           
  5975  0020                     ??_SimI2C_Stop:	
  5976                           ; 0 bytes @ 0x0
  5977                           
  5978  0020                     ??_isdigit:	
  5979                           ; 0 bytes @ 0x0
  5980                           
  5981  0020                     ??_LcdDisplayNum:	
  5982                           ; 0 bytes @ 0x0
  5983                           
  5984  0020                     ??_LcdDisplayAll:	
  5985                           ; 0 bytes @ 0x0
  5986                           
  5987  0020                     ??_LcdDisplay_CALL:	
  5988                           ; 0 bytes @ 0x0
  5989                           
  5990  0020                     ??_DisplayInit:	
  5991                           ; 0 bytes @ 0x0
  5992                           
  5993  0020                     ??_InitMCU:	
  5994                           ; 0 bytes @ 0x0
  5995                           
  5996  0020                     ?_strcpy:	
  5997                           ; 0 bytes @ 0x0
  5998                           
  5999  0020                     ?_GetVerify_Sum:	
  6000                           ; 1 bytes @ 0x0
  6001                           
  6002  0020                     ?_GetVerify_CRC8:	
  6003                           ; 1 bytes @ 0x0
  6004                           
  6005  0020                     ?___bmul:	
  6006                           ; 1 bytes @ 0x0
  6007                           
  6008  0020                     ?___lbdiv:	
  6009                           ; 1 bytes @ 0x0
  6010                           
  6011  0020                     ?___lbmod:	
  6012                           ; 1 bytes @ 0x0
  6013                           
  6014  0020                     ?_strlen:	
  6015                           ; 1 bytes @ 0x0
  6016                           
  6017  0020                     ?_strchr:	
  6018                           ; 2 bytes @ 0x0
  6019                           
  6020  0020                     ?___wmul:	
  6021                           ; 2 bytes @ 0x0
  6022                           
  6023  0020                     ?___lwdiv:	
  6024                           ; 2 bytes @ 0x0
  6025                           
  6026  0020                     ?___lwmod:	
  6027                           ; 2 bytes @ 0x0
  6028                           
  6029  0020                     LcdDisplayAll@x:	
  6030                           ; 2 bytes @ 0x0
  6031                           
  6032  0020                     Uart1_PutChar@c:	
  6033                           ; 1 bytes @ 0x0
  6034                           
  6035  0020                     SimI2C_RecAck@t:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0020                     SimI2C_SendByte@data:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0020                     SimI2C_ReadByte@data:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0020                     eeprom_write@value:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0020                     _isdigit$31773:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0020                     ___bmul@multiplicand:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0020                     ___lbdiv@divisor:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0020                     ___lbmod@divisor:	
  6057                           ; 1 bytes @ 0x0
  6058                           
  6059  0020                     MakeTxTemperature@T:	
  6060                           ; 1 bytes @ 0x0
  6061                           
  6062  0020                     ___delay_20ms@x:	
  6063                           ; 2 bytes @ 0x0
  6064                           
  6065  0020                     GetVerify_Sum@Count:	
  6066                           ; 2 bytes @ 0x0
  6067                           
  6068  0020                     GetVerify_CRC8@Count:	
  6069                           ; 2 bytes @ 0x0
  6070                           
  6071  0020                     strcpy@from:	
  6072                           ; 2 bytes @ 0x0
  6073                           
  6074  0020                     ___wmul@multiplier:	
  6075                           ; 2 bytes @ 0x0
  6076                           
  6077  0020                     ___lwdiv@divisor:	
  6078                           ; 2 bytes @ 0x0
  6079                           
  6080  0020                     ___lwmod@divisor:	
  6081                           ; 2 bytes @ 0x0
  6082                           
  6083  0020                     strchr@ptr:	
  6084                           ; 2 bytes @ 0x0
  6085                           
  6086  0020                     strlen@s:	
  6087                           ; 2 bytes @ 0x0
  6088                           
  6089                           
  6090                           ; 2 bytes @ 0x0
  6091  0020                     	ds	1
  6092  0021                     ??_eeprom_write:	
  6093  0021                     ?_Uart1_PutString:	
  6094                           ; 0 bytes @ 0x1
  6095                           
  6096  0021                     ??_Uart1_PutHex:	
  6097                           ; 0 bytes @ 0x1
  6098                           
  6099  0021                     ??___bmul:	
  6100                           ; 0 bytes @ 0x1
  6101                           
  6102  0021                     ??___lbdiv:	
  6103                           ; 0 bytes @ 0x1
  6104                           
  6105  0021                     ??___lbmod:	
  6106                           ; 0 bytes @ 0x1
  6107                           
  6108  0021                     OneWire_Reset@Retry:	
  6109                           ; 0 bytes @ 0x1
  6110                           
  6111  0021                     OneWire_WriteByte@val:	
  6112                           ; 1 bytes @ 0x1
  6113                           
  6114  0021                     OneWire_ReadByte@b:	
  6115                           ; 1 bytes @ 0x1
  6116                           
  6117  0021                     Uart1_PutHex@c:	
  6118                           ; 1 bytes @ 0x1
  6119                           
  6120  0021                     SimI2C_SendByte@t:	
  6121                           ; 1 bytes @ 0x1
  6122                           
  6123  0021                     SimI2C_ReadByte@i:	
  6124                           ; 1 bytes @ 0x1
  6125                           
  6126  0021                     eeprom_write@addr:	
  6127                           ; 1 bytes @ 0x1
  6128                           
  6129  0021                     isdigit@c:	
  6130                           ; 1 bytes @ 0x1
  6131                           
  6132  0021                     ___bmul@product:	
  6133                           ; 1 bytes @ 0x1
  6134                           
  6135  0021                     ___lbdiv@dividend:	
  6136                           ; 1 bytes @ 0x1
  6137                           
  6138  0021                     Uart1_PutString@pString:	
  6139                           ; 1 bytes @ 0x1
  6140                           
  6141                           
  6142                           ; 2 bytes @ 0x1
  6143  0021                     	ds	1
  6144  0022                     ??___delay_20ms:	
  6145  0022                     ??_MakeTxTemperature:	
  6146                           ; 0 bytes @ 0x2
  6147                           
  6148  0022                     ??_strcpy:	
  6149                           ; 0 bytes @ 0x2
  6150                           
  6151  0022                     ??_GetVerify_Sum:	
  6152                           ; 0 bytes @ 0x2
  6153                           
  6154  0022                     ??_GetVerify_CRC8:	
  6155                           ; 0 bytes @ 0x2
  6156                           
  6157  0022                     ??_strlen:	
  6158                           ; 0 bytes @ 0x2
  6159                           
  6160  0022                     MakeTxTemperature@x:	
  6161                           ; 0 bytes @ 0x2
  6162                           
  6163  0022                     OneWire_Reset@r:	
  6164                           ; 1 bytes @ 0x2
  6165                           
  6166  0022                     OneWire_WriteByte@temp:	
  6167                           ; 1 bytes @ 0x2
  6168                           
  6169  0022                     OneWire_ReadByte@value:	
  6170                           ; 1 bytes @ 0x2
  6171                           
  6172  0022                     Uart1_PutHex@b:	
  6173                           ; 1 bytes @ 0x2
  6174                           
  6175  0022                     SimI2C_SendByte@i:	
  6176                           ; 1 bytes @ 0x2
  6177                           
  6178  0022                     eeprom_read@addr:	
  6179                           ; 1 bytes @ 0x2
  6180                           
  6181  0022                     ___bmul@multiplier:	
  6182                           ; 1 bytes @ 0x2
  6183                           
  6184  0022                     ___lbdiv@counter:	
  6185                           ; 1 bytes @ 0x2
  6186                           
  6187  0022                     ___lbmod@dividend:	
  6188                           ; 1 bytes @ 0x2
  6189                           
  6190  0022                     ___wmul@multiplicand:	
  6191                           ; 1 bytes @ 0x2
  6192                           
  6193  0022                     ___lwdiv@dividend:	
  6194                           ; 2 bytes @ 0x2
  6195                           
  6196  0022                     ___lwmod@dividend:	
  6197                           ; 2 bytes @ 0x2
  6198                           
  6199  0022                     strchr@chr:	
  6200                           ; 2 bytes @ 0x2
  6201                           
  6202                           
  6203                           ; 2 bytes @ 0x2
  6204  0022                     	ds	1
  6205  0023                     ??_TCN75_SetConfig:	
  6206  0023                     ??_TCN75_ReadReg:	
  6207                           ; 0 bytes @ 0x3
  6208                           
  6209  0023                     ??_Uart1_PutString:	
  6210                           ; 0 bytes @ 0x3
  6211                           
  6212  0023                     ?_Uart1_PutString_Hex:	
  6213                           ; 0 bytes @ 0x3
  6214                           
  6215  0023                     OneWire_WriteByte@i:	
  6216                           ; 0 bytes @ 0x3
  6217                           
  6218  0023                     OneWire_ReadByte@i:	
  6219                           ; 1 bytes @ 0x3
  6220                           
  6221  0023                     TCN75_ReadReg@RegPoint:	
  6222                           ; 1 bytes @ 0x3
  6223                           
  6224  0023                     TCN75_SetConfig@ErrTimes:	
  6225                           ; 1 bytes @ 0x3
  6226                           
  6227  0023                     Uart1_PutString@c:	
  6228                           ; 1 bytes @ 0x3
  6229                           
  6230  0023                     GetVerify_CRC8@pBuff:	
  6231                           ; 1 bytes @ 0x3
  6232                           
  6233  0023                     ___lbdiv@quotient:	
  6234                           ; 1 bytes @ 0x3
  6235                           
  6236  0023                     ___lbmod@counter:	
  6237                           ; 1 bytes @ 0x3
  6238                           
  6239  0023                     Uart1_PutString_Hex@pString:	
  6240                           ; 1 bytes @ 0x3
  6241                           
  6242                           
  6243                           ; 2 bytes @ 0x3
  6244  0023                     	ds	1
  6245  0024                     ??_OneWire_Command:	
  6246  0024                     ??_strchr:	
  6247                           ; 0 bytes @ 0x4
  6248                           
  6249  0024                     ??_PowerON:	
  6250                           ; 0 bytes @ 0x4
  6251                           
  6252  0024                     ??___wmul:	
  6253                           ; 0 bytes @ 0x4
  6254                           
  6255  0024                     ??___lwdiv:	
  6256                           ; 0 bytes @ 0x4
  6257                           
  6258  0024                     ??___lwmod:	
  6259                           ; 0 bytes @ 0x4
  6260                           
  6261  0024                     OneWire_Command@command:	
  6262                           ; 0 bytes @ 0x4
  6263                           
  6264  0024                     TCN75_ReadReg@ErrTimes:	
  6265                           ; 1 bytes @ 0x4
  6266                           
  6267  0024                     TCN75_SetConfig@bRight:	
  6268                           ; 1 bytes @ 0x4
  6269                           
  6270  0024                     GetVerify_Sum@pBuff:	
  6271                           ; 1 bytes @ 0x4
  6272                           
  6273  0024                     GetVerify_CRC8@bit_counter:	
  6274                           ; 1 bytes @ 0x4
  6275                           
  6276  0024                     strcpy@to:	
  6277                           ; 1 bytes @ 0x4
  6278                           
  6279  0024                     ___lwdiv@counter:	
  6280                           ; 1 bytes @ 0x4
  6281                           
  6282  0024                     ___lwmod@counter:	
  6283                           ; 1 bytes @ 0x4
  6284                           
  6285  0024                     ___lbmod@rem:	
  6286                           ; 1 bytes @ 0x4
  6287                           
  6288  0024                     ___wmul@product:	
  6289                           ; 1 bytes @ 0x4
  6290                           
  6291  0024                     strlen@cp:	
  6292                           ; 2 bytes @ 0x4
  6293                           
  6294                           
  6295                           ; 2 bytes @ 0x4
  6296  0024                     	ds	1
  6297  0025                     ??_DS18X20_StartMeas:	
  6298  0025                     ??_Uart1_PutString_Hex:	
  6299                           ; 0 bytes @ 0x5
  6300                           
  6301  0025                     ??_LcdDisplay_CSQ:	
  6302                           ; 0 bytes @ 0x5
  6303                           
  6304  0025                     ??_LcdDisplay_CurTemp:	
  6305                           ; 0 bytes @ 0x5
  6306                           
  6307  0025                     ??_LcdDisplay_Err:	
  6308                           ; 0 bytes @ 0x5
  6309                           
  6310  0025                     LcdDisplay_CSQ@t1:	
  6311                           ; 0 bytes @ 0x5
  6312                           
  6313  0025                     TCN75_ReadReg@bRight:	
  6314                           ; 1 bytes @ 0x5
  6315                           
  6316  0025                     Uart1_PutString_Hex@c:	
  6317                           ; 1 bytes @ 0x5
  6318                           
  6319  0025                     GetVerify_Sum@sum:	
  6320                           ; 1 bytes @ 0x5
  6321                           
  6322  0025                     GetVerify_CRC8@data:	
  6323                           ; 1 bytes @ 0x5
  6324                           
  6325  0025                     strcpy@cp:	
  6326                           ; 1 bytes @ 0x5
  6327                           
  6328  0025                     ___lwdiv@quotient:	
  6329                           ; 1 bytes @ 0x5
  6330                           
  6331                           
  6332                           ; 2 bytes @ 0x5
  6333  0025                     	ds	1
  6334  0026                     ??_ATCommand_Init:	
  6335  0026                     ?_atoi:	
  6336                           ; 0 bytes @ 0x6
  6337                           
  6338  0026                     ?_strncmp:	
  6339                           ; 2 bytes @ 0x6
  6340                           
  6341  0026                     LcdDisplay_CSQ@t2:	
  6342                           ; 2 bytes @ 0x6
  6343                           
  6344  0026                     GetVerify_Sum@i:	
  6345                           ; 1 bytes @ 0x6
  6346                           
  6347  0026                     GetVerify_CRC8@i:	
  6348                           ; 1 bytes @ 0x6
  6349                           
  6350  0026                     atoi@s:	
  6351                           ; 2 bytes @ 0x6
  6352                           
  6353  0026                     strncmp@s1:	
  6354                           ; 2 bytes @ 0x6
  6355                           
  6356                           
  6357                           ; 2 bytes @ 0x6
  6358  0026                     	ds	1
  6359  0027                     ??_GetRomData:	
  6360  0027                     ??_SaveRomData:	
  6361                           ; 0 bytes @ 0x7
  6362                           
  6363  0027                     LcdDisplay_CurTemp@t1:	
  6364                           ; 0 bytes @ 0x7
  6365                           
  6366  0027                     GetRomData@i:	
  6367                           ; 1 bytes @ 0x7
  6368                           
  6369  0027                     SaveRomData@i:	
  6370                           ; 1 bytes @ 0x7
  6371                           
  6372                           
  6373                           ; 1 bytes @ 0x7
  6374  0027                     	ds	1
  6375  0028                     ??_atoi:	
  6376  0028                     ??_InitVariable:	
  6377                           ; 0 bytes @ 0x8
  6378                           
  6379  0028                     LcdDisplay_CurTemp@t2:	
  6380                           ; 0 bytes @ 0x8
  6381                           
  6382  0028                     GetVerify_CRC8@feedback_bit:	
  6383                           ; 1 bytes @ 0x8
  6384                           
  6385  0028                     strncmp@s2:	
  6386                           ; 1 bytes @ 0x8
  6387                           
  6388                           
  6389                           ; 2 bytes @ 0x8
  6390  0028                     	ds	1
  6391  0029                     GetVerify_CRC8@crc:	
  6392                           
  6393                           ; 1 bytes @ 0x9
  6394  0029                     	ds	1
  6395  002A                     ??_DS18X20_ReadMeas:	
  6396  002A                     DS18X20_ReadMeas@bVerify:	
  6397                           ; 0 bytes @ 0xA
  6398                           
  6399  002A                     strncmp@len:	
  6400                           ; 1 bytes @ 0xA
  6401                           
  6402                           
  6403                           ; 2 bytes @ 0xA
  6404  002A                     	ds	1
  6405  002B                     DS18X20_ReadMeas@i:	
  6406                           
  6407                           ; 1 bytes @ 0xB
  6408  002B                     	ds	1
  6409  002C                     ??_ReadTData:	
  6410  002C                     ??_strncmp:	
  6411                           ; 0 bytes @ 0xC
  6412                           
  6413  002C                     ReadTData@retry:	
  6414                           ; 0 bytes @ 0xC
  6415                           
  6416  002C                     atoi@sign:	
  6417                           ; 1 bytes @ 0xC
  6418                           
  6419                           
  6420                           ; 1 bytes @ 0xC
  6421  002C                     	ds	1
  6422  002D                     ??_InitSystem:	
  6423  002D                     ?_strstr:	
  6424                           ; 0 bytes @ 0xD
  6425                           
  6426  002D                     InitSystem@x:	
  6427                           ; 2 bytes @ 0xD
  6428                           
  6429  002D                     atoi@a:	
  6430                           ; 1 bytes @ 0xD
  6431                           
  6432  002D                     strstr@s1:	
  6433                           ; 2 bytes @ 0xD
  6434                           
  6435                           
  6436                           ; 2 bytes @ 0xD
  6437  002D                     	ds	2
  6438  002F                     strstr@s2:	
  6439                           
  6440                           ; 2 bytes @ 0xF
  6441  002F                     	ds	2
  6442  0031                     ??_ATCommand_WaitData:	
  6443  0031                     ??_strstr:	
  6444                           ; 0 bytes @ 0x11
  6445                           
  6446  0031                     ?_ATCommand_SendCmd:	
  6447                           ; 0 bytes @ 0x11
  6448                           
  6449  0031                     ATCommand_SendCmd@cmd:	
  6450                           ; 1 bytes @ 0x11
  6451                           
  6452                           
  6453                           ; 2 bytes @ 0x11
  6454  0031                     	ds	2
  6455  0033                     ??_ATCommand_SendCmd:	
  6456  0033                     ATCommand_WaitData@res:	
  6457                           ; 0 bytes @ 0x13
  6458                           
  6459                           
  6460                           ; 1 bytes @ 0x13
  6461  0033                     	ds	1
  6462  0034                     ATCommand_WaitData@strx:	
  6463                           
  6464                           ; 2 bytes @ 0x14
  6465  0034                     	ds	1
  6466  0035                     ATCommand_SendCmd@retry:	
  6467                           
  6468                           ; 1 bytes @ 0x15
  6469  0035                     	ds	1
  6470  0036                     ??_InteractServer:	
  6471  0036                     InteractServer@retry:	
  6472                           ; 0 bytes @ 0x16
  6473                           
  6474  0036                     ATCommand_SendCmd@strx:	
  6475                           ; 1 bytes @ 0x16
  6476                           
  6477                           
  6478                           ; 2 bytes @ 0x16
  6479  0036                     	ds	1
  6480  0037                     InteractServer@res:	
  6481                           
  6482                           ; 1 bytes @ 0x17
  6483  0037                     	ds	1
  6484  0038                     ATCommand_SendCmd@res:	
  6485  0038                     InteractServer@i_10580:	
  6486                           ; 1 bytes @ 0x18
  6487                           
  6488                           
  6489                           ; 2 bytes @ 0x18
  6490  0038                     	ds	1
  6491  0039                     ??_InitGPRS:	
  6492                           
  6493                           ; 0 bytes @ 0x19
  6494  0039                     	ds	1
  6495  003A                     InteractServer@i_10585:	
  6496                           
  6497                           ; 2 bytes @ 0x1A
  6498  003A                     	ds	2
  6499  003C                     InteractServer@j_10592:	
  6500                           
  6501                           ; 2 bytes @ 0x1C
  6502  003C                     	ds	1
  6503  003D                     InitGPRS@i:	
  6504                           
  6505                           ; 1 bytes @ 0x1D
  6506  003D                     	ds	1
  6507  003E                     InteractServer@txLen:	
  6508  003E                     InitGPRS@strx:	
  6509                           ; 2 bytes @ 0x1E
  6510                           
  6511                           
  6512                           ; 2 bytes @ 0x1E
  6513  003E                     	ds	2
  6514  0040                     InitGPRS@retry:	
  6515  0040                     InteractServer@t:	
  6516                           ; 1 bytes @ 0x20
  6517                           
  6518                           
  6519                           ; 2 bytes @ 0x20
  6520  0040                     	ds	2
  6521  0042                     InteractServer@addr:	
  6522                           
  6523                           ; 1 bytes @ 0x22
  6524  0042                     	ds	1
  6525  0043                     InteractServer@j:	
  6526                           
  6527                           ; 1 bytes @ 0x23
  6528  0043                     	ds	1
  6529  0044                     InteractServer@k:	
  6530                           
  6531                           ; 1 bytes @ 0x24
  6532  0044                     	ds	1
  6533  0045                     InteractServer@i:	
  6534                           
  6535                           ; 1 bytes @ 0x25
  6536  0045                     	ds	1
  6537  0046                     ??_CallSend:	
  6538  0046                     CallSend@ret:	
  6539                           ; 0 bytes @ 0x26
  6540                           
  6541                           
  6542                           ; 1 bytes @ 0x26
  6543  0046                     	ds	1
  6544  0047                     CallSend@i:	
  6545                           
  6546                           ; 1 bytes @ 0x27
  6547  0047                     	ds	1
  6548  0048                     ??_CallProc:	
  6549  0048                     CallProc@retry:	
  6550                           ; 0 bytes @ 0x28
  6551                           
  6552                           
  6553                           ; 1 bytes @ 0x28
  6554  0048                     	ds	1
  6555  0049                     ??_TestProc:	
  6556                           
  6557                           ; 0 bytes @ 0x29
  6558  0049                     	ds	2
  6559  004B                     ??_main:	
  6560                           
  6561                           ; 0 bytes @ 0x2B
  6562  004B                     	ds	2
  6563  004D                     main@addr:	
  6564                           
  6565                           ; 1 bytes @ 0x2D
  6566  004D                     	ds	1
  6567  004E                     main@i:	
  6568                           
  6569                           ; 1 bytes @ 0x2E
  6570  004E                     	ds	1
  6571                           
  6572                           	psect	text1994
  6573  0306                     __ptext1994:	
  6574 ;; =============== function _main ends ============
  6575                           
  6576                           
  6577 ;; *************** function _TestProc *****************
  6578 ;; Defined at:
  6579 ;;		line 9 in file "F:\work\WYP\NBIoT1\TestProc.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;		None
  6582 ;; Auto vars:     Size  Location     Type
  6583 ;;		None
  6584 ;; Return value:  Size  Location     Type
  6585 ;;		None               void
  6586 ;; Registers used:
  6587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6588 ;; Tracked objects:
  6589 ;;		On entry : 1F/0
  6590 ;;		On exit  : 1F/0
  6591 ;;		Unchanged: 0/0
  6592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6593 ;;      Params:         0       0       0       0       0       0       0       0
  6594 ;;      Locals:         0       0       0       0       0       0       0       0
  6595 ;;      Temps:          0       2       0       0       0       0       0       0
  6596 ;;      Totals:         0       2       0       0       0       0       0       0
  6597 ;;Total ram usage:        2 bytes
  6598 ;; Hardware stack levels used:    1
  6599 ;; Hardware stack levels required when called:    9
  6600 ;; This function calls:
  6601 ;;		_LcdDisplayAll
  6602 ;;		___delay_20ms
  6603 ;;		_ReadTData
  6604 ;;		_LcdDisplay_Err
  6605 ;;		_CallProc
  6606 ;; This function is called by:
  6607 ;;		_main
  6608 ;; This function uses a non-reentrant model
  6609 ;;
  6610  0306                     _TestProc:	
  6611                           
  6612                           ;TestProc.c: 10: if(RB7==0)
  6613                           
  6614                           ; Regs used in _TestProc: [wreg-btemp+0+pclath+cstack]
  6615  0306  1B8D               	btfsc	13,7
  6616  0307  0008               	return
  6617                           
  6618                           ;TestProc.c: 11: {
  6619                           ;TestProc.c: 12: _delay((unsigned long)((20)*(4000000/4000.0)));
  6620  0308  301A               	movlw	26
  6621  0309  00CA               	movwf	??_TestProc+1
  6622  030A  30F8               	movlw	248
  6623  030B  00C9               	movwf	??_TestProc
  6624  030C                     u7777:	
  6625  030C  0BC9               	decfsz	??_TestProc,f
  6626  030D  2B0C               	goto	u7777
  6627  030E  0BCA               	decfsz	??_TestProc+1,f
  6628  030F  2B0C               	goto	u7777
  6629  0310  0064               	clrwdt
  6630                           
  6631                           ;TestProc.c: 13: if(RB7==0)
  6632  0311  0020               	movlb	0	; select bank0
  6633  0312  1B8D               	btfsc	13,7
  6634  0313  0008               	return
  6635                           
  6636                           ;TestProc.c: 14: {
  6637                           ;TestProc.c: 15: LcdDisplayAll(0);
  6638  0314  3000               	movlw	0
  6639  0315  2351               	fcall	_LcdDisplayAll
  6640                           
  6641                           ;TestProc.c: 16: __delay_20ms(150);
  6642  0316  3096               	movlw	150
  6643  0317  0020               	movlb	0	; select bank0
  6644  0318  00A0               	movwf	?___delay_20ms
  6645  0319  01A1               	clrf	?___delay_20ms+1
  6646  031A  318B  2313  3183   	fcall	___delay_20ms
  6647                           
  6648                           ;TestProc.c: 17: LcdDisplayAll(1);
  6649  031D  3001               	movlw	1
  6650  031E  2351               	fcall	_LcdDisplayAll
  6651                           
  6652                           ;TestProc.c: 18: ReadTData();
  6653  031F  3188  20F3  3183   	fcall	_ReadTData
  6654                           
  6655                           ;TestProc.c: 19: if(CurTemp.u16==0xf000)
  6656  0322  0020               	movlb	0	; select bank0
  6657  0323  0858               	movf	_CurTemp+1,w
  6658  0324  3AF0               	xorlw	240
  6659  0325  0457               	iorwf	_CurTemp,w
  6660  0326  1D03               	skipz
  6661  0327  2B31               	goto	l33399
  6662                           
  6663                           ;TestProc.c: 20: {
  6664                           ;TestProc.c: 21: LATA4=0;
  6665  0328  0022               	movlb	2	; select bank2
  6666  0329  120C               	bcf	12,4
  6667                           
  6668                           ;TestProc.c: 22: LATA3=1;
  6669  032A  158C               	bsf	12,3
  6670                           
  6671                           ;TestProc.c: 23: ErrState=MissT;
  6672  032B  0020               	movlb	0	; select bank0
  6673  032C  01E3               	clrf	_ErrState
  6674  032D  0AE3               	incf	_ErrState,f
  6675  032E                     l33397:	
  6676                           
  6677                           ;TestProc.c: 24: LcdDisplay_Err();
  6678  032E  2367  3183         	fcall	_LcdDisplay_Err
  6679                           
  6680                           ;TestProc.c: 25: }
  6681  0330  2B43               	goto	l33411
  6682  0331                     l33399:	
  6683                           
  6684                           ;TestProc.c: 26: else
  6685                           ;TestProc.c: 27: {
  6686                           ;TestProc.c: 28: ErrState=NoErr;
  6687  0331  01E3               	clrf	_ErrState
  6688                           
  6689                           ;TestProc.c: 29: CallProc();
  6690  0332  318E  2672  3183   	fcall	_CallProc
  6691                           
  6692                           ;TestProc.c: 30: if(ErrState!=NoErr)
  6693  0335  0020               	movlb	0	; select bank0
  6694  0336  0863               	movf	_ErrState,w
  6695  0337  1903               	btfsc	3,2
  6696  0338  2B3D               	goto	l10724
  6697                           
  6698                           ;TestProc.c: 31: {
  6699                           ;TestProc.c: 32: LATA4=0;
  6700  0339  0022               	movlb	2	; select bank2
  6701  033A  120C               	bcf	12,4
  6702                           
  6703                           ;TestProc.c: 33: LATA3=1;
  6704  033B  158C               	bsf	12,3
  6705  033C  2B2E               	goto	l33397
  6706  033D                     l10724:	
  6707                           
  6708                           ;TestProc.c: 36: else
  6709                           ;TestProc.c: 37: {
  6710                           ;TestProc.c: 38: LATA4=1;
  6711  033D  0022               	movlb	2	; select bank2
  6712  033E  160C               	bsf	12,4
  6713                           
  6714                           ;TestProc.c: 39: LATA3=0;
  6715  033F  118C               	bcf	12,3
  6716                           
  6717                           ;TestProc.c: 40: LcdDisplayAll(2);
  6718  0340  3002               	movlw	2
  6719  0341  2351  3183         	fcall	_LcdDisplayAll
  6720  0343                     l33411:	
  6721                           
  6722                           ;TestProc.c: 44: {
  6723                           ;TestProc.c: 45: if(ErrState!=NoErr)
  6724  0343  0020               	movlb	0	; select bank0
  6725  0344  0863               	movf	_ErrState,w
  6726  0345  1903               	btfsc	3,2
  6727  0346  2B43               	goto	l33411
  6728                           
  6729                           ;TestProc.c: 46: {
  6730                           ;TestProc.c: 47: __delay_20ms(20);
  6731  0347  3014               	movlw	20
  6732  0348  00A0               	movwf	?___delay_20ms
  6733  0349  01A1               	clrf	?___delay_20ms+1
  6734  034A  318B  2313  3183   	fcall	___delay_20ms
  6735                           
  6736                           ;TestProc.c: 48: LATA3=!LATA3;
  6737  034D  3008               	movlw	8
  6738  034E  0022               	movlb	2	; select bank2
  6739  034F  068C               	xorwf	12,f
  6740  0350  2B43               	goto	l33411
  6741  0351                     __end_of_TestProc:	
  6742  0351                     __ptext2034:	
  6743 ;; =============== function _LcdDisplay_CSQ ends ============
  6744                           
  6745                           
  6746 ;; *************** function _LcdDisplayAll *****************
  6747 ;; Defined at:
  6748 ;;		line 240 in file "F:\work\WYP\NBIoT1\Display.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  x               1    wreg     unsigned char 
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  x               1    0[BANK0 ] unsigned char 
  6753 ;; Return value:  Size  Location     Type
  6754 ;;		None               void
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, pclath, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 1D/0
  6759 ;;		On exit  : 10/0
  6760 ;;		Unchanged: FFFE0/0
  6761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6762 ;;      Params:         0       0       0       0       0       0       0       0
  6763 ;;      Locals:         0       1       0       0       0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0
  6765 ;;      Totals:         0       1       0       0       0       0       0       0
  6766 ;;Total ram usage:        1 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:    4
  6769 ;; This function calls:
  6770 ;;		_LcdDisplayNum
  6771 ;; This function is called by:
  6772 ;;		_TestProc
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775  0351                     _LcdDisplayAll:	
  6776                           
  6777                           ; Regs used in _LcdDisplayAll: [wreg+status,2+status,0+pclath+cstack]
  6778                           ;LcdDisplayAll@x stored from wreg
  6779  0351  0020               	movlb	0	; select bank0
  6780  0352  00A0               	movwf	LcdDisplayAll@x
  6781                           
  6782                           ;Display.c: 244: if(x==0)
  6783  0353  08A0               	movf	LcdDisplayAll@x,f
  6784  0354  1D03               	skipz
  6785  0355  2B5B               	goto	l32317
  6786                           
  6787                           ;Display.c: 245: {
  6788                           ;Display.c: 246: DpyNum[0]=0xff;
  6789  0356  30FF               	movlw	255
  6790  0357                     L8:	
  6791  0357  00EA               	movwf	_DpyNum
  6792                           
  6793                           ;Display.c: 247: DpyNum[1]=0xff;
  6794  0358  00EB               	movwf	_DpyNum+1
  6795                           
  6796                           ;Display.c: 248: DpyNum[2]=0xff;
  6797  0359  00EC               	movwf	_DpyNum+2
  6798  035A                     l32315:	
  6799                           
  6800                           ;Display.c: 249: LcdDisplayNum();
  6801  035A  2B87               	ljmp	l31991
  6802  035B                     l32317:	
  6803                           ;Display.c: 250: }
  6804                           
  6805                           
  6806                           ;Display.c: 251: else if(x==1)
  6807  035B  0B20               	decfsz	LcdDisplayAll@x,w
  6808  035C  2B61               	goto	l32323
  6809                           
  6810                           ;Display.c: 252: {
  6811                           ;Display.c: 253: DpyNum[0]=0;
  6812  035D  01EA               	clrf	_DpyNum
  6813                           
  6814                           ;Display.c: 254: DpyNum[1]=0;
  6815  035E  01EB               	clrf	_DpyNum+1
  6816                           
  6817                           ;Display.c: 255: DpyNum[2]=0;
  6818  035F  01EC               	clrf	_DpyNum+2
  6819  0360  2B5A               	goto	l32315
  6820  0361                     l32323:	
  6821                           
  6822                           ;Display.c: 258: else if(x==2)
  6823  0361  0820               	movf	LcdDisplayAll@x,w
  6824  0362  3A02               	xorlw	2
  6825  0363  1D03               	skipz
  6826  0364  0008               	return
  6827                           
  6828                           ;Display.c: 259: {
  6829                           ;Display.c: 260: DpyNum[0]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6830  0365  3077               	movlw	119
  6831  0366  2B57               	goto	L8
  6832  0367                     __end_of_LcdDisplayAll:	
  6833                           ;Display.c: 262: DpyNum[2]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6834                           
  6835                           ;Display.c: 261: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6836                           
  6837  0367                     __ptext2031:	
  6838 ;; =============== function _LcdDisplay_CALL ends ============
  6839                           
  6840                           
  6841 ;; *************** function _LcdDisplay_Err *****************
  6842 ;; Defined at:
  6843 ;;		line 312 in file "F:\work\WYP\NBIoT1\Display.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;		None
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;		None
  6848 ;; Return value:  Size  Location     Type
  6849 ;;		None               void
  6850 ;; Registers used:
  6851 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6852 ;; Tracked objects:
  6853 ;;		On entry : 1D/0
  6854 ;;		On exit  : 1F/F
  6855 ;;		Unchanged: FFFE0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6857 ;;      Params:         0       0       0       0       0       0       0       0
  6858 ;;      Locals:         0       0       0       0       0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0
  6860 ;;      Totals:         0       0       0       0       0       0       0       0
  6861 ;;Total ram usage:        0 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    4
  6864 ;; This function calls:
  6865 ;;		___lbdiv
  6866 ;;		___lbmod
  6867 ;;		_LcdDisplayNum
  6868 ;; This function is called by:
  6869 ;;		_CallProc
  6870 ;;		_TestProc
  6871 ;; This function uses a non-reentrant model
  6872 ;;
  6873  0367                     _LcdDisplay_Err:	
  6874  0367                     l2252:	
  6875                           ;Display.c: 316: while(WA==0);
  6876                           
  6877                           ; Regs used in _LcdDisplay_Err: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6878                           
  6879  0367  002F               	movlb	15	; select bank15
  6880  0368  1E12               	btfss	18,4
  6881  0369  2B67               	goto	l2252
  6882                           
  6883                           ;Display.c: 317: SEG3COM0=0;
  6884  036A  11A0               	bcf	32,3
  6885  036B                     l2255:	
  6886                           ;Display.c: 318: while(WA==0);
  6887                           
  6888  036B  1E12               	btfss	18,4
  6889  036C  2B6B               	goto	l2255
  6890                           
  6891                           ;Display.c: 319: SEG11COM0=0;
  6892  036D  11A1               	bcf	33,3
  6893                           
  6894                           ;Display.c: 320: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  6895  036E  3079               	movlw	121
  6896  036F  0020               	movlb	0	; select bank0
  6897  0370  00EA               	movwf	_DpyNum
  6898                           
  6899                           ;Display.c: 321: DpyNum[1]=SegCode[ErrState/10];
  6900  0371  300A               	movlw	10
  6901  0372  00A0               	movwf	?___lbdiv
  6902  0373  0863               	movf	_ErrState,w
  6903  0374  318F  2791  3183   	fcall	___lbdiv
  6904  0377  2490               	fcall	PL4	;call to abstracted procedure
  6905                           
  6906                           ;Display.c: 322: DpyNum[2]=SegCode[ErrState%10];
  6907  0378  300A               	movlw	10
  6908  0379  00A0               	movwf	?___lbmod
  6909  037A  0863               	movf	_ErrState,w
  6910  037B  318F  27C4  3183   	fcall	___lbmod
  6911  037E  3E01               	addlw	low (_SegCode| (0+32768))
  6912  037F  0084               	movwf	4
  6913  0380  3090               	movlw	high (_SegCode| (0+32768))
  6914  0381  1803               	skipnc
  6915  0382  3E01               	addlw	1
  6916  0383  0085               	movwf	5
  6917  0384  0800               	movf	0,w	;code access
  6918  0385  00EC               	movwf	_DpyNum+2
  6919                           
  6920                           ;Display.c: 323: LcdDisplayNum();
  6921  0386  2B87               	ljmp	l31991
  6922  0387                     __end_of_LcdDisplay_Err:	
  6923  0387                     __ptext2055:	
  6924 ;; =============== function _DisplayInit ends ============
  6925                           
  6926                           
  6927 ;; *************** function _LcdDisplayNum *****************
  6928 ;; Defined at:
  6929 ;;		line 12 in file "F:\work\WYP\NBIoT1\Display.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;		None
  6934 ;; Return value:  Size  Location     Type
  6935 ;;		None               void
  6936 ;; Registers used:
  6937 ;;		None
  6938 ;; Tracked objects:
  6939 ;;		On entry : 10/0
  6940 ;;		On exit  : 1F/F
  6941 ;;		Unchanged: FFFE0/0
  6942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6943 ;;      Params:         0       0       0       0       0       0       0       0
  6944 ;;      Locals:         0       0       0       0       0       0       0       0
  6945 ;;      Temps:          0       0       0       0       0       0       0       0
  6946 ;;      Totals:         0       0       0       0       0       0       0       0
  6947 ;;Total ram usage:        0 bytes
  6948 ;; Hardware stack levels used:    1
  6949 ;; Hardware stack levels required when called:    3
  6950 ;; This function calls:
  6951 ;;		Nothing
  6952 ;; This function is called by:
  6953 ;;		_LcdDisplayAll
  6954 ;;		_LcdDisplay_CSQ
  6955 ;;		_LcdDisplay_CurTemp
  6956 ;;		_LcdDisplay_Err
  6957 ;;		_LcdDisplay_CALL
  6958 ;; This function uses a non-reentrant model
  6959 ;;
  6960  0387                     _LcdDisplayNum:	
  6961  0387                     l31991:	
  6962                           ; Regs used in _LcdDisplayNum: []
  6963                           
  6964                           
  6965                           ;Display.c: 16: if(DpyNum[0]&0x01)
  6966  0387  0020               	movlb	0	; select bank0
  6967  0388  1C6A               	btfss	_DpyNum,0
  6968  0389  2B8F               	goto	l2050
  6969  038A                     l2046:	
  6970  038A  002F               	movlb	15	; select bank15
  6971  038B  1E12               	btfss	18,4
  6972  038C  2B8A               	goto	l2046
  6973                           
  6974                           ;Display.c: 19: SEG5COM0 = 1;
  6975  038D  16A0               	bsf	32,5
  6976                           
  6977                           ;Display.c: 20: }
  6978  038E  2B93               	goto	l2049
  6979  038F                     l2050:	
  6980  038F  002F               	movlb	15	; select bank15
  6981  0390  1E12               	btfss	18,4
  6982  0391  2B8F               	goto	l2050
  6983                           
  6984                           ;Display.c: 24: SEG5COM0 = 0;
  6985  0392  12A0               	bcf	32,5
  6986  0393                     l2049:	
  6987                           
  6988                           ;Display.c: 25: }
  6989                           ;Display.c: 26: if(DpyNum[0]&0x02)
  6990  0393  0020               	movlb	0	; select bank0
  6991  0394  1CEA               	btfss	_DpyNum,1
  6992  0395  2B9B               	goto	l2058
  6993  0396                     l2054:	
  6994  0396  002F               	movlb	15	; select bank15
  6995  0397  1E12               	btfss	18,4
  6996  0398  2B96               	goto	l2054
  6997                           
  6998                           ;Display.c: 29: SEG5COM1 = 1;
  6999  0399  16A3               	bsf	35,5
  7000                           
  7001                           ;Display.c: 30: }
  7002  039A  2B9F               	goto	l2057
  7003  039B                     l2058:	
  7004  039B  002F               	movlb	15	; select bank15
  7005  039C  1E12               	btfss	18,4
  7006  039D  2B9B               	goto	l2058
  7007                           
  7008                           ;Display.c: 34: SEG5COM1 = 0;
  7009  039E  12A3               	bcf	35,5
  7010  039F                     l2057:	
  7011                           
  7012                           ;Display.c: 35: }
  7013                           ;Display.c: 36: if(DpyNum[0]&0x04)
  7014  039F  0020               	movlb	0	; select bank0
  7015  03A0  1D6A               	btfss	_DpyNum,2
  7016  03A1  2BA7               	goto	l2066
  7017  03A2                     l2062:	
  7018  03A2  002F               	movlb	15	; select bank15
  7019  03A3  1E12               	btfss	18,4
  7020  03A4  2BA2               	goto	l2062
  7021                           
  7022                           ;Display.c: 39: SEG5COM2 = 1;
  7023  03A5  16A6               	bsf	38,5
  7024                           
  7025                           ;Display.c: 40: }
  7026  03A6  2BAB               	goto	l2065
  7027  03A7                     l2066:	
  7028  03A7  002F               	movlb	15	; select bank15
  7029  03A8  1E12               	btfss	18,4
  7030  03A9  2BA7               	goto	l2066
  7031                           
  7032                           ;Display.c: 44: SEG5COM2 = 0;
  7033  03AA  12A6               	bcf	38,5
  7034  03AB                     l2065:	
  7035                           
  7036                           ;Display.c: 45: }
  7037                           ;Display.c: 46: if(DpyNum[0]&0x08)
  7038  03AB  0020               	movlb	0	; select bank0
  7039  03AC  1DEA               	btfss	_DpyNum,3
  7040  03AD  2BB3               	goto	l2074
  7041  03AE                     l2070:	
  7042  03AE  002F               	movlb	15	; select bank15
  7043  03AF  1E12               	btfss	18,4
  7044  03B0  2BAE               	goto	l2070
  7045                           
  7046                           ;Display.c: 49: SEG5COM3 = 1;
  7047  03B1  16A9               	bsf	41,5
  7048                           
  7049                           ;Display.c: 50: }
  7050  03B2  2BB7               	goto	l2073
  7051  03B3                     l2074:	
  7052  03B3  002F               	movlb	15	; select bank15
  7053  03B4  1E12               	btfss	18,4
  7054  03B5  2BB3               	goto	l2074
  7055                           
  7056                           ;Display.c: 54: SEG5COM3 = 0;
  7057  03B6  12A9               	bcf	41,5
  7058  03B7                     l2073:	
  7059                           
  7060                           ;Display.c: 55: }
  7061                           ;Display.c: 56: if(DpyNum[0]&0x10)
  7062  03B7  0020               	movlb	0	; select bank0
  7063  03B8  1E6A               	btfss	_DpyNum,4
  7064  03B9  2BBF               	goto	l2082
  7065  03BA                     l2078:	
  7066  03BA  002F               	movlb	15	; select bank15
  7067  03BB  1E12               	btfss	18,4
  7068  03BC  2BBA               	goto	l2078
  7069                           
  7070                           ;Display.c: 59: SEG21COM3 = 1;
  7071  03BD  16AB               	bsf	43,5
  7072                           
  7073                           ;Display.c: 60: }
  7074  03BE  2BC3               	goto	l2081
  7075  03BF                     l2082:	
  7076  03BF  002F               	movlb	15	; select bank15
  7077  03C0  1E12               	btfss	18,4
  7078  03C1  2BBF               	goto	l2082
  7079                           
  7080                           ;Display.c: 64: SEG21COM3 = 0;
  7081  03C2  12AB               	bcf	43,5
  7082  03C3                     l2081:	
  7083                           
  7084                           ;Display.c: 65: }
  7085                           ;Display.c: 66: if(DpyNum[0]&0x20)
  7086  03C3  0020               	movlb	0	; select bank0
  7087  03C4  1EEA               	btfss	_DpyNum,5
  7088  03C5  2BCB               	goto	l2090
  7089  03C6                     l2086:	
  7090  03C6  002F               	movlb	15	; select bank15
  7091  03C7  1E12               	btfss	18,4
  7092  03C8  2BC6               	goto	l2086
  7093                           
  7094                           ;Display.c: 69: SEG21COM1 = 1;
  7095  03C9  16A5               	bsf	37,5
  7096                           
  7097                           ;Display.c: 70: }
  7098  03CA  2BCF               	goto	l2089
  7099  03CB                     l2090:	
  7100  03CB  002F               	movlb	15	; select bank15
  7101  03CC  1E12               	btfss	18,4
  7102  03CD  2BCB               	goto	l2090
  7103                           
  7104                           ;Display.c: 74: SEG21COM1 = 0;
  7105  03CE  12A5               	bcf	37,5
  7106  03CF                     l2089:	
  7107                           
  7108                           ;Display.c: 75: }
  7109                           ;Display.c: 76: if(DpyNum[0]&0x40)
  7110  03CF  0020               	movlb	0	; select bank0
  7111  03D0  1F6A               	btfss	_DpyNum,6
  7112  03D1  2BD7               	goto	l2098
  7113  03D2                     l2094:	
  7114  03D2  002F               	movlb	15	; select bank15
  7115  03D3  1E12               	btfss	18,4
  7116  03D4  2BD2               	goto	l2094
  7117                           
  7118                           ;Display.c: 79: SEG21COM2 = 1;
  7119  03D5  16A8               	bsf	40,5
  7120                           
  7121                           ;Display.c: 80: }
  7122  03D6  2BDB               	goto	l2097
  7123  03D7                     l2098:	
  7124  03D7  002F               	movlb	15	; select bank15
  7125  03D8  1E12               	btfss	18,4
  7126  03D9  2BD7               	goto	l2098
  7127                           
  7128                           ;Display.c: 84: SEG21COM2 = 0;
  7129  03DA  12A8               	bcf	40,5
  7130  03DB                     l2097:	
  7131                           
  7132                           ;Display.c: 85: }
  7133                           ;Display.c: 87: if(DpyNum[1]&0x01)
  7134  03DB  0020               	movlb	0	; select bank0
  7135  03DC  1C6B               	btfss	_DpyNum+1,0
  7136  03DD  2BE3               	goto	l2106
  7137  03DE                     l2102:	
  7138  03DE  002F               	movlb	15	; select bank15
  7139  03DF  1E12               	btfss	18,4
  7140  03E0  2BDE               	goto	l2102
  7141                           
  7142                           ;Display.c: 90: SEG16COM0 = 1;
  7143  03E1  1422               	bsf	34,0
  7144                           
  7145                           ;Display.c: 91: }
  7146  03E2  2BE7               	goto	l2105
  7147  03E3                     l2106:	
  7148  03E3  002F               	movlb	15	; select bank15
  7149  03E4  1E12               	btfss	18,4
  7150  03E5  2BE3               	goto	l2106
  7151                           
  7152                           ;Display.c: 95: SEG16COM0 = 0;
  7153  03E6  1022               	bcf	34,0
  7154  03E7                     l2105:	
  7155                           
  7156                           ;Display.c: 96: }
  7157                           ;Display.c: 97: if(DpyNum[1]&0x02)
  7158  03E7  0020               	movlb	0	; select bank0
  7159  03E8  1CEB               	btfss	_DpyNum+1,1
  7160  03E9  2BEF               	goto	l2114
  7161  03EA                     l2110:	
  7162  03EA  002F               	movlb	15	; select bank15
  7163  03EB  1E12               	btfss	18,4
  7164  03EC  2BEA               	goto	l2110
  7165                           
  7166                           ;Display.c: 100: SEG16COM1 = 1;
  7167  03ED  1425               	bsf	37,0
  7168                           
  7169                           ;Display.c: 101: }
  7170  03EE  2BF3               	goto	l2113
  7171  03EF                     l2114:	
  7172  03EF  002F               	movlb	15	; select bank15
  7173  03F0  1E12               	btfss	18,4
  7174  03F1  2BEF               	goto	l2114
  7175                           
  7176                           ;Display.c: 105: SEG16COM1 = 0;
  7177  03F2  1025               	bcf	37,0
  7178  03F3                     l2113:	
  7179                           
  7180                           ;Display.c: 106: }
  7181                           ;Display.c: 107: if(DpyNum[1]&0x04)
  7182  03F3  0020               	movlb	0	; select bank0
  7183  03F4  1D6B               	btfss	_DpyNum+1,2
  7184  03F5  2BFB               	goto	l2122
  7185  03F6                     l2118:	
  7186  03F6  002F               	movlb	15	; select bank15
  7187  03F7  1E12               	btfss	18,4
  7188  03F8  2BF6               	goto	l2118
  7189                           
  7190                           ;Display.c: 110: SEG16COM2 = 1;
  7191  03F9  1428               	bsf	40,0
  7192                           
  7193                           ;Display.c: 111: }
  7194  03FA  2BFF               	goto	l2121
  7195  03FB                     l2122:	
  7196  03FB  002F               	movlb	15	; select bank15
  7197  03FC  1E12               	btfss	18,4
  7198  03FD  2BFB               	goto	l2122
  7199                           
  7200                           ;Display.c: 115: SEG16COM2 = 0;
  7201  03FE  1028               	bcf	40,0
  7202  03FF                     l2121:	
  7203                           
  7204                           ;Display.c: 116: }
  7205                           ;Display.c: 117: if(DpyNum[1]&0x08)
  7206  03FF  0020               	movlb	0	; select bank0
  7207  0400  1DEB               	btfss	_DpyNum+1,3
  7208  0401  2C07               	goto	l2130
  7209  0402                     l2126:	
  7210  0402  002F               	movlb	15	; select bank15
  7211  0403  1E12               	btfss	18,4
  7212  0404  2C02               	goto	l2126
  7213                           
  7214                           ;Display.c: 120: SEG16COM3 = 1;
  7215  0405  142B               	bsf	43,0
  7216                           
  7217                           ;Display.c: 121: }
  7218  0406  2C0B               	goto	l2129
  7219  0407                     l2130:	
  7220  0407  002F               	movlb	15	; select bank15
  7221  0408  1E12               	btfss	18,4
  7222  0409  2C07               	goto	l2130
  7223                           
  7224                           ;Display.c: 125: SEG16COM3 = 0;
  7225  040A  102B               	bcf	43,0
  7226  040B                     l2129:	
  7227                           
  7228                           ;Display.c: 126: }
  7229                           ;Display.c: 127: if(DpyNum[1]&0x10)
  7230  040B  0020               	movlb	0	; select bank0
  7231  040C  1E6B               	btfss	_DpyNum+1,4
  7232  040D  2C13               	goto	l2138
  7233  040E                     l2134:	
  7234  040E  002F               	movlb	15	; select bank15
  7235  040F  1E12               	btfss	18,4
  7236  0410  2C0E               	goto	l2134
  7237                           
  7238                           ;Display.c: 130: SEG11COM3 = 1;
  7239  0411  15AA               	bsf	42,3
  7240                           
  7241                           ;Display.c: 131: }
  7242  0412  2C17               	goto	l2137
  7243  0413                     l2138:	
  7244  0413  002F               	movlb	15	; select bank15
  7245  0414  1E12               	btfss	18,4
  7246  0415  2C13               	goto	l2138
  7247                           
  7248                           ;Display.c: 135: SEG11COM3 = 0;
  7249  0416  11AA               	bcf	42,3
  7250  0417                     l2137:	
  7251                           
  7252                           ;Display.c: 136: }
  7253                           ;Display.c: 137: if(DpyNum[1]&0x20)
  7254  0417  0020               	movlb	0	; select bank0
  7255  0418  1EEB               	btfss	_DpyNum+1,5
  7256  0419  2C1F               	goto	l2146
  7257  041A                     l2142:	
  7258  041A  002F               	movlb	15	; select bank15
  7259  041B  1E12               	btfss	18,4
  7260  041C  2C1A               	goto	l2142
  7261                           
  7262                           ;Display.c: 140: SEG11COM1 = 1;
  7263  041D  15A4               	bsf	36,3
  7264                           
  7265                           ;Display.c: 141: }
  7266  041E  2C23               	goto	l2145
  7267  041F                     l2146:	
  7268  041F  002F               	movlb	15	; select bank15
  7269  0420  1E12               	btfss	18,4
  7270  0421  2C1F               	goto	l2146
  7271                           
  7272                           ;Display.c: 145: SEG11COM1 = 0;
  7273  0422  11A4               	bcf	36,3
  7274  0423                     l2145:	
  7275                           
  7276                           ;Display.c: 146: }
  7277                           ;Display.c: 147: if(DpyNum[1]&0x40)
  7278  0423  0020               	movlb	0	; select bank0
  7279  0424  1F6B               	btfss	_DpyNum+1,6
  7280  0425  2C2B               	goto	l2154
  7281  0426                     l2150:	
  7282  0426  002F               	movlb	15	; select bank15
  7283  0427  1E12               	btfss	18,4
  7284  0428  2C26               	goto	l2150
  7285                           
  7286                           ;Display.c: 150: SEG11COM2 = 1;
  7287  0429  15A7               	bsf	39,3
  7288                           
  7289                           ;Display.c: 151: }
  7290  042A  2C2F               	goto	l2153
  7291  042B                     l2154:	
  7292  042B  002F               	movlb	15	; select bank15
  7293  042C  1E12               	btfss	18,4
  7294  042D  2C2B               	goto	l2154
  7295                           
  7296                           ;Display.c: 155: SEG11COM2 = 0;
  7297  042E  11A7               	bcf	39,3
  7298  042F                     l2153:	
  7299                           
  7300                           ;Display.c: 156: }
  7301                           ;Display.c: 157: if(DpyNum[1]&0x80)
  7302  042F  0020               	movlb	0	; select bank0
  7303  0430  1FEB               	btfss	_DpyNum+1,7
  7304  0431  2C37               	goto	l2162
  7305  0432                     l2158:	
  7306  0432  002F               	movlb	15	; select bank15
  7307  0433  1E12               	btfss	18,4
  7308  0434  2C32               	goto	l2158
  7309                           
  7310                           ;Display.c: 160: SEG6COM3 = 1;
  7311  0435  1729               	bsf	41,6
  7312                           
  7313                           ;Display.c: 161: }
  7314  0436  2C3B               	goto	l2161
  7315  0437                     l2162:	
  7316  0437  002F               	movlb	15	; select bank15
  7317  0438  1E12               	btfss	18,4
  7318  0439  2C37               	goto	l2162
  7319                           
  7320                           ;Display.c: 165: SEG6COM3 = 0;
  7321  043A  1329               	bcf	41,6
  7322  043B                     l2161:	
  7323                           
  7324                           ;Display.c: 166: }
  7325                           ;Display.c: 168: if(DpyNum[2]&0x01)
  7326  043B  0020               	movlb	0	; select bank0
  7327  043C  1C6C               	btfss	_DpyNum+2,0
  7328  043D  2C43               	goto	l2170
  7329  043E                     l2166:	
  7330  043E  002F               	movlb	15	; select bank15
  7331  043F  1E12               	btfss	18,4
  7332  0440  2C3E               	goto	l2166
  7333                           
  7334                           ;Display.c: 171: SEG23COM0 = 1;
  7335  0441  17A2               	bsf	34,7
  7336                           
  7337                           ;Display.c: 172: }
  7338  0442  2C47               	goto	l2169
  7339  0443                     l2170:	
  7340  0443  002F               	movlb	15	; select bank15
  7341  0444  1E12               	btfss	18,4
  7342  0445  2C43               	goto	l2170
  7343                           
  7344                           ;Display.c: 176: SEG23COM0 = 0;
  7345  0446  13A2               	bcf	34,7
  7346  0447                     l2169:	
  7347                           
  7348                           ;Display.c: 177: }
  7349                           ;Display.c: 178: if(DpyNum[2]&0x02)
  7350  0447  0020               	movlb	0	; select bank0
  7351  0448  1CEC               	btfss	_DpyNum+2,1
  7352  0449  2C4F               	goto	l2178
  7353  044A                     l2174:	
  7354  044A  002F               	movlb	15	; select bank15
  7355  044B  1E12               	btfss	18,4
  7356  044C  2C4A               	goto	l2174
  7357                           
  7358                           ;Display.c: 181: SEG23COM1 = 1;
  7359  044D  17A5               	bsf	37,7
  7360                           
  7361                           ;Display.c: 182: }
  7362  044E  2C53               	goto	l2177
  7363  044F                     l2178:	
  7364  044F  002F               	movlb	15	; select bank15
  7365  0450  1E12               	btfss	18,4
  7366  0451  2C4F               	goto	l2178
  7367                           
  7368                           ;Display.c: 186: SEG23COM1 = 0;
  7369  0452  13A5               	bcf	37,7
  7370  0453                     l2177:	
  7371                           
  7372                           ;Display.c: 187: }
  7373                           ;Display.c: 188: if(DpyNum[2]&0x04)
  7374  0453  0020               	movlb	0	; select bank0
  7375  0454  1D6C               	btfss	_DpyNum+2,2
  7376  0455  2C5B               	goto	l2186
  7377  0456                     l2182:	
  7378  0456  002F               	movlb	15	; select bank15
  7379  0457  1E12               	btfss	18,4
  7380  0458  2C56               	goto	l2182
  7381                           
  7382                           ;Display.c: 191: SEG23COM2 = 1;
  7383  0459  17A8               	bsf	40,7
  7384                           
  7385                           ;Display.c: 192: }
  7386  045A  2C5F               	goto	l2185
  7387  045B                     l2186:	
  7388  045B  002F               	movlb	15	; select bank15
  7389  045C  1E12               	btfss	18,4
  7390  045D  2C5B               	goto	l2186
  7391                           
  7392                           ;Display.c: 196: SEG23COM2 = 0;
  7393  045E  13A8               	bcf	40,7
  7394  045F                     l2185:	
  7395                           
  7396                           ;Display.c: 197: }
  7397                           ;Display.c: 198: if(DpyNum[2]&0x08)
  7398  045F  0020               	movlb	0	; select bank0
  7399  0460  1DEC               	btfss	_DpyNum+2,3
  7400  0461  2C67               	goto	l2194
  7401  0462                     l2190:	
  7402  0462  002F               	movlb	15	; select bank15
  7403  0463  1E12               	btfss	18,4
  7404  0464  2C62               	goto	l2190
  7405                           
  7406                           ;Display.c: 201: SEG23COM3 = 1;
  7407  0465  17AB               	bsf	43,7
  7408                           
  7409                           ;Display.c: 202: }
  7410  0466  2C6B               	goto	l2193
  7411  0467                     l2194:	
  7412  0467  002F               	movlb	15	; select bank15
  7413  0468  1E12               	btfss	18,4
  7414  0469  2C67               	goto	l2194
  7415                           
  7416                           ;Display.c: 206: SEG23COM3 = 0;
  7417  046A  13AB               	bcf	43,7
  7418  046B                     l2193:	
  7419                           
  7420                           ;Display.c: 207: }
  7421                           ;Display.c: 208: if(DpyNum[2]&0x10)
  7422  046B  0020               	movlb	0	; select bank0
  7423  046C  1E6C               	btfss	_DpyNum+2,4
  7424  046D  2C73               	goto	l2202
  7425  046E                     l2198:	
  7426  046E  002F               	movlb	15	; select bank15
  7427  046F  1E12               	btfss	18,4
  7428  0470  2C6E               	goto	l2198
  7429                           
  7430                           ;Display.c: 211: SEG3COM3 = 1;
  7431  0471  15A9               	bsf	41,3
  7432                           
  7433                           ;Display.c: 212: }
  7434  0472  2C77               	goto	l2201
  7435  0473                     l2202:	
  7436  0473  002F               	movlb	15	; select bank15
  7437  0474  1E12               	btfss	18,4
  7438  0475  2C73               	goto	l2202
  7439                           
  7440                           ;Display.c: 216: SEG3COM3 = 0;
  7441  0476  11A9               	bcf	41,3
  7442  0477                     l2201:	
  7443                           
  7444                           ;Display.c: 217: }
  7445                           ;Display.c: 218: if(DpyNum[2]&0x20)
  7446  0477  0020               	movlb	0	; select bank0
  7447  0478  1EEC               	btfss	_DpyNum+2,5
  7448  0479  2C7F               	goto	l2210
  7449  047A                     l2206:	
  7450  047A  002F               	movlb	15	; select bank15
  7451  047B  1E12               	btfss	18,4
  7452  047C  2C7A               	goto	l2206
  7453                           
  7454                           ;Display.c: 221: SEG3COM1 = 1;
  7455  047D  15A3               	bsf	35,3
  7456                           
  7457                           ;Display.c: 222: }
  7458  047E  2C83               	goto	l2209
  7459  047F                     l2210:	
  7460  047F  002F               	movlb	15	; select bank15
  7461  0480  1E12               	btfss	18,4
  7462  0481  2C7F               	goto	l2210
  7463                           
  7464                           ;Display.c: 226: SEG3COM1 = 0;
  7465  0482  11A3               	bcf	35,3
  7466  0483                     l2209:	
  7467                           
  7468                           ;Display.c: 227: }
  7469                           ;Display.c: 228: if(DpyNum[2]&0x40)
  7470  0483  0020               	movlb	0	; select bank0
  7471  0484  1F6C               	btfss	_DpyNum+2,6
  7472  0485  2C8B               	goto	l2218
  7473  0486                     l2214:	
  7474  0486  002F               	movlb	15	; select bank15
  7475  0487  1E12               	btfss	18,4
  7476  0488  2C86               	goto	l2214
  7477                           
  7478                           ;Display.c: 231: SEG3COM2 = 1;
  7479  0489  15A6               	bsf	38,3
  7480                           
  7481                           ;Display.c: 232: }
  7482  048A  0008               	return
  7483  048B                     l2218:	
  7484  048B  002F               	movlb	15	; select bank15
  7485  048C  1E12               	btfss	18,4
  7486  048D  2C8B               	goto	l2218
  7487                           
  7488                           ;Display.c: 236: SEG3COM2 = 0;
  7489  048E  11A6               	bcf	38,3
  7490  048F  0008               	return
  7491  0490                     __end_of_LcdDisplayNum:	
  7492  0490                     PL4:	
  7493  0490  3E01               	addlw	low (_SegCode| (0+32768))
  7494  0491  0084               	movwf	4
  7495  0492  3090               	movlw	high (_SegCode| (0+32768))
  7496  0493  1803               	skipnc
  7497  0494  3E01               	addlw	1
  7498  0495  0085               	movwf	5
  7499  0496  0800               	movf	0,w	;code access
  7500  0497  00EB               	movwf	_DpyNum+1
  7501  0498  0008               	return
  7502                           
  7503                           	psect	text2001
  7504  002C                     __ptext2001:	
  7505 ;; =============== function _InitGPRS ends ============
  7506                           
  7507                           
  7508 ;; *************** function _DS18X20_ReadMeas *****************
  7509 ;; Defined at:
  7510 ;;		line 144 in file "F:\work\WYP\NBIoT1\DS18x20.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  bVerify         1    wreg     unsigned char 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;  bVerify         1   10[BANK0 ] unsigned char 
  7515 ;;  i               1   11[BANK0 ] unsigned char 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      unsigned char 
  7518 ;; Registers used:
  7519 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7520 ;; Tracked objects:
  7521 ;;		On entry : 1F/0
  7522 ;;		On exit  : 1E/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7525 ;;      Params:         0       0       0       0       0       0       0       0
  7526 ;;      Locals:         0       2       0       0       0       0       0       0
  7527 ;;      Temps:          0       0       0       0       0       0       0       0
  7528 ;;      Totals:         0       2       0       0       0       0       0       0
  7529 ;;Total ram usage:        2 bytes
  7530 ;; Hardware stack levels used:    1
  7531 ;; Hardware stack levels required when called:    5
  7532 ;; This function calls:
  7533 ;;		_OneWire_Reset
  7534 ;;		_OneWire_Command
  7535 ;;		_OneWire_ReadByte
  7536 ;;		_GetVerify_CRC8
  7537 ;; This function is called by:
  7538 ;;		_ReadTData
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541  002C                     _DS18X20_ReadMeas:	
  7542                           
  7543                           ; Regs used in _DS18X20_ReadMeas: [wreg+fsr1l-status,0+pclath+cstack]
  7544                           ;DS18X20_ReadMeas@bVerify stored from wreg
  7545  002C  00AA               	movwf	DS18X20_ReadMeas@bVerify
  7546                           
  7547                           ;DS18x20.c: 145: unsigned char i;
  7548                           ;DS18x20.c: 146: if(OneWire_Reset())
  7549  002D  2193  3180         	fcall	_OneWire_Reset
  7550  002F  3A00               	xorlw	0
  7551  0030  1D03               	btfss	3,2
  7552                           
  7553                           ;DS18x20.c: 147: return 0x01;
  7554  0031  3401               	retlw	1
  7555                           
  7556                           ;DS18x20.c: 148: if(OneWire_Command(0xBE))
  7557  0032  30BE               	movlw	190
  7558  0033  20B3  3180         	fcall	_OneWire_Command
  7559  0035  3A00               	xorlw	0
  7560  0036  1D03               	btfss	3,2
  7561  0037  3401               	retlw	1
  7562                           
  7563                           ;DS18x20.c: 150: if(bVerify)
  7564  0038  082A               	movf	DS18X20_ReadMeas@bVerify,w
  7565  0039  1903               	btfsc	3,2
  7566  003A  2853               	goto	l32829
  7567                           
  7568                           ;DS18x20.c: 151: {
  7569                           ;DS18x20.c: 152: for ( i=0 ; i< 9; i++ )
  7570  003B  01AB               	clrf	DS18X20_ReadMeas@i
  7571  003C                     l32811:	
  7572                           
  7573                           ;DS18x20.c: 153: DS18X20_Scratchpad[i]=OneWire_ReadByte();
  7574  003C  082B               	movf	DS18X20_ReadMeas@i,w
  7575  003D  3ED3               	addlw	_DS18X20_Scratchpad& (0+255)
  7576  003E  0086               	movwf	6
  7577  003F  0187               	clrf	7
  7578  0040  205B  3180         	fcall	_OneWire_ReadByte
  7579  0042  0081               	movwf	1
  7580  0043  0AAB               	incf	DS18X20_ReadMeas@i,f
  7581  0044  3009               	movlw	9
  7582  0045  022B               	subwf	DS18X20_ReadMeas@i,w
  7583  0046  1C03               	skipc
  7584  0047  283C               	goto	l32811
  7585                           
  7586                           ;DS18x20.c: 154: if ( GetVerify_CRC8( DS18X20_Scratchpad, 9-1 )!=DS18X20_Scratchpad[9-1]
      +                           )
  7587  0048  3008               	movlw	8
  7588  0049  00A0               	movwf	?_GetVerify_CRC8
  7589  004A  01A1               	clrf	?_GetVerify_CRC8+1
  7590  004B  30D3               	movlw	_DS18X20_Scratchpad& (0+255)
  7591  004C  2087  3180         	fcall	_GetVerify_CRC8
  7592  004E  0021               	movlb	1	; select bank1
  7593  004F  065B               	xorwf	(_DS18X20_Scratchpad^(0+128)+8),w
  7594  0050  1D03               	btfss	3,2
  7595                           
  7596                           ;DS18x20.c: 155: return 0x03;
  7597  0051  3403               	retlw	3
  7598                           
  7599                           ;DS18x20.c: 156: return 0x00;
  7600  0052  3400               	retlw	0
  7601  0053                     l32829:	
  7602                           
  7603                           ;DS18x20.c: 158: else
  7604                           ;DS18x20.c: 159: {
  7605                           ;DS18x20.c: 160: DS18X20_Scratchpad[0]=OneWire_ReadByte();
  7606  0053  205B  3180         	fcall	_OneWire_ReadByte
  7607  0055  0021               	movlb	1	; select bank1
  7608  0056  00D3               	movwf	_DS18X20_Scratchpad^(0+128)
  7609                           
  7610                           ;DS18x20.c: 161: DS18X20_Scratchpad[1]=OneWire_ReadByte();
  7611  0057  205B               	fcall	_OneWire_ReadByte
  7612  0058  0021               	movlb	1	; select bank1
  7613  0059  00D4               	movwf	(_DS18X20_Scratchpad^(0+128)+1)
  7614  005A  3400               	retlw	0
  7615  005B                     __end_of_DS18X20_ReadMeas:	
  7616  005B                     __ptext2019:	
  7617 ;; =============== function _OneWire_WriteByte ends ============
  7618                           
  7619                           
  7620 ;; *************** function _OneWire_ReadByte *****************
  7621 ;; Defined at:
  7622 ;;		line 190 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  i               1    3[BANK0 ] unsigned char 
  7627 ;;  value           1    2[BANK0 ] unsigned char 
  7628 ;;  b               1    1[BANK0 ] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      unsigned char 
  7631 ;; Registers used:
  7632 ;;		wreg, status,2, status,0
  7633 ;; Tracked objects:
  7634 ;;		On entry : 1E/0
  7635 ;;		On exit  : 1F/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7638 ;;      Params:         0       0       0       0       0       0       0       0
  7639 ;;      Locals:         0       3       0       0       0       0       0       0
  7640 ;;      Temps:          0       1       0       0       0       0       0       0
  7641 ;;      Totals:         0       4       0       0       0       0       0       0
  7642 ;;Total ram usage:        4 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    3
  7645 ;; This function calls:
  7646 ;;		Nothing
  7647 ;; This function is called by:
  7648 ;;		_DS18X20_ReadMeas
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651  005B                     _OneWire_ReadByte:	
  7652                           
  7653                           ;OneWire.c: 191: unsigned char i;
  7654                           ;OneWire.c: 192: unsigned char b;
  7655                           ;OneWire.c: 193: unsigned char value=0;
  7656                           
  7657                           ; Regs used in _OneWire_ReadByte: [wreg+status,2+status,0]
  7658  005B  0020               	movlb	0	; select bank0
  7659  005C  01A2               	clrf	OneWire_ReadByte@value
  7660                           
  7661                           ;OneWire.c: 194: for(i=0;i<8;i++)
  7662  005D  01A3               	clrf	OneWire_ReadByte@i
  7663  005E                     l19077:	
  7664                           
  7665                           ;OneWire.c: 195: {
  7666                           ;OneWire.c: 196: (GIE = 0);
  7667  005E  138B               	bcf	11,7
  7668                           
  7669                           ;OneWire.c: 197: TRISB1 = 0;LATB1=0;
  7670  005F  0021               	movlb	1	; select bank1
  7671  0060  108D               	bcf	13,1
  7672  0061  0022               	movlb	2	; select bank2
  7673  0062  108D               	bcf	13,1
  7674                           
  7675                           ;OneWire.c: 198: _delay((unsigned long)((2)*(4000000/4000000.0)));
  7676  0063  2864               	nop2	;2 cycle nop
  7677                           
  7678                           ;OneWire.c: 200: TRISB1=1;
  7679  0064  0021               	movlb	1	; select bank1
  7680  0065  148D               	bsf	13,1
  7681                           
  7682                           ;OneWire.c: 201: _delay((unsigned long)((15-3-9)*(4000000/4000000.0)));
  7683  0066  2867               	nop2	;2 cycle nop
  7684  0067  0064               	clrwdt
  7685                           
  7686                           ;OneWire.c: 202: b=RB1;
  7687  0068  3000               	movlw	0
  7688  0069  0020               	movlb	0	; select bank0
  7689  006A  188D               	btfsc	13,1
  7690  006B  3001               	movlw	1
  7691  006C  00A1               	movwf	OneWire_ReadByte@b
  7692                           
  7693                           ;OneWire.c: 203: (GIE = 1);
  7694  006D  178B               	bsf	11,7
  7695                           
  7696                           ;OneWire.c: 204: _delay((unsigned long)((60)*(4000000/4000000.0)));
  7697  006E  3013               	movlw	19
  7698  006F  00A0               	movwf	??_OneWire_ReadByte
  7699  0070                     u7797:	
  7700  0070  0BA0               	decfsz	??_OneWire_ReadByte,f
  7701  0071  2870               	goto	u7797
  7702  0072  2873               	nop2	;nop
  7703                           
  7704                           ;OneWire.c: 206: if(b)
  7705  0073  0020               	movlb	0	; select bank0
  7706  0074  0821               	movf	OneWire_ReadByte@b,w
  7707  0075  1903               	btfsc	3,2
  7708  0076  2880               	goto	l30923
  7709                           
  7710                           ;OneWire.c: 207: {
  7711                           ;OneWire.c: 208: value|=(0x01<<i);
  7712  0077  3001               	movlw	1
  7713  0078  00A0               	movwf	??_OneWire_ReadByte
  7714  0079  0A23               	incf	OneWire_ReadByte@i,w
  7715  007A  287C               	goto	u4274
  7716  007B                     u4275:	
  7717  007B  35A0               	lslf	??_OneWire_ReadByte,f
  7718  007C                     u4274:	
  7719  007C  0B89               	decfsz	9,f
  7720  007D  287B               	goto	u4275
  7721  007E  0820               	movf	??_OneWire_ReadByte,w
  7722  007F  04A2               	iorwf	OneWire_ReadByte@value,f
  7723  0080                     l30923:	
  7724  0080  0AA3               	incf	OneWire_ReadByte@i,f
  7725  0081  3008               	movlw	8
  7726  0082  0223               	subwf	OneWire_ReadByte@i,w
  7727  0083  1C03               	skipc
  7728  0084  285E               	goto	l19077
  7729                           
  7730                           ;OneWire.c: 210: }
  7731                           ;OneWire.c: 211: }
  7732                           ;OneWire.c: 212: return(value);
  7733  0085  0822               	movf	OneWire_ReadByte@value,w
  7734  0086  0008               	return
  7735  0087                     __end_of_OneWire_ReadByte:	
  7736  0087                     __ptext2046:	
  7737 ;; =============== function _SimI2C_Init ends ============
  7738                           
  7739                           
  7740 ;; *************** function _GetVerify_CRC8 *****************
  7741 ;; Defined at:
  7742 ;;		line 90 in file "F:\work\WYP\NBIoT1\Verify.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;  pBuff           1    wreg     PTR unsigned char 
  7745 ;;		 -> DS18X20_Scratchpad(9), 
  7746 ;;  Count           2    0[BANK0 ] unsigned int 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;  pBuff           1    3[BANK0 ] PTR unsigned char 
  7749 ;;		 -> DS18X20_Scratchpad(9), 
  7750 ;;  i               2    6[BANK0 ] unsigned int 
  7751 ;;  crc             1    9[BANK0 ] unsigned char 
  7752 ;;  feedback_bit    1    8[BANK0 ] unsigned char 
  7753 ;;  data            1    5[BANK0 ] unsigned char 
  7754 ;;  bit_counter     1    4[BANK0 ] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      unsigned char 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7759 ;; Tracked objects:
  7760 ;;		On entry : 1F/0
  7761 ;;		On exit  : 1F/0
  7762 ;;		Unchanged: FFFE0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7764 ;;      Params:         0       2       0       0       0       0       0       0
  7765 ;;      Locals:         0       7       0       0       0       0       0       0
  7766 ;;      Temps:          0       1       0       0       0       0       0       0
  7767 ;;      Totals:         0      10       0       0       0       0       0       0
  7768 ;;Total ram usage:       10 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    3
  7771 ;; This function calls:
  7772 ;;		Nothing
  7773 ;; This function is called by:
  7774 ;;		_DS18X20_ReadMeas
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777  0087                     _GetVerify_CRC8:	
  7778                           
  7779                           ; Regs used in _GetVerify_CRC8: [wreg+fsr1l-status,0]
  7780                           ;GetVerify_CRC8@pBuff stored from wreg
  7781  0087  00A3               	movwf	GetVerify_CRC8@pBuff
  7782                           
  7783                           ;Verify.c: 91: unsigned char crc;
  7784                           ;Verify.c: 92: unsigned int i;
  7785                           ;Verify.c: 93: unsigned char bit_counter;
  7786                           ;Verify.c: 94: unsigned char data;
  7787                           ;Verify.c: 95: unsigned char feedback_bit;
  7788                           ;Verify.c: 97: crc = 0x00;
  7789  0088  01A9               	clrf	GetVerify_CRC8@crc
  7790                           
  7791                           ;Verify.c: 99: for(i = 0; i != Count; i++)
  7792  0089  01A6               	clrf	GetVerify_CRC8@i
  7793  008A  01A7               	clrf	GetVerify_CRC8@i+1
  7794  008B                     l30507:	
  7795  008B  0821               	movf	GetVerify_CRC8@Count+1,w
  7796  008C  0627               	xorwf	GetVerify_CRC8@i+1,w
  7797  008D  1D03               	skipz
  7798  008E  2891               	goto	u3685
  7799  008F  0820               	movf	GetVerify_CRC8@Count,w
  7800  0090  0626               	xorwf	GetVerify_CRC8@i,w
  7801  0091                     u3685:	
  7802  0091  1903               	btfsc	3,2
  7803  0092  28B1               	goto	l30509
  7804                           
  7805                           ;Verify.c: 100: {
  7806                           ;Verify.c: 101: data = pBuff[i];
  7807  0093  0826               	movf	GetVerify_CRC8@i,w
  7808  0094  0723               	addwf	GetVerify_CRC8@pBuff,w
  7809  0095  00A2               	movwf	??_GetVerify_CRC8
  7810  0096  0086               	movwf	6
  7811  0097  0187               	clrf	7
  7812  0098  0801               	movf	1,w
  7813  0099  00A5               	movwf	GetVerify_CRC8@data
  7814                           
  7815                           ;Verify.c: 102: bit_counter = 8;
  7816  009A  3008               	movlw	8
  7817  009B  00A4               	movwf	GetVerify_CRC8@bit_counter
  7818  009C                     l30487:	
  7819                           
  7820                           ;Verify.c: 104: {
  7821                           ;Verify.c: 105: feedback_bit = (crc ^ data) & 0x01;
  7822  009C  0829               	movf	GetVerify_CRC8@crc,w
  7823  009D  0625               	xorwf	GetVerify_CRC8@data,w
  7824  009E  00A8               	movwf	GetVerify_CRC8@feedback_bit
  7825  009F  3001               	movlw	1
  7826  00A0  05A8               	andwf	GetVerify_CRC8@feedback_bit,f
  7827                           
  7828                           ;Verify.c: 106: if ( feedback_bit == 0x01 )
  7829  00A1  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  7830  00A2  28A5               	goto	l30495
  7831                           
  7832                           ;Verify.c: 107: crc = crc ^ 0x18;
  7833  00A3  3018               	movlw	24
  7834  00A4  06A9               	xorwf	GetVerify_CRC8@crc,f
  7835  00A5                     l30495:	
  7836                           
  7837                           ;Verify.c: 108: crc = (crc >> 1) & 0x7F;
  7838  00A5  36A9               	lsrf	GetVerify_CRC8@crc,f
  7839  00A6  13A9               	bcf	GetVerify_CRC8@crc,7
  7840                           
  7841                           ;Verify.c: 109: if ( feedback_bit == 0x01 )
  7842  00A7  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  7843  00A8  28AA               	goto	l25294
  7844                           
  7845                           ;Verify.c: 110: crc = crc | 0x80;
  7846  00A9  17A9               	bsf	GetVerify_CRC8@crc,7
  7847  00AA                     l25294:	
  7848                           
  7849                           ;Verify.c: 111: data = data >> 1;
  7850  00AA  36A5               	lsrf	GetVerify_CRC8@data,f
  7851                           
  7852                           ;Verify.c: 112: bit_counter--;
  7853  00AB  0BA4               	decfsz	GetVerify_CRC8@bit_counter,f
  7854                           
  7855                           ;Verify.c: 113: }while (bit_counter > 0);
  7856  00AC  289C               	goto	l30487
  7857  00AD  0AA6               	incf	GetVerify_CRC8@i,f
  7858  00AE  1903               	skipnz
  7859  00AF  0AA7               	incf	GetVerify_CRC8@i+1,f
  7860  00B0  288B               	goto	l30507
  7861  00B1                     l30509:	
  7862                           
  7863                           ;Verify.c: 114: }
  7864                           ;Verify.c: 115: return crc;
  7865  00B1  0829               	movf	GetVerify_CRC8@crc,w
  7866  00B2  0008               	return
  7867  00B3                     __end_of_GetVerify_CRC8:	
  7868  00B3                     __ptext2003:	
  7869 ;; =============== function _DS18X20_StartMeas ends ============
  7870                           
  7871                           
  7872 ;; *************** function _OneWire_Command *****************
  7873 ;; Defined at:
  7874 ;;		line 126 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7875 ;; Parameters:    Size  Location     Type
  7876 ;;  command         1    wreg     unsigned char 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  command         1    4[BANK0 ] unsigned char 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  1    wreg      unsigned char 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, pclath, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 1F/0
  7885 ;;		On exit  : 1F/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7888 ;;      Params:         0       0       0       0       0       0       0       0
  7889 ;;      Locals:         0       1       0       0       0       0       0       0
  7890 ;;      Temps:          0       0       0       0       0       0       0       0
  7891 ;;      Totals:         0       1       0       0       0       0       0       0
  7892 ;;Total ram usage:        1 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    4
  7895 ;; This function calls:
  7896 ;;		_OneWire_Reset
  7897 ;;		_OneWire_WriteByte
  7898 ;; This function is called by:
  7899 ;;		_DS18X20_StartMeas
  7900 ;;		_DS18X20_ReadMeas
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903  00B3                     _OneWire_Command:	
  7904                           
  7905                           ; Regs used in _OneWire_Command: [wreg+status,2+status,0+pclath+cstack]
  7906                           ;OneWire_Command@command stored from wreg
  7907  00B3  00A4               	movwf	OneWire_Command@command
  7908                           
  7909                           ;OneWire.c: 127: if(OneWire_Reset())
  7910  00B4  2193  3180         	fcall	_OneWire_Reset
  7911  00B6  3A00               	xorlw	0
  7912  00B7  1D03               	btfss	3,2
  7913                           
  7914                           ;OneWire.c: 128: return 0x01;
  7915  00B8  3401               	retlw	1
  7916                           
  7917                           ;OneWire.c: 129: OneWire_WriteByte( 0xCC );
  7918  00B9  30CC               	movlw	204
  7919  00BA  20BF  3180         	fcall	_OneWire_WriteByte
  7920                           
  7921                           ;OneWire.c: 130: OneWire_WriteByte( command );
  7922  00BC  0824               	movf	OneWire_Command@command,w
  7923  00BD  20BF               	fcall	_OneWire_WriteByte
  7924                           
  7925                           ;OneWire.c: 131: return 0x00;
  7926  00BE  3400               	retlw	0
  7927  00BF                     __end_of_OneWire_Command:	
  7928  00BF                     __ptext2018:	
  7929 ;; =============== function _SimI2C_Start ends ============
  7930                           
  7931                           
  7932 ;; *************** function _OneWire_WriteByte *****************
  7933 ;; Defined at:
  7934 ;;		line 167 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;  val             1    wreg     unsigned char 
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;  val             1    1[BANK0 ] unsigned char 
  7939 ;;  i               1    3[BANK0 ] unsigned char 
  7940 ;;  temp            1    2[BANK0 ] unsigned char 
  7941 ;; Return value:  Size  Location     Type
  7942 ;;		None               void
  7943 ;; Registers used:
  7944 ;;		wreg, status,2, status,0
  7945 ;; Tracked objects:
  7946 ;;		On entry : 1F/0
  7947 ;;		On exit  : 1F/0
  7948 ;;		Unchanged: 0/0
  7949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7950 ;;      Params:         0       0       0       0       0       0       0       0
  7951 ;;      Locals:         0       3       0       0       0       0       0       0
  7952 ;;      Temps:          0       1       0       0       0       0       0       0
  7953 ;;      Totals:         0       4       0       0       0       0       0       0
  7954 ;;Total ram usage:        4 bytes
  7955 ;; Hardware stack levels used:    1
  7956 ;; Hardware stack levels required when called:    3
  7957 ;; This function calls:
  7958 ;;		Nothing
  7959 ;; This function is called by:
  7960 ;;		_OneWire_Command
  7961 ;; This function uses a non-reentrant model
  7962 ;;
  7963  00BF                     _OneWire_WriteByte:	
  7964                           
  7965                           ; Regs used in _OneWire_WriteByte: [wreg+status,2+status,0]
  7966                           ;OneWire_WriteByte@val stored from wreg
  7967  00BF  00A1               	movwf	OneWire_WriteByte@val
  7968                           
  7969                           ;OneWire.c: 168: unsigned char i;
  7970                           ;OneWire.c: 169: unsigned char temp;
  7971                           ;OneWire.c: 170: for (i=0;i<8;i++)
  7972  00C0  01A3               	clrf	OneWire_WriteByte@i
  7973  00C1                     l30935:	
  7974                           
  7975                           ;OneWire.c: 171: {
  7976                           ;OneWire.c: 172: temp=val>>i;
  7977  00C1  0821               	movf	OneWire_WriteByte@val,w
  7978  00C2  00A0               	movwf	??_OneWire_WriteByte
  7979  00C3  0A23               	incf	OneWire_WriteByte@i,w
  7980  00C4  28C6               	goto	u4294
  7981  00C5                     u4295:	
  7982  00C5  36A0               	lsrf	??_OneWire_WriteByte,f
  7983  00C6                     u4294:	
  7984  00C6  0B89               	decfsz	9,f
  7985  00C7  28C5               	goto	u4295
  7986  00C8  0820               	movf	??_OneWire_WriteByte,w
  7987  00C9  00A2               	movwf	OneWire_WriteByte@temp
  7988                           
  7989                           ;OneWire.c: 173: temp&=0x01;
  7990  00CA  3001               	movlw	1
  7991  00CB  05A2               	andwf	OneWire_WriteByte@temp,f
  7992                           
  7993                           ;OneWire.c: 174: (GIE = 0);
  7994  00CC  138B               	bcf	11,7
  7995                           
  7996                           ;OneWire.c: 175: TRISB1 = 0;LATB1=0;
  7997  00CD  0021               	movlb	1	; select bank1
  7998  00CE  108D               	bcf	13,1
  7999  00CF  0022               	movlb	2	; select bank2
  8000  00D0  108D               	bcf	13,1
  8001                           
  8002                           ;OneWire.c: 176: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8003  00D1  28D2               	nop2	;2 cycle nop
  8004                           
  8005                           ;OneWire.c: 177: if (temp==1)
  8006  00D2  0020               	movlb	0	; select bank0
  8007  00D3  0322               	decf	OneWire_WriteByte@temp,w
  8008  00D4  1D03               	skipz
  8009  00D5  28D8               	goto	l30949
  8010                           
  8011                           ;OneWire.c: 178: {
  8012                           ;OneWire.c: 179: TRISB1=1;
  8013  00D6  0021               	movlb	1	; select bank1
  8014  00D7  148D               	bsf	13,1
  8015  00D8                     l30949:	
  8016                           
  8017                           ;OneWire.c: 180: }
  8018                           ;OneWire.c: 181: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8019  00D8  3018               	movlw	24
  8020  00D9  0020               	movlb	0	; select bank0
  8021  00DA  00A0               	movwf	??_OneWire_WriteByte
  8022  00DB                     u7787:	
  8023  00DB  0BA0               	decfsz	??_OneWire_WriteByte,f
  8024  00DC  28DB               	goto	u7787
  8025  00DD  28DE               	nop2	;nop
  8026                           
  8027                           ;OneWire.c: 182: TRISB1=1;
  8028  00DE  0021               	movlb	1	; select bank1
  8029  00DF  148D               	bsf	13,1
  8030                           
  8031                           ;OneWire.c: 183: (GIE = 1);
  8032  00E0  178B               	bsf	11,7
  8033  00E1  0020               	movlb	0	; select bank0
  8034  00E2  0AA3               	incf	OneWire_WriteByte@i,f
  8035  00E3  3008               	movlw	8
  8036  00E4  0223               	subwf	OneWire_WriteByte@i,w
  8037  00E5  1803               	btfsc	3,0
  8038  00E6  0008               	return
  8039  00E7  28C1               	goto	l30935
  8040  00E8                     __end_of_OneWire_WriteByte:	
  8041  00E8                     __ptext1996:	
  8042 ;; =============== function _CallProc ends ============
  8043                           
  8044                           
  8045 ;; *************** function _InitSystem *****************
  8046 ;; Defined at:
  8047 ;;		line 73 in file "F:\work\WYP\NBIoT1\Init.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  x               1   13[BANK0 ] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;		None               void
  8054 ;; Registers used:
  8055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 17F/0
  8058 ;;		On exit  : 1F/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8061 ;;      Params:         0       0       0       0       0       0       0       0
  8062 ;;      Locals:         0       1       0       0       0       0       0       0
  8063 ;;      Temps:          0       0       0       0       0       0       0       0
  8064 ;;      Totals:         0       1       0       0       0       0       0       0
  8065 ;;Total ram usage:        1 bytes
  8066 ;; Hardware stack levels used:    1
  8067 ;; Hardware stack levels required when called:    7
  8068 ;; This function calls:
  8069 ;;		_InitMCU
  8070 ;;		_InitVariable
  8071 ;;		_DisplayInit
  8072 ;;		_ATCommand_Init
  8073 ;;		_OneWire_Reset
  8074 ;;		_TCN75_Init
  8075 ;;		_TCN75_SetConfig
  8076 ;;		___delay_20ms
  8077 ;;		_ReadTData
  8078 ;; This function is called by:
  8079 ;;		_main
  8080 ;; This function uses a non-reentrant model
  8081 ;;
  8082  00E8                     _InitSystem:	
  8083                           
  8084                           ;Init.c: 74: unsigned char x;
  8085                           ;Init.c: 75: InitMCU();
  8086                           
  8087                           ; Regs used in _InitSystem: [wreg-status,0+pclath+cstack]
  8088  00E8  213E  3180         	fcall	_InitMCU
  8089                           
  8090                           ;Init.c: 76: InitVariable();
  8091  00EA  21C5  3180         	fcall	_InitVariable
  8092                           
  8093                           ;Init.c: 78: DisplayInit();
  8094  00EC  211B  3180         	fcall	_DisplayInit
  8095                           
  8096                           ;Init.c: 81: ATCommand_Init();
  8097  00EE  217C  3180         	fcall	_ATCommand_Init
  8098                           
  8099                           ;Init.c: 83: x=10;
  8100  00F0  300A               	movlw	10
  8101  00F1  00AD               	movwf	InitSystem@x
  8102                           
  8103                           ;Init.c: 84: while(x!=0)
  8104  00F2  28F4               	goto	l4332
  8105  00F3                     l33327:	
  8106                           ;Init.c: 89: break;
  8107                           
  8108                           
  8109                           ;Init.c: 90: }
  8110                           ;Init.c: 91: x--;
  8111  00F3  03AD               	decf	InitSystem@x,f
  8112  00F4                     l4332:	
  8113  00F4  08AD               	movf	InitSystem@x,f
  8114  00F5  1903               	btfsc	3,2
  8115  00F6  28FD               	goto	l33329
  8116                           
  8117                           ;Init.c: 85: {
  8118                           ;Init.c: 86: if(OneWire_Reset()==0)
  8119  00F7  2193  3180         	fcall	_OneWire_Reset
  8120  00F9  3800               	iorlw	0
  8121  00FA  1D03               	skipz
  8122  00FB  28F3               	goto	l33327
  8123                           
  8124                           ;Init.c: 87: {
  8125                           ;Init.c: 88: gFlags.b18B20=1;
  8126  00FC  14E6               	bsf	_gFlags,1
  8127  00FD                     l33329:	
  8128                           
  8129                           ;Init.c: 92: }
  8130                           ;Init.c: 93: if(x==0)
  8131  00FD  08AD               	movf	InitSystem@x,f
  8132  00FE  1D03               	skipz
  8133  00FF  290D               	goto	l33349
  8134                           
  8135                           ;Init.c: 94: {
  8136                           ;Init.c: 95: gFlags.b18B20=0;
  8137  0100  10E6               	bcf	_gFlags,1
  8138                           
  8139                           ;Init.c: 96: TCN75_Init();
  8140  0101  21C4  3180         	fcall	_TCN75_Init
  8141                           
  8142                           ;Init.c: 97: TCN75_Config.bShutdown=1;
  8143  0103  0020               	movlb	0	; select bank0
  8144  0104  1464               	bsf	_TCN75_Config,0
  8145                           
  8146                           ;Init.c: 98: TCN75_Config.COMP_INT=0;
  8147  0105  10E4               	bcf	_TCN75_Config,1
  8148                           
  8149                           ;Init.c: 99: TCN75_Config.Polarity=0;
  8150  0106  1164               	bcf	_TCN75_Config,2
  8151                           
  8152                           ;Init.c: 100: TCN75_Config.FaultQueue=0b00;
  8153  0107  30E7               	movlw	-25
  8154  0108  05E4               	andwf	_TCN75_Config,f
  8155                           
  8156                           ;Init.c: 101: TCN75_Config.Resolution=0b11;
  8157  0109  3060               	movlw	96
  8158  010A  04E4               	iorwf	_TCN75_Config,f
  8159                           
  8160                           ;Init.c: 102: TCN75_Config.OneShot=0;
  8161  010B  13E4               	bcf	_TCN75_Config,7
  8162                           
  8163                           ;Init.c: 103: TCN75_SetConfig();
  8164  010C  220C               	fcall	_TCN75_SetConfig
  8165  010D                     l33349:	
  8166                           
  8167                           ;Init.c: 104: }
  8168                           ;Init.c: 105: __delay_20ms(50);
  8169  010D  3032               	movlw	50
  8170  010E  00A0               	movwf	?___delay_20ms
  8171  010F  01A1               	clrf	?___delay_20ms+1
  8172  0110  318B  2313  3180   	fcall	___delay_20ms
  8173                           
  8174                           ;Init.c: 106: ReadTData();
  8175  0113  3188  20F3         	fcall	_ReadTData
  8176                           
  8177                           ;Init.c: 107: __delay_20ms(250);
  8178  0115  30FA               	movlw	250
  8179  0116  0020               	movlb	0	; select bank0
  8180  0117  00A0               	movwf	?___delay_20ms
  8181  0118  01A1               	clrf	?___delay_20ms+1
  8182  0119  318B  2B13         	ljmp	l12781
  8183  011B                     __end_of_InitSystem:	
  8184  011B                     __ptext2054:	
  8185 ;; =============== function _InitMCU ends ============
  8186                           
  8187                           
  8188 ;; *************** function _DisplayInit *****************
  8189 ;; Defined at:
  8190 ;;		line 334 in file "F:\work\WYP\NBIoT1\Display.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;		None
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;		None
  8195 ;; Return value:  Size  Location     Type
  8196 ;;		None               void
  8197 ;; Registers used:
  8198 ;;		wreg, status,2
  8199 ;; Tracked objects:
  8200 ;;		On entry : 17F/0
  8201 ;;		On exit  : 17F/F
  8202 ;;		Unchanged: FFE80/0
  8203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8204 ;;      Params:         0       0       0       0       0       0       0       0
  8205 ;;      Locals:         0       0       0       0       0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0
  8207 ;;      Totals:         0       0       0       0       0       0       0       0
  8208 ;;Total ram usage:        0 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    3
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_InitSystem
  8215 ;; This function uses a non-reentrant model
  8216 ;;
  8217  011B                     _DisplayInit:	
  8218                           
  8219                           ;Display.c: 338: LCDPS = 0b00000011;
  8220                           
  8221                           ; Regs used in _DisplayInit: [wreg+status,2]
  8222  011B  3003               	movlw	3
  8223  011C  002F               	movlb	15	; select bank15
  8224  011D  0092               	movwf	18	;volatile
  8225                           
  8226                           ;Display.c: 339: LCDSE0 = 0;
  8227  011E  0198               	clrf	24	;volatile
  8228                           
  8229                           ;Display.c: 340: LCDSE1 = 0;
  8230  011F  0199               	clrf	25	;volatile
  8231                           
  8232                           ;Display.c: 341: LCDSE2 = 0;
  8233  0120  019A               	clrf	26	;volatile
  8234                           
  8235                           ;Display.c: 342: SEG21=1;
  8236  0121  169A               	bsf	26,5
  8237                           
  8238                           ;Display.c: 343: SEG5=1;
  8239  0122  1698               	bsf	24,5
  8240                           
  8241                           ;Display.c: 344: SEG11=1;
  8242  0123  1599               	bsf	25,3
  8243                           
  8244                           ;Display.c: 345: SEG16=1;
  8245  0124  141A               	bsf	26,0
  8246                           
  8247                           ;Display.c: 346: SEG6=1;
  8248  0125  1718               	bsf	24,6
  8249                           
  8250                           ;Display.c: 347: SEG3=1;
  8251  0126  1598               	bsf	24,3
  8252                           
  8253                           ;Display.c: 348: SEG23=1;
  8254  0127  179A               	bsf	26,7
  8255                           
  8256                           ;Display.c: 349: SEG22=1;
  8257  0128  171A               	bsf	26,6
  8258                           
  8259                           ;Display.c: 351: LCDCON = 0b00001111;
  8260  0129  300F               	movlw	15
  8261  012A  0091               	movwf	17	;volatile
  8262                           
  8263                           ;Display.c: 352: LCDDATA0=0;
  8264  012B  01A0               	clrf	32	;volatile
  8265                           
  8266                           ;Display.c: 353: LCDDATA1=0;
  8267  012C  01A1               	clrf	33	;volatile
  8268                           
  8269                           ;Display.c: 354: LCDDATA2=0;
  8270  012D  01A2               	clrf	34	;volatile
  8271                           
  8272                           ;Display.c: 355: LCDDATA3=0;
  8273  012E  01A3               	clrf	35	;volatile
  8274                           
  8275                           ;Display.c: 356: LCDDATA4=0;
  8276  012F  01A4               	clrf	36	;volatile
  8277                           
  8278                           ;Display.c: 357: LCDDATA5=0;
  8279  0130  01A5               	clrf	37	;volatile
  8280                           
  8281                           ;Display.c: 358: LCDDATA6=0;
  8282  0131  01A6               	clrf	38	;volatile
  8283                           
  8284                           ;Display.c: 359: LCDDATA7=0;
  8285  0132  01A7               	clrf	39	;volatile
  8286                           
  8287                           ;Display.c: 360: LCDDATA8=0;
  8288  0133  01A8               	clrf	40	;volatile
  8289                           
  8290                           ;Display.c: 361: LCDDATA9=0;
  8291  0134  01A9               	clrf	41	;volatile
  8292                           
  8293                           ;Display.c: 362: LCDDATA10=0;
  8294  0135  01AA               	clrf	42	;volatile
  8295                           
  8296                           ;Display.c: 363: LCDDATA11=0;
  8297  0136  01AB               	clrf	43	;volatile
  8298                           
  8299                           ;Display.c: 365: LCDREF = 0b10100000;
  8300  0137  30A0               	movlw	160
  8301  0138  0093               	movwf	19	;volatile
  8302                           
  8303                           ;Display.c: 366: LCDRL = 0b00110000;
  8304  0139  3030               	movlw	48
  8305  013A  0095               	movwf	21	;volatile
  8306                           
  8307                           ;Display.c: 367: LCDCST = 0b00000000;
  8308  013B  0194               	clrf	20	;volatile
  8309                           
  8310                           ;Display.c: 369: LCDEN=1;
  8311  013C  1791               	bsf	17,7
  8312  013D  0008               	return
  8313  013E                     __end_of_DisplayInit:	
  8314  013E                     __ptext2053:	
  8315 ;; =============== function _eeprom_write ends ============
  8316                           
  8317                           
  8318 ;; *************** function _InitMCU *****************
  8319 ;; Defined at:
  8320 ;;		line 3 in file "F:\work\WYP\NBIoT1\Init.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;		None               void
  8327 ;; Registers used:
  8328 ;;		wreg, status,2
  8329 ;; Tracked objects:
  8330 ;;		On entry : 17F/0
  8331 ;;		On exit  : 17F/0
  8332 ;;		Unchanged: FFE80/0
  8333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8334 ;;      Params:         0       0       0       0       0       0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used:    1
  8340 ;; Hardware stack levels required when called:    3
  8341 ;; This function calls:
  8342 ;;		Nothing
  8343 ;; This function is called by:
  8344 ;;		_InitSystem
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347  013E                     _InitMCU:	
  8348                           
  8349                           ;Init.c: 5: ADCON1=0b00111111;
  8350                           
  8351                           ; Regs used in _InitMCU: [wreg+status,2]
  8352  013E  303F               	movlw	63
  8353  013F  0021               	movlb	1	; select bank1
  8354  0140  009E               	movwf	30	;volatile
  8355                           
  8356                           ;Init.c: 7: ANSELA=0;
  8357  0141  0023               	movlb	3	; select bank3
  8358  0142  018C               	clrf	12	;volatile
  8359                           
  8360                           ;Init.c: 8: ANSELB=0;
  8361  0143  018D               	clrf	13	;volatile
  8362                           
  8363                           ;Init.c: 9: ANSELD=0;
  8364  0144  018F               	clrf	15	;volatile
  8365                           
  8366                           ;Init.c: 10: ANSELE=0;
  8367  0145  0190               	clrf	16	;volatile
  8368                           
  8369                           ;Init.c: 12: LATD5=0;
  8370  0146  0022               	movlb	2	; select bank2
  8371  0147  128F               	bcf	15,5
  8372                           
  8373                           ;Init.c: 13: TRISD5=0;
  8374  0148  0021               	movlb	1	; select bank1
  8375  0149  128F               	bcf	15,5
  8376                           
  8377                           ;Init.c: 14: TRISD4=1;
  8378  014A  160F               	bsf	15,4
  8379                           
  8380                           ;Init.c: 16: nWPUEN=0;
  8381  014B  1395               	bcf	21,7
  8382                           
  8383                           ;Init.c: 17: TRISB7=1;
  8384  014C  178D               	bsf	13,7
  8385                           
  8386                           ;Init.c: 18: WPUB7=1;
  8387  014D  0024               	movlb	4	; select bank4
  8388  014E  178D               	bsf	13,7
  8389                           
  8390                           ;Init.c: 20: LATA4=0;
  8391  014F  0022               	movlb	2	; select bank2
  8392  0150  120C               	bcf	12,4
  8393                           
  8394                           ;Init.c: 21: LATA3=0;
  8395  0151  118C               	bcf	12,3
  8396                           
  8397                           ;Init.c: 23: TRISA4=0;
  8398  0152  0021               	movlb	1	; select bank1
  8399  0153  120C               	bcf	12,4
  8400                           
  8401                           ;Init.c: 24: TRISA3=0;
  8402  0154  118C               	bcf	12,3
  8403                           
  8404                           ;Init.c: 26: TRISB2=1;
  8405  0155  150D               	bsf	13,2
  8406                           
  8407                           ;Init.c: 30: T2CON=0b00111011;
  8408  0156  303B               	movlw	59
  8409  0157  0020               	movlb	0	; select bank0
  8410  0158  009C               	movwf	28	;volatile
  8411                           
  8412                           ;Init.c: 31: PR2=227;
  8413  0159  30E3               	movlw	227
  8414  015A  009B               	movwf	27	;volatile
  8415                           
  8416                           ;Init.c: 32: TMR2ON=0;
  8417  015B  111C               	bcf	28,2
  8418                           
  8419                           ;Init.c: 33: TMR2IE=0;
  8420  015C  0021               	movlb	1	; select bank1
  8421  015D  1091               	bcf	17,1
  8422                           
  8423                           ;Init.c: 34: TMR2IF=0;
  8424  015E  0020               	movlb	0	; select bank0
  8425  015F  1091               	bcf	17,1
  8426                           
  8427                           ;Init.c: 38: T1CON=0b01110000;
  8428  0160  3070               	movlw	112
  8429  0161  0098               	movwf	24	;volatile
  8430                           
  8431                           ;Init.c: 39: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
  8432  0162  303C               	movlw	60
  8433  0163  0097               	movwf	23	;volatile
  8434  0164  30B0               	movlw	176
  8435  0165  0096               	movwf	22	;volatile
  8436                           
  8437                           ;Init.c: 40: TMR1ON=1;
  8438  0166  1418               	bsf	24,0
  8439                           
  8440                           ;Init.c: 41: TMR1IE=1;
  8441  0167  0021               	movlb	1	; select bank1
  8442  0168  1411               	bsf	17,0
  8443                           
  8444                           ;Init.c: 42: TMR1IF=0;
  8445  0169  0020               	movlb	0	; select bank0
  8446  016A  1011               	bcf	17,0
  8447                           
  8448                           ;Init.c: 48: TRISC7=1;
  8449  016B  0021               	movlb	1	; select bank1
  8450  016C  178E               	bsf	14,7
  8451                           
  8452                           ;Init.c: 49: TRISC6=1;
  8453  016D  170E               	bsf	14,6
  8454                           
  8455                           ;Init.c: 50: TXSTA=0b00100110;
  8456  016E  3026               	movlw	38
  8457  016F  0023               	movlb	3	; select bank3
  8458  0170  009E               	movwf	30	;volatile
  8459                           
  8460                           ;Init.c: 51: RCSTA=0b10010000;
  8461  0171  3090               	movlw	144
  8462  0172  009D               	movwf	29	;volatile
  8463                           
  8464                           ;Init.c: 52: SPBRG=25;
  8465  0173  3019               	movlw	25
  8466  0174  009B               	movwf	27	;volatile
  8467                           
  8468                           ;Init.c: 53: RCIE=1;
  8469  0175  0021               	movlb	1	; select bank1
  8470  0176  1691               	bsf	17,5
  8471                           
  8472                           ;Init.c: 54: RCIF=0;
  8473  0177  0020               	movlb	0	; select bank0
  8474  0178  1291               	bcf	17,5
  8475                           
  8476                           ;Init.c: 56: PEIE=1;
  8477  0179  170B               	bsf	11,6
  8478                           
  8479                           ;Init.c: 57: GIE=1;
  8480  017A  178B               	bsf	11,7
  8481  017B  0008               	return
  8482  017C                     __end_of_InitMCU:	
  8483  017C                     __ptext2027:	
  8484 ;; =============== function _OneWire_Reset ends ============
  8485                           
  8486                           
  8487 ;; *************** function _ATCommand_Init *****************
  8488 ;; Defined at:
  8489 ;;		line 17 in file "F:\work\WYP\NBIoT1\ATCommand.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;		None               void
  8496 ;; Registers used:
  8497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 17F/F
  8500 ;;		On exit  : 17F/0
  8501 ;;		Unchanged: FFE80/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8503 ;;      Params:         0       0       0       0       0       0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0
  8505 ;;      Temps:          0       0       0       0       0       0       0       0
  8506 ;;      Totals:         0       0       0       0       0       0       0       0
  8507 ;;Total ram usage:        0 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    4
  8510 ;; This function calls:
  8511 ;;		_strcpy
  8512 ;; This function is called by:
  8513 ;;		_InitSystem
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516  017C                     _ATCommand_Init:	
  8517                           
  8518                           ;ATCommand.c: 18: ATCommand_WaitACKTimes=50;
  8519                           
  8520                           ; Regs used in _ATCommand_Init: [wreg-status,0+pclath+cstack]
  8521  017C  3032               	movlw	50
  8522  017D  0020               	movlb	0	; select bank0
  8523  017E  00D5               	movwf	_ATCommand_WaitACKTimes
  8524  017F  01D6               	clrf	_ATCommand_WaitACKTimes+1
  8525                           
  8526                           ;ATCommand.c: 19: ATCommand_RetryTimes=3;
  8527  0180  3003               	movlw	3
  8528  0181  00E1               	movwf	_ATCommand_RetryTimes
  8529                           
  8530                           ;ATCommand.c: 20: strcpy(ATCommand_OkString,"OK");
  8531  0182  3067               	movlw	low (STR_35| (0+32768))
  8532  0183  00A0               	movwf	?_strcpy
  8533  0184  3091               	movlw	high (STR_35| (0+32768))
  8534  0185  00A1               	movwf	?_strcpy+1
  8535  0186  30C4               	movlw	_ATCommand_OkString& (0+255)
  8536  0187  318E  2637  3180   	fcall	_strcpy
  8537                           
  8538                           ;ATCommand.c: 21: strcpy(ATCommand_ErrString,"ERROR");
  8539  018A  304E               	movlw	low (STR_23| (0+32768))
  8540  018B  00A0               	movwf	?_strcpy
  8541  018C  3091               	movlw	high (STR_23| (0+32768))
  8542  018D  00A1               	movwf	?_strcpy+1
  8543  018E  30B5               	movlw	_ATCommand_ErrString& (0+255)
  8544  018F  318E  2637         	fcall	_strcpy
  8545                           
  8546                           ;ATCommand.c: 22: ATCommand_Clear='\0';
  8547  0191  01F9               	clrf	_ATCommand_Clear
  8548  0192  0008               	return
  8549  0193                     __end_of_ATCommand_Init:	
  8550  0193                     __ptext2026:	
  8551 ;; =============== function _TCN75_Init ends ============
  8552                           
  8553                           
  8554 ;; *************** function _OneWire_Reset *****************
  8555 ;; Defined at:
  8556 ;;		line 6 in file "F:\work\WYP\NBIoT1\OneWire.c"
  8557 ;; Parameters:    Size  Location     Type
  8558 ;;		None
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  r               1    2[BANK0 ] unsigned char 
  8561 ;;  Retry           1    1[BANK0 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      unsigned char 
  8564 ;; Registers used:
  8565 ;;		wreg, status,2, status,0
  8566 ;; Tracked objects:
  8567 ;;		On entry : 1F/0
  8568 ;;		On exit  : 1F/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8571 ;;      Params:         0       0       0       0       0       0       0       0
  8572 ;;      Locals:         0       2       0       0       0       0       0       0
  8573 ;;      Temps:          0       1       0       0       0       0       0       0
  8574 ;;      Totals:         0       3       0       0       0       0       0       0
  8575 ;;Total ram usage:        3 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    3
  8578 ;; This function calls:
  8579 ;;		Nothing
  8580 ;; This function is called by:
  8581 ;;		_InitSystem
  8582 ;;		_DS18X20_StartMeas
  8583 ;;		_DS18X20_ReadMeas
  8584 ;;		_OneWire_Command
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587  0193                     _OneWire_Reset:	
  8588                           
  8589                           ;OneWire.c: 7: unsigned char r,Retry;
  8590                           ;OneWire.c: 8: r=1;
  8591                           
  8592                           ; Regs used in _OneWire_Reset: [wreg+status,2+status,0]
  8593  0193  01A2               	clrf	OneWire_Reset@r
  8594  0194  0AA2               	incf	OneWire_Reset@r,f
  8595                           
  8596                           ;OneWire.c: 9: Retry=5;
  8597  0195  3005               	movlw	5
  8598  0196  00A1               	movwf	OneWire_Reset@Retry
  8599  0197                     l30817:	
  8600                           ;OneWire.c: 10: while(Retry--)
  8601                           
  8602  0197  03A1               	decf	OneWire_Reset@Retry,f
  8603  0198  0821               	movf	OneWire_Reset@Retry,w
  8604  0199  3AFF               	xorlw	255
  8605  019A  1903               	btfsc	3,2
  8606  019B  29C2               	goto	l30819
  8607                           
  8608                           ;OneWire.c: 11: {
  8609                           ;OneWire.c: 12: TRISB1 = 0;LATB1=0;
  8610  019C  0021               	movlb	1	; select bank1
  8611  019D  108D               	bcf	13,1
  8612  019E  0022               	movlb	2	; select bank2
  8613  019F  108D               	bcf	13,1
  8614                           
  8615                           ;OneWire.c: 13: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8616  01A0  309F               	movlw	159
  8617  01A1  0020               	movlb	0	; select bank0
  8618  01A2  00A0               	movwf	??_OneWire_Reset
  8619  01A3                     u7817:	
  8620  01A3  0BA0               	decfsz	??_OneWire_Reset,f
  8621  01A4  29A3               	goto	u7817
  8622  01A5  29A6               	nop2	;nop
  8623                           
  8624                           ;OneWire.c: 14: TRISB1=1;
  8625  01A6  0021               	movlb	1	; select bank1
  8626  01A7  148D               	bsf	13,1
  8627                           
  8628                           ;OneWire.c: 15: (GIE = 0);
  8629  01A8  138B               	bcf	11,7
  8630                           
  8631                           ;OneWire.c: 16: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8632  01A9  3018               	movlw	24
  8633  01AA  0020               	movlb	0	; select bank0
  8634  01AB  00A0               	movwf	??_OneWire_Reset
  8635  01AC                     u7827:	
  8636  01AC  0BA0               	decfsz	??_OneWire_Reset,f
  8637  01AD  29AC               	goto	u7827
  8638  01AE  29AF               	nop2	;nop
  8639                           
  8640                           ;OneWire.c: 17: r=RB1;
  8641  01AF  3000               	movlw	0
  8642  01B0  0020               	movlb	0	; select bank0
  8643  01B1  188D               	btfsc	13,1
  8644  01B2  3001               	movlw	1
  8645  01B3  00A2               	movwf	OneWire_Reset@r
  8646                           
  8647                           ;OneWire.c: 18: (GIE = 1);
  8648  01B4  178B               	bsf	11,7
  8649                           
  8650                           ;OneWire.c: 19: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8651  01B5  309F               	movlw	159
  8652  01B6  00A0               	movwf	??_OneWire_Reset
  8653  01B7                     u7837:	
  8654  01B7  0BA0               	decfsz	??_OneWire_Reset,f
  8655  01B8  29B7               	goto	u7837
  8656  01B9  29BA               	nop2	;nop
  8657                           
  8658                           ;OneWire.c: 20: if(RB1==0)
  8659  01BA  0020               	movlb	0	; select bank0
  8660  01BB  188D               	btfsc	13,1
  8661  01BC  29BF               	goto	l30813
  8662                           
  8663                           ;OneWire.c: 21: r=1;
  8664  01BD  01A2               	clrf	OneWire_Reset@r
  8665  01BE  0AA2               	incf	OneWire_Reset@r,f
  8666  01BF                     l30813:	
  8667                           
  8668                           ;OneWire.c: 22: if(r==0)
  8669  01BF  08A2               	movf	OneWire_Reset@r,f
  8670  01C0  1D03               	skipz
  8671  01C1  2997               	goto	l30817
  8672  01C2                     l30819:	
  8673                           
  8674                           ;OneWire.c: 24: }
  8675                           ;OneWire.c: 25: return r;
  8676  01C2  0822               	movf	OneWire_Reset@r,w
  8677  01C3  0008               	return
  8678  01C4                     __end_of_OneWire_Reset:	
  8679  01C4                     __ptext2025:	
  8680 ;; =============== function ___delay_20ms ends ============
  8681                           
  8682                           
  8683 ;; *************** function _TCN75_Init *****************
  8684 ;; Defined at:
  8685 ;;		line 16 in file "F:\work\WYP\NBIoT1\TCN75.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;		None               void
  8692 ;; Registers used:
  8693 ;;		status,2, status,0, pclath, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 1F/0
  8696 ;;		On exit  : 1F/2
  8697 ;;		Unchanged: FFFE0/0
  8698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8699 ;;      Params:         0       0       0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0       0
  8701 ;;      Temps:          0       0       0       0       0       0       0       0
  8702 ;;      Totals:         0       0       0       0       0       0       0       0
  8703 ;;Total ram usage:        0 bytes
  8704 ;; Hardware stack levels used:    1
  8705 ;; Hardware stack levels required when called:    4
  8706 ;; This function calls:
  8707 ;;		_SimI2C_Init
  8708 ;; This function is called by:
  8709 ;;		_InitSystem
  8710 ;; This function uses a non-reentrant model
  8711 ;;
  8712  01C4                     _TCN75_Init:	
  8713                           
  8714                           ;TCN75.c: 17: SimI2C_Init();
  8715                           
  8716                           ; Regs used in _TCN75_Init: [status,2+status,0+pclath+cstack]
  8717  01C4  2AE6               	ljmp	l32195
  8718  01C5                     __end_of_TCN75_Init:	
  8719  01C5                     __ptext2010:	
  8720 ;; =============== function _TCN75_SetConfig ends ============
  8721                           
  8722                           
  8723 ;; *************** function _InitVariable *****************
  8724 ;; Defined at:
  8725 ;;		line 60 in file "F:\work\WYP\NBIoT1\Init.c"
  8726 ;; Parameters:    Size  Location     Type
  8727 ;;		None
  8728 ;; Auto vars:     Size  Location     Type
  8729 ;;		None
  8730 ;; Return value:  Size  Location     Type
  8731 ;;		None               void
  8732 ;; Registers used:
  8733 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8734 ;; Tracked objects:
  8735 ;;		On entry : 17F/0
  8736 ;;		On exit  : 17F/0
  8737 ;;		Unchanged: FFE80/0
  8738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8739 ;;      Params:         0       0       0       0       0       0       0       0
  8740 ;;      Locals:         0       0       0       0       0       0       0       0
  8741 ;;      Temps:          0       0       0       0       0       0       0       0
  8742 ;;      Totals:         0       0       0       0       0       0       0       0
  8743 ;;Total ram usage:        0 bytes
  8744 ;; Hardware stack levels used:    1
  8745 ;; Hardware stack levels required when called:    5
  8746 ;; This function calls:
  8747 ;;		_GetRomData
  8748 ;;		_SaveRomData
  8749 ;; This function is called by:
  8750 ;;		_InitSystem
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753  01C5                     _InitVariable:	
  8754                           
  8755                           ;Init.c: 61: if(GetRomData()==0)
  8756                           
  8757                           ; Regs used in _InitVariable: [wreg+fsr1l-status,0+pclath+cstack]
  8758  01C5  21D6  3180         	fcall	_GetRomData
  8759  01C7  3800               	iorlw	0
  8760  01C8  1D03               	skipz
  8761  01C9  29CD               	goto	l32567
  8762                           
  8763                           ;Init.c: 62: {
  8764                           ;Init.c: 63: RomParams.bWinter=1;
  8765  01CA  01E8               	clrf	_RomParams+1
  8766  01CB  0AE8               	incf	_RomParams+1,f
  8767                           
  8768                           ;Init.c: 64: SaveRomData();
  8769  01CC  22ED               	fcall	_SaveRomData
  8770  01CD                     l32567:	
  8771                           
  8772                           ;Init.c: 65: }
  8773                           ;Init.c: 66: gFlags.AllFlag=0;
  8774  01CD  01E6               	clrf	_gFlags
  8775                           
  8776                           ;Init.c: 67: SystemTick=0;
  8777  01CE  01DD               	clrf	_SystemTick
  8778  01CF  01DE               	clrf	_SystemTick+1
  8779                           
  8780                           ;Init.c: 68: NeedMeasurementTick=6000;
  8781  01D0  3070               	movlw	112
  8782  01D1  00DB               	movwf	_NeedMeasurementTick
  8783  01D2  3017               	movlw	23
  8784  01D3  00DC               	movwf	_NeedMeasurementTick+1
  8785                           
  8786                           ;Init.c: 69: TxErrDataIndex=0;
  8787  01D4  01E9               	clrf	_TxErrDataIndex
  8788  01D5  0008               	return
  8789  01D6                     __end_of_InitVariable:	
  8790  01D6                     __ptext2029:	
  8791 ;; =============== function _SaveRomData ends ============
  8792                           
  8793                           
  8794 ;; *************** function _GetRomData *****************
  8795 ;; Defined at:
  8796 ;;		line 125 in file "F:\work\WYP\NBIoT1\afx.c"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;		None
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  i               1    7[BANK0 ] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      unsigned char 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 17F/0
  8807 ;;		On exit  : 17F/0
  8808 ;;		Unchanged: FFE80/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8810 ;;      Params:         0       0       0       0       0       0       0       0
  8811 ;;      Locals:         0       1       0       0       0       0       0       0
  8812 ;;      Temps:          0       0       0       0       0       0       0       0
  8813 ;;      Totals:         0       1       0       0       0       0       0       0
  8814 ;;Total ram usage:        1 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    4
  8817 ;; This function calls:
  8818 ;;		_eeprom_read
  8819 ;;		_GetVerify_Sum
  8820 ;; This function is called by:
  8821 ;;		_InitVariable
  8822 ;; This function uses a non-reentrant model
  8823 ;;
  8824  01D6                     _GetRomData:	
  8825                           
  8826                           ;afx.c: 126: unsigned char i;
  8827                           ;afx.c: 127: for(i=0;i<2;i++)
  8828                           
  8829                           ; Regs used in _GetRomData: [wreg+fsr1l-status,0+pclath+cstack]
  8830  01D6  01A7               	clrf	GetRomData@i
  8831  01D7                     l32379:	
  8832                           
  8833                           ;afx.c: 128: RomParams.All[i]=eeprom_read(i);
  8834  01D7  0827               	movf	GetRomData@i,w
  8835  01D8  3E67               	addlw	_RomParams& (0+255)
  8836  01D9  0086               	movwf	6
  8837  01DA  0187               	clrf	7
  8838  01DB  0827               	movf	GetRomData@i,w
  8839  01DC  318D  25F9  3180   	fcall	_eeprom_read
  8840  01DF  0081               	movwf	1
  8841  01E0  0020               	movlb	0	; select bank0
  8842  01E1  0AA7               	incf	GetRomData@i,f
  8843  01E2  3002               	movlw	2
  8844  01E3  0227               	subwf	GetRomData@i,w
  8845  01E4  1C03               	skipc
  8846  01E5  29D7               	goto	l32379
  8847                           
  8848                           ;afx.c: 129: i=GetVerify_Sum(&RomParams.All[1],2-1);
  8849  01E6  01A0               	clrf	?_GetVerify_Sum
  8850  01E7  0AA0               	incf	?_GetVerify_Sum,f
  8851  01E8  01A1               	clrf	?_GetVerify_Sum+1
  8852  01E9  3068               	movlw	(_RomParams+1)& (0+255)
  8853  01EA  21F3  3180         	fcall	_GetVerify_Sum
  8854  01EC  00A7               	movwf	GetRomData@i
  8855                           
  8856                           ;afx.c: 130: i+=1;
  8857  01ED  0AA7               	incf	GetRomData@i,f
  8858                           
  8859                           ;afx.c: 131: if(i==RomParams.sum)
  8860  01EE  0867               	movf	_RomParams,w
  8861  01EF  0627               	xorwf	GetRomData@i,w
  8862  01F0  1903               	btfsc	3,2
  8863                           
  8864                           ;afx.c: 132: {
  8865                           ;afx.c: 133: return 1;
  8866  01F1  3401               	retlw	1
  8867                           
  8868                           ;afx.c: 135: else
  8869                           ;afx.c: 136: return 0;
  8870  01F2  3400               	retlw	0
  8871  01F3                     __end_of_GetRomData:	
  8872  01F3                     __ptext2047:	
  8873 ;; =============== function _GetVerify_CRC8 ends ============
  8874                           
  8875                           
  8876 ;; *************** function _GetVerify_Sum *****************
  8877 ;; Defined at:
  8878 ;;		line 79 in file "F:\work\WYP\NBIoT1\Verify.c"
  8879 ;; Parameters:    Size  Location     Type
  8880 ;;  pBuff           1    wreg     PTR unsigned char 
  8881 ;;		 -> RomParams(2), 
  8882 ;;  Count           2    0[BANK0 ] unsigned int 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  pBuff           1    4[BANK0 ] PTR unsigned char 
  8885 ;;		 -> RomParams(2), 
  8886 ;;  i               1    6[BANK0 ] unsigned char 
  8887 ;;  sum             1    5[BANK0 ] unsigned char 
  8888 ;; Return value:  Size  Location     Type
  8889 ;;                  1    wreg      unsigned char 
  8890 ;; Registers used:
  8891 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8892 ;; Tracked objects:
  8893 ;;		On entry : 17F/0
  8894 ;;		On exit  : 17F/0
  8895 ;;		Unchanged: FFE80/0
  8896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8897 ;;      Params:         0       2       0       0       0       0       0       0
  8898 ;;      Locals:         0       3       0       0       0       0       0       0
  8899 ;;      Temps:          0       2       0       0       0       0       0       0
  8900 ;;      Totals:         0       7       0       0       0       0       0       0
  8901 ;;Total ram usage:        7 bytes
  8902 ;; Hardware stack levels used:    1
  8903 ;; Hardware stack levels required when called:    3
  8904 ;; This function calls:
  8905 ;;		Nothing
  8906 ;; This function is called by:
  8907 ;;		_GetRomData
  8908 ;;		_SaveRomData
  8909 ;; This function uses a non-reentrant model
  8910 ;;
  8911  01F3                     _GetVerify_Sum:	
  8912                           
  8913                           ; Regs used in _GetVerify_Sum: [wreg+fsr1l-status,0]
  8914                           ;GetVerify_Sum@pBuff stored from wreg
  8915  01F3  00A4               	movwf	GetVerify_Sum@pBuff
  8916                           
  8917                           ;Verify.c: 80: unsigned char sum,i;
  8918                           ;Verify.c: 81: sum=0;
  8919  01F4  01A5               	clrf	GetVerify_Sum@sum
  8920                           
  8921                           ;Verify.c: 82: for(i=0;i<Count;i++)
  8922  01F5  01A6               	clrf	GetVerify_Sum@i
  8923  01F6                     l30463:	
  8924  01F6  0826               	movf	GetVerify_Sum@i,w
  8925  01F7  00A2               	movwf	??_GetVerify_Sum
  8926  01F8  01A3               	clrf	??_GetVerify_Sum+1
  8927  01F9  0821               	movf	GetVerify_Sum@Count+1,w
  8928  01FA  0223               	subwf	??_GetVerify_Sum+1,w
  8929  01FB  1D03               	skipz
  8930  01FC  29FF               	goto	u3625
  8931  01FD  0820               	movf	GetVerify_Sum@Count,w
  8932  01FE  0222               	subwf	??_GetVerify_Sum,w
  8933  01FF                     u3625:	
  8934  01FF  1803               	btfsc	3,0
  8935  0200  2A0A               	goto	l30465
  8936                           
  8937                           ;Verify.c: 83: {
  8938                           ;Verify.c: 84: sum=(unsigned char)(sum+pBuff[i]);
  8939  0201  0826               	movf	GetVerify_Sum@i,w
  8940  0202  0724               	addwf	GetVerify_Sum@pBuff,w
  8941  0203  00A2               	movwf	??_GetVerify_Sum
  8942  0204  0086               	movwf	6
  8943  0205  0187               	clrf	7
  8944  0206  0801               	movf	1,w
  8945  0207  07A5               	addwf	GetVerify_Sum@sum,f
  8946  0208  0AA6               	incf	GetVerify_Sum@i,f
  8947  0209  29F6               	goto	l30463
  8948  020A                     l30465:	
  8949                           
  8950                           ;Verify.c: 85: }
  8951                           ;Verify.c: 86: return sum;
  8952  020A  0825               	movf	GetVerify_Sum@sum,w
  8953  020B  0008               	return
  8954  020C                     __end_of_GetVerify_Sum:	
  8955  020C                     __ptext2009:	
  8956 ;; =============== function _TCN75_ReadReg ends ============
  8957                           
  8958                           
  8959 ;; *************** function _TCN75_SetConfig *****************
  8960 ;; Defined at:
  8961 ;;		line 47 in file "F:\work\WYP\NBIoT1\TCN75.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;		None
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  bRight          1    4[BANK0 ] unsigned char 
  8966 ;;  ErrTimes        1    3[BANK0 ] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      unsigned char 
  8969 ;; Registers used:
  8970 ;;		wreg, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 1F/0
  8973 ;;		On exit  : 1F/0
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8976 ;;      Params:         0       0       0       0       0       0       0       0
  8977 ;;      Locals:         0       2       0       0       0       0       0       0
  8978 ;;      Temps:          0       0       0       0       0       0       0       0
  8979 ;;      Totals:         0       2       0       0       0       0       0       0
  8980 ;;Total ram usage:        2 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:    4
  8983 ;; This function calls:
  8984 ;;		_SimI2C_Start
  8985 ;;		_SimI2C_SendByte
  8986 ;;		_SimI2C_RecAck
  8987 ;;		_SimI2C_Stop
  8988 ;; This function is called by:
  8989 ;;		_InitSystem
  8990 ;;		_ReadTData
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993  020C                     _TCN75_SetConfig:	
  8994                           
  8995                           ;TCN75.c: 48: unsigned char ErrTimes=2;
  8996                           
  8997                           ; Regs used in _TCN75_SetConfig: [wreg+status,2+status,0+pclath+cstack]
  8998  020C  3002               	movlw	2
  8999  020D  00A3               	movwf	TCN75_SetConfig@ErrTimes
  9000                           
  9001                           ;TCN75.c: 49: unsigned char bRight=0;
  9002  020E  01A4               	clrf	TCN75_SetConfig@bRight
  9003  020F                     l32599:	
  9004                           ;TCN75.c: 63: break;
  9005                           
  9006                           ;TCN75.c: 50: while(ErrTimes--)
  9007                           
  9008  020F  03A3               	decf	TCN75_SetConfig@ErrTimes,f
  9009  0210  0823               	movf	TCN75_SetConfig@ErrTimes,w
  9010  0211  3AFF               	xorlw	255
  9011  0212  1903               	btfsc	3,2
  9012  0213  2A30               	goto	l32601
  9013                           
  9014                           ;TCN75.c: 51: {
  9015                           ;TCN75.c: 52: SimI2C_Start();
  9016  0214  229F  3180         	fcall	_SimI2C_Start
  9017                           
  9018                           ;TCN75.c: 53: SimI2C_SendByte(0b10010000&0xfe);
  9019  0216  3090               	movlw	144
  9020  0217  226A  3180         	fcall	_SimI2C_SendByte
  9021                           
  9022                           ;TCN75.c: 54: if(SimI2C_RecAck())
  9023  0219  228B  3180         	fcall	_SimI2C_RecAck
  9024  021B  3A00               	xorlw	0
  9025  021C  1D03               	btfss	3,2
  9026  021D  2A0F               	goto	l32599
  9027                           
  9028                           ;TCN75.c: 56: SimI2C_SendByte(0x01);
  9029  021E  3001               	movlw	1
  9030  021F  226A  3180         	fcall	_SimI2C_SendByte
  9031                           
  9032                           ;TCN75.c: 57: if(SimI2C_RecAck())
  9033  0221  228B  3180         	fcall	_SimI2C_RecAck
  9034  0223  3A00               	xorlw	0
  9035  0224  1D03               	btfss	3,2
  9036  0225  2A0F               	goto	l32599
  9037                           
  9038                           ;TCN75.c: 59: SimI2C_SendByte(TCN75_Config.AllFlag);
  9039  0226  0864               	movf	_TCN75_Config,w
  9040  0227  226A  3180         	fcall	_SimI2C_SendByte
  9041                           
  9042                           ;TCN75.c: 60: if(SimI2C_RecAck())
  9043  0229  228B  3180         	fcall	_SimI2C_RecAck
  9044  022B  3A00               	xorlw	0
  9045  022C  1D03               	btfss	3,2
  9046  022D  2A0F               	goto	l32599
  9047                           
  9048                           ;TCN75.c: 62: bRight=1;
  9049  022E  01A4               	clrf	TCN75_SetConfig@bRight
  9050  022F  0AA4               	incf	TCN75_SetConfig@bRight,f
  9051  0230                     l32601:	
  9052                           
  9053                           ;TCN75.c: 64: }
  9054                           ;TCN75.c: 65: SimI2C_Stop();
  9055  0230  22DC               	fcall	_SimI2C_Stop
  9056                           
  9057                           ;TCN75.c: 66: return bRight;
  9058  0231  0020               	movlb	0	; select bank0
  9059  0232  0824               	movf	TCN75_SetConfig@bRight,w
  9060  0233  0008               	return
  9061  0234                     __end_of_TCN75_SetConfig:	
  9062  0234                     __ptext2008:	
  9063 ;; =============== function _PowerON ends ============
  9064                           
  9065                           
  9066 ;; *************** function _TCN75_ReadReg *****************
  9067 ;; Defined at:
  9068 ;;		line 20 in file "F:\work\WYP\NBIoT1\TCN75.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  RegPoint        1    wreg     unsigned char 
  9071 ;; Auto vars:     Size  Location     Type
  9072 ;;  RegPoint        1    3[BANK0 ] unsigned char 
  9073 ;;  bRight          1    5[BANK0 ] unsigned char 
  9074 ;;  ErrTimes        1    4[BANK0 ] unsigned char 
  9075 ;; Return value:  Size  Location     Type
  9076 ;;                  1    wreg      unsigned char 
  9077 ;; Registers used:
  9078 ;;		wreg, status,2, status,0, pclath, cstack
  9079 ;; Tracked objects:
  9080 ;;		On entry : 1F/0
  9081 ;;		On exit  : 1F/0
  9082 ;;		Unchanged: 0/0
  9083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9084 ;;      Params:         0       0       0       0       0       0       0       0
  9085 ;;      Locals:         0       3       0       0       0       0       0       0
  9086 ;;      Temps:          0       0       0       0       0       0       0       0
  9087 ;;      Totals:         0       3       0       0       0       0       0       0
  9088 ;;Total ram usage:        3 bytes
  9089 ;; Hardware stack levels used:    1
  9090 ;; Hardware stack levels required when called:    4
  9091 ;; This function calls:
  9092 ;;		_SimI2C_Start
  9093 ;;		_SimI2C_SendByte
  9094 ;;		_SimI2C_RecAck
  9095 ;;		_SimI2C_ReadByte
  9096 ;;		_SimI2C_Ack
  9097 ;;		_SimI2C_NoAck
  9098 ;;		_SimI2C_Stop
  9099 ;; This function is called by:
  9100 ;;		_ReadTData
  9101 ;; This function uses a non-reentrant model
  9102 ;;
  9103  0234                     _TCN75_ReadReg:	
  9104                           
  9105                           ; Regs used in _TCN75_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  9106                           ;TCN75_ReadReg@RegPoint stored from wreg
  9107  0234  00A3               	movwf	TCN75_ReadReg@RegPoint
  9108                           
  9109                           ;TCN75.c: 21: unsigned char ErrTimes=2;
  9110  0235  3002               	movlw	2
  9111  0236  00A4               	movwf	TCN75_ReadReg@ErrTimes
  9112                           
  9113                           ;TCN75.c: 22: unsigned char bRight=0;
  9114  0237  01A5               	clrf	TCN75_ReadReg@bRight
  9115  0238                     l32641:	
  9116                           ;TCN75.c: 41: break;
  9117                           
  9118                           ;TCN75.c: 23: while(ErrTimes--)
  9119                           
  9120  0238  03A4               	decf	TCN75_ReadReg@ErrTimes,f
  9121  0239  0824               	movf	TCN75_ReadReg@ErrTimes,w
  9122  023A  3AFF               	xorlw	255
  9123  023B  1903               	btfsc	3,2
  9124  023C  2A66               	goto	l32643
  9125                           
  9126                           ;TCN75.c: 24: {
  9127                           ;TCN75.c: 25: SimI2C_Start();
  9128  023D  229F  3180         	fcall	_SimI2C_Start
  9129                           
  9130                           ;TCN75.c: 26: SimI2C_SendByte(0b10010000&0xfe);
  9131  023F  3090               	movlw	144
  9132  0240  226A  3180         	fcall	_SimI2C_SendByte
  9133                           
  9134                           ;TCN75.c: 27: if(SimI2C_RecAck())
  9135  0242  228B  3180         	fcall	_SimI2C_RecAck
  9136  0244  3A00               	xorlw	0
  9137  0245  1D03               	btfss	3,2
  9138  0246  2A38               	goto	l32641
  9139                           
  9140                           ;TCN75.c: 29: SimI2C_SendByte(RegPoint);
  9141  0247  0823               	movf	TCN75_ReadReg@RegPoint,w
  9142  0248  226A  3180         	fcall	_SimI2C_SendByte
  9143                           
  9144                           ;TCN75.c: 30: if(SimI2C_RecAck())
  9145  024A  228B  3180         	fcall	_SimI2C_RecAck
  9146  024C  3A00               	xorlw	0
  9147  024D  1D03               	btfss	3,2
  9148  024E  2A38               	goto	l32641
  9149                           
  9150                           ;TCN75.c: 32: SimI2C_Start();
  9151  024F  229F  3180         	fcall	_SimI2C_Start
  9152                           
  9153                           ;TCN75.c: 33: SimI2C_SendByte(0b10010000|0x01);
  9154  0251  3091               	movlw	145
  9155  0252  226A  3180         	fcall	_SimI2C_SendByte
  9156                           
  9157                           ;TCN75.c: 34: if(SimI2C_RecAck())
  9158  0254  228B  3180         	fcall	_SimI2C_RecAck
  9159  0256  3A00               	xorlw	0
  9160  0257  1D03               	btfss	3,2
  9161  0258  2A38               	goto	l32641
  9162                           
  9163                           ;TCN75.c: 36: TCN75_RegReadResualt.u8H=SimI2C_ReadByte();
  9164  0259  22A9  3180         	fcall	_SimI2C_ReadByte
  9165  025B  00E0               	movwf	_TCN75_RegReadResualt+1
  9166                           
  9167                           ;TCN75.c: 37: SimI2C_Ack();
  9168  025C  22C9  3180         	fcall	_SimI2C_Ack
  9169                           
  9170                           ;TCN75.c: 38: TCN75_RegReadResualt.u8L=SimI2C_ReadByte();
  9171  025E  22A9  3180         	fcall	_SimI2C_ReadByte
  9172  0260  00DF               	movwf	_TCN75_RegReadResualt
  9173                           
  9174                           ;TCN75.c: 39: SimI2C_NoAck();
  9175  0261  22D5  3180         	fcall	_SimI2C_NoAck
  9176                           
  9177                           ;TCN75.c: 40: bRight=1;
  9178  0263  0020               	movlb	0	; select bank0
  9179  0264  01A5               	clrf	TCN75_ReadReg@bRight
  9180  0265  0AA5               	incf	TCN75_ReadReg@bRight,f
  9181  0266                     l32643:	
  9182                           
  9183                           ;TCN75.c: 42: }
  9184                           ;TCN75.c: 43: SimI2C_Stop();
  9185  0266  22DC               	fcall	_SimI2C_Stop
  9186                           
  9187                           ;TCN75.c: 44: return bRight;
  9188  0267  0020               	movlb	0	; select bank0
  9189  0268  0825               	movf	TCN75_ReadReg@bRight,w
  9190  0269  0008               	return
  9191  026A                     __end_of_TCN75_ReadReg:	
  9192  026A                     __ptext2016:	
  9193 ;; =============== function _SimI2C_RecAck ends ============
  9194                           
  9195                           
  9196 ;; *************** function _SimI2C_SendByte *****************
  9197 ;; Defined at:
  9198 ;;		line 71 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9199 ;; Parameters:    Size  Location     Type
  9200 ;;  data            1    wreg     unsigned char 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  data            1    0[BANK0 ] unsigned char 
  9203 ;;  i               1    2[BANK0 ] unsigned char 
  9204 ;;  t               1    1[BANK0 ] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;		None               void
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 1D/2
  9211 ;;		On exit  : 1F/2
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9214 ;;      Params:         0       0       0       0       0       0       0       0
  9215 ;;      Locals:         0       3       0       0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0
  9217 ;;      Totals:         0       3       0       0       0       0       0       0
  9218 ;;Total ram usage:        3 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    3
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_TCN75_ReadReg
  9225 ;;		_TCN75_SetConfig
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228  026A                     _SimI2C_SendByte:	
  9229                           
  9230                           ; Regs used in _SimI2C_SendByte: [wreg+status,2+status,0]
  9231                           ;SimI2C_SendByte@data stored from wreg
  9232  026A  0020               	movlb	0	; select bank0
  9233  026B  00A0               	movwf	SimI2C_SendByte@data
  9234                           
  9235                           ;SimI2C.c: 72: unsigned char i;
  9236                           ;SimI2C.c: 73: unsigned char t;
  9237                           ;SimI2C.c: 74: for(i=0;i<8;i++)
  9238  026C  01A2               	clrf	SimI2C_SendByte@i
  9239  026D                     l27372:	
  9240                           
  9241                           ;SimI2C.c: 75: {
  9242                           ;SimI2C.c: 76: LATD7=0;
  9243  026D  0022               	movlb	2	; select bank2
  9244  026E  138F               	bcf	15,7
  9245                           
  9246                           ;SimI2C.c: 77: t=data&0x80;
  9247  026F  0020               	movlb	0	; select bank0
  9248  0270  0820               	movf	SimI2C_SendByte@data,w
  9249  0271  00A1               	movwf	SimI2C_SendByte@t
  9250  0272  3080               	movlw	128
  9251  0273  05A1               	andwf	SimI2C_SendByte@t,f
  9252                           
  9253                           ;SimI2C.c: 78: if(t==0x00)
  9254  0274  08A1               	movf	SimI2C_SendByte@t,f
  9255  0275  1D03               	skipz
  9256  0276  2A7A               	goto	l27374
  9257                           
  9258                           ;SimI2C.c: 79: LATD6=0;
  9259  0277  0022               	movlb	2	; select bank2
  9260  0278  130F               	bcf	15,6
  9261  0279  2A7C               	goto	l27375
  9262  027A                     l27374:	
  9263                           
  9264                           ;SimI2C.c: 80: else
  9265                           ;SimI2C.c: 81: LATD6=1;
  9266  027A  0022               	movlb	2	; select bank2
  9267  027B  170F               	bsf	15,6
  9268  027C                     l27375:	
  9269                           
  9270                           ;SimI2C.c: 82: data<<=1;
  9271  027C  0020               	movlb	0	; select bank0
  9272  027D  35A0               	lslf	SimI2C_SendByte@data,f
  9273                           
  9274                           ;SimI2C.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9275  027E  0064               	clrwdt
  9276                           
  9277                           ;SimI2C.c: 84: LATD7=1;
  9278  027F  0022               	movlb	2	; select bank2
  9279  0280  178F               	bsf	15,7
  9280                           
  9281                           ;SimI2C.c: 85: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9282  0281  0064               	clrwdt
  9283  0282  0020               	movlb	0	; select bank0
  9284  0283  0AA2               	incf	SimI2C_SendByte@i,f
  9285  0284  3008               	movlw	8
  9286  0285  0222               	subwf	SimI2C_SendByte@i,w
  9287  0286  1C03               	skipc
  9288  0287  2A6D               	goto	l27372
  9289                           
  9290                           ;SimI2C.c: 86: }
  9291                           ;SimI2C.c: 87: LATD7=0;
  9292  0288  0022               	movlb	2	; select bank2
  9293  0289  138F               	bcf	15,7
  9294  028A  0008               	return
  9295  028B                     __end_of_SimI2C_SendByte:	
  9296  028B                     __ptext2015:	
  9297 ;; =============== function _SimI2C_ReadByte ends ============
  9298                           
  9299                           
  9300 ;; *************** function _SimI2C_RecAck *****************
  9301 ;; Defined at:
  9302 ;;		line 39 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;		None
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;  t               1    0[BANK0 ] unsigned char 
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      unsigned char 
  9309 ;; Registers used:
  9310 ;;		wreg
  9311 ;; Tracked objects:
  9312 ;;		On entry : 1F/2
  9313 ;;		On exit  : 1F/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9316 ;;      Params:         0       0       0       0       0       0       0       0
  9317 ;;      Locals:         0       1       0       0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0
  9319 ;;      Totals:         0       1       0       0       0       0       0       0
  9320 ;;Total ram usage:        1 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    3
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_TCN75_ReadReg
  9327 ;;		_TCN75_SetConfig
  9328 ;; This function uses a non-reentrant model
  9329 ;;
  9330  028B                     _SimI2C_RecAck:	
  9331                           
  9332                           ;SimI2C.c: 40: unsigned char t;
  9333                           ;SimI2C.c: 41: TRISD6=1;
  9334                           
  9335                           ; Regs used in _SimI2C_RecAck: [wreg]
  9336  028B  0021               	movlb	1	; select bank1
  9337  028C  170F               	bsf	15,6
  9338                           
  9339                           ;SimI2C.c: 42: LATD7=0;
  9340  028D  0022               	movlb	2	; select bank2
  9341  028E  138F               	bcf	15,7
  9342                           
  9343                           ;SimI2C.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9344  028F  0064               	clrwdt
  9345                           
  9346                           ;SimI2C.c: 44: LATD7=1;
  9347  0290  0022               	movlb	2	; select bank2
  9348  0291  178F               	bsf	15,7
  9349                           
  9350                           ;SimI2C.c: 45: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9351  0292  0064               	clrwdt
  9352                           
  9353                           ;SimI2C.c: 46: t=RD6;
  9354  0293  3000               	movlw	0
  9355  0294  0020               	movlb	0	; select bank0
  9356  0295  1B0F               	btfsc	15,6
  9357  0296  3001               	movlw	1
  9358  0297  00A0               	movwf	SimI2C_RecAck@t
  9359                           
  9360                           ;SimI2C.c: 47: LATD7=0;
  9361  0298  0022               	movlb	2	; select bank2
  9362  0299  138F               	bcf	15,7
  9363                           
  9364                           ;SimI2C.c: 48: TRISD6=0;
  9365  029A  0021               	movlb	1	; select bank1
  9366  029B  130F               	bcf	15,6
  9367                           
  9368                           ;SimI2C.c: 49: return t;
  9369  029C  0020               	movlb	0	; select bank0
  9370  029D  0820               	movf	SimI2C_RecAck@t,w
  9371  029E  0008               	return
  9372  029F                     __end_of_SimI2C_RecAck:	
  9373  029F                     __ptext2017:	
  9374 ;; =============== function _SimI2C_SendByte ends ============
  9375                           
  9376                           
  9377 ;; *************** function _SimI2C_Start *****************
  9378 ;; Defined at:
  9379 ;;		line 19 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;		None
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;		None               void
  9386 ;; Registers used:
  9387 ;;		None
  9388 ;; Tracked objects:
  9389 ;;		On entry : 1F/0
  9390 ;;		On exit  : 1F/2
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9393 ;;      Params:         0       0       0       0       0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0       0       0       0
  9396 ;;      Totals:         0       0       0       0       0       0       0       0
  9397 ;;Total ram usage:        0 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    3
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_TCN75_ReadReg
  9404 ;;		_TCN75_SetConfig
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407  029F                     _SimI2C_Start:	
  9408                           
  9409                           ;SimI2C.c: 20: LATD6=1;
  9410                           
  9411                           ; Regs used in _SimI2C_Start: []
  9412  029F  0022               	movlb	2	; select bank2
  9413  02A0  170F               	bsf	15,6
  9414                           
  9415                           ;SimI2C.c: 21: LATD7=1;
  9416  02A1  178F               	bsf	15,7
  9417                           
  9418                           ;SimI2C.c: 22: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9419  02A2  0064               	clrwdt
  9420                           
  9421                           ;SimI2C.c: 23: LATD6=0;
  9422  02A3  0022               	movlb	2	; select bank2
  9423  02A4  130F               	bcf	15,6
  9424                           
  9425                           ;SimI2C.c: 24: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9426  02A5  0064               	clrwdt
  9427                           
  9428                           ;SimI2C.c: 25: LATD7=0;
  9429  02A6  0022               	movlb	2	; select bank2
  9430  02A7  138F               	bcf	15,7
  9431  02A8  0008               	return
  9432  02A9                     __end_of_SimI2C_Start:	
  9433  02A9                     __ptext2014:	
  9434 ;; =============== function _SimI2C_Ack ends ============
  9435                           
  9436                           
  9437 ;; *************** function _SimI2C_ReadByte *****************
  9438 ;; Defined at:
  9439 ;;		line 90 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;		None
  9442 ;; Auto vars:     Size  Location     Type
  9443 ;;  i               1    1[BANK0 ] unsigned char 
  9444 ;;  data            1    0[BANK0 ] unsigned char 
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  1    wreg      unsigned char 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0
  9449 ;; Tracked objects:
  9450 ;;		On entry : 1D/0
  9451 ;;		On exit  : 1F/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9454 ;;      Params:         0       0       0       0       0       0       0       0
  9455 ;;      Locals:         0       2       0       0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0       0
  9457 ;;      Totals:         0       2       0       0       0       0       0       0
  9458 ;;Total ram usage:        2 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:    3
  9461 ;; This function calls:
  9462 ;;		Nothing
  9463 ;; This function is called by:
  9464 ;;		_TCN75_ReadReg
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467  02A9                     _SimI2C_ReadByte:	
  9468                           
  9469                           ;SimI2C.c: 91: unsigned char data,i;
  9470                           ;SimI2C.c: 92: TRISD6=1;
  9471                           
  9472                           ; Regs used in _SimI2C_ReadByte: [wreg+status,2+status,0]
  9473  02A9  0021               	movlb	1	; select bank1
  9474  02AA  170F               	bsf	15,6
  9475                           
  9476                           ;SimI2C.c: 93: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9477  02AB  0064               	clrwdt
  9478                           
  9479                           ;SimI2C.c: 94: LATD7=0;
  9480  02AC  0022               	movlb	2	; select bank2
  9481  02AD  138F               	bcf	15,7
  9482                           
  9483                           ;SimI2C.c: 95: data=0;
  9484  02AE  0020               	movlb	0	; select bank0
  9485  02AF  01A0               	clrf	SimI2C_ReadByte@data
  9486                           
  9487                           ;SimI2C.c: 96: for(i=0;i<8;i++)
  9488  02B0  01A1               	clrf	SimI2C_ReadByte@i
  9489  02B1                     l27379:	
  9490                           
  9491                           ;SimI2C.c: 97: {
  9492                           ;SimI2C.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9493  02B1  0064               	clrwdt
  9494                           
  9495                           ;SimI2C.c: 99: LATD7=1;
  9496  02B2  0022               	movlb	2	; select bank2
  9497  02B3  178F               	bsf	15,7
  9498                           
  9499                           ;SimI2C.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9500  02B4  0064               	clrwdt
  9501                           
  9502                           ;SimI2C.c: 101: data=data<<1;
  9503  02B5  0020               	movlb	0	; select bank0
  9504  02B6  35A0               	lslf	SimI2C_ReadByte@data,f
  9505                           
  9506                           ;SimI2C.c: 102: if(RD6)
  9507  02B7  1B0F               	btfsc	15,6
  9508                           
  9509                           ;SimI2C.c: 103: data=data|0x01;
  9510  02B8  1420               	bsf	SimI2C_ReadByte@data,0
  9511                           
  9512                           ;SimI2C.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9513  02B9  0064               	clrwdt
  9514                           
  9515                           ;SimI2C.c: 105: LATD7=0;
  9516  02BA  0022               	movlb	2	; select bank2
  9517  02BB  138F               	bcf	15,7
  9518                           
  9519                           ;SimI2C.c: 106: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9520  02BC  0064               	clrwdt
  9521  02BD  0020               	movlb	0	; select bank0
  9522  02BE  0AA1               	incf	SimI2C_ReadByte@i,f
  9523  02BF  3008               	movlw	8
  9524  02C0  0221               	subwf	SimI2C_ReadByte@i,w
  9525  02C1  1C03               	skipc
  9526  02C2  2AB1               	goto	l27379
  9527                           
  9528                           ;SimI2C.c: 107: }
  9529                           ;SimI2C.c: 108: TRISD6=0;
  9530  02C3  0021               	movlb	1	; select bank1
  9531  02C4  130F               	bcf	15,6
  9532                           
  9533                           ;SimI2C.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9534  02C5  0064               	clrwdt
  9535                           
  9536                           ;SimI2C.c: 110: return data;
  9537  02C6  0020               	movlb	0	; select bank0
  9538  02C7  0820               	movf	SimI2C_ReadByte@data,w
  9539  02C8  0008               	return
  9540  02C9                     __end_of_SimI2C_ReadByte:	
  9541  02C9                     __ptext2013:	
  9542 ;; =============== function _SimI2C_NoAck ends ============
  9543                           
  9544                           
  9545 ;; *************** function _SimI2C_Ack *****************
  9546 ;; Defined at:
  9547 ;;		line 53 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;		None
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;		None
  9552 ;; Return value:  Size  Location     Type
  9553 ;;		None               void
  9554 ;; Registers used:
  9555 ;;		None
  9556 ;; Tracked objects:
  9557 ;;		On entry : 1F/0
  9558 ;;		On exit  : 1F/2
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9561 ;;      Params:         0       0       0       0       0       0       0       0
  9562 ;;      Locals:         0       0       0       0       0       0       0       0
  9563 ;;      Temps:          0       0       0       0       0       0       0       0
  9564 ;;      Totals:         0       0       0       0       0       0       0       0
  9565 ;;Total ram usage:        0 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    3
  9568 ;; This function calls:
  9569 ;;		Nothing
  9570 ;; This function is called by:
  9571 ;;		_TCN75_ReadReg
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574  02C9                     _SimI2C_Ack:	
  9575                           
  9576                           ;SimI2C.c: 54: LATD6=0;
  9577                           
  9578                           ; Regs used in _SimI2C_Ack: []
  9579  02C9  0022               	movlb	2	; select bank2
  9580  02CA  130F               	bcf	15,6
  9581                           
  9582                           ;SimI2C.c: 55: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9583  02CB  0064               	clrwdt
  9584                           
  9585                           ;SimI2C.c: 56: LATD7=1;
  9586  02CC  0022               	movlb	2	; select bank2
  9587  02CD  178F               	bsf	15,7
  9588                           
  9589                           ;SimI2C.c: 57: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9590  02CE  0064               	clrwdt
  9591                           
  9592                           ;SimI2C.c: 58: LATD7=0;
  9593  02CF  0022               	movlb	2	; select bank2
  9594  02D0  138F               	bcf	15,7
  9595                           
  9596                           ;SimI2C.c: 59: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9597  02D1  0064               	clrwdt
  9598                           
  9599                           ;SimI2C.c: 60: LATD6=1;
  9600  02D2  0022               	movlb	2	; select bank2
  9601  02D3  170F               	bsf	15,6
  9602  02D4  0008               	return
  9603  02D5                     __end_of_SimI2C_Ack:	
  9604  02D5                     __ptext2012:	
  9605 ;; =============== function _SimI2C_Stop ends ============
  9606                           
  9607                           
  9608 ;; *************** function _SimI2C_NoAck *****************
  9609 ;; Defined at:
  9610 ;;		line 64 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9611 ;; Parameters:    Size  Location     Type
  9612 ;;		None
  9613 ;; Auto vars:     Size  Location     Type
  9614 ;;		None
  9615 ;; Return value:  Size  Location     Type
  9616 ;;		None               void
  9617 ;; Registers used:
  9618 ;;		None
  9619 ;; Tracked objects:
  9620 ;;		On entry : 1F/0
  9621 ;;		On exit  : 1F/2
  9622 ;;		Unchanged: 0/0
  9623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9624 ;;      Params:         0       0       0       0       0       0       0       0
  9625 ;;      Locals:         0       0       0       0       0       0       0       0
  9626 ;;      Temps:          0       0       0       0       0       0       0       0
  9627 ;;      Totals:         0       0       0       0       0       0       0       0
  9628 ;;Total ram usage:        0 bytes
  9629 ;; Hardware stack levels used:    1
  9630 ;; Hardware stack levels required when called:    3
  9631 ;; This function calls:
  9632 ;;		Nothing
  9633 ;; This function is called by:
  9634 ;;		_TCN75_ReadReg
  9635 ;; This function uses a non-reentrant model
  9636 ;;
  9637  02D5                     _SimI2C_NoAck:	
  9638                           
  9639                           ;SimI2C.c: 65: LATD7=1;
  9640                           
  9641                           ; Regs used in _SimI2C_NoAck: []
  9642  02D5  0022               	movlb	2	; select bank2
  9643  02D6  178F               	bsf	15,7
  9644                           
  9645                           ;SimI2C.c: 66: LATD6=1;
  9646  02D7  170F               	bsf	15,6
  9647                           
  9648                           ;SimI2C.c: 67: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9649  02D8  0064               	clrwdt
  9650                           
  9651                           ;SimI2C.c: 68: LATD7=0;
  9652  02D9  0022               	movlb	2	; select bank2
  9653  02DA  138F               	bcf	15,7
  9654  02DB  0008               	return
  9655  02DC                     __end_of_SimI2C_NoAck:	
  9656  02DC                     __ptext2011:	
  9657 ;; =============== function _InitVariable ends ============
  9658                           
  9659                           
  9660 ;; *************** function _SimI2C_Stop *****************
  9661 ;; Defined at:
  9662 ;;		line 29 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;		None
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;		None
  9667 ;; Return value:  Size  Location     Type
  9668 ;;		None               void
  9669 ;; Registers used:
  9670 ;;		None
  9671 ;; Tracked objects:
  9672 ;;		On entry : 1F/0
  9673 ;;		On exit  : 1F/2
  9674 ;;		Unchanged: 0/0
  9675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9676 ;;      Params:         0       0       0       0       0       0       0       0
  9677 ;;      Locals:         0       0       0       0       0       0       0       0
  9678 ;;      Temps:          0       0       0       0       0       0       0       0
  9679 ;;      Totals:         0       0       0       0       0       0       0       0
  9680 ;;Total ram usage:        0 bytes
  9681 ;; Hardware stack levels used:    1
  9682 ;; Hardware stack levels required when called:    3
  9683 ;; This function calls:
  9684 ;;		Nothing
  9685 ;; This function is called by:
  9686 ;;		_TCN75_ReadReg
  9687 ;;		_TCN75_SetConfig
  9688 ;; This function uses a non-reentrant model
  9689 ;;
  9690  02DC                     _SimI2C_Stop:	
  9691                           
  9692                           ;SimI2C.c: 30: LATD7=0;
  9693                           
  9694                           ; Regs used in _SimI2C_Stop: []
  9695  02DC  0022               	movlb	2	; select bank2
  9696  02DD  138F               	bcf	15,7
  9697                           
  9698                           ;SimI2C.c: 31: LATD6=0;
  9699  02DE  130F               	bcf	15,6
  9700                           
  9701                           ;SimI2C.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9702  02DF  0064               	clrwdt
  9703                           
  9704                           ;SimI2C.c: 33: LATD7=1;
  9705  02E0  0022               	movlb	2	; select bank2
  9706  02E1  178F               	bsf	15,7
  9707                           
  9708                           ;SimI2C.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9709  02E2  0064               	clrwdt
  9710                           
  9711                           ;SimI2C.c: 35: LATD6=1;
  9712  02E3  0022               	movlb	2	; select bank2
  9713  02E4  170F               	bsf	15,6
  9714  02E5  0008               	return
  9715  02E6                     __end_of_SimI2C_Stop:	
  9716  02E6                     __ptext2045:	
  9717 ;; =============== function _isdigit ends ============
  9718                           
  9719                           
  9720 ;; *************** function _SimI2C_Init *****************
  9721 ;; Defined at:
  9722 ;;		line 3 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9723 ;; Parameters:    Size  Location     Type
  9724 ;;		None
  9725 ;; Auto vars:     Size  Location     Type
  9726 ;;		None
  9727 ;; Return value:  Size  Location     Type
  9728 ;;		None               void
  9729 ;; Registers used:
  9730 ;;		None
  9731 ;; Tracked objects:
  9732 ;;		On entry : 1F/0
  9733 ;;		On exit  : 1F/2
  9734 ;;		Unchanged: FFFE0/0
  9735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9736 ;;      Params:         0       0       0       0       0       0       0       0
  9737 ;;      Locals:         0       0       0       0       0       0       0       0
  9738 ;;      Temps:          0       0       0       0       0       0       0       0
  9739 ;;      Totals:         0       0       0       0       0       0       0       0
  9740 ;;Total ram usage:        0 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    3
  9743 ;; This function calls:
  9744 ;;		Nothing
  9745 ;; This function is called by:
  9746 ;;		_TCN75_Init
  9747 ;; This function uses a non-reentrant model
  9748 ;;
  9749  02E6                     _SimI2C_Init:	
  9750  02E6                     l32195:	
  9751                           ; Regs used in _SimI2C_Init: []
  9752                           
  9753                           
  9754                           ;SimI2C.c: 4: TRISD7=0;
  9755  02E6  0021               	movlb	1	; select bank1
  9756  02E7  138F               	bcf	15,7
  9757                           
  9758                           ;SimI2C.c: 5: TRISD6=0;
  9759  02E8  130F               	bcf	15,6
  9760                           
  9761                           ;SimI2C.c: 13: LATD7=1;
  9762  02E9  0022               	movlb	2	; select bank2
  9763  02EA  178F               	bsf	15,7
  9764                           
  9765                           ;SimI2C.c: 14: LATD6=1;
  9766  02EB  170F               	bsf	15,6
  9767  02EC  0008               	return
  9768  02ED                     __end_of_SimI2C_Init:	
  9769  02ED                     __ptext2028:	
  9770 ;; =============== function _ATCommand_Init ends ============
  9771                           
  9772                           
  9773 ;; *************** function _SaveRomData *****************
  9774 ;; Defined at:
  9775 ;;		line 139 in file "F:\work\WYP\NBIoT1\afx.c"
  9776 ;; Parameters:    Size  Location     Type
  9777 ;;		None
  9778 ;; Auto vars:     Size  Location     Type
  9779 ;;  i               1    7[BANK0 ] unsigned char 
  9780 ;; Return value:  Size  Location     Type
  9781 ;;		None               void
  9782 ;; Registers used:
  9783 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9784 ;; Tracked objects:
  9785 ;;		On entry : 17F/0
  9786 ;;		On exit  : 17F/0
  9787 ;;		Unchanged: FFE80/0
  9788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9789 ;;      Params:         0       0       0       0       0       0       0       0
  9790 ;;      Locals:         0       1       0       0       0       0       0       0
  9791 ;;      Temps:          0       0       0       0       0       0       0       0
  9792 ;;      Totals:         0       1       0       0       0       0       0       0
  9793 ;;Total ram usage:        1 bytes
  9794 ;; Hardware stack levels used:    1
  9795 ;; Hardware stack levels required when called:    4
  9796 ;; This function calls:
  9797 ;;		_GetVerify_Sum
  9798 ;;		_eeprom_write
  9799 ;; This function is called by:
  9800 ;;		_InitVariable
  9801 ;; This function uses a non-reentrant model
  9802 ;;
  9803  02ED                     _SaveRomData:	
  9804                           
  9805                           ;afx.c: 140: unsigned char i;
  9806                           ;afx.c: 141: RomParams.sum=GetVerify_Sum(&RomParams.All[1],2-1);
  9807                           
  9808                           ; Regs used in _SaveRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9809  02ED  01A0               	clrf	?_GetVerify_Sum
  9810  02EE  0AA0               	incf	?_GetVerify_Sum,f
  9811  02EF  01A1               	clrf	?_GetVerify_Sum+1
  9812  02F0  3068               	movlw	(_RomParams+1)& (0+255)
  9813  02F1  21F3               	fcall	_GetVerify_Sum
  9814  02F2  00E7               	movwf	_RomParams
  9815                           
  9816                           ;afx.c: 142: RomParams.sum+=1;
  9817  02F3  0AE7               	incf	_RomParams,f
  9818                           
  9819                           ;afx.c: 143: for(i=0;i<2;i++)
  9820  02F4  01A7               	clrf	SaveRomData@i
  9821  02F5                     l32411:	
  9822                           
  9823                           ;afx.c: 144: eeprom_write(i,RomParams.All[i]);
  9824  02F5  0827               	movf	SaveRomData@i,w
  9825  02F6  3E67               	addlw	_RomParams& (0+255)
  9826  02F7  0086               	movwf	6
  9827  02F8  0187               	clrf	7
  9828  02F9  0801               	movf	1,w
  9829  02FA  00A0               	movwf	?_eeprom_write
  9830  02FB  0827               	movf	SaveRomData@i,w
  9831  02FC  318F  2706  3180   	fcall	_eeprom_write
  9832  02FF  0020               	movlb	0	; select bank0
  9833  0300  0AA7               	incf	SaveRomData@i,f
  9834  0301  3002               	movlw	2
  9835  0302  0227               	subwf	SaveRomData@i,w
  9836  0303  1803               	btfsc	3,0
  9837  0304  0008               	return
  9838  0305  2AF5               	goto	l32411
  9839  0306                     __end_of_SaveRomData:	
  9840                           
  9841                           	psect	text2020
  9842  053F                     __ptext2020:	
  9843 ;; =============== function _OneWire_ReadByte ends ============
  9844                           
  9845                           
  9846 ;; *************** function _atoi *****************
  9847 ;; Defined at:
  9848 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\atoi.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  9851 ;;		 -> ATCommand_RxList(150), RAM(128), 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  a               2   13[BANK0 ] int 
  9854 ;;  sign            1   12[BANK0 ] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  2    6[BANK0 ] int 
  9857 ;; Registers used:
  9858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9859 ;; Tracked objects:
  9860 ;;		On entry : 1F/0
  9861 ;;		On exit  : 1F/0
  9862 ;;		Unchanged: FFFE0/0
  9863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9864 ;;      Params:         0       2       0       0       0       0       0       0
  9865 ;;      Locals:         0       3       0       0       0       0       0       0
  9866 ;;      Temps:          0       4       0       0       0       0       0       0
  9867 ;;      Totals:         0       9       0       0       0       0       0       0
  9868 ;;Total ram usage:        9 bytes
  9869 ;; Hardware stack levels used:    1
  9870 ;; Hardware stack levels required when called:    4
  9871 ;; This function calls:
  9872 ;;		___wmul
  9873 ;;		_isdigit
  9874 ;; This function is called by:
  9875 ;;		_InitGPRS
  9876 ;; This function uses a non-reentrant model
  9877 ;;
  9878  053F                     _atoi:	
  9879  053F                     l32479:	
  9880                           ; Regs used in _atoi: [wreg+fsr1l-status,0+pclath+cstack]
  9881                           
  9882  053F  0826               	movf	atoi@s,w
  9883  0540  0086               	movwf	6
  9884  0541  0827               	movf	atoi@s+1,w
  9885  0542  0087               	movwf	7
  9886  0543  0801               	movf	1,w
  9887  0544  3A20               	xorlw	32
  9888  0545  1D03               	btfss	3,2
  9889  0546  2D4B               	goto	l32481
  9890  0547                     l32477:	
  9891  0547  0AA6               	incf	atoi@s,f
  9892  0548  1903               	skipnz
  9893  0549  0AA7               	incf	atoi@s+1,f
  9894  054A  2D3F               	goto	l32479
  9895  054B                     l32481:	
  9896  054B  0826               	movf	atoi@s,w
  9897  054C  0086               	movwf	6
  9898  054D  0827               	movf	atoi@s+1,w
  9899  054E  0087               	movwf	7
  9900  054F  0801               	movf	1,w
  9901  0550  3A09               	xorlw	9
  9902  0551  1903               	skipnz
  9903  0552  2D47               	goto	l32477
  9904  0553  01AD               	clrf	atoi@a
  9905  0554  01AE               	clrf	atoi@a+1
  9906  0555  01AC               	clrf	atoi@sign
  9907  0556  0826               	movf	atoi@s,w
  9908  0557  0086               	movwf	6
  9909  0558  0827               	movf	atoi@s+1,w
  9910  0559  0087               	movwf	7
  9911  055A  0801               	movf	1,w
  9912  055B  3A2D               	xorlw	45
  9913  055C  1D03               	skipz
  9914  055D  2D60               	goto	l32489
  9915  055E  0AAC               	incf	atoi@sign,f
  9916  055F  2D8D               	goto	l32491
  9917  0560                     l32489:	
  9918  0560  0826               	movf	atoi@s,w
  9919  0561  0086               	movwf	6
  9920  0562  0827               	movf	atoi@s+1,w
  9921  0563  0087               	movwf	7
  9922  0564  0801               	movf	1,w
  9923  0565  3A2B               	xorlw	43
  9924  0566  1903               	btfsc	3,2
  9925  0567  2D8D               	goto	l32491
  9926  0568                     l32497:	
  9927  0568  0826               	movf	atoi@s,w
  9928  0569  0086               	movwf	6
  9929  056A  0827               	movf	atoi@s+1,w
  9930  056B  0087               	movwf	7
  9931  056C  0801               	movf	1,w
  9932  056D  25A5  3185         	fcall	_isdigit
  9933  056F  1C03               	btfss	3,0
  9934  0570  2D91               	goto	l32499
  9935  0571  0826               	movf	atoi@s,w
  9936  0572  0086               	movwf	6
  9937  0573  0827               	movf	atoi@s+1,w
  9938  0574  0087               	movwf	7
  9939  0575  0801               	movf	1,w
  9940  0576  00A8               	movwf	??_atoi
  9941  0577  01A9               	clrf	??_atoi+1
  9942  0578  082E               	movf	atoi@a+1,w
  9943  0579  00A1               	movwf	?___wmul+1
  9944  057A  082D               	movf	atoi@a,w
  9945  057B  00A0               	movwf	?___wmul
  9946  057C  300A               	movlw	10
  9947  057D  00A2               	movwf	?___wmul+2
  9948  057E  01A3               	clrf	?___wmul+3
  9949  057F  25B3  3185         	fcall	___wmul
  9950  0581  0828               	movf	??_atoi,w
  9951  0582  0720               	addwf	?___wmul,w
  9952  0583  00AA               	movwf	??_atoi+2
  9953  0584  0829               	movf	??_atoi+1,w
  9954  0585  3D21               	addwfc	?___wmul+1,w
  9955  0586  00AB               	movwf	??_atoi+3
  9956  0587  082A               	movf	??_atoi+2,w
  9957  0588  3ED0               	addlw	208
  9958  0589  00AD               	movwf	atoi@a
  9959  058A  30FF               	movlw	255
  9960  058B  3D2B               	addwfc	??_atoi+3,w
  9961  058C  00AE               	movwf	atoi@a+1
  9962  058D                     l32491:	
  9963  058D  0AA6               	incf	atoi@s,f
  9964  058E  1903               	skipnz
  9965  058F  0AA7               	incf	atoi@s+1,f
  9966  0590  2D68               	goto	l32497
  9967  0591                     l32499:	
  9968  0591  082C               	movf	atoi@sign,w
  9969  0592  1903               	btfsc	3,2
  9970  0593  2DA0               	goto	l32505
  9971  0594  092D               	comf	atoi@a,w
  9972  0595  00A8               	movwf	??_atoi
  9973  0596  092E               	comf	atoi@a+1,w
  9974  0597  00A9               	movwf	??_atoi+1
  9975  0598  0AA8               	incf	??_atoi,f
  9976  0599  1903               	skipnz
  9977  059A  0AA9               	incf	??_atoi+1,f
  9978  059B  0828               	movf	??_atoi,w
  9979  059C  00A6               	movwf	?_atoi
  9980  059D  0829               	movf	??_atoi+1,w
  9981  059E  00A7               	movwf	?_atoi+1
  9982  059F  0008               	return
  9983  05A0                     l32505:	
  9984  05A0  082E               	movf	atoi@a+1,w
  9985  05A1  00A7               	movwf	?_atoi+1
  9986  05A2  082D               	movf	atoi@a,w
  9987  05A3  00A6               	movwf	?_atoi
  9988  05A4  0008               	return
  9989  05A5                     __end_of_atoi:	
  9990  05A5                     __ptext2044:	
  9991 ;; =============== function _strlen ends ============
  9992                           
  9993                           
  9994 ;; *************** function _isdigit *****************
  9995 ;; Defined at:
  9996 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isdigit.c"
  9997 ;; Parameters:    Size  Location     Type
  9998 ;;  c               1    wreg     unsigned char 
  9999 ;; Auto vars:     Size  Location     Type
 10000 ;;  c               1    1[BANK0 ] unsigned char 
 10001 ;; Return value:  Size  Location     Type
 10002 ;;		None               void
 10003 ;; Registers used:
 10004 ;;		wreg, status,2, status,0
 10005 ;; Tracked objects:
 10006 ;;		On entry : 1F/0
 10007 ;;		On exit  : 1F/0
 10008 ;;		Unchanged: FFFE0/0
 10009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10010 ;;      Params:         0       0       0       0       0       0       0       0
 10011 ;;      Locals:         0       2       0       0       0       0       0       0
 10012 ;;      Temps:          0       0       0       0       0       0       0       0
 10013 ;;      Totals:         0       2       0       0       0       0       0       0
 10014 ;;Total ram usage:        2 bytes
 10015 ;; Hardware stack levels used:    1
 10016 ;; Hardware stack levels required when called:    3
 10017 ;; This function calls:
 10018 ;;		Nothing
 10019 ;; This function is called by:
 10020 ;;		_atoi
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023  05A5                     _isdigit:	
 10024                           
 10025                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10026                           ;isdigit@c stored from wreg
 10027  05A5  00A1               	movwf	isdigit@c
 10028  05A6  01A0               	clrf	_isdigit$31773
 10029  05A7  303A               	movlw	58
 10030  05A8  0221               	subwf	isdigit@c,w
 10031  05A9  1803               	skipnc
 10032  05AA  2DB1               	goto	l32205
 10033  05AB  3030               	movlw	48
 10034  05AC  0221               	subwf	isdigit@c,w
 10035  05AD  1C03               	skipc
 10036  05AE  2DB1               	goto	l32205
 10037  05AF  01A0               	clrf	_isdigit$31773
 10038  05B0  0AA0               	incf	_isdigit$31773,f
 10039  05B1                     l32205:	
 10040  05B1  0C20               	rrf	_isdigit$31773,w
 10041  05B2  0008               	return
 10042  05B3                     __end_of_isdigit:	
 10043  05B3                     __ptext2039:	
 10044 ;; =============== function ___lwdiv ends ============
 10045                           
 10046                           
 10047 ;; *************** function ___wmul *****************
 10048 ;; Defined at:
 10049 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\wmul.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10052 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10053 ;; Auto vars:     Size  Location     Type
 10054 ;;  product         2    4[BANK0 ] unsigned int 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  2    0[BANK0 ] unsigned int 
 10057 ;; Registers used:
 10058 ;;		wreg, status,2, status,0
 10059 ;; Tracked objects:
 10060 ;;		On entry : 1F/0
 10061 ;;		On exit  : 1F/0
 10062 ;;		Unchanged: FFFE0/0
 10063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10064 ;;      Params:         0       4       0       0       0       0       0       0
 10065 ;;      Locals:         0       2       0       0       0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0
 10067 ;;      Totals:         0       6       0       0       0       0       0       0
 10068 ;;Total ram usage:        6 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:    3
 10071 ;; This function calls:
 10072 ;;		Nothing
 10073 ;; This function is called by:
 10074 ;;		_atoi
 10075 ;; This function uses a non-reentrant model
 10076 ;;
 10077  05B3                     ___wmul:	
 10078                           
 10079                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10080  05B3  01A4               	clrf	___wmul@product
 10081  05B4  01A5               	clrf	___wmul@product+1
 10082  05B5                     l32227:	
 10083  05B5  1C20               	btfss	___wmul@multiplier,0
 10084  05B6  2DBB               	goto	l32231
 10085  05B7  0822               	movf	___wmul@multiplicand,w
 10086  05B8  07A4               	addwf	___wmul@product,f
 10087  05B9  0823               	movf	___wmul@multiplicand+1,w
 10088  05BA  3DA5               	addwfc	___wmul@product+1,f
 10089  05BB                     l32231:	
 10090  05BB  35A2               	lslf	___wmul@multiplicand,f
 10091  05BC  0DA3               	rlf	___wmul@multiplicand+1,f
 10092  05BD  36A1               	lsrf	___wmul@multiplier+1,f
 10093  05BE  0CA0               	rrf	___wmul@multiplier,f
 10094  05BF  0821               	movf	___wmul@multiplier+1,w
 10095  05C0  0420               	iorwf	___wmul@multiplier,w
 10096  05C1  1D03               	skipz
 10097  05C2  2DB5               	goto	l32227
 10098  05C3  0825               	movf	___wmul@product+1,w
 10099  05C4  00A1               	movwf	?___wmul+1
 10100  05C5  0824               	movf	___wmul@product,w
 10101  05C6  00A0               	movwf	?___wmul
 10102  05C7  0008               	return
 10103  05C8                     __end_of___wmul:	
 10104                           
 10105                           	psect	intentry
 10106  0004                     __pintentry:	
 10107 ;; =============== function _LcdDisplayNum ends ============
 10108                           
 10109                           
 10110 ;; *************** function _highISR *****************
 10111 ;; Defined at:
 10112 ;;		line 85 in file "F:\work\WYP\NBIoT1\Main.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;  rx              1    6[COMMON] unsigned char 
 10117 ;; Return value:  Size  Location     Type
 10118 ;;		None               void
 10119 ;; Registers used:
 10120 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 1E/0
 10124 ;;		Unchanged: FFFE0/0
 10125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10126 ;;      Params:         0       0       0       0       0       0       0       0
 10127 ;;      Locals:         1       0       0       0       0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0
 10129 ;;      Totals:         1       0       0       0       0       0       0       0
 10130 ;;Total ram usage:        1 bytes
 10131 ;; Hardware stack levels used:    1
 10132 ;; Hardware stack levels required when called:    2
 10133 ;; This function calls:
 10134 ;;		_ATCommand_ProcRx
 10135 ;; This function is called by:
 10136 ;;		Interrupt level 1
 10137 ;; This function uses a non-reentrant model
 10138 ;;
 10139  0004                     _highISR:	
 10140                           
 10141                           ; Regs used in _highISR: [allreg]
 10142  0004  3180               	pagesel	$
 10143                           
 10144                           ;Main.c: 86: unsigned char rx;
 10145                           ;Main.c: 87: if(RCIE&&RCIF)
 10146  0005  0021               	movlb	1	; select bank1
 10147  0006  1E91               	btfss	17,5
 10148  0007  2818               	goto	i1l30349
 10149  0008  0020               	movlb	0	; select bank0
 10150  0009  1E91               	btfss	17,5
 10151  000A  2818               	goto	i1l30349
 10152                           
 10153                           ;Main.c: 88: {
 10154                           ;Main.c: 89: RCIF=0;
 10155  000B  1291               	bcf	17,5
 10156                           
 10157                           ;Main.c: 90: if(OERR==1)
 10158  000C  0023               	movlb	3	; select bank3
 10159  000D  1C9D               	btfss	29,1
 10160  000E  2812               	goto	i1l30345
 10161                           
 10162                           ;Main.c: 91: {
 10163                           ;Main.c: 92: CREN=0;
 10164  000F  121D               	bcf	29,4
 10165                           
 10166                           ;Main.c: 93: OERR=0;
 10167  0010  109D               	bcf	29,1
 10168                           
 10169                           ;Main.c: 94: CREN=1;
 10170  0011  161D               	bsf	29,4
 10171  0012                     i1l30345:	
 10172                           
 10173                           ;Main.c: 95: }
 10174                           ;Main.c: 96: rx=RCREG;
 10175  0012  0819               	movf	25,w	;volatile
 10176  0013  00F6               	movwf	highISR@rx
 10177                           
 10178                           ;Main.c: 97: ATCommand_ProcRx(rx);
 10179  0014  0876               	movf	highISR@rx,w
 10180  0015  3184  2499  3180   	fcall	_ATCommand_ProcRx
 10181  0018                     i1l30349:	
 10182                           
 10183                           ;Main.c: 98: }
 10184                           ;Main.c: 99: if(TMR1IF&& TMR1IE)
 10185  0018  0020               	movlb	0	; select bank0
 10186  0019  1C11               	btfss	17,0
 10187  001A  0009               	retfie
 10188  001B  0021               	movlb	1	; select bank1
 10189  001C  1C11               	btfss	17,0
 10190  001D  0009               	retfie
 10191  001E  0064               	clrwdt	;#
 10192                           
 10193                           ;Main.c: 102: TMR1IF=0;
 10194  001F  0020               	movlb	0	; select bank0
 10195  0020  1011               	bcf	17,0
 10196                           
 10197                           ;Main.c: 103: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
 10198  0021  303C               	movlw	60
 10199  0022  0097               	movwf	23	;volatile
 10200  0023  30B0               	movlw	176
 10201  0024  0096               	movwf	22	;volatile
 10202                           
 10203                           ;Main.c: 104: SystemTick++;
 10204  0025  0ADD               	incf	_SystemTick,f
 10205  0026  1903               	skipnz
 10206  0027  0ADE               	incf	_SystemTick+1,f
 10207  0028  0009               	retfie
 10208  0029                     __end_of_highISR:	
 10209                           
 10210                           	psect	text2057
 10211  0499                     __ptext2057:	
 10212 ;; =============== function _highISR ends ============
 10213                           
 10214                           
 10215 ;; *************** function _ATCommand_ProcRx *****************
 10216 ;; Defined at:
 10217 ;;		line 27 in file "F:\work\WYP\NBIoT1\ATCommand.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  rx              1    wreg     unsigned char 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  rx              1    5[COMMON] unsigned char 
 10222 ;; Return value:  Size  Location     Type
 10223 ;;		None               void
 10224 ;; Registers used:
 10225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10226 ;; Tracked objects:
 10227 ;;		On entry : 1F/3
 10228 ;;		On exit  : 1F/3
 10229 ;;		Unchanged: FFFE0/0
 10230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10231 ;;      Params:         0       0       0       0       0       0       0       0
 10232 ;;      Locals:         1       0       0       0       0       0       0       0
 10233 ;;      Temps:          3       0       0       0       0       0       0       0
 10234 ;;      Totals:         4       0       0       0       0       0       0       0
 10235 ;;Total ram usage:        4 bytes
 10236 ;; Hardware stack levels used:    1
 10237 ;; Hardware stack levels required when called:    1
 10238 ;; This function calls:
 10239 ;;		_isgraph
 10240 ;; This function is called by:
 10241 ;;		_highISR
 10242 ;; This function uses a non-reentrant model
 10243 ;;
 10244  0499                     _ATCommand_ProcRx:	
 10245                           
 10246                           ; Regs used in _ATCommand_ProcRx: [wreg+fsr1l-status,0+pclath+cstack]
 10247                           ;ATCommand_ProcRx@rx stored from wreg
 10248  0499  00F5               	movwf	ATCommand_ProcRx@rx
 10249                           
 10250                           ;ATCommand.c: 28: if(ATCommand_Flags.bRx)
 10251  049A  18FA               	btfsc	_ATCommand_Flags,1
 10252  049B  0008               	return
 10253                           
 10254                           ;ATCommand.c: 30: if(ATCommand_Clear!='\0')
 10255  049C  0879               	movf	_ATCommand_Clear,w
 10256  049D  1903               	btfsc	3,2
 10257  049E  2CA6               	goto	i1l14910
 10258                           
 10259                           ;ATCommand.c: 31: {
 10260                           ;ATCommand.c: 32: if(rx==ATCommand_Clear)
 10261  049F  0875               	movf	ATCommand_ProcRx@rx,w
 10262  04A0  0679               	xorwf	_ATCommand_Clear,w
 10263  04A1  1D03               	skipz
 10264  04A2  2CA6               	goto	i1l14910
 10265  04A3                     i1l30365:	
 10266                           
 10267                           ;ATCommand.c: 33: {
 10268                           ;ATCommand.c: 34: ATCommand_RxCount=0;
 10269  04A3  01FB               	clrf	_ATCommand_RxCount
 10270  04A4                     i1l30367:	
 10271                           
 10272                           ;ATCommand.c: 35: ATCommand_RxList[ATCommand_RxCount]='\0';
 10273  04A4  2536               	fcall	PL3	;call to abstracted procedure
 10274  04A5  0008               	return
 10275  04A6                     i1l14910:	
 10276                           
 10277                           ;ATCommand.c: 37: }
 10278                           ;ATCommand.c: 38: }
 10279                           ;ATCommand.c: 39: if(ATCommand_Flags.bChar)
 10280  04A6  1C7A               	btfss	_ATCommand_Flags,0
 10281  04A7  2CB3               	goto	i1l30385
 10282                           
 10283                           ;ATCommand.c: 40: {
 10284                           ;ATCommand.c: 41: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10285  04A8  0875               	movf	ATCommand_ProcRx@rx,w
 10286                           
 10287                           ;ATCommand.c: 42: if(ATCommand_RxCount>=150)
 10288  04A9  24CD  3184         	fcall	PL2	;call to abstracted procedure
 10289  04AB  1C03               	skipc
 10290  04AC  2CAF               	goto	i1l30379
 10291                           
 10292                           ;ATCommand.c: 43: {
 10293                           ;ATCommand.c: 44: ATCommand_RxCount=0;
 10294  04AD  01FB               	clrf	_ATCommand_RxCount
 10295                           
 10296                           ;ATCommand.c: 45: }
 10297  04AE  2CB0               	goto	i1l30381
 10298  04AF                     i1l30379:	
 10299                           
 10300                           ;ATCommand.c: 46: else
 10301                           ;ATCommand.c: 47: {
 10302                           ;ATCommand.c: 48: ATCommand_RxList[ATCommand_RxCount]='\0';
 10303  04AF  2536               	fcall	PL3	;call to abstracted procedure
 10304  04B0                     i1l30381:	
 10305                           
 10306                           ;ATCommand.c: 49: }
 10307                           ;ATCommand.c: 50: if(!ATCommand_Flags.bWaitData)
 10308  04B0  1D7A               	btfss	_ATCommand_Flags,2
 10309                           
 10310                           ;ATCommand.c: 51: {
 10311                           ;ATCommand.c: 52: ;;
 10312                           ;ATCommand.c: 53: ATCommand_RxCount=0;
 10313  04B1  01FB               	clrf	_ATCommand_RxCount
 10314  04B2  0008               	return
 10315  04B3                     i1l30385:	
 10316                           
 10317                           ;ATCommand.c: 56: else
 10318                           ;ATCommand.c: 57: {
 10319                           ;ATCommand.c: 58: if(isgraph(rx)==1)
 10320  04B3  0875               	movf	ATCommand_ProcRx@rx,w
 10321  04B4  24BF  3184         	fcall	_isgraph
 10322  04B6  1C03               	btfss	3,0
 10323  04B7  0008               	return
 10324                           
 10325                           ;ATCommand.c: 59: {
 10326                           ;ATCommand.c: 60: ATCommand_Flags.bChar=1;
 10327  04B8  147A               	bsf	_ATCommand_Flags,0
 10328                           
 10329                           ;ATCommand.c: 61: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10330  04B9  0875               	movf	ATCommand_ProcRx@rx,w
 10331                           
 10332                           ;ATCommand.c: 62: if(ATCommand_RxCount>=150)
 10333  04BA  24CD  3184         	fcall	PL2	;call to abstracted procedure
 10334  04BC  1803               	btfsc	3,0
 10335  04BD  2CA3               	goto	i1l30365
 10336  04BE  2CA4               	goto	i1l30367
 10337  04BF                     __end_of_ATCommand_ProcRx:	
 10338  04BF                     __ptext2058:	
 10339 ;; =============== function _ATCommand_ProcRx ends ============
 10340                           
 10341                           
 10342 ;; *************** function _isgraph *****************
 10343 ;; Defined at:
 10344 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isgraph.c"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  c               1    wreg     unsigned char 
 10347 ;; Auto vars:     Size  Location     Type
 10348 ;;  c               1    1[COMMON] unsigned char 
 10349 ;; Return value:  Size  Location     Type
 10350 ;;		None               void
 10351 ;; Registers used:
 10352 ;;		wreg, status,2, status,0
 10353 ;; Tracked objects:
 10354 ;;		On entry : 1F/3
 10355 ;;		On exit  : 1F/3
 10356 ;;		Unchanged: FFFE0/0
 10357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10358 ;;      Params:         0       0       0       0       0       0       0       0
 10359 ;;      Locals:         2       0       0       0       0       0       0       0
 10360 ;;      Temps:          0       0       0       0       0       0       0       0
 10361 ;;      Totals:         2       0       0       0       0       0       0       0
 10362 ;;Total ram usage:        2 bytes
 10363 ;; Hardware stack levels used:    1
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_ATCommand_ProcRx
 10368 ;; This function uses a non-reentrant model
 10369 ;;
 10370  04BF                     _isgraph:	
 10371                           
 10372                           ; Regs used in _isgraph: [wreg+status,2+status,0]
 10373                           ;isgraph@c stored from wreg
 10374  04BF  00F1               	movwf	isgraph@c
 10375  04C0  01F0               	clrf	_isgraph$31776
 10376  04C1  307F               	movlw	127
 10377  04C2  0271               	subwf	isgraph@c,w
 10378  04C3  1803               	skipnc
 10379  04C4  2CCB               	goto	i1l30477
 10380  04C5  3021               	movlw	33
 10381  04C6  0271               	subwf	isgraph@c,w
 10382  04C7  1C03               	skipc
 10383  04C8  2CCB               	goto	i1l30477
 10384  04C9  01F0               	clrf	_isgraph$31776
 10385  04CA  0AF0               	incf	_isgraph$31776,f
 10386  04CB                     i1l30477:	
 10387  04CB  0C70               	rrf	_isgraph$31776,w
 10388  04CC  0008               	return
 10389  04CD                     __end_of_isgraph:	
 10390  04CD                     PL2:	
 10391  04CD  00F2               	movwf	??_ATCommand_ProcRx
 10392  04CE  087B               	movf	_ATCommand_RxCount,w
 10393  04CF  3E5A               	addlw	90
 10394  04D0  00F3               	movwf	??_ATCommand_ProcRx+1
 10395  04D1  3021               	movlw	33
 10396  04D2  1803               	skipnc
 10397  04D3  3022               	movlw	34
 10398  04D4  00F4               	movwf	??_ATCommand_ProcRx+2
 10399  04D5  0873               	movf	??_ATCommand_ProcRx+1,w
 10400  04D6  0086               	movwf	6
 10401  04D7  0874               	movf	??_ATCommand_ProcRx+2,w
 10402  04D8  0087               	movwf	7
 10403  04D9  0872               	movf	??_ATCommand_ProcRx,w
 10404  04DA  0081               	movwf	1
 10405  04DB  0AFB               	incf	_ATCommand_RxCount,f
 10406  04DC  3096               	movlw	150
 10407  04DD  027B               	subwf	_ATCommand_RxCount,w
 10408  04DE  0008               	return
 10409  04DF                     __ptext2004:	
 10410 ;; =============== function _OneWire_Command ends ============
 10411                           
 10412                           
 10413 ;; *************** function _ATCommand_WaitData *****************
 10414 ;; Defined at:
 10415 ;;		line 125 in file "F:\work\WYP\NBIoT1\ATCommand.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;  strx            2   20[BANK0 ] PTR unsigned char 
 10420 ;;		 -> ATCommand_RxList(150), RAM(128), 
 10421 ;;  res             1   19[BANK0 ] unsigned char 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      unsigned char 
 10424 ;; Registers used:
 10425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 1F/0
 10428 ;;		On exit  : 1F/0
 10429 ;;		Unchanged: FFFE0/0
 10430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10431 ;;      Params:         0       0       0       0       0       0       0       0
 10432 ;;      Locals:         0       3       0       0       0       0       0       0
 10433 ;;      Temps:          0       2       0       0       0       0       0       0
 10434 ;;      Totals:         0       5       0       0       0       0       0       0
 10435 ;;Total ram usage:        5 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:    5
 10438 ;; This function calls:
 10439 ;;		_strstr
 10440 ;;		_strcpy
 10441 ;; This function is called by:
 10442 ;;		_InteractServer
 10443 ;; This function uses a non-reentrant model
 10444 ;;
 10445  04DF                     _ATCommand_WaitData:	
 10446                           
 10447                           ;ATCommand.c: 126: unsigned char res=0;
 10448                           
 10449                           ; Regs used in _ATCommand_WaitData: [wreg-status,0+pclath+cstack]
 10450  04DF  01B3               	clrf	ATCommand_WaitData@res
 10451                           
 10452                           ;ATCommand.c: 128: res=ATACK_Null;
 10453  04E0  01B3               	clrf	ATCommand_WaitData@res
 10454                           
 10455                           ;ATCommand.c: 129: ATCommand_Flags.bRx=0;
 10456  04E1  10FA               	bcf	_ATCommand_Flags,1
 10457                           
 10458                           ;ATCommand.c: 130: ATCommand_Flags.bChar=0;
 10459  04E2  107A               	bcf	_ATCommand_Flags,0
 10460                           
 10461                           ;ATCommand.c: 131: ATCommand_WaitACKTick=SystemTick;
 10462  04E3  085E               	movf	_SystemTick+1,w
 10463  04E4  00D4               	movwf	_ATCommand_WaitACKTick+1
 10464  04E5  085D               	movf	_SystemTick,w
 10465  04E6  00D3               	movwf	_ATCommand_WaitACKTick
 10466                           
 10467                           ;ATCommand.c: 132: ATCommand_RxCount=0;
 10468  04E7  01FB               	clrf	_ATCommand_RxCount
 10469                           
 10470                           ;ATCommand.c: 133: ATCommand_Flags.bWaitData=1;
 10471  04E8  157A               	bsf	_ATCommand_Flags,2
 10472                           
 10473                           ;ATCommand.c: 134: ATCommand_RxList[ATCommand_RxCount]='\0';
 10474  04E9  2536               	fcall	PL3	;call to abstracted procedure
 10475  04EA                     l32739:	
 10476                           
 10477                           ;ATCommand.c: 136: {
 10478                           ;ATCommand.c: 137: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
 10479  04EA  305A               	movlw	90
 10480  04EB  00AD               	movwf	?_strstr
 10481  04EC  3021               	movlw	33
 10482  04ED  00AE               	movwf	?_strstr+1
 10483  04EE  30C4               	movlw	_ATCommand_OkString& (0+255)
 10484  04EF  00AF               	movwf	?_strstr+2
 10485  04F0  01B0               	clrf	?_strstr+3
 10486  04F1  318B  2327  3184   	fcall	_strstr
 10487  04F4  082E               	movf	?_strstr+1,w
 10488  04F5  00B5               	movwf	ATCommand_WaitData@strx+1
 10489  04F6  082D               	movf	?_strstr,w
 10490  04F7  00B4               	movwf	ATCommand_WaitData@strx
 10491                           
 10492                           ;ATCommand.c: 138: if(strx!=0)
 10493  04F8  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10494  04F9  1903               	skipnz
 10495  04FA  2CFE               	goto	l32747
 10496                           
 10497                           ;ATCommand.c: 139: {
 10498                           ;ATCommand.c: 140: res=ATACK_OK;
 10499  04FB  01B3               	clrf	ATCommand_WaitData@res
 10500  04FC  0AB3               	incf	ATCommand_WaitData@res,f
 10501  04FD  2D11               	goto	l32753
 10502  04FE                     l32747:	
 10503                           ;ATCommand.c: 142: break;
 10504                           
 10505                           ;ATCommand.c: 141: ATCommand_Flags.bRx=1;
 10506                           
 10507                           
 10508                           ;ATCommand.c: 144: else
 10509                           ;ATCommand.c: 145: {
 10510                           ;ATCommand.c: 146: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
 10511  04FE  305A               	movlw	90
 10512  04FF  00AD               	movwf	?_strstr
 10513  0500  3021               	movlw	33
 10514  0501  00AE               	movwf	?_strstr+1
 10515  0502  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10516  0503  00AF               	movwf	?_strstr+2
 10517  0504  01B0               	clrf	?_strstr+3
 10518  0505  318B  2327  3184   	fcall	_strstr
 10519  0508  082E               	movf	?_strstr+1,w
 10520  0509  00B5               	movwf	ATCommand_WaitData@strx+1
 10521  050A  082D               	movf	?_strstr,w
 10522  050B  00B4               	movwf	ATCommand_WaitData@strx
 10523                           
 10524                           ;ATCommand.c: 147: if(strx!=0)
 10525  050C  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10526  050D  1903               	skipnz
 10527  050E  2D13               	goto	l32755
 10528                           
 10529                           ;ATCommand.c: 148: {
 10530                           ;ATCommand.c: 149: res=ATACK_Err;
 10531  050F  3002               	movlw	2
 10532  0510  00B3               	movwf	ATCommand_WaitData@res
 10533  0511                     l32753:	
 10534                           
 10535                           ;ATCommand.c: 150: ATCommand_Flags.bRx=1;
 10536  0511  14FA               	bsf	_ATCommand_Flags,1
 10537                           
 10538                           ;ATCommand.c: 151: break;
 10539  0512  2D20               	goto	l14937
 10540  0513                     l32755:	
 10541                           
 10542                           ;ATCommand.c: 152: }
 10543                           ;ATCommand.c: 153: }
 10544                           ;ATCommand.c: 154: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
 10545  0513  0853               	movf	_ATCommand_WaitACKTick,w
 10546  0514  025D               	subwf	_SystemTick,w
 10547  0515  00B1               	movwf	??_ATCommand_WaitData
 10548  0516  0854               	movf	_ATCommand_WaitACKTick+1,w
 10549  0517  3B5E               	subwfb	_SystemTick+1,w
 10550  0518  00B2               	movwf	??_ATCommand_WaitData+1
 10551  0519  0256               	subwf	_ATCommand_WaitACKTimes+1,w
 10552  051A  1D03               	skipz
 10553  051B  2D1E               	goto	u6845
 10554  051C  0831               	movf	??_ATCommand_WaitData,w
 10555  051D  0255               	subwf	_ATCommand_WaitACKTimes,w
 10556  051E                     u6845:	
 10557  051E  1803               	skipnc
 10558  051F  2CEA               	goto	l32739
 10559  0520                     l14937:	
 10560                           
 10561                           ;ATCommand.c: 156: }
 10562                           ;ATCommand.c: 157: ATCommand_Flags.bWaitData=0;
 10563  0520  117A               	bcf	_ATCommand_Flags,2
 10564                           
 10565                           ;ATCommand.c: 158: strcpy(ATCommand_OkString,"OK");
 10566  0521  3067               	movlw	low (STR_35| (0+32768))
 10567  0522  00A0               	movwf	?_strcpy
 10568  0523  3091               	movlw	high (STR_35| (0+32768))
 10569  0524  00A1               	movwf	?_strcpy+1
 10570  0525  30C4               	movlw	_ATCommand_OkString& (0+255)
 10571  0526  318E  2637  3184   	fcall	_strcpy
 10572                           
 10573                           ;ATCommand.c: 159: strcpy(ATCommand_ErrString,"ERROR");
 10574  0529  304E               	movlw	low (STR_23| (0+32768))
 10575  052A  00A0               	movwf	?_strcpy
 10576  052B  3091               	movlw	high (STR_23| (0+32768))
 10577  052C  00A1               	movwf	?_strcpy+1
 10578  052D  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10579  052E  318E  2637         	fcall	_strcpy
 10580                           
 10581                           ;ATCommand.c: 160: ATCommand_Clear='\0';
 10582  0530  01F9               	clrf	_ATCommand_Clear
 10583                           
 10584                           ;ATCommand.c: 162: ATCommand_WaitACKTimes=50;
 10585  0531  3032               	movlw	50
 10586  0532  00D5               	movwf	_ATCommand_WaitACKTimes
 10587  0533  01D6               	clrf	_ATCommand_WaitACKTimes+1
 10588                           
 10589                           ;ATCommand.c: 163: return res;
 10590  0534  0833               	movf	ATCommand_WaitData@res,w
 10591  0535  0008               	return
 10592  0536                     __end_of_ATCommand_WaitData:	
 10593  0536                     PL3:	
 10594  0536  087B               	movf	_ATCommand_RxCount,w
 10595  0537  3E5A               	addlw	90
 10596  0538  0086               	movwf	6
 10597  0539  3021               	movlw	33
 10598  053A  1803               	skipnc
 10599  053B  3022               	movlw	34
 10600  053C  0087               	movwf	7
 10601  053D  0181               	clrf	1
 10602  053E  0008               	return
 10603                           
 10604                           	psect	text2059
 10605  0000                     __ptext2059:	
 10606 ;; =============== function _isgraph ends ============
 10607                           
 10608  007E                     btemp	set	126	;btemp
 10609  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Wed Apr 10 11:12:29 2019

              ___bmul@product 0021                            _RD 0CA8                            _WA 3C94  
                          _WR 0CA9           ___wmul@multiplicand 0022                           _GIE 005F  
                         _RB1 0069                           _RB2 006A                           _RB7 006F  
                         _CSQ 0062                           _RD6 007E                           _PR2 001B  
     __end_of_TCN75_SetConfig 0234             DS18X20_ReadMeas@i 002B              SimI2C_SendByte@i 0022  
            SimI2C_SendByte@t 0021                           wreg 0009         ATCommand_WaitData@res 0033  
                 ?_TCN75_Init 0070                          l2110 03EA                          l2102 03DE  
                        l2201 0477                          l2121 03FF                          l2113 03F3  
                        l2105 03E7                          l2210 047F                          l2202 0473  
                        l2130 0407                          l2122 03FB                          l2114 03EF  
                        l2106 03E3                          l2050 038F                          l2214 0486  
                        l2206 047A                          l2150 0426                          l2142 041A  
                        l2134 040E                          l2126 0402                          l2118 03F6  
                        l2070 03AE                          l2062 03A2                          l2054 0396  
                        l2046 038A                          l2232 0000                          l2209 0483  
                        l2161 043B                          l2153 042F                          l2145 0423  
                        l2137 0417                          l2129 040B                          l2081 03C3  
                        l2073 03B7                          l2065 03AB                          l2057 039F  
                        l2049 0393                          l2218 048B                          l2170 0443  
                        l2162 0437                          l2154 042B                          l2146 041F  
                        l2138 0413                          l2090 03CB                          l2082 03BF  
                        l2074 03B3                          l2066 03A7                          l2058 039B  
                        l2243 0EC7                          l2236 0EBF                          l2252 0367  
                        l2261 0000                          l2190 0462                          l2182 0456  
                        l2174 044A                          l2166 043E                          l2158 0432  
                        l2094 03D2                          l2086 03C6                          l2078 03BA  
                        l2246 0ECB                          l2239 0EC3                          l2255 036B  
                        l2264 0000                          l2193 046B                          l2185 045F  
                        l2177 0453                          l2169 0447                          l2097 03DB  
                        l2089 03CF                          l2249 0000                          l2194 0467  
                        l2186 045B                          l2178 044F                          l2098 03D7  
                        l2258 0000                          l2198 046E                          l4332 00F4  
                        l4325 0000                          l4329 0000                          l4337 0000  
                        l6410 0891                          l6413 0896                          l6450 0000  
                        l6436 091D                          l6437 08F8                          l8621 0000  
                        l8543 0000                          l8560 095B                          l8569 0BAC  
                        l8588 0C5F                          STR_1 106B                          STR_2 1047  
                        STR_3 10CC                          STR_4 1023                          STR_5 10C0  
                        STR_6 10EF                          STR_7 10E4                          STR_8 1093  
                        STR_9 110F                          _CREN 0CEC                          u3625 01FF  
                        u4274 007C                          u4275 007B                          _PEIE 005E  
                        _SEG3 3CC3                          u4294 00C6                          u4295 00C5  
                        _SEG5 3CC5                          _SEG6 3CC6                          u6315 0EA5  
                        _RCIE 048D                          _RCIF 008D                          u3685 0091  
                        u3935 0FCB                          u7145 0BA9                          u6275 0E62  
                        u6455 0ED4                          u7175 0BED                          _OERR 0CE9  
                        u7355 0D4E                          u6845 051E                          u7807 0B21  
                        u7817 01A3                          u6785 0AF1                          u7827 01AC  
                        u7837 01B7                          u7695 08A6                          u7767 0871  
                        u7777 030C                          u7787 00DB                          u7797 0070  
                        _WERR 3C8D                          _TRMT 0CF1                          _WREN 0CAA  
              ??_eeprom_write 0021                 _SimI2C_RecAck 028B                          _atoi 053F  
                        _main 0855                          fsr0h 0005                          fsr1h 0007  
                        fsr0l 0004                          indf0 0000                          indf1 0001  
                        fsr1l 0006                          btemp 007E                 ?_SimI2C_NoAck 0070  
                        start 0029                 ??_SimI2C_Init 0020                 ?_SimI2C_Start 0070  
               ??_SimI2C_Stop 0020             ___bmul@multiplier 0022        ATCommand_WaitData@strx 0034  
             __end_of_InitMCU 017C                  InitGPRS@strx 003E                 ?_InitVariable 0070  
       __end_of_LcdDisplayAll 0367         __end_of_LcdDisplayNum 0490                    _GetRomData 01D6  
             __end_of_PowerON 0FF2           __end_of_DisplayInit 013E                         l10724 033D  
                       l21139 0000                         l21148 0000                         l21157 0000  
                       l23211 0E12                         l32101 0000                         l30501 0000  
                       l23214 0000                         l23230 0DAA                         l32111 0000  
                       l32103 0000                         l30503 0000                         l23223 0E1A  
                       l32041 0000                         l32121 0000                         l32113 0000  
                       l32105 0000                         l30505 0000                         l23241 0000  
                       l33001 0BCA                         l12834 0000                         l32051 0000  
                       l32043 0000                         l32123 0000                         l32115 0000  
                       l32107 0000                         l32131 0000                         l30507 008B  
                       l32211 0E2D                         l33011 0BD8                         l32061 0000  
                       l32053 0000                         l32045 0000                         l32037 0000  
                       l32117 0000                         l32109 0000                         l32141 0000  
                       l30453 0000                         l30461 0000                         l30509 00B1  
                       l32205 05B1                         l30541 0F60                         l32301 0000  
                       l12781 0B13                         l33013 0000                         l33005 0000  
                       l32063 0000                         l32055 0000                         l32047 0000  
                       l32039 0000                         l32119 0000                         l32071 0000  
                       l32135 0000                         l32127 0000                         l30455 0E39  
                       l30463 01F6                         l30527 0000                         l30535 0000  
                       l32231 05BB                         l32303 0FA4                         l32311 0000  
                       l33103 0CC1                         l33031 0000                         l33023 0BFA  
                       l33015 0000                         l12784 0000                         l32065 0000  
                       l32057 0000                         l32049 0000                         l32081 0000  
                       l32073 0000                         l32137 0000                         l32129 0000  
                       l32153 0DC5                         l32145 0000                         l30465 020A  
                       l30457 0000                         l30481 0000                         l30529 0F26  
                       l30545 0F6F                         l30553 0000                         l32217 0000  
                       l32209 0000                         l32233 0000                         l32225 0000  
                       l32241 0000                         l32305 0000                         l32401 0000  
                       l30801 0000                         l33201 0000                         l33105 0000  
                       l33033 0C04                         l33025 0000                         l33041 0C59  
                       l33017 0BF0                         l32067 0000                         l32059 0000  
                       l32091 0000                         l32083 0000                         l32075 0000  
                       l32139 0000                         l32147 0000                         l30491 0000  
                       l30547 0F41                         l30555 0000                         l32219 0000  
                       l32235 0000                         l32227 05B5                         l32251 0E5A  
                       l32243 0000                         l32307 0FA7                         l32323 0361  
                       l32315 035A                         l32331 0000                         l32411 02F5  
                       l32403 0000                         l30803 0000                         l33203 0000  
                       l33123 0000                         l33115 0CDB                         l33107 0000  
                       l33131 0CF1                         l33043 0000                         l33035 0C0E  
                       l33027 0000                         l32093 0000                         l32085 0000  
                       l32077 0000                         l32069 0000                         l32181 0000  
                       l32165 0DD5                         l30493 0000                         l30485 0000  
                       l30549 0F76                         l32261 0000                         l32253 0000  
                       l32317 035B                         l32333 0000                         l32341 0000  
                       l32413 0000                         l32405 0000                         l32421 0000  
                       l30813 01BF                         l30805 0000                         l32501 0000  
                       l33205 0000                         l33141 0000                         l33125 0000  
                       l33117 0000                         l33109 0000                         l33045 0000  
                       l33037 0000                         l32095 0000                         l32087 0000  
                       l32079 0000                         l32175 0DE4                         l32159 0000  
                       l32191 0000                         l30495 00A5                         l30487 009C  
                       l32263 0E6D                         l30671 0000                         l32319 0000  
                       l32335 0000                         l32351 0000                         l32343 0000  
                       l32415 0000                         l32423 0000                         l30807 0000  
                       l30911 0000                         l32511 0000                         l33215 0000  
                       l33207 0000                         l33151 0D11                         l33143 0000  
                       l33119 0000                         l33071 0000                         l33231 0903  
                       l33223 0000                         l33311 0000                         l33303 098D  
                       l32097 0000                         l32089 0000                         l30497 0000  
                       l30489 0000                         l32257 0000                         l32281 0000  
                       l30673 0000                         l30665 0000                         l32329 0000  
                       l32353 0000                         l32345 0000                         l32337 0EB4  
                       l32361 0000                         l14905 0000                         l32417 0000  
                       l30809 0000                         l30817 0197                         l32425 0000  
                       l32505 05A0                         l30921 0000                         l32601 0230  
                       l33209 0000                         l33161 0000                         l33153 0000  
                       l33145 0000                         l33129 0CBC                         l33081 0000  
                       l33073 0000                         l33057 0C85                         l33049 0C76  
                       l33217 0B65                         l33241 0916                         l33233 0000  
                       l33305 0000                         l33321 0000                         l33313 0000  
                       l33401 0000                         l32099 0000                         l32187 0DF7  
                       l30499 0000                         l32195 02E6                         l32259 0E69  
                       l32275 0E9F                         l32283 0EAF                         l32267 0000  
                       l32291 0000                         l30667 0000                         l32355 0000  
                       l32347 0000                         l32363 0000                         l32371 0000  
                       l32419 0000                         l30819 01C2                         l32435 0000  
                       l32427 0000                         l32451 0000                         l32443 0D96  
                       l30923 0080                         l32523 0000                         l32531 0000  
                       l32603 0000                         l14923 0ABF                         l33219 0D89  
                       l33155 0000                         l33139 0CF7                         l33083 0000  
                       l33067 0C8A                         l33243 0919                         l33307 0000  
                       l33315 0000                         l33403 0000                         l33411 0343  
                       l14932 0000                         l32197 0000                         l32293 0F97  
                       l30677 0FD8                         l30669 0FC8                         l32349 0000  
                       l32357 0F04                         l32365 0000                         l32381 0000  
                       l32373 0000                         l32429 0000                         l32437 0000  
                       l32461 0B28                         l30917 0000                         l30941 0000  
                       l32509 0000                         l32525 0000                         l32517 0000  
                       l32533 0000                         l32621 0000                         l32613 0000  
                       l14925 0AF3                         l32701 0AA6                         l33181 0D39  
                       l33165 0CF2                         l33069 0000                         l33245 0000  
                       l33229 0900                         l33309 0000                         l33261 0000  
                       l33341 0000                         l33333 0000                         l33317 0000  
                       l33413 0000                         l33405 0000                         l33501 08EB  
                       l33421 0000                         l14942 0000                         l32199 0000  
                       l32279 0EAB                         l32287 0000                         l30679 0000  
                       l32367 0000                         l32359 0000                         l32383 0000  
                       l32455 0DA6                         l32447 0000                         l32439 0000  
                       l32471 0B5F                         l32463 0000                         l30919 0000  
                       l30951 0000                         l30943 0000                         l30935 00C1  
                       l32519 0000                         l32527 0000                         l32551 0000  
                       l32615 0000                         l32607 0000                         l32711 0000  
                       l32703 0AFE                         l33191 0D58                         l33183 0000  
                       l33175 0000                         l33159 0000                         l33087 0000  
                       l33079 0CA4                         l33095 0CBA                         l33167 0D27  
                       l33255 093C                         l33263 0000                         l33351 0000  
                       l33343 0000                         l33335 0000                         l33327 00F3  
                       l33319 0000                         l33415 0000                         l33503 0000  
                       l33431 0000                         l33423 0000                         l32297 0000  
                       l32289 0000                         l32369 0000                         l32449 0000  
                       l32481 054B                         l30953 0000                         l30945 0000  
                       l30937 0000                         l30929 0000                         l32529 0000  
                       l32537 0000                         l32561 0000                         l32641 0238  
                       l32609 0000                         l32705 0000                         l14937 0520  
                       l33185 0000                         l33169 0D28                         l33089 0000  
                       l33281 0000                         l33265 0000                         l33273 094F  
                       l33257 0000                         l33353 0000                         l33345 0000  
                       l33337 0000                         l33329 00FD                         l33409 0000  
                       l33505 08EE                         l33441 0000                         l33433 086A  
                       l33425 0000                         l33417 0000                         l32387 0000  
                       l32379 01D7                         l32467 0B54                         l32459 0000  
                       l32491 058D                         l32475 0000                         l30955 0000  
                       l30939 0000                         l32547 0000                         l32539 0000  
                       l32555 0000                         l32571 0000                         l32643 0266  
                       l32635 0000                         l32627 0000                         l32651 0000  
                       l32707 0000                         l32723 0000                         l32715 0000  
                       l32731 0000                         l32811 003C                         l33195 0D5B  
                       l33291 0000                         l33267 0000                         l33259 0000  
                       l33347 0000                         l33339 0000                         l33371 0000  
                       l33363 0000                         l33355 0000                         l33443 0000  
                       l33427 0000                         l33419 0000                         l32389 0000  
                       l30797 0000                         l32485 0000                         l32477 0547  
                       l30957 0000                         l30949 00D8                         l32549 0000  
                       l32557 0000                         l32573 0000                         l32565 0000  
                       l32581 0000                         l32645 0000                         l32637 0000  
                       l32629 0000                         l32653 0000                         l32709 0000  
                       l32717 0000                         l32741 0000                         l32733 0000  
                       l32725 0000                         l32813 0000                         l32805 0000  
                       l33197 0000                         l33269 0000                         l33349 010D  
                       l33381 0E93                         l33373 0000                         l33365 0000  
                       l33461 0000                         l33445 0000                         l33437 0000  
                       l33429 0000                         l25294 00AA                         l25287 0000  
                       l30799 0000                         l32479 053F                         l32559 0000  
                       l32567 01CD                         l32583 0000                         l32575 0000  
                       l32639 0000                         l32671 0000                         l32663 0000  
                       l32655 0000                         l32735 0000                         l32727 0000  
                       l32815 0000                         l32911 0000                         l33199 0000  
                       l33295 097A                         l33287 096D                         l33279 0000  
                       l33367 0000                         l33375 0E85                         l33359 0E77  
                       l33391 0000                         l33383 0000                         l33471 0000  
                       l33463 0000                         l33455 089A                         l33447 0880  
                       l19080 0000                         l25297 0000                         l32497 0568  
                       l32489 0560                         l32569 0000                         l32577 0000  
                       l32649 0000                         l32681 0AD2                         l32673 0000  
                       l32665 0000                         l32657 0000                         l32761 0000  
                       l32753 0511                         l32737 0000                         l32729 0000  
                       l32921 0000                         l32913 0000                         l32905 0000  
                       l33297 0000                         l33289 0000                         l33369 0E7B  
                       l33377 0E8E                         l33393 0000                         l33481 0000  
                       l33473 0000                         l33465 0000                         l19074 0000  
                       l19059 0000                         l32499 0591                         l32595 0000  
                       l32683 0000                         l32675 0000                         l32667 0000  
                       l32659 0000                         l32763 0000                         l32755 0513  
                       l32747 04FE                         l32739 04EA                         l32851 09C3  
                       l32835 0000                         l33379 0000                         l33387 0000  
                       l33491 0000                         l33459 0000                         l27501 0000  
                       l19077 005E                         l32589 0000                         l32693 0000  
                       l32669 0000                         l32765 0000                         l32749 0000  
                       l32781 0000                         l32829 0053                         l32909 0000  
                       l32861 09C5                         l32845 09B7                         l32837 0000  
                       l33397 032E                         l33477 08C9                         l33469 0000  
                       l31991 0387                         l27511 0000                         l32599 020F  
                       l32687 0AE4                         l32759 0000                         l32791 0000  
                       l32919 0A5B                         l32927 0A25                         l32863 09D8  
                       l32839 0000                         l33399 0331                         l33495 0000  
                       l33487 08D2                         l33479 0000                         l27416 0000  
                       l27360 0000                         l27417 0F07                         l32697 0AF7  
                       l32689 0AE6                         l32777 0000                         l32769 0000  
                       l32937 0A6C                         l32929 0A62                         l33489 0000  
                       l27354 0000                         l27443 0000                         l27363 0000  
                       l32699 0000                         l32955 0000                         l32947 0A83  
                       l32939 0000                         l32883 0A05                         l32875 0000  
                       l32859 0000                         l32971 0000                         l33499 0000  
                       l27508 0F9C                         l27372 026D                         l27517 0000  
                       l27357 0000                         l32949 0000                         l32957 0A74  
                       l32885 0000                         l32893 09E1                         l32869 09DE  
                       l32981 0000                         l32973 0000                         l32965 0000  
                       l27454 0000                         l27374 027A                         l27382 0000  
                       l27366 0000                         l27375 027C                         l32959 0A9B  
                       l32895 0000                         l32887 0000                         l32991 0000  
                       l32967 0000                         l27376 0000                         l27481 0000  
                       l27369 0000                         l32897 09E7                         l32977 0B86  
                       l27810 0F79                         l27395 0DFA                         l27475 0000  
                       l27491 0000                         l27379 02B1                         l32899 0A20  
                       l32995 0000                         l32987 0B94                         l27397 0000  
                       l32997 0000                         l32989 0000                         l27819 0000  
                       ?_atoi 0026                         ?_main 0070               __end_of___lbdiv 0FA9  
                       STR_10 1159                         STR_11 1154                         STR_20 1159  
                       STR_12 1093                         STR_21 1154                         STR_13 1121  
                       STR_14 1159                         STR_22 113B                         STR_30 1133  
                       STR_15 1154                         STR_23 114E                         STR_31 1148  
                       STR_40 1167                         STR_24 116A                         STR_32 10D8  
                       STR_16 1082                         STR_33 10E4                         STR_41 114E  
                       STR_25 1163                         STR_17 10B3                         STR_26 1142  
                       STR_34 10FA                         STR_18 10A3                         STR_35 1167  
                       STR_27 112A                         STR_19 1118                         STR_36 114E  
                       STR_28 1105                         STR_37 116A                         STR_29 115E  
                       STR_38 1167                         STR_39 114E               __end_of___lbmod 0FDC  
                       _CARRY 0018                         _ICCID 00A0                         _LCDEN 3C8F  
                       _T1CON 0018                         _T2CON 001C                         _LATB1 0869  
                       _LATA3 0863                         _LATA4 0864                         _LATD5 087D  
                       _LATD6 087E                         _LATD7 087F                         _LCDRL 0795  
                       _LCDPS 0792               __end_of___lwdiv 0E72                         _SEG11 3CCB  
                       _SEG21 3CD5                         _SEG22 3CD6                         _SEG23 3CD7  
                       _SEG16 3CD0               __end_of___lwmod 0EB4                         _RCREG 0199  
                       _RCSTA 019D                         _TMR1H 0017                         _TMR1L 0016  
                       _SPBRG 019B                    _TListIndex 0065               _OneWire_Command 00B3  
                       _WPUB7 106F                _LcdDisplay_CSQ 0FA9                         _TXREG 019A  
                       _TXSTA 019E                _LcdDisplay_Err 0367                         _TList 0120  
             __end_of_highISR 0029               __end_of_isdigit 05B3             OneWire_ReadByte@b 0021  
           OneWire_ReadByte@i 0023               __end_of_isgraph 04CD                         atoi@a 002D  
                       atoi@s 0026                         main@i 004E  __size_of_Uart1_PutString_Hex 0010  
             InteractServer@i 0045               InteractServer@j 0043               InteractServer@k 0044  
              ?_SimI2C_RecAck 0070               InteractServer@t 0040              __end_of_CallSend 09A9  
            __end_of_CallProc 0E94                 Uart1_PutHex@b 0022                 Uart1_PutHex@c 0021  
              ??_SimI2C_NoAck 0020                         status 0003                         wtemp0 007E  
             __end_of_strncmp 0F79               ___lbdiv@divisor 0020                ??_SimI2C_Start 0020  
      __size_of_TCN75_ReadReg 0036               ___lbdiv@counter 0022                    _SimI2C_Ack 02C9  
                 InitSystem@x 002D                  __end_of_atoi 05A5                  __end_of_main 08F3  
              ??_InitVariable 0028              __end_of_InitGPRS 0AA1           __size_of_TCN75_Init 0001  
                  _InitSystem 00E8       __size_of_GetVerify_CRC8 002C           __end_of_SimI2C_Init 02ED  
               InitGPRS@retry 0040           __end_of_SimI2C_Stop 02E6                 ??_SaveRomData 0027  
                      ??_atoi 0028                        ??_main 004B        __end_of_LcdDisplay_CSQ 0FC4  
         GetVerify_CRC8@Count 0020        __end_of_LcdDisplay_Err 0387           GetVerify_CRC8@pBuff 0023  
            ?_TCN75_SetConfig 0070              __end_of_TestProc 0351                        _ADCON1 009E  
                      _EEADRL 0191                        _EEDATA 0193                        _EECON1 0195  
                      _EECON2 0196                _ATCommand_Init 017C                _TxErrDataIndex 0069  
                      _ANSELA 018C                        _ANSELB 018D                        _ANSELD 018F  
                      _ANSELE 0190                        _LCDCON 0791                        _LCDSE0 0798  
                      _LCDCST 0794                        _LCDSE1 0799                        _LCDSE2 079A  
      __size_of_OneWire_Reset 0031                        _LCDREF 0793        OneWire_Command@command 0024  
           ?_DS18X20_ReadMeas 0070            __size_of_ReadTData 004A                        _TMR1IE 0488  
                      _TMR1IF 0088                        _TMR2IE 0489                        _TMR2IF 0089  
                      _TMR1ON 00C0                        _TMR2ON 00E2                        _TRISB1 0469  
                      _TRISA3 0463                        _TRISB2 046A                        _TRISA4 0464  
                      _TRISB7 046F                        _TRISD4 047C                        _TRISC6 0476  
                      _TRISD5 047D                        _TRISC7 0477                        _TRISD6 047E  
                      _TRISD7 047F               _LcdDisplay_CALL 0FDC            ??_DS18X20_ReadMeas 002A  
 __size_of_ATCommand_WaitData 0057                     ??_InitMCU 0020                        _DpyNum 006A  
            _OneWire_ReadByte 005B          __size_of_eeprom_read 0017                        _gFlags 0066  
                 _DisplayInit 011B                     ??_PowerON 0024                        _nWPUEN 04AF  
                      ___bmul 0E2B         __end_of_GetVerify_Sum 020C                        ___wmul 05B3  
           ?_ATCommand_ProcRx 0070                     ??___lbdiv 0021                     ??___lbmod 0021  
             _SimI2C_ReadByte 02A9                     ??___lwdiv 0024                     ??___lwmod 0024  
     __end_of_OneWire_Command 00BF                   ?_GetRomData 0070            ??_ATCommand_ProcRx 0072  
             _SimI2C_SendByte 026A          __end_of_eeprom_write 0F22                     ??_highISR 0076  
             ?_LcdDisplay_CSQ 0070                        _strchr 0F79                        clrloop 05C9  
                      _strcpy 0E37                        _strlen 0F22                        _strstr 0B27  
             ?_LcdDisplay_Err 0070                 _TCN75_ReadReg 0234           SimI2C_SendByte@data 0020  
                   ??_isdigit 0020                     ??_isgraph 0070        __end_of_ATCommand_Init 0193  
         __end_of_SaveRomData 0306                Uart1_PutChar@c 0020                GetVerify_Sum@i 0026  
             ??_SimI2C_RecAck 0020         InteractServer@i_10580 0038         InteractServer@i_10585 003A  
       InteractServer@j_10592 003C                     ??_strncmp 002C              ___lbdiv@dividend 0021  
  __end_of_LcdDisplay_CurTemp 0F06                 ?_Uart1_PutHex 0070          _ATCommand_RetryTimes 0061  
  Uart1_PutString_Hex@pString 0023               ___lbmod@divisor 0020               ___lbmod@counter 0023  
             eeprom_read@addr 0022         TCN75_ReadReg@ErrTimes 0024         TCN75_ReadReg@RegPoint 0023  
          ATCommand_ProcRx@rx 0075                   _SimI2C_Init 02E6                   ?_SimI2C_Ack 0070  
         ___bmul@multiplicand 0020                   _SimI2C_Stop 02DC                __pcstackCOMMON 0070  
          MakeTxTemperature@T 0020            MakeTxTemperature@x 0022                  __pidataBANK0 0000  
                 ?_InitSystem 0070                 _OneWire_Reset 0193                 _isdigit$31773 0020  
             _MeasurementTick 0059              ___lbdiv@quotient 0023             __end_of_ReadTData 093D  
              ?_TCN75_ReadReg 0070          __end_of_SimI2C_NoAck 02DC                     ?_CallSend 0070  
                   ?_CallProc 0070          __end_of_SimI2C_Start 02A9                    _SystemTick 005D  
           eeprom_write@value 0020               ?_ATCommand_Init 0070                  ??_TCN75_Init 0020  
     __end_of_LcdDisplay_CALL 0FE2                ??_Uart1_PutHex 0021          __end_of_InitVariable 01D6  
          OneWire_Reset@Retry 0021       __size_of_InteractServer 0229                    __pbssBANK0 004F  
                  __pbssBANK1 00A0                    __pbssBANK2 0120                     ?_InitGPRS 0070  
    __size_of_Uart1_PutString 0011           __size_of_GetRomData 001D        __size_of_Uart1_PutChar 000A  
     __end_of_SimI2C_ReadByte 02C9                    __pmaintext 0855       __end_of_SimI2C_SendByte 028B  
                   ?_TestProc 0070                       ?___bmul 0020                ?_OneWire_Reset 0070  
                     ?___wmul 0020                _GetVerify_CRC8 0087                    __pintentry 0004  
          __end_of_TCN75_Init 01C5              ?_OneWire_Command 0070           _Uart1_PutString_Hex 0DAA  
                  __ptext2000 09A9                    __ptext2001 002C                    __ptext2010 01C5  
                  __ptext2002 0FF2                    __ptext2011 02DC                    __ptext2003 00B3  
                  __ptext2020 053F                    __ptext2012 02D5                    __ptext2004 04DF  
                  __ptext2021 0B27                    __ptext2013 02C9                    __ptext2005 0DAA  
                  __ptext2030 0FDC                    __ptext2022 0D8B                    __ptext2014 02A9  
                  __ptext2006 0AA1                    __ptext2031 0367                    __ptext2023 0E1A  
                  __ptext2015 028B                    __ptext2007 0FE2                    __ptext2040 0E2B  
                  __ptext2032 0EB4                    __ptext2024 0B13                    __ptext2016 026A  
                  __ptext2008 0234                    __ptext2041 0F79                    __ptext2033 0FA9  
                  __ptext2025 01C4                    __ptext2017 029F                    __ptext2009 020C  
                  __ptext2050 0E10                    __ptext2042 0F41                    __ptext2034 0351  
                  __ptext2026 0193                    __ptext2018 00BF                    __ptext2051 0DBA  
                  __ptext2043 0F22                    __ptext2035 0FC4                    __ptext2027 017C  
                  __ptext2019 005B                    __ptext2052 0F06                    __ptext2044 05A5  
                  __ptext2036 0F91                    __ptext2028 02ED                    __ptext2053 013E  
                  __ptext2045 02E6                    __ptext2037 0E94                    __ptext2029 01D6  
                  __ptext2054 011B                    __ptext2046 0087                    __ptext2038 0E4D  
                  __ptext2055 0387                    __ptext2047 01F3                    __ptext2039 05B3  
                  __ptext2048 0E37                    __ptext2057 0499                    __ptext2049 0DF9  
                  __ptext2058 04BF                    __ptext2059 0000               _ATCommand_Clear 0079  
                  __ptext1994 0306                    __ptext1995 0E72                    __ptext1996 00E8  
                  __ptext1997 093D                    __ptext1998 08F3                    __ptext1999 0B62  
             _ATCommand_Flags 007A                   _SaveRomData 02ED                       ?_strchr 0020  
                     ?_strcpy 0020                       ?_strlen 0020                       ?_strstr 002D  
                  ??_CallSend 0046                    ??_CallProc 0048                       i1l30345 0012  
                     i1l30337 0000                       i1l30363 0000                       i1l30355 0000  
                     i1l30347 0000                       i1l30381 04B0                       i1l30373 0000  
                     i1l30365 04A3                       i1l30357 0000                       i1l30349 0018  
                     i1l30471 0000                       i1l30391 0000                       i1l30375 0000  
                     i1l30367 04A4                       i1l30359 0000                       i1l30393 0000  
                     i1l30385 04B3                       i1l30379 04AF                       i1l30477 04CB  
                     i1l30469 0000                       i1l30389 0000                       i1l14910 04A6  
                     i1l27448 0000             _DS18X20_ToDecicel 1013           __size_of_SimI2C_Ack 000C  
                  __stringtab 1000          ?_Uart1_PutString_Hex 0023                    ??_InitGPRS 0039  
         __size_of_InitSystem 0033                 _isgraph$31776 0070                       _CurTemp 0057  
                     _InitMCU 013E                       _SegCode 1001             _ATCommand_SendCmd 0AA1  
      __end_of_GetVerify_CRC8 00B3                       _PowerON 0FE2                    ??_TestProc 0049  
           _ATCommand_RxCount 007B                       _RunTick 0077         __size_of_eeprom_write 001C  
           _DS18X20_StartMeas 0FF2               __size_of___bmul 000C                       ___lbdiv 0F91  
           _MakeTxTemperature 0DBA                       ___lbmod 0FC4            ?_ATCommand_SendCmd 0031  
             __size_of___wmul 0015                       ___lwdiv 0E4D                       ___lwmod 0E94  
                   _LCDDATA10 07AA                     _LCDDATA11 07AB               ??_TCN75_ReadReg 0023  
          ?_DS18X20_StartMeas 0070            ?_MakeTxTemperature 0020         _ATCommand_WaitACKTick 0053  
                   CallSend@i 0047                       _highISR 0004               __size_of_strchr 0018  
             __size_of_strcpy 0016               __size_of_strlen 001F                 _Uart1_PutChar 0E10  
         ??_ATCommand_SendCmd 0033               __size_of_strstr 003B                       _isdigit 05A5  
         ??_DS18X20_StartMeas 0025                       _isgraph 04BF      __end_of_OneWire_ReadByte 0087  
         ??_MakeTxTemperature 0022                     _SEG11COM0 3D0B                     _SEG11COM1 3D23  
                   _SEG11COM2 3D3B                     _SEG11COM3 3D53                     _SEG21COM1 3D2D  
                   _SEG21COM2 3D45                     _SEG21COM3 3D5D                     _SEG23COM0 3D17  
                   _SEG23COM1 3D2F                     _SEG23COM2 3D47                     _SEG23COM3 3D5F  
                   _SEG16COM0 3D10                     _SEG16COM1 3D28                     _SEG16COM2 3D40  
                   _SEG16COM3 3D58              ?_LcdDisplay_CALL 0070         ??_Uart1_PutString_Hex 0025  
                     _strncmp 0F41         TCN75_SetConfig@bRight 0024          end_of_initialization 0853  
             GetVerify_CRC8@i 0026        __size_of_LcdDisplayAll 0016        __size_of_LcdDisplayNum 0109  
                _eeprom_write 0F06             InteractServer@res 0037     __end_of_ATCommand_SendCmd 0B13  
            ?_SimI2C_ReadByte 0070             _OneWire_WriteByte 00BF     __end_of_DS18X20_StartMeas 0FFB  
           ??_Uart1_PutString 0023               ??_OneWire_Reset 0020     __end_of_MakeTxTemperature 0DF9  
                ?_DisplayInit 0070               ?_GetVerify_CRC8 0020              ?_SimI2C_SendByte 0070  
          ?_OneWire_WriteByte 0070              ??_LcdDisplay_CSQ 0025              ??_LcdDisplay_Err 0025  
       __size_of_SimI2C_NoAck 0007                  __pstringtext 1000          __end_of_Uart1_PutHex 0DAA  
                ??_GetRomData 0027     __size_of_DS18X20_ReadMeas 002F         __size_of_SimI2C_Start 000A  
                     strlen@s 0020           ??_OneWire_WriteByte 0020                ?_Uart1_PutChar 0070  
          OneWire_WriteByte@i 0023         __size_of_InitVariable 0011              ___lbmod@dividend 0022  
               ?___delay_20ms 0020     __size_of_ATCommand_ProcRx 0026                _InteractServer 0B62  
                   InitGPRS@i 003D    __end_of_ATCommand_WaitData 0536      __size_of_TCN75_SetConfig 0028  
                 ___lbmod@rem 0024            __end_of_GetRomData 01F3     __end_of_OneWire_WriteByte 00E8  
               ??_eeprom_read 0020                  _SimI2C_NoAck 02D5                  ?_SimI2C_Init 0070  
                ??_SimI2C_Ack 0020                  _SimI2C_Start 029F                  ?_SimI2C_Stop 0070  
          _LcdDisplay_CurTemp 0EB4                  ??_InitSystem 002D                  SaveRomData@i 0027  
              __end_of___bmul 0E37                  _InitVariable 01C5                __end_of___wmul 05C8  
               _LcdDisplayAll 0351                 _LcdDisplayNum 0387           ?_LcdDisplay_CurTemp 0070  
            ??_ATCommand_Init 0026                __end_of_strchr 0F91                __end_of_strcpy 0E4D  
              __end_of_strlen 0F41                __end_of_strstr 0B62                ??___delay_20ms 0022  
         start_initialization 081B                     _ReadTData 08F3             __size_of_CallSend 006C  
           __size_of_CallProc 0022        __end_of_InteractServer 0D8B            __end_of_SimI2C_Ack 02D5  
      __size_of_GetVerify_Sum 0019           _ATCommand_ErrString 00B5            GetVerify_CRC8@data 0025  
       __end_of_SimI2C_RecAck 029F            __end_of_InitSystem 011B          ??_LcdDisplay_CurTemp 0025  
           __size_of_InitGPRS 00F8    GetVerify_CRC8@feedback_bit 0028    __size_of_ATCommand_SendCmd 0072  
  __size_of_DS18X20_StartMeas 0009                     _RomParams 0067    __size_of_MakeTxTemperature 003F  
        _TCN75_RegReadResualt 005F                      ??___bmul 0021                      ??___wmul 0024  
         __end_of_eeprom_read 0E10                  _TCN75_Config 0064                ?_LcdDisplayAll 0070  
                 __pdataBANK0 006A                ?_LcdDisplayNum 0070           _NeedMeasurementTick 005B  
           __size_of_TestProc 004B               ??_Uart1_PutChar 0020                  ?_SaveRomData 0070  
                    ??_strchr 0024                      ??_strcpy 0022                      ??_strlen 0022  
                    ??_strstr 0031                   __pbssBIGRAM 215A                   __pbssCOMMON 0077  
                  ?_ReadTData 0070                 __pcstackBANK0 0020               ?_InteractServer 0070  
              OneWire_Reset@r 0022              eeprom_write@addr 0021    __size_of_OneWire_WriteByte 0029  
                    ?_InitMCU 0070         __size_of_Uart1_PutHex 001F              ___lwdiv@dividend 0022  
           ??_TCN75_SetConfig 0023                      ?_PowerON 0070                   CallSend@ret 0046  
                    ?___lbdiv 0020                      ?___lbmod 0020                 _GetVerify_Sum 01F3  
                    ?___lwdiv 0020          __size_of_DisplayInit 0023                      ?___lwmod 0020  
            _DS18X20_ReadMeas 002C                      ?_highISR 0070                ReadTData@retry 002C  
                    ?_isdigit 0070                      ?_isgraph 0070      __size_of_OneWire_Command 000C  
           ?_OneWire_ReadByte 0070              _ATCommand_RxList 215A              _ATCommand_ProcRx 0499  
            ___lwdiv@quotient 0025                      _LCDDATA0 07A0                      _LCDDATA1 07A1  
                    _LCDDATA2 07A2                      _LCDDATA3 07A3                      _LCDDATA4 07A4  
                    _LCDDATA5 07A5                      _LCDDATA6 07A6                      _LCDDATA7 07A7  
                    _LCDDATA8 07A8                      _LCDDATA9 07A9            ??_OneWire_ReadByte 0020  
                    ?_strncmp 0026               _Uart1_PutString 0E1A                  _Uart1_PutHex 0D8B  
               CallProc@retry 0048                ___wmul@product 0024              ??_GetVerify_CRC8 0022  
                    _SEG3COM0 3D03                      _SEG3COM1 3D1B                      _SEG3COM2 3D33  
                    _SEG3COM3 3D4B                      _SEG5COM0 3D05                      _SEG5COM1 3D1D  
                    _SEG5COM2 3D35                      _SEG5COM3 3D4D                      _SEG6COM3 3D4E  
       OneWire_ReadByte@value 0022                   _eeprom_read 0DF9                LcdDisplayAll@x 0020  
        __end_of___delay_20ms 0B27                     highISR@rx 0076               ??_LcdDisplayAll 0020  
              ?_GetVerify_Sum 0020               ??_LcdDisplayNum 0020          __size_of_SimI2C_Init 0007  
        __size_of_SimI2C_Stop 000A                SimI2C_RecAck@t 0020       TCN75_SetConfig@ErrTimes 0023  
       __end_of_TCN75_ReadReg 026A             ___wmul@multiplier 0020                      _CallSend 093D  
                    _CallProc 0E72   __end_of_Uart1_PutString_Hex 0DBA            _DS18X20_Scratchpad 00D3  
                 ??_ReadTData 002C            GetVerify_Sum@Count 0020            GetVerify_Sum@pBuff 0024  
                    _InitGPRS 09A9                      _ErrState 0063       DS18X20_ReadMeas@bVerify 002A  
      Uart1_PutString@pString 0021             GetVerify_CRC8@crc 0029      __size_of_LcdDisplay_CALL 0006  
          _ATCommand_OkString 00C4              __size_of_InitMCU 003E                      _TestProc 0306  
       __end_of_OneWire_Reset 01C4            _ATCommand_WaitData 04DF              __size_of_PowerON 0010  
            __size_of___lbdiv 0018              __size_of___lbmod 0018                 _TxTemperature 004F  
    __size_of_SimI2C_ReadByte 0020              __size_of___lwdiv 0025              __size_of___lwmod 0020  
         TCN75_ReadReg@bRight 0025           InteractServer@txLen 003E           InteractServer@retry 0036  
         ?_ATCommand_WaitData 0070      __size_of_SimI2C_SendByte 0021              __size_of_highISR 0025  
     __end_of_Uart1_PutString 0E2B          __size_of_SaveRomData 0019     GetVerify_CRC8@bit_counter 0024  
            __size_of_isdigit 000E              __size_of_isgraph 000E               ___lwdiv@divisor 0020  
      _ATCommand_WaitACKTimes 0055               ___lwdiv@counter 0024              __size_of_strncmp 0038  
                  strcpy@from 0020             ??_OneWire_Command 0024                 __size_of_atoi 0066  
               __size_of_main 009E          ??_ATCommand_WaitData 0031                    strncmp@len 002A  
        LcdDisplay_CurTemp@t1 0027          LcdDisplay_CurTemp@t2 0028                      clear_ram 05C8  
             ??_GetVerify_Sum 0022                ___delay_20ms@x 0020                      atoi@sign 002C  
                    main@addr 004D        ATCommand_SendCmd@retry 0035                   GetRomData@i 0027  
            ??_InteractServer 0036       __size_of_LcdDisplay_CSQ 001B       __size_of_LcdDisplay_Err 0020  
                  _TCN75_Init 01C4                      isdigit@c 0021            InteractServer@addr 0042  
             _TCN75_SetConfig 020C                      isgraph@c 0071      __end_of_DS18X20_ReadMeas 005B  
                    intlevel1 0000              LcdDisplay_CSQ@t1 0025              LcdDisplay_CSQ@t2 0026  
                   strchr@chr 0022              ___lwmod@dividend 0022         __size_of___delay_20ms 0014  
                   strchr@ptr 0020   __size_of_LcdDisplay_CurTemp 0052         OneWire_WriteByte@temp 0022  
                   strncmp@s1 0026                     strncmp@s2 0028      __end_of_ATCommand_ProcRx 04BF  
         SimI2C_ReadByte@data 0020         ATCommand_SendCmd@strx 0036             ??_LcdDisplay_CALL 0020  
            GetVerify_Sum@sum 0025        __size_of_SimI2C_RecAck 0014         __end_of_Uart1_PutChar 0E1A  
        Uart1_PutString_Hex@c 0025          OneWire_WriteByte@val 0021               ___lwmod@divisor 0020  
            ?_Uart1_PutString 0021                      strcpy@cp 0025                      strlen@cp 0024  
                    strcpy@to 0024               ___lwmod@counter 0024             ??_SimI2C_ReadByte 0020  
                ___delay_20ms 0B13          ATCommand_SendCmd@cmd 0031                      strstr@s1 002D  
                    strstr@s2 002F          ATCommand_SendCmd@res 0038             ??_SimI2C_SendByte 0020  
     __size_of_ATCommand_Init 0017                 ?_eeprom_write 0020                  ?_eeprom_read 0070  
            SimI2C_ReadByte@i 0021              Uart1_PutString@c 0023     __size_of_OneWire_ReadByte 002C  
               ??_DisplayInit 0020  
