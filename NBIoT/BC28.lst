

HI-TECH Software PIC PRO Macro Assembler V9.71a build 6446 
                                                                                               Thu Apr 18 18:45:43 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 6446
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	text1963,local,class=CODE,delta=2
    16                           	psect	text1971,local,class=CODE,delta=2
    17                           	psect	text1977,local,class=CODE,delta=2
    18                           	psect	text1989,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text2025,local,class=CODE,delta=2
    21                           	psect	text2027,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x320,16
    24                           	dabs	1,0x2A0,80
    25                           	dabs	1,0x26C,4
    26                           	dabs	1,0x7E,2
    27  000A                     	;_ATCommand_RxList
    28                           
    29                           	psect	idataBANK0
    30  0000                     __pidataBANK0:	
    31                           
    32                           	psect	stringtext
    33  1000                     __pstringtext:	
    34  1000                     __stringtab:	
    35  1000  3400               	retlw	0
    36  1001                     _SegCode:	
    37  1001  343F               	retlw	63
    38  1002  3406               	retlw	6
    39  1003  345B               	retlw	91
    40  1004  344F               	retlw	79
    41  1005  3466               	retlw	102
    42  1006  346D               	retlw	109
    43  1007  347D               	retlw	125
    44  1008  3407               	retlw	7
    45  1009  347F               	retlw	127
    46  100A  346F               	retlw	111
    47  100B  3477               	retlw	119
    48  100C  347C               	retlw	124
    49  100D  3439               	retlw	57
    50  100E  345E               	retlw	94
    51  100F  3479               	retlw	121
    52  1010  3471               	retlw	113
    53  1011  3450               	retlw	80
    54  1012                     _DS18X20_ToDecicel:	
    55  1012  3400               	retlw	0
    56  1013  3401               	retlw	1
    57  1014  3401               	retlw	1
    58  1015  3402               	retlw	2
    59  1016  3403               	retlw	3
    60  1017  3403               	retlw	3
    61  1018  3404               	retlw	4
    62  1019  3404               	retlw	4
    63  101A  3405               	retlw	5
    64  101B  3406               	retlw	6
    65  101C  3406               	retlw	6
    66  101D  3407               	retlw	7
    67  101E  3408               	retlw	8
    68  101F  3408               	retlw	8
    69  1020  3409               	retlw	9
    70  1021  3409               	retlw	9
    71  001B                     _PR2	set	27
    72  0018                     _T1CON	set	24
    73  001C                     _T2CON	set	28
    74  0017                     _TMR1H	set	23
    75  0016                     _TMR1L	set	22
    76  0018                     _CARRY	set	24
    77  005F                     _GIE	set	95
    78  005E                     _PEIE	set	94
    79  0069                     _RB1	set	105
    80  006A                     _RB2	set	106
    81  006F                     _RB7	set	111
    82  008D                     _RCIF	set	141
    83  007E                     _RD6	set	126
    84  0088                     _TMR1IF	set	136
    85  00C0                     _TMR1ON	set	192
    86  0089                     _TMR2IF	set	137
    87  00E2                     _TMR2ON	set	226
    88  009E                     _ADCON1	set	158
    89  048D                     _RCIE	set	1165
    90  0488                     _TMR1IE	set	1160
    91  0489                     _TMR2IE	set	1161
    92  0463                     _TRISA3	set	1123
    93  0464                     _TRISA4	set	1124
    94  0469                     _TRISB1	set	1129
    95  046A                     _TRISB2	set	1130
    96  046F                     _TRISB7	set	1135
    97  0476                     _TRISC6	set	1142
    98  0477                     _TRISC7	set	1143
    99  047C                     _TRISD4	set	1148
   100  047D                     _TRISD5	set	1149
   101  047E                     _TRISD6	set	1150
   102  047F                     _TRISD7	set	1151
   103  04AF                     _nWPUEN	set	1199
   104  0863                     _LATA3	set	2147
   105  0864                     _LATA4	set	2148
   106  0869                     _LATB1	set	2153
   107  087D                     _LATD5	set	2173
   108  087E                     _LATD6	set	2174
   109  087F                     _LATD7	set	2175
   110  018C                     _ANSELA	set	396
   111  018D                     _ANSELB	set	397
   112  018F                     _ANSELD	set	399
   113  0190                     _ANSELE	set	400
   114  0191                     _EEADRL	set	401
   115  0195                     _EECON1	set	405
   116  0196                     _EECON2	set	406
   117  0193                     _EEDATA	set	403
   118  0199                     _RCREG	set	409
   119  019D                     _RCSTA	set	413
   120  019B                     _SPBRG	set	411
   121  019A                     _TXREG	set	410
   122  019E                     _TXSTA	set	414
   123  0CEC                     _CREN	set	3308
   124  0CE9                     _OERR	set	3305
   125  0CA8                     _RD	set	3240
   126  0CF1                     _TRMT	set	3313
   127  0CA9                     _WR	set	3241
   128  0CAA                     _WREN	set	3242
   129  106F                     _WPUB7	set	4207
   130  0791                     _LCDCON	set	1937
   131  0794                     _LCDCST	set	1940
   132  07A0                     _LCDDATA0	set	1952
   133  07A1                     _LCDDATA1	set	1953
   134  07AA                     _LCDDATA10	set	1962
   135  07AB                     _LCDDATA11	set	1963
   136  07A2                     _LCDDATA2	set	1954
   137  07A3                     _LCDDATA3	set	1955
   138  07A4                     _LCDDATA4	set	1956
   139  07A5                     _LCDDATA5	set	1957
   140  07A6                     _LCDDATA6	set	1958
   141  07A7                     _LCDDATA7	set	1959
   142  07A8                     _LCDDATA8	set	1960
   143  07A9                     _LCDDATA9	set	1961
   144  0792                     _LCDPS	set	1938
   145  0793                     _LCDREF	set	1939
   146  0795                     _LCDRL	set	1941
   147  0798                     _LCDSE0	set	1944
   148  0799                     _LCDSE1	set	1945
   149  079A                     _LCDSE2	set	1946
   150  3C8F                     _LCDEN	set	15503
   151  3CCB                     _SEG11	set	15563
   152  3D0B                     _SEG11COM0	set	15627
   153  3D23                     _SEG11COM1	set	15651
   154  3D3B                     _SEG11COM2	set	15675
   155  3D53                     _SEG11COM3	set	15699
   156  3CD0                     _SEG16	set	15568
   157  3D10                     _SEG16COM0	set	15632
   158  3D28                     _SEG16COM1	set	15656
   159  3D40                     _SEG16COM2	set	15680
   160  3D58                     _SEG16COM3	set	15704
   161  3CD5                     _SEG21	set	15573
   162  3D15                     _SEG21COM0	set	15637
   163  3D2D                     _SEG21COM1	set	15661
   164  3D45                     _SEG21COM2	set	15685
   165  3D5D                     _SEG21COM3	set	15709
   166  3CD6                     _SEG22	set	15574
   167  3D16                     _SEG22COM0	set	15638
   168  3D2E                     _SEG22COM1	set	15662
   169  3D46                     _SEG22COM2	set	15686
   170  3D5E                     _SEG22COM3	set	15710
   171  3CD7                     _SEG23	set	15575
   172  3D17                     _SEG23COM0	set	15639
   173  3D2F                     _SEG23COM1	set	15663
   174  3D47                     _SEG23COM2	set	15687
   175  3D5F                     _SEG23COM3	set	15711
   176  3CC3                     _SEG3	set	15555
   177  3D03                     _SEG3COM0	set	15619
   178  3D1B                     _SEG3COM1	set	15643
   179  3D33                     _SEG3COM2	set	15667
   180  3D4B                     _SEG3COM3	set	15691
   181  3CC5                     _SEG5	set	15557
   182  3D05                     _SEG5COM0	set	15621
   183  3D1D                     _SEG5COM1	set	15645
   184  3D35                     _SEG5COM2	set	15669
   185  3D4D                     _SEG5COM3	set	15693
   186  3CC6                     _SEG6	set	15558
   187  3D06                     _SEG6COM0	set	15622
   188  3D1E                     _SEG6COM1	set	15646
   189  3D36                     _SEG6COM2	set	15670
   190  3D4E                     _SEG6COM3	set	15694
   191  3C94                     _WA	set	15508
   192  3C8D                     _WERR	set	15501
   193  1022                     STR_2:	
   194  1022  3441               	retlw	65	;'A'
   195  1023  3454               	retlw	84	;'T'
   196  1024  342B               	retlw	43	;'+'
   197  1025  344E               	retlw	78	;'N'
   198  1026  3453               	retlw	83	;'S'
   199  1027  344F               	retlw	79	;'O'
   200  1028  3443               	retlw	67	;'C'
   201  1029  344F               	retlw	79	;'O'
   202  102A  343D               	retlw	61	;'='
   203  102B  3431               	retlw	49	;'1'
   204  102C  342C               	retlw	44	;','
   205  102D  3422               	retlw	34	;'"'
   206  102E  3477               	retlw	119	;'w'
   207  102F  3477               	retlw	119	;'w'
   208  1030  3477               	retlw	119	;'w'
   209  1031  342E               	retlw	46	;'.'
   210  1032  3477               	retlw	119	;'w'
   211  1033  346C               	retlw	108	;'l'
   212  1034  3477               	retlw	119	;'w'
   213  1035  3464               	retlw	100	;'d'
   214  1036  346A               	retlw	106	;'j'
   215  1037  3463               	retlw	99	;'c'
   216  1038  3479               	retlw	121	;'y'
   217  1039  342E               	retlw	46	;'.'
   218  103A  3463               	retlw	99	;'c'
   219  103B  346F               	retlw	111	;'o'
   220  103C  346D               	retlw	109	;'m'
   221  103D  3422               	retlw	34	;'"'
   222  103E  342C               	retlw	44	;','
   223  103F  3431               	retlw	49	;'1'
   224  1040  3432               	retlw	50	;'2'
   225  1041  3431               	retlw	49	;'1'
   226  1042  3432               	retlw	50	;'2'
   227  1043  3439               	retlw	57	;'9'
   228  1044  3400               	retlw	0
   229  1045  3400               	retlw	0
   230  1046                     STR_4:	
   231  1046  3441               	retlw	65	;'A'
   232  1047  3454               	retlw	84	;'T'
   233  1048  342B               	retlw	43	;'+'
   234  1049  3443               	retlw	67	;'C'
   235  104A  3450               	retlw	80	;'P'
   236  104B  3453               	retlw	83	;'S'
   237  104C  344D               	retlw	77	;'M'
   238  104D  3453               	retlw	83	;'S'
   239  104E  343D               	retlw	61	;'='
   240  104F  3431               	retlw	49	;'1'
   241  1050  342C               	retlw	44	;','
   242  1051  342C               	retlw	44	;','
   243  1052  342C               	retlw	44	;','
   244  1053  3430               	retlw	48	;'0'
   245  1054  3431               	retlw	49	;'1'
   246  1055  3430               	retlw	48	;'0'
   247  1056  3430               	retlw	48	;'0'
   248  1057  3430               	retlw	48	;'0'
   249  1058  3431               	retlw	49	;'1'
   250  1059  3431               	retlw	49	;'1'
   251  105A  3431               	retlw	49	;'1'
   252  105B  342C               	retlw	44	;','
   253  105C  3430               	retlw	48	;'0'
   254  105D  3430               	retlw	48	;'0'
   255  105E  3430               	retlw	48	;'0'
   256  105F  3430               	retlw	48	;'0'
   257  1060  3430               	retlw	48	;'0'
   258  1061  3430               	retlw	48	;'0'
   259  1062  3430               	retlw	48	;'0'
   260  1063  3431               	retlw	49	;'1'
   261  1064  3400               	retlw	0
   262  1065  3400               	retlw	0
   263  1066                     STR_1:	
   264  1066  3441               	retlw	65	;'A'
   265  1067  3454               	retlw	84	;'T'
   266  1068  342B               	retlw	43	;'+'
   267  1069  344E               	retlw	78	;'N'
   268  106A  3453               	retlw	83	;'S'
   269  106B  344F               	retlw	79	;'O'
   270  106C  3443               	retlw	67	;'C'
   271  106D  3452               	retlw	82	;'R'
   272  106E  343D               	retlw	61	;'='
   273  106F  3453               	retlw	83	;'S'
   274  1070  3454               	retlw	84	;'T'
   275  1071  3452               	retlw	82	;'R'
   276  1072  3445               	retlw	69	;'E'
   277  1073  3441               	retlw	65	;'A'
   278  1074  344D               	retlw	77	;'M'
   279  1075  342C               	retlw	44	;','
   280  1076  3436               	retlw	54	;'6'
   281  1077  342C               	retlw	44	;','
   282  1078  3430               	retlw	48	;'0'
   283  1079  342C               	retlw	44	;','
   284  107A  3431               	retlw	49	;'1'
   285  107B  3400               	retlw	0
   286  107C  3400               	retlw	0
   287  107D                     STR_13:	
   288  107D  3441               	retlw	65	;'A'
   289  107E  3454               	retlw	84	;'T'
   290  107F  342B               	retlw	43	;'+'
   291  1080  344E               	retlw	78	;'N'
   292  1081  3453               	retlw	83	;'S'
   293  1082  344F               	retlw	79	;'O'
   294  1083  3453               	retlw	83	;'S'
   295  1084  3444               	retlw	68	;'D'
   296  1085  343D               	retlw	61	;'='
   297  1086  3431               	retlw	49	;'1'
   298  1087  342C               	retlw	44	;','
   299  1088  3436               	retlw	54	;'6'
   300  1089  3438               	retlw	56	;'8'
   301  108A  3437               	retlw	55	;'7'
   302  108B  342C               	retlw	44	;','
   303  108C  3400               	retlw	0
   304  108D  3400               	retlw	0
   305  108E                     STR_5:	
   306  108E  3441               	retlw	65	;'A'
   307  108F  3454               	retlw	84	;'T'
   308  1090  342B               	retlw	43	;'+'
   309  1091  344E               	retlw	78	;'N'
   310  1092  3453               	retlw	83	;'S'
   311  1093  344F               	retlw	79	;'O'
   312  1094  3453               	retlw	83	;'S'
   313  1095  3444               	retlw	68	;'D'
   314  1096  343D               	retlw	61	;'='
   315  1097  3431               	retlw	49	;'1'
   316  1098  342C               	retlw	44	;','
   317  1099  3433               	retlw	51	;'3'
   318  109A  3432               	retlw	50	;'2'
   319  109B  342C               	retlw	44	;','
   320  109C  3400               	retlw	0
   321  109D  3400               	retlw	0
   322  109E                     STR_15:	
   323  109E  3441               	retlw	65	;'A'
   324  109F  3454               	retlw	84	;'T'
   325  10A0  342B               	retlw	43	;'+'
   326  10A1  344E               	retlw	78	;'N'
   327  10A2  3453               	retlw	83	;'S'
   328  10A3  344F               	retlw	79	;'O'
   329  10A4  3453               	retlw	83	;'S'
   330  10A5  3444               	retlw	68	;'D'
   331  10A6  343D               	retlw	61	;'='
   332  10A7  3431               	retlw	49	;'1'
   333  10A8  342C               	retlw	44	;','
   334  10A9  3438               	retlw	56	;'8'
   335  10AA  3437               	retlw	55	;'7'
   336  10AB  342C               	retlw	44	;','
   337  10AC  3400               	retlw	0
   338  10AD  3400               	retlw	0
   339  10AE                     STR_14:	
   340  10AE  3441               	retlw	65	;'A'
   341  10AF  3454               	retlw	84	;'T'
   342  10B0  342B               	retlw	43	;'+'
   343  10B1  344E               	retlw	78	;'N'
   344  10B2  3453               	retlw	83	;'S'
   345  10B3  344F               	retlw	79	;'O'
   346  10B4  3453               	retlw	83	;'S'
   347  10B5  3444               	retlw	68	;'D'
   348  10B6  343D               	retlw	61	;'='
   349  10B7  3431               	retlw	49	;'1'
   350  10B8  342C               	retlw	44	;','
   351  10B9  3400               	retlw	0
   352  10BA  3400               	retlw	0
   353  10BB                     STR_3:	
   354  10BB  3441               	retlw	65	;'A'
   355  10BC  3454               	retlw	84	;'T'
   356  10BD  342B               	retlw	43	;'+'
   357  10BE  344E               	retlw	78	;'N'
   358  10BF  3453               	retlw	83	;'S'
   359  10C0  344F               	retlw	79	;'O'
   360  10C1  3443               	retlw	67	;'C'
   361  10C2  344C               	retlw	76	;'L'
   362  10C3  343D               	retlw	61	;'='
   363  10C4  3431               	retlw	49	;'1'
   364  10C5  3400               	retlw	0
   365  10C6  3400               	retlw	0
   366  10C7                     STR_29:	
   367  10C7  3441               	retlw	65	;'A'
   368  10C8  3454               	retlw	84	;'T'
   369  10C9  342B               	retlw	43	;'+'
   370  10CA  3443               	retlw	67	;'C'
   371  10CB  3445               	retlw	69	;'E'
   372  10CC  3452               	retlw	82	;'R'
   373  10CD  3445               	retlw	69	;'E'
   374  10CE  3447               	retlw	71	;'G'
   375  10CF  343F               	retlw	63	;'?'
   376  10D0  3400               	retlw	0
   377  10D1  3400               	retlw	0
   378  10D2                     STR_30:	
   379  10D2  342B               	retlw	43	;'+'
   380  10D3  3443               	retlw	67	;'C'
   381  10D4  3445               	retlw	69	;'E'
   382  10D5  3452               	retlw	82	;'R'
   383  10D6  3445               	retlw	69	;'E'
   384  10D7  3447               	retlw	71	;'G'
   385  10D8  343A               	retlw	58	;':'
   386  10D9  3430               	retlw	48	;'0'
   387  10DA  342C               	retlw	44	;','
   388  10DB  3431               	retlw	49	;'1'
   389  10DC  3400               	retlw	0
   390  10DD                     STR_25:	
   391  10DD  3441               	retlw	65	;'A'
   392  10DE  3454               	retlw	84	;'T'
   393  10DF  342B               	retlw	43	;'+'
   394  10E0  344E               	retlw	78	;'N'
   395  10E1  3443               	retlw	67	;'C'
   396  10E2  3443               	retlw	67	;'C'
   397  10E3  3449               	retlw	73	;'I'
   398  10E4  3444               	retlw	68	;'D'
   399  10E5  3400               	retlw	0
   400  10E6  3400               	retlw	0
   401  10E7                     STR_6:	
   402  10E7  3440               	retlw	64	;'@'
   403  10E8  3423               	retlw	35	;'#'
   404  10E9  3470               	retlw	112	;'p'
   405  10EA  3474               	retlw	116	;'t'
   406  10EB  3423               	retlw	35	;'#'
   407  10EC  3431               	retlw	49	;'1'
   408  10ED  3423               	retlw	35	;'#'
   409  10EE  3400               	retlw	0
   410  10EF  3400               	retlw	0
   411  10F0                     STR_16:	
   412  10F0  3440               	retlw	64	;'@'
   413  10F1  3423               	retlw	35	;'#'
   414  10F2  3470               	retlw	112	;'p'
   415  10F3  3474               	retlw	116	;'t'
   416  10F4  3423               	retlw	35	;'#'
   417  10F5  3432               	retlw	50	;'2'
   418  10F6  3423               	retlw	35	;'#'
   419  10F7  3400               	retlw	0
   420  10F8  3400               	retlw	0
   421  10F9                     STR_10:	
   422  10F9  3440               	retlw	64	;'@'
   423  10FA  3423               	retlw	35	;'#'
   424  10FB  3470               	retlw	112	;'p'
   425  10FC  3474               	retlw	116	;'t'
   426  10FD  3423               	retlw	35	;'#'
   427  10FE  3433               	retlw	51	;'3'
   428  10FF  3423               	retlw	35	;'#'
   429  1100  3400               	retlw	0
   430  1101  3400               	retlw	0
   431  1102                     STR_24:	
   432  1102  3441               	retlw	65	;'A'
   433  1103  3454               	retlw	84	;'T'
   434  1104  342B               	retlw	43	;'+'
   435  1105  3443               	retlw	67	;'C'
   436  1106  3449               	retlw	73	;'I'
   437  1107  344D               	retlw	77	;'M'
   438  1108  3449               	retlw	73	;'I'
   439  1109  3400               	retlw	0
   440  110A  3400               	retlw	0
   441  110B                     STR_27:	
   442  110B  3441               	retlw	65	;'A'
   443  110C  3454               	retlw	84	;'T'
   444  110D  342B               	retlw	43	;'+'
   445  110E  3443               	retlw	67	;'C'
   446  110F  3453               	retlw	83	;'S'
   447  1110  3451               	retlw	81	;'Q'
   448  1111  3400               	retlw	0
   449  1112  3400               	retlw	0
   450  1113                     STR_19:	
   451  1113  344E               	retlw	78	;'N'
   452  1114  3453               	retlw	83	;'S'
   453  1115  344F               	retlw	79	;'O'
   454  1116  344E               	retlw	78	;'N'
   455  1117  344D               	retlw	77	;'M'
   456  1118  3449               	retlw	73	;'I'
   457  1119  3400               	retlw	0
   458  111A                     STR_23:	
   459  111A  3441               	retlw	65	;'A'
   460  111B  3454               	retlw	84	;'T'
   461  111C  3445               	retlw	69	;'E'
   462  111D  3431               	retlw	49	;'1'
   463  111E  3400               	retlw	0
   464  111F  3400               	retlw	0
   465  1120                     STR_28:	
   466  1120  342B               	retlw	43	;'+'
   467  1121  3443               	retlw	67	;'C'
   468  1122  3453               	retlw	83	;'S'
   469  1123  3451               	retlw	81	;'Q'
   470  1124  343A               	retlw	58	;':'
   471  1125  3400               	retlw	0
   472  1126                     STR_20:	
   473  1126  3445               	retlw	69	;'E'
   474  1127  3452               	retlw	82	;'R'
   475  1128  3452               	retlw	82	;'R'
   476  1129  344F               	retlw	79	;'O'
   477  112A  3452               	retlw	82	;'R'
   478  112B  3400               	retlw	0
   479  112C                     STR_8:	
   480  112C  3431               	retlw	49	;'1'
   481  112D  3430               	retlw	48	;'0'
   482  112E  3423               	retlw	35	;'#'
   483  112F  3400               	retlw	0
   484  1130  3400               	retlw	0
   485  1131                     STR_7:	
   486  1131  3436               	retlw	54	;'6'
   487  1132  3430               	retlw	48	;'0'
   488  1133  3423               	retlw	35	;'#'
   489  1134  3400               	retlw	0
   490  1135  3400               	retlw	0
   491  1136                     STR_26:	
   492  1136  3438               	retlw	56	;'8'
   493  1137  3439               	retlw	57	;'9'
   494  1138  3438               	retlw	56	;'8'
   495  1139  3436               	retlw	54	;'6'
   496  113A  3400               	retlw	0
   497  113B                     STR_22:	
   498  113B  3441               	retlw	65	;'A'
   499  113C  3454               	retlw	84	;'T'
   500  113D  3400               	retlw	0
   501  113E  3400               	retlw	0
   502  113F                     STR_31:	
   503  113F  344F               	retlw	79	;'O'
   504  1140  344B               	retlw	75	;'K'
   505  1141  3400               	retlw	0
   506  1142                     STR_21:	
   507  1142  340D               	retlw	13
   508  1143  3400               	retlw	0
   509  1144  3400               	retlw	0
   510  1142                     
   511                           	psect	cinit
   512  080F                     start_initialization:	
   513  218C                     	;BIGRAM
   514                           
   515                           ; Clear objects allocated to BIGRAM
   516  080F  308C               	movlw	140
   517  0810  0084               	movwf	4
   518  0811  3021               	movlw	33
   519  0812  0085               	movwf	5
   520  0813  3064               	movlw	100
   521  0814  00FE               	movwf	126
   522  0815  3000               	movlw	0
   523  0816  01FF               	clrf	127
   524  0817  3186  2621  3188   	fcall	clear_ram
   525                           
   526                           ; Clear objects allocated to COMMON
   527  081A  01F7               	clrf	__pbssCOMMON& (0+127)
   528  081B  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   529  081C  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   530  081D  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   531  081E  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  081F  304E               	movlw	low __pbssBANK0
   535  0820  0084               	movwf	4
   536  0821  3000               	movlw	high __pbssBANK0
   537  0822  0085               	movwf	5
   538  0823  301B               	movlw	27
   539  0824  00FE               	movwf	126
   540  0825  3000               	movlw	0
   541  0826  00FF               	movwf	127
   542  0827  3186  2621  3188   	fcall	clear_ram
   543                           
   544                           ; Clear objects allocated to BANK1
   545  082A  30A0               	movlw	low __pbssBANK1
   546  082B  0084               	movwf	4
   547  082C  3000               	movlw	high __pbssBANK1
   548  082D  0085               	movwf	5
   549  082E  303C               	movlw	60
   550  082F  00FE               	movwf	126
   551  0830  3000               	movlw	0
   552  0831  00FF               	movwf	127
   553  0832  3186  2621  3188   	fcall	clear_ram
   554                           
   555                           ; Clear objects allocated to BANK2
   556  0835  3020               	movlw	low __pbssBANK2
   557  0836  0084               	movwf	4
   558  0837  3001               	movlw	high __pbssBANK2
   559  0838  0085               	movwf	5
   560  0839  3018               	movlw	24
   561  083A  00FE               	movwf	126
   562  083B  3000               	movlw	0
   563  083C  00FF               	movwf	127
   564  083D  3186  2621  3188   	fcall	clear_ram
   565                           
   566                           ;initializer for _DpyNum
   567  0840  3040               	movlw	64
   568  0841  00E9               	movwf	__pdataBANK0& (0+127)
   569  0842  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   570  0843  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   571  0844  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   572  0845  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   573  0846  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   574  0847                     end_of_initialization:	
   575                           ;End of C runtime variable initialization code
   576                           
   577  0847  0020               	movlb	0
   578  0848  2849               	ljmp	_main	;jump to C main() function
   579  0849                     __pmaintext:	
   580 ;;Data sizes: Strings 291, constant 33, data 6, bss 116, persistent 0 stack 0
   581 ;;Auto spaces:   Size  Autos    Used
   582 ;; COMMON          14      7      12
   583 ;; BANK0           80     46      79
   584 ;; BANK1           80      0      60
   585 ;; BANK2           80      0      24
   586 ;; BANK3           80      0       0
   587 ;; BANK4           76      0       0
   588 ;; BANK5            0      0       0
   589 ;; BANK6            0      0       0
   590 ;;
   591 ;; Pointer list with targets:
   592 ;; ?_strchr	PTR unsigned char  size(2) Largest target is 128
   593 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   594 ;;
   595 ;; ?_strncmp	int  size(1) Largest target is 0
   596 ;;
   597 ;; ?_strlen	unsigned int  size(2) Largest target is 15
   598 ;;		 -> STR_30(CODE[11]), STR_28(CODE[6]), STR_26(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   599 ;;		 -> ATCommand_OkString(BANK1[15]), 
   600 ;;
   601 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   602 ;;
   603 ;; ?_atoi	int  size(1) Largest target is 0
   604 ;;
   605 ;; ?_strstr	PTR unsigned char  size(2) Largest target is 128
   606 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   607 ;;
   608 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 15
   609 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   610 ;;
   611 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   612 ;;
   613 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   614 ;;
   615 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
   616 ;;		 -> STR_30(CODE[11]), STR_28(CODE[6]), STR_26(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   617 ;;		 -> ATCommand_OkString(BANK1[15]), 
   618 ;;
   619 ;; strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
   620 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   621 ;;
   622 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 15
   623 ;;		 -> STR_30(CODE[11]), STR_28(CODE[6]), STR_26(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   624 ;;		 -> ATCommand_OkString(BANK1[15]), 
   625 ;;
   626 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 15
   627 ;;		 -> STR_30(CODE[11]), STR_28(CODE[6]), STR_26(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   628 ;;		 -> ATCommand_OkString(BANK1[15]), 
   629 ;;
   630 ;; strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
   631 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   632 ;;
   633 ;; sp__strchr	PTR unsigned char  size(2) Largest target is 128
   634 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   635 ;;
   636 ;; strstr@s2	PTR const unsigned char  size(2) Largest target is 15
   637 ;;		 -> STR_30(CODE[11]), STR_28(CODE[6]), STR_26(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   638 ;;		 -> ATCommand_OkString(BANK1[15]), 
   639 ;;
   640 ;; strstr@s1	PTR const unsigned char  size(2) Largest target is 128
   641 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   642 ;;
   643 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 7
   644 ;;		 -> STR_37(CODE[6]), STR_36(CODE[3]), STR_35(CODE[6]), STR_34(CODE[3]), 
   645 ;;		 -> STR_32(CODE[6]), STR_31(CODE[3]), STR_20(CODE[6]), STR_19(CODE[7]), 
   646 ;;
   647 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 15
   648 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   649 ;;
   650 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 15
   651 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   652 ;;
   653 ;; atoi@s	PTR const unsigned char  size(2) Largest target is 128
   654 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   655 ;;
   656 ;; GetVerify_CRC8@pBuff	PTR unsigned char  size(1) Largest target is 9
   657 ;;		 -> DS18X20_Scratchpad(BANK1[9]), 
   658 ;;
   659 ;; GetVerify_Sum@pBuff	PTR unsigned char  size(1) Largest target is 2
   660 ;;		 -> RomParams(BANK0[2]), 
   661 ;;
   662 ;; Uart1_PutString_Hex@pString	PTR const unsigned char  size(2) Largest target is 21
   663 ;;		 -> STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[9]), STR_12(CODE[5]), 
   664 ;;		 -> STR_11(CODE[5]), STR_10(CODE[9]), STR_8(CODE[5]), STR_7(CODE[5]), 
   665 ;;		 -> ICCID(BANK1[21]), STR_6(CODE[9]), 
   666 ;;
   667 ;; Uart1_PutString@pString	PTR const unsigned char  size(2) Largest target is 36
   668 ;;		 -> STR_33(CODE[3]), STR_29(CODE[11]), STR_27(CODE[8]), STR_25(CODE[10]), 
   669 ;;		 -> STR_24(CODE[9]), STR_23(CODE[6]), STR_22(CODE[4]), STR_21(CODE[3]), 
   670 ;;		 -> STR_15(CODE[16]), STR_14(CODE[13]), STR_13(CODE[17]), STR_9(CODE[16]), 
   671 ;;		 -> STR_5(CODE[16]), STR_4(CODE[32]), STR_3(CODE[12]), STR_2(CODE[36]), 
   672 ;;		 -> STR_1(CODE[23]), 
   673 ;;
   674 ;; ATCommand_WaitData@strx	PTR unsigned char  size(2) Largest target is 128
   675 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   676 ;;
   677 ;; ATCommand_SendCmd@cmd	PTR const unsigned char  size(2) Largest target is 36
   678 ;;		 -> STR_29(CODE[11]), STR_27(CODE[8]), STR_25(CODE[10]), STR_24(CODE[9]), 
   679 ;;		 -> STR_23(CODE[6]), STR_22(CODE[4]), STR_4(CODE[32]), STR_3(CODE[12]), 
   680 ;;		 -> STR_2(CODE[36]), STR_1(CODE[23]), 
   681 ;;
   682 ;; ATCommand_SendCmd@strx	PTR unsigned char  size(2) Largest target is 128
   683 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   684 ;;
   685 ;; sp__strstr	PTR unsigned char  size(2) Largest target is 128
   686 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   687 ;;
   688 ;; InitGPRS@strx	PTR unsigned char  size(2) Largest target is 128
   689 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   690 ;;
   691 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 15
   692 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   693 ;;
   694 ;; CallSend@strx	PTR unsigned char  size(1) Largest target is 128
   695 ;;		 -> RAM(NULL[128]), 
   696 ;;
   697 ;;
   698 ;; Critical Paths under _main in COMMON
   699 ;;
   700 ;;   None.
   701 ;;
   702 ;; Critical Paths under _highISR in COMMON
   703 ;;
   704 ;;   _highISR->_ATCommand_ProcRx
   705 ;;   _ATCommand_ProcRx->_isgraph
   706 ;;
   707 ;; Critical Paths under _main in BANK0
   708 ;;
   709 ;;   _main->_TestProc
   710 ;;   _TestProc->_CallProc
   711 ;;   _CallProc->_CallSend
   712 ;;   _InitSystem->_ReadTData
   713 ;;   _CallSend->_InteractServer
   714 ;;   _ReadTData->_DS18X20_ReadMeas
   715 ;;   _InteractServer->_ATCommand_WaitData
   716 ;;   _InitGPRS->_ATCommand_SendCmd
   717 ;;   _DS18X20_ReadMeas->_GetVerify_CRC8
   718 ;;   _DS18X20_StartMeas->_OneWire_Command
   719 ;;   _OneWire_Command->_OneWire_WriteByte
   720 ;;   _ATCommand_WaitData->_strstr
   721 ;;   _Uart1_PutString_Hex->_Uart1_PutHex
   722 ;;   _ATCommand_SendCmd->_strstr
   723 ;;   _PowerON->___delay_20ms
   724 ;;   _TCN75_ReadReg->_SimI2C_SendByte
   725 ;;   _TCN75_SetConfig->_SimI2C_SendByte
   726 ;;   _InitVariable->_GetRomData
   727 ;;   _InitVariable->_SaveRomData
   728 ;;   _atoi->___wmul
   729 ;;   _strstr->_strncmp
   730 ;;   _Uart1_PutHex->_Uart1_PutChar
   731 ;;   _Uart1_PutString->_Uart1_PutChar
   732 ;;   _ATCommand_Init->_strcpy
   733 ;;   _SaveRomData->_GetVerify_Sum
   734 ;;   _GetRomData->_GetVerify_Sum
   735 ;;   _LcdDisplay_Err->___lbmod
   736 ;;   _LcdDisplay_CurTemp->___lbmod
   737 ;;   _LcdDisplay_CSQ->___lbmod
   738 ;;   _strncmp->_strlen
   739 ;;
   740 ;; Critical Paths under _highISR in BANK0
   741 ;;
   742 ;;   None.
   743 ;;
   744 ;; Critical Paths under _main in BANK1
   745 ;;
   746 ;;   None.
   747 ;;
   748 ;; Critical Paths under _highISR in BANK1
   749 ;;
   750 ;;   None.
   751 ;;
   752 ;; Critical Paths under _main in BANK2
   753 ;;
   754 ;;   None.
   755 ;;
   756 ;; Critical Paths under _highISR in BANK2
   757 ;;
   758 ;;   None.
   759 ;;
   760 ;; Critical Paths under _main in BANK3
   761 ;;
   762 ;;   None.
   763 ;;
   764 ;; Critical Paths under _highISR in BANK3
   765 ;;
   766 ;;   None.
   767 ;;
   768 ;; Critical Paths under _main in BANK4
   769 ;;
   770 ;;   None.
   771 ;;
   772 ;; Critical Paths under _highISR in BANK4
   773 ;;
   774 ;;   None.
   775 ;;
   776 ;; Critical Paths under _main in BANK5
   777 ;;
   778 ;;   None.
   779 ;;
   780 ;; Critical Paths under _highISR in BANK5
   781 ;;
   782 ;;   None.
   783 ;;
   784 ;; Critical Paths under _main in BANK6
   785 ;;
   786 ;;   None.
   787 ;;
   788 ;; Critical Paths under _highISR in BANK6
   789 ;;
   790 ;;   None.
   791 ;;
   792 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   793 ;;
   794 ;;
   795 ;;Call Graph Tables:
   796 ;;
   797 ;; ---------------------------------------------------------------------------------
   798 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   799 ;; ---------------------------------------------------------------------------------
   800 ;; (0) _main                                                 4     4      0   28904
   801 ;;                                             42 BANK0      4     4      0
   802 ;;                         _InitSystem
   803 ;;                       ___delay_20ms
   804 ;;                           _TestProc
   805 ;;                          _ReadTData
   806 ;;                           _CallProc
   807 ;;                             ___bmul
   808 ;;                       _eeprom_write
   809 ;; ---------------------------------------------------------------------------------
   810 ;; (1) _TestProc                                             2     2      0   12815
   811 ;;                                             40 BANK0      2     2      0
   812 ;;                      _LcdDisplayAll
   813 ;;                       ___delay_20ms
   814 ;;                          _ReadTData
   815 ;;                     _LcdDisplay_Err
   816 ;;                           _CallProc
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _CallProc                                             1     1      0    9996
   819 ;;                                             39 BANK0      1     1      0
   820 ;;                           _CallSend
   821 ;;                 _LcdDisplay_CurTemp
   822 ;;                       ___delay_20ms
   823 ;;                     _LcdDisplay_Err
   824 ;; ---------------------------------------------------------------------------------
   825 ;; (1) _InitSystem                                           1     1      0    3402
   826 ;;                                             13 BANK0      1     1      0
   827 ;;                            _InitMCU
   828 ;;                       _InitVariable
   829 ;;                        _DisplayInit
   830 ;;                     _ATCommand_Init
   831 ;;                      _OneWire_Reset
   832 ;;                         _TCN75_Init
   833 ;;                    _TCN75_SetConfig
   834 ;;                       ___delay_20ms
   835 ;;                          _ReadTData
   836 ;; ---------------------------------------------------------------------------------
   837 ;; (2) _CallSend                                             3     3      0    9001
   838 ;;                                             38 BANK0      1     1      0
   839 ;;                           _InitGPRS
   840 ;;                       ___delay_20ms
   841 ;;                  _ATCommand_SendCmd
   842 ;;                     _InteractServer
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _ReadTData                                            1     1      0    2304
   845 ;;                                             12 BANK0      1     1      0
   846 ;;                  _DS18X20_StartMeas
   847 ;;                       ___delay_20ms
   848 ;;                   _DS18X20_ReadMeas
   849 ;;                    _TCN75_SetConfig
   850 ;;                      _TCN75_ReadReg
   851 ;;                 _LcdDisplay_CurTemp
   852 ;; ---------------------------------------------------------------------------------
   853 ;; (3) _InteractServer                                      16    16      0    4761
   854 ;;                                             22 BANK0     16    16      0
   855 ;;                    _Uart1_PutString
   856 ;;                _Uart1_PutString_Hex
   857 ;;                       _Uart1_PutHex
   858 ;;                  _MakeTxTemperature
   859 ;;                            ___lwdiv
   860 ;;                      _Uart1_PutChar
   861 ;;                            ___lwmod
   862 ;;                             ___bmul
   863 ;;                        _eeprom_read
   864 ;;                             _strcpy
   865 ;;                 _ATCommand_WaitData
   866 ;;                       ___delay_20ms
   867 ;; ---------------------------------------------------------------------------------
   868 ;; (3) _InitGPRS                                             6     6      0    3184
   869 ;;                                             25 BANK0      6     6      0
   870 ;;                            _PowerON
   871 ;;                  _ATCommand_SendCmd
   872 ;;                       ___delay_20ms
   873 ;;                             _strstr
   874 ;;                               _atoi
   875 ;;                     _LcdDisplay_CSQ
   876 ;; ---------------------------------------------------------------------------------
   877 ;; (2) _DS18X20_ReadMeas                                     2     2      0     763
   878 ;;                                             10 BANK0      2     2      0
   879 ;;                      _OneWire_Reset
   880 ;;                    _OneWire_Command
   881 ;;                   _OneWire_ReadByte
   882 ;;                     _GetVerify_CRC8
   883 ;; ---------------------------------------------------------------------------------
   884 ;; (2) _DS18X20_StartMeas                                    0     0      0     285
   885 ;;                      _OneWire_Reset
   886 ;;                    _OneWire_Command
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (3) _OneWire_Command                                      1     1      0     215
   889 ;;                                              4 BANK0      1     1      0
   890 ;;                      _OneWire_Reset
   891 ;;                  _OneWire_WriteByte
   892 ;; ---------------------------------------------------------------------------------
   893 ;; (4) _ATCommand_WaitData                                   5     5      0     749
   894 ;;                                             17 BANK0      5     5      0
   895 ;;                             _strstr
   896 ;;                             _strcpy
   897 ;; ---------------------------------------------------------------------------------
   898 ;; (4) _Uart1_PutString_Hex                                  3     1      2     337
   899 ;;                                              3 BANK0      3     1      2
   900 ;;                       _Uart1_PutHex
   901 ;; ---------------------------------------------------------------------------------
   902 ;; (3) _ATCommand_SendCmd                                    8     6      2    1000
   903 ;;                                             17 BANK0      8     6      2
   904 ;;                    _Uart1_PutString
   905 ;;                             _strstr
   906 ;;                       ___delay_20ms
   907 ;;                             _strcpy
   908 ;; ---------------------------------------------------------------------------------
   909 ;; (4) _PowerON                                              0     0      0      22
   910 ;;                       ___delay_20ms
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (2) _TCN75_ReadReg                                        3     3      0     383
   913 ;;                                              3 BANK0      3     3      0
   914 ;;                       _SimI2C_Start
   915 ;;                    _SimI2C_SendByte
   916 ;;                      _SimI2C_RecAck
   917 ;;                    _SimI2C_ReadByte
   918 ;;                         _SimI2C_Ack
   919 ;;                       _SimI2C_NoAck
   920 ;;                        _SimI2C_Stop
   921 ;; ---------------------------------------------------------------------------------
   922 ;; (2) _TCN75_SetConfig                                      2     2      0     244
   923 ;;                                              3 BANK0      2     2      0
   924 ;;                       _SimI2C_Start
   925 ;;                    _SimI2C_SendByte
   926 ;;                      _SimI2C_RecAck
   927 ;;                        _SimI2C_Stop
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (2) _InitVariable                                         0     0      0     621
   930 ;;                         _GetRomData
   931 ;;                        _SaveRomData
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (3) _SimI2C_Stop                                          0     0      0       0
   934 ;; ---------------------------------------------------------------------------------
   935 ;; (3) _SimI2C_NoAck                                         0     0      0       0
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (3) _SimI2C_Ack                                           0     0      0       0
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (3) _SimI2C_ReadByte                                      2     2      0     108
   940 ;;                                              0 BANK0      2     2      0
   941 ;; ---------------------------------------------------------------------------------
   942 ;; (3) _SimI2C_RecAck                                        1     1      0      34
   943 ;;                                              0 BANK0      1     1      0
   944 ;; ---------------------------------------------------------------------------------
   945 ;; (3) _SimI2C_SendByte                                      3     3      0     139
   946 ;;                                              0 BANK0      3     3      0
   947 ;; ---------------------------------------------------------------------------------
   948 ;; (3) _SimI2C_Start                                         0     0      0       0
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (4) _OneWire_WriteByte                                    4     4      0     114
   951 ;;                                              0 BANK0      4     4      0
   952 ;; ---------------------------------------------------------------------------------
   953 ;; (3) _OneWire_ReadByte                                     4     4      0     115
   954 ;;                                              0 BANK0      4     4      0
   955 ;; ---------------------------------------------------------------------------------
   956 ;; (4) _atoi                                                 9     7      2     569
   957 ;;                                              6 BANK0      9     7      2
   958 ;;                             ___wmul
   959 ;;                            _isdigit
   960 ;; ---------------------------------------------------------------------------------
   961 ;; (5) _strstr                                               4     0      4     562
   962 ;;                                             13 BANK0      4     0      4
   963 ;;                             _strlen
   964 ;;                            _strncmp
   965 ;;                             _strchr
   966 ;; ---------------------------------------------------------------------------------
   967 ;; (4) _Uart1_PutHex                                         2     2      0     238
   968 ;;                                              1 BANK0      2     2      0
   969 ;;                      _Uart1_PutChar
   970 ;; ---------------------------------------------------------------------------------
   971 ;; (4) _Uart1_PutString                                      3     1      2     130
   972 ;;                                              1 BANK0      3     1      2
   973 ;;                      _Uart1_PutChar
   974 ;; ---------------------------------------------------------------------------------
   975 ;; (2) ___delay_20ms                                         4     2      2      22
   976 ;;                                              0 BANK0      4     2      2
   977 ;; ---------------------------------------------------------------------------------
   978 ;; (2) _TCN75_Init                                           0     0      0       0
   979 ;;                        _SimI2C_Init
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (4) _OneWire_Reset                                        3     3      0      70
   982 ;;                                              0 BANK0      3     3      0
   983 ;; ---------------------------------------------------------------------------------
   984 ;; (2) _ATCommand_Init                                       0     0      0      73
   985 ;;                             _strcpy
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (3) _SaveRomData                                          1     1      0     312
   988 ;;                                              7 BANK0      1     1      0
   989 ;;                      _GetVerify_Sum
   990 ;;                       _eeprom_write
   991 ;; ---------------------------------------------------------------------------------
   992 ;; (3) _GetRomData                                           1     1      0     309
   993 ;;                                              7 BANK0      1     1      0
   994 ;;                        _eeprom_read
   995 ;;                      _GetVerify_Sum
   996 ;; ---------------------------------------------------------------------------------
   997 ;; (2) _LcdDisplay_Err                                       0     0      0     400
   998 ;;                            ___lbdiv
   999 ;;                            ___lbmod
  1000 ;;                      _LcdDisplayNum
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (2) _LcdDisplay_CurTemp                                   4     4      0     536
  1003 ;;                                              5 BANK0      4     4      0
  1004 ;;                            ___lbdiv
  1005 ;;                            ___lbmod
  1006 ;;                      _LcdDisplayNum
  1007 ;; ---------------------------------------------------------------------------------
  1008 ;; (4) _LcdDisplay_CSQ                                       2     2      0     468
  1009 ;;                                              5 BANK0      2     2      0
  1010 ;;                            ___lbdiv
  1011 ;;                            ___lbmod
  1012 ;;                      _LcdDisplayNum
  1013 ;; ---------------------------------------------------------------------------------
  1014 ;; (2) _LcdDisplayAll                                        1     1      0      93
  1015 ;;                                              0 BANK0      1     1      0
  1016 ;;                      _LcdDisplayNum
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (3) ___lbmod                                              5     4      1     159
  1019 ;;                                              0 BANK0      5     4      1
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (3) ___lbdiv                                              4     3      1     241
  1022 ;;                                              0 BANK0      4     3      1
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (4) ___lwmod                                              5     1      4     232
  1025 ;;                                              0 BANK0      5     1      4
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (4) ___lwdiv                                              7     3      4     241
  1028 ;;                                              0 BANK0      7     3      4
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; (5) ___wmul                                               6     2      4     136
  1031 ;;                                              0 BANK0      6     2      4
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (1) ___bmul                                               3     2      1     136
  1034 ;;                                              0 BANK0      3     2      1
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (6) _strchr                                               6     2      4      88
  1037 ;;                                              0 BANK0      6     2      4
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (6) _strncmp                                              7     1      6     134
  1040 ;;                                              6 BANK0      7     1      6
  1041 ;;                             _strlen (ARG)
  1042 ;; ---------------------------------------------------------------------------------
  1043 ;; (6) _strlen                                               6     4      2      89
  1044 ;;                                              0 BANK0      6     4      2
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (5) _isdigit                                              2     2      0      99
  1047 ;;                                              0 BANK0      2     2      0
  1048 ;; ---------------------------------------------------------------------------------
  1049 ;; (3) _SimI2C_Init                                          0     0      0       0
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (3) _GetVerify_CRC8                                      10     8      2     233
  1052 ;;                                              0 BANK0     10     8      2
  1053 ;; ---------------------------------------------------------------------------------
  1054 ;; (4) _GetVerify_Sum                                        7     5      2     120
  1055 ;;                                              0 BANK0      7     5      2
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; (5) _strcpy                                               6     4      2      73
  1058 ;;                                              0 BANK0      6     4      2
  1059 ;; ---------------------------------------------------------------------------------
  1060 ;; (4) _eeprom_read                                          3     3      0      22
  1061 ;;                                              0 BANK0      3     3      0
  1062 ;; ---------------------------------------------------------------------------------
  1063 ;; (4) _Uart1_PutChar                                        1     1      0      31
  1064 ;;                                              0 BANK0      1     1      0
  1065 ;; ---------------------------------------------------------------------------------
  1066 ;; (4) _MakeTxTemperature                                    3     1      2     556
  1067 ;;                                              0 BANK0      3     1      2
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (1) _eeprom_write                                         2     1      1      62
  1070 ;;                                              0 BANK0      2     1      1
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; (2) _InitMCU                                              0     0      0       0
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (2) _DisplayInit                                          0     0      0       0
  1075 ;; ---------------------------------------------------------------------------------
  1076 ;; (3) _LcdDisplayNum                                        0     0      0       0
  1077 ;; ---------------------------------------------------------------------------------
  1078 ;; Estimated maximum stack depth 6
  1079 ;; ---------------------------------------------------------------------------------
  1080 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1081 ;; ---------------------------------------------------------------------------------
  1082 ;; (8) _highISR                                              1     1      0     179
  1083 ;;                                              6 COMMON     1     1      0
  1084 ;;                   _ATCommand_ProcRx
  1085 ;; ---------------------------------------------------------------------------------
  1086 ;; (9) _ATCommand_ProcRx                                     4     4      0     156
  1087 ;;                                              2 COMMON     4     4      0
  1088 ;;                            _isgraph
  1089 ;; ---------------------------------------------------------------------------------
  1090 ;; (10) _isgraph                                             2     2      0      68
  1091 ;;                                              0 COMMON     2     2      0
  1092 ;; ---------------------------------------------------------------------------------
  1093 ;; Estimated maximum stack depth 10
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; Call Graph Graphs:
  1096 ;; _main (ROOT)
  1097 ;;   _InitSystem
  1098 ;;     _InitMCU
  1099 ;;     _InitVariable
  1100 ;;       _GetRomData
  1101 ;;         _eeprom_read
  1102 ;;         _GetVerify_Sum
  1103 ;;       _SaveRomData
  1104 ;;         _GetVerify_Sum
  1105 ;;         _eeprom_write
  1106 ;;     _DisplayInit
  1107 ;;     _ATCommand_Init
  1108 ;;       _strcpy
  1109 ;;     _OneWire_Reset
  1110 ;;     _TCN75_Init
  1111 ;;       _SimI2C_Init
  1112 ;;     _TCN75_SetConfig
  1113 ;;       _SimI2C_Start
  1114 ;;       _SimI2C_SendByte
  1115 ;;       _SimI2C_RecAck
  1116 ;;       _SimI2C_Stop
  1117 ;;     ___delay_20ms
  1118 ;;     _ReadTData
  1119 ;;       _DS18X20_StartMeas
  1120 ;;         _OneWire_Reset
  1121 ;;         _OneWire_Command
  1122 ;;           _OneWire_Reset
  1123 ;;           _OneWire_WriteByte
  1124 ;;       ___delay_20ms
  1125 ;;       _DS18X20_ReadMeas
  1126 ;;         _OneWire_Reset
  1127 ;;         _OneWire_Command
  1128 ;;           _OneWire_Reset
  1129 ;;           _OneWire_WriteByte
  1130 ;;         _OneWire_ReadByte
  1131 ;;         _GetVerify_CRC8
  1132 ;;       _TCN75_SetConfig
  1133 ;;         _SimI2C_Start
  1134 ;;         _SimI2C_SendByte
  1135 ;;         _SimI2C_RecAck
  1136 ;;         _SimI2C_Stop
  1137 ;;       _TCN75_ReadReg
  1138 ;;         _SimI2C_Start
  1139 ;;         _SimI2C_SendByte
  1140 ;;         _SimI2C_RecAck
  1141 ;;         _SimI2C_ReadByte
  1142 ;;         _SimI2C_Ack
  1143 ;;         _SimI2C_NoAck
  1144 ;;         _SimI2C_Stop
  1145 ;;       _LcdDisplay_CurTemp
  1146 ;;         ___lbdiv
  1147 ;;         ___lbmod
  1148 ;;         _LcdDisplayNum
  1149 ;;   ___delay_20ms
  1150 ;;   _TestProc
  1151 ;;     _LcdDisplayAll
  1152 ;;       _LcdDisplayNum
  1153 ;;     ___delay_20ms
  1154 ;;     _ReadTData
  1155 ;;       _DS18X20_StartMeas
  1156 ;;         _OneWire_Reset
  1157 ;;         _OneWire_Command
  1158 ;;           _OneWire_Reset
  1159 ;;           _OneWire_WriteByte
  1160 ;;       ___delay_20ms
  1161 ;;       _DS18X20_ReadMeas
  1162 ;;         _OneWire_Reset
  1163 ;;         _OneWire_Command
  1164 ;;           _OneWire_Reset
  1165 ;;           _OneWire_WriteByte
  1166 ;;         _OneWire_ReadByte
  1167 ;;         _GetVerify_CRC8
  1168 ;;       _TCN75_SetConfig
  1169 ;;         _SimI2C_Start
  1170 ;;         _SimI2C_SendByte
  1171 ;;         _SimI2C_RecAck
  1172 ;;         _SimI2C_Stop
  1173 ;;       _TCN75_ReadReg
  1174 ;;         _SimI2C_Start
  1175 ;;         _SimI2C_SendByte
  1176 ;;         _SimI2C_RecAck
  1177 ;;         _SimI2C_ReadByte
  1178 ;;         _SimI2C_Ack
  1179 ;;         _SimI2C_NoAck
  1180 ;;         _SimI2C_Stop
  1181 ;;       _LcdDisplay_CurTemp
  1182 ;;         ___lbdiv
  1183 ;;         ___lbmod
  1184 ;;         _LcdDisplayNum
  1185 ;;     _LcdDisplay_Err
  1186 ;;       ___lbdiv
  1187 ;;       ___lbmod
  1188 ;;       _LcdDisplayNum
  1189 ;;     _CallProc
  1190 ;;       _CallSend
  1191 ;;         _InitGPRS
  1192 ;;           _PowerON
  1193 ;;             ___delay_20ms
  1194 ;;           _ATCommand_SendCmd
  1195 ;;             _Uart1_PutString
  1196 ;;               _Uart1_PutChar
  1197 ;;             _strstr
  1198 ;;               _strlen
  1199 ;;               _strncmp
  1200 ;;                 _strlen (ARG)
  1201 ;;               _strchr
  1202 ;;             ___delay_20ms
  1203 ;;             _strcpy
  1204 ;;           ___delay_20ms
  1205 ;;           _strstr
  1206 ;;             _strlen
  1207 ;;             _strncmp
  1208 ;;               _strlen (ARG)
  1209 ;;             _strchr
  1210 ;;           _atoi
  1211 ;;             ___wmul
  1212 ;;             _isdigit
  1213 ;;           _LcdDisplay_CSQ
  1214 ;;             ___lbdiv
  1215 ;;             ___lbmod
  1216 ;;             _LcdDisplayNum
  1217 ;;         ___delay_20ms
  1218 ;;         _ATCommand_SendCmd
  1219 ;;           _Uart1_PutString
  1220 ;;             _Uart1_PutChar
  1221 ;;           _strstr
  1222 ;;             _strlen
  1223 ;;             _strncmp
  1224 ;;               _strlen (ARG)
  1225 ;;             _strchr
  1226 ;;           ___delay_20ms
  1227 ;;           _strcpy
  1228 ;;         _InteractServer
  1229 ;;           _Uart1_PutString
  1230 ;;             _Uart1_PutChar
  1231 ;;           _Uart1_PutString_Hex
  1232 ;;             _Uart1_PutHex
  1233 ;;               _Uart1_PutChar
  1234 ;;           _Uart1_PutHex
  1235 ;;             _Uart1_PutChar
  1236 ;;           _MakeTxTemperature
  1237 ;;           ___lwdiv
  1238 ;;           _Uart1_PutChar
  1239 ;;           ___lwmod
  1240 ;;           ___bmul
  1241 ;;           _eeprom_read
  1242 ;;           _strcpy
  1243 ;;           _ATCommand_WaitData
  1244 ;;             _strstr
  1245 ;;               _strlen
  1246 ;;               _strncmp
  1247 ;;                 _strlen (ARG)
  1248 ;;               _strchr
  1249 ;;             _strcpy
  1250 ;;           ___delay_20ms
  1251 ;;       _LcdDisplay_CurTemp
  1252 ;;         ___lbdiv
  1253 ;;         ___lbmod
  1254 ;;         _LcdDisplayNum
  1255 ;;       ___delay_20ms
  1256 ;;       _LcdDisplay_Err
  1257 ;;         ___lbdiv
  1258 ;;         ___lbmod
  1259 ;;         _LcdDisplayNum
  1260 ;;   _ReadTData
  1261 ;;     _DS18X20_StartMeas
  1262 ;;       _OneWire_Reset
  1263 ;;       _OneWire_Command
  1264 ;;         _OneWire_Reset
  1265 ;;         _OneWire_WriteByte
  1266 ;;     ___delay_20ms
  1267 ;;     _DS18X20_ReadMeas
  1268 ;;       _OneWire_Reset
  1269 ;;       _OneWire_Command
  1270 ;;         _OneWire_Reset
  1271 ;;         _OneWire_WriteByte
  1272 ;;       _OneWire_ReadByte
  1273 ;;       _GetVerify_CRC8
  1274 ;;     _TCN75_SetConfig
  1275 ;;       _SimI2C_Start
  1276 ;;       _SimI2C_SendByte
  1277 ;;       _SimI2C_RecAck
  1278 ;;       _SimI2C_Stop
  1279 ;;     _TCN75_ReadReg
  1280 ;;       _SimI2C_Start
  1281 ;;       _SimI2C_SendByte
  1282 ;;       _SimI2C_RecAck
  1283 ;;       _SimI2C_ReadByte
  1284 ;;       _SimI2C_Ack
  1285 ;;       _SimI2C_NoAck
  1286 ;;       _SimI2C_Stop
  1287 ;;     _LcdDisplay_CurTemp
  1288 ;;       ___lbdiv
  1289 ;;       ___lbmod
  1290 ;;       _LcdDisplayNum
  1291 ;;   _CallProc
  1292 ;;     _CallSend
  1293 ;;       _InitGPRS
  1294 ;;         _PowerON
  1295 ;;           ___delay_20ms
  1296 ;;         _ATCommand_SendCmd
  1297 ;;           _Uart1_PutString
  1298 ;;             _Uart1_PutChar
  1299 ;;           _strstr
  1300 ;;             _strlen
  1301 ;;             _strncmp
  1302 ;;               _strlen (ARG)
  1303 ;;             _strchr
  1304 ;;           ___delay_20ms
  1305 ;;           _strcpy
  1306 ;;         ___delay_20ms
  1307 ;;         _strstr
  1308 ;;           _strlen
  1309 ;;           _strncmp
  1310 ;;             _strlen (ARG)
  1311 ;;           _strchr
  1312 ;;         _atoi
  1313 ;;           ___wmul
  1314 ;;           _isdigit
  1315 ;;         _LcdDisplay_CSQ
  1316 ;;           ___lbdiv
  1317 ;;           ___lbmod
  1318 ;;           _LcdDisplayNum
  1319 ;;       ___delay_20ms
  1320 ;;       _ATCommand_SendCmd
  1321 ;;         _Uart1_PutString
  1322 ;;           _Uart1_PutChar
  1323 ;;         _strstr
  1324 ;;           _strlen
  1325 ;;           _strncmp
  1326 ;;             _strlen (ARG)
  1327 ;;           _strchr
  1328 ;;         ___delay_20ms
  1329 ;;         _strcpy
  1330 ;;       _InteractServer
  1331 ;;         _Uart1_PutString
  1332 ;;           _Uart1_PutChar
  1333 ;;         _Uart1_PutString_Hex
  1334 ;;           _Uart1_PutHex
  1335 ;;             _Uart1_PutChar
  1336 ;;         _Uart1_PutHex
  1337 ;;           _Uart1_PutChar
  1338 ;;         _MakeTxTemperature
  1339 ;;         ___lwdiv
  1340 ;;         _Uart1_PutChar
  1341 ;;         ___lwmod
  1342 ;;         ___bmul
  1343 ;;         _eeprom_read
  1344 ;;         _strcpy
  1345 ;;         _ATCommand_WaitData
  1346 ;;           _strstr
  1347 ;;             _strlen
  1348 ;;             _strncmp
  1349 ;;               _strlen (ARG)
  1350 ;;             _strchr
  1351 ;;           _strcpy
  1352 ;;         ___delay_20ms
  1353 ;;     _LcdDisplay_CurTemp
  1354 ;;       ___lbdiv
  1355 ;;       ___lbmod
  1356 ;;       _LcdDisplayNum
  1357 ;;     ___delay_20ms
  1358 ;;     _LcdDisplay_Err
  1359 ;;       ___lbdiv
  1360 ;;       ___lbmod
  1361 ;;       _LcdDisplayNum
  1362 ;;   ___bmul
  1363 ;;   _eeprom_write
  1364 ;;
  1365 ;; _highISR (ROOT)
  1366 ;;   _ATCommand_ProcRx
  1367 ;;     _isgraph
  1368 ;;
  1369 ;; Address spaces:
  1370 ;;Name               Size   Autos  Total    Cost      Usage
  1371 ;;BIGRAM             1F0      0       0       0        0.0%
  1372 ;;EEDATA             100      0       0       0        0.0%
  1373 ;;NULL                 0      0       0       0        0.0%
  1374 ;;CODE                 0      0       0       0        0.0%
  1375 ;;BITCOMMON            E      0       0       1        0.0%
  1376 ;;BITSFR0              0      0       0       1        0.0%
  1377 ;;SFR0                 0      0       0       1        0.0%
  1378 ;;COMMON               E      7       C       2       85.7%
  1379 ;;BITSFR1              0      0       0       2        0.0%
  1380 ;;SFR1                 0      0       0       2        0.0%
  1381 ;;BITSFR2              0      0       0       3        0.0%
  1382 ;;SFR2                 0      0       0       3        0.0%
  1383 ;;STACK                0      0       D       3        0.0%
  1384 ;;BITSFR3              0      0       0       4        0.0%
  1385 ;;SFR3                 0      0       0       4        0.0%
  1386 ;;ABS                  0      0      AF       4        0.0%
  1387 ;;BITBANK0            50      0       0       5        0.0%
  1388 ;;BITSFR4              0      0       0       5        0.0%
  1389 ;;SFR4                 0      0       0       5        0.0%
  1390 ;;BANK0               50     2E      4F       6       98.8%
  1391 ;;BITSFR5              0      0       0       6        0.0%
  1392 ;;SFR5                 0      0       0       6        0.0%
  1393 ;;BITBANK1            50      0       0       7        0.0%
  1394 ;;BITSFR6              0      0       0       7        0.0%
  1395 ;;SFR6                 0      0       0       7        0.0%
  1396 ;;BANK1               50      0      3C       8       75.0%
  1397 ;;BITSFR7              0      0       0       8        0.0%
  1398 ;;SFR7                 0      0       0       8        0.0%
  1399 ;;BITBANK2            50      0       0       9        0.0%
  1400 ;;BITSFR8              0      0       0       9        0.0%
  1401 ;;SFR8                 0      0       0       9        0.0%
  1402 ;;BANK2               50      0      18      10       30.0%
  1403 ;;BITSFR9              0      0       0      10        0.0%
  1404 ;;SFR9                 0      0       0      10        0.0%
  1405 ;;BITBANK3            50      0       0      11        0.0%
  1406 ;;BITSFR10             0      0       0      11        0.0%
  1407 ;;SFR10                0      0       0      11        0.0%
  1408 ;;BANK3               50      0       0      12        0.0%
  1409 ;;BITSFR11             0      0       0      12        0.0%
  1410 ;;SFR11                0      0       0      12        0.0%
  1411 ;;BITBANK4            50      0       0      13        0.0%
  1412 ;;BITSFR12             0      0       0      13        0.0%
  1413 ;;SFR12                0      0       0      13        0.0%
  1414 ;;BANK4               4C      0       0      14        0.0%
  1415 ;;BITSFR13             0      0       0      14        0.0%
  1416 ;;SFR13                0      0       0      14        0.0%
  1417 ;;BITBANK5            50      0       0      15        0.0%
  1418 ;;BITSFR14             0      0       0      15        0.0%
  1419 ;;SFR14                0      0       0      15        0.0%
  1420 ;;BITSFR15             0      0       0      16        0.0%
  1421 ;;SFR15                0      0       0      16        0.0%
  1422 ;;BANK5                0      0       0      16        0.0%
  1423 ;;BITBANK6            10      0       0      17        0.0%
  1424 ;;BITSFR16             0      0       0      17        0.0%
  1425 ;;SFR16                0      0       0      17        0.0%
  1426 ;;BITSFR17             0      0       0      18        0.0%
  1427 ;;SFR17                0      0       0      18        0.0%
  1428 ;;BANK6                0      0       0      18        0.0%
  1429 ;;BITSFR18             0      0       0      19        0.0%
  1430 ;;SFR18                0      0       0      19        0.0%
  1431 ;;DATA                 0      0      BC      19        0.0%
  1432 ;;BITSFR19             0      0       0      20        0.0%
  1433 ;;SFR19                0      0       0      20        0.0%
  1434 ;;BITSFR20             0      0       0      21        0.0%
  1435 ;;SFR20                0      0       0      21        0.0%
  1436 ;;BITSFR21             0      0       0      22        0.0%
  1437 ;;SFR21                0      0       0      22        0.0%
  1438 ;;BITSFR22             0      0       0      23        0.0%
  1439 ;;SFR22                0      0       0      23        0.0%
  1440 ;;BITSFR23             0      0       0      24        0.0%
  1441 ;;SFR23                0      0       0      24        0.0%
  1442 ;;BITSFR24             0      0       0      25        0.0%
  1443 ;;SFR24                0      0       0      25        0.0%
  1444 ;;BITSFR25             0      0       0      26        0.0%
  1445 ;;SFR25                0      0       0      26        0.0%
  1446 ;;BITSFR26             0      0       0      27        0.0%
  1447 ;;SFR26                0      0       0      27        0.0%
  1448 ;;BITSFR27             0      0       0      28        0.0%
  1449 ;;SFR27                0      0       0      28        0.0%
  1450 ;;BITSFR28             0      0       0      29        0.0%
  1451 ;;SFR28                0      0       0      29        0.0%
  1452 ;;BITSFR29             0      0       0      30        0.0%
  1453 ;;SFR29                0      0       0      30        0.0%
  1454 ;;BITSFR30             0      0       0      31        0.0%
  1455 ;;SFR30                0      0       0      31        0.0%
  1456 ;;BITSFR31             0      0       0      32        0.0%
  1457 ;;SFR31                0      0       0      32        0.0%
  1458                           
  1459                           
  1460 ;; *************** function _main *****************
  1461 ;; Defined at:
  1462 ;;		line 12 in file "F:\work\WYP\NBIoT\Main.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  i               1   45[BANK0 ] unsigned char 
  1467 ;;  addr            1   44[BANK0 ] unsigned char 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;		None               void
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 17F/0
  1474 ;;		On exit  : 1F/F
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1477 ;;      Params:         0       0       0       0       0       0       0       0
  1478 ;;      Locals:         0       2       0       0       0       0       0       0
  1479 ;;      Temps:          0       2       0       0       0       0       0       0
  1480 ;;      Totals:         0       4       0       0       0       0       0       0
  1481 ;;Total ram usage:        4 bytes
  1482 ;; Hardware stack levels required when called:   10
  1483 ;; This function calls:
  1484 ;;		_InitSystem
  1485 ;;		___delay_20ms
  1486 ;;		_TestProc
  1487 ;;		_ReadTData
  1488 ;;		_CallProc
  1489 ;;		___bmul
  1490 ;;		_eeprom_write
  1491 ;; This function is called by:
  1492 ;;		Startup code after reset
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495  0849                     _main:	
  1496                           
  1497                           ;Main.c: 13: unsigned char addr,i;
  1498                           ;Main.c: 14: InitSystem();
  1499                           
  1500                           ; Regs used in _main: [wreg-btemp+0+pclath+cstack]
  1501  0849  3180  20EF  3188   	fcall	_InitSystem
  1502                           
  1503                           ;Main.c: 15: __delay_20ms(250);
  1504  084C  30FA               	movlw	250
  1505  084D  00A0               	movwf	?___delay_20ms
  1506  084E  01A1               	clrf	?___delay_20ms+1
  1507  084F  22D5               	fcall	___delay_20ms
  1508                           
  1509                           ;Main.c: 16: gFlags.bFirst=1;
  1510  0850  1565               	bsf	_gFlags,2
  1511                           
  1512                           ;Main.c: 17: TestProc();
  1513  0851  3182  224B  3188   	fcall	_TestProc
  1514                           
  1515                           ;Main.c: 18: ReadTData();
  1516  0854  20E3  3188         	fcall	_ReadTData
  1517                           
  1518                           ;Main.c: 19: CallProc();
  1519  0856  2634  3188         	fcall	_CallProc
  1520                           
  1521                           ;Main.c: 20: gFlags.bFirst=0;
  1522  0858  0020               	movlb	0	; select bank0
  1523  0859  1165               	bcf	_gFlags,2
  1524                           
  1525                           ;Main.c: 21: MeasurementTick=SystemTick;
  1526  085A  085D               	movf	_SystemTick+1,w
  1527  085B  00D9               	movwf	_MeasurementTick+1
  1528  085C  085C               	movf	_SystemTick,w
  1529  085D  00D8               	movwf	_MeasurementTick
  1530  085E                     l33556:	
  1531                           
  1532                           ;Main.c: 23: {
  1533                           ;Main.c: 24: if(RB2==0)
  1534  085E  0020               	movlb	0	; select bank0
  1535  085F  190D               	btfsc	13,2
  1536  0860  2874               	goto	l33570
  1537                           
  1538                           ;Main.c: 25: {
  1539                           ;Main.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1540  0861  301A               	movlw	26
  1541  0862  00CB               	movwf	??_main+1
  1542  0863  30F8               	movlw	248
  1543  0864  00CA               	movwf	??_main
  1544  0865                     u8967:	
  1545  0865  0BCA               	decfsz	??_main,f
  1546  0866  2865               	goto	u8967
  1547  0867  0BCB               	decfsz	??_main+1,f
  1548  0868  2865               	goto	u8967
  1549  0869  0064               	clrwdt
  1550                           
  1551                           ;Main.c: 27: if(RB2==0)
  1552  086A  0020               	movlb	0	; select bank0
  1553  086B  190D               	btfsc	13,2
  1554  086C  2874               	goto	l33570
  1555                           
  1556                           ;Main.c: 28: {
  1557                           ;Main.c: 29: gFlags.bNotify=1;
  1558  086D  1465               	bsf	_gFlags,0
  1559                           
  1560                           ;Main.c: 30: ReadTData();
  1561  086E  20E3  3188         	fcall	_ReadTData
  1562                           
  1563                           ;Main.c: 31: CallProc();
  1564  0870  2634  3188         	fcall	_CallProc
  1565                           
  1566                           ;Main.c: 32: gFlags.bNotify=0;
  1567  0872  0020               	movlb	0	; select bank0
  1568  0873  1065               	bcf	_gFlags,0
  1569  0874                     l33570:	
  1570                           
  1571                           ;Main.c: 33: }
  1572                           ;Main.c: 34: }
  1573                           ;Main.c: 35: if((SystemTick-RunTick)>20)
  1574  0874  0877               	movf	_RunTick,w
  1575  0875  025C               	subwf	_SystemTick,w
  1576  0876  00CA               	movwf	??_main
  1577  0877  0878               	movf	_RunTick+1,w
  1578  0878  3B5D               	subwfb	_SystemTick+1,w
  1579  0879  00CB               	movwf	??_main+1
  1580  087A  3000               	movlw	0
  1581  087B  024B               	subwf	??_main+1,w
  1582  087C  3015               	movlw	21
  1583  087D  1903               	skipnz
  1584  087E  024A               	subwf	??_main,w
  1585  087F  1C03               	skipc
  1586  0880  288A               	goto	l33576
  1587                           
  1588                           ;Main.c: 36: {
  1589                           ;Main.c: 37: RunTick=SystemTick;
  1590  0881  085D               	movf	_SystemTick+1,w
  1591  0882  00F8               	movwf	_RunTick+1
  1592  0883  085C               	movf	_SystemTick,w
  1593  0884  00F7               	movwf	_RunTick
  1594  0885                     l6502:	
  1595                           ;Main.c: 39: while(WA==0);
  1596                           
  1597  0885  002F               	movlb	15	; select bank15
  1598  0886  1E12               	btfss	18,4
  1599  0887  2885               	goto	l6502
  1600                           
  1601                           ;Main.c: 40: SEG21COM3=!SEG21COM3;
  1602  0888  3020               	movlw	32
  1603  0889  06AB               	xorwf	43,f
  1604  088A                     l33576:	
  1605                           
  1606                           ;Main.c: 42: }
  1607                           ;Main.c: 43: if((SystemTick-MeasurementTick)>NeedMeasurementTick)
  1608  088A  0020               	movlb	0	; select bank0
  1609  088B  0858               	movf	_MeasurementTick,w
  1610  088C  025C               	subwf	_SystemTick,w
  1611  088D  00CA               	movwf	??_main
  1612  088E  0859               	movf	_MeasurementTick+1,w
  1613  088F  3B5D               	subwfb	_SystemTick+1,w
  1614  0890  00CB               	movwf	??_main+1
  1615  0891  025B               	subwf	_NeedMeasurementTick+1,w
  1616  0892  1D03               	skipz
  1617  0893  2896               	goto	u8895
  1618  0894  084A               	movf	??_main,w
  1619  0895  025A               	subwf	_NeedMeasurementTick,w
  1620  0896                     u8895:	
  1621  0896  1803               	skipnc
  1622  0897  28DE               	goto	l33626
  1623                           
  1624                           ;Main.c: 44: {
  1625                           ;Main.c: 45: MeasurementTick=SystemTick;
  1626  0898  085D               	movf	_SystemTick+1,w
  1627  0899  00D9               	movwf	_MeasurementTick+1
  1628  089A  085C               	movf	_SystemTick,w
  1629  089B  00D8               	movwf	_MeasurementTick
  1630                           
  1631                           ;Main.c: 46: ReadTData();
  1632  089C  20E3  3188         	fcall	_ReadTData
  1633                           
  1634                           ;Main.c: 47: TList.T[TListIndex++]=CurTemp;
  1635  089E  0020               	movlb	0	; select bank0
  1636  089F  3564               	lslf	_TListIndex,w
  1637  08A0  3E20               	addlw	_TList& (0+255)
  1638  08A1  0086               	movwf	6
  1639  08A2  3001               	movlw	1	; select bank2/3
  1640  08A3  0087               	movwf	7
  1641  08A4  0856               	movf	_CurTemp,w
  1642  08A5  3FC0               	movwi [0]fsr1
  1643  08A6  0857               	movf	_CurTemp+1,w
  1644  08A7  3FC1               	movwi [1]fsr1
  1645  08A8  0AE4               	incf	_TListIndex,f
  1646                           
  1647                           ;Main.c: 48: if(TListIndex>=12)
  1648  08A9  300C               	movlw	12
  1649  08AA  0264               	subwf	_TListIndex,w
  1650  08AB  1C03               	skipc
  1651  08AC  28DE               	goto	l33626
  1652                           
  1653                           ;Main.c: 49: {
  1654                           ;Main.c: 50: CallProc();
  1655  08AD  2634  3188         	fcall	_CallProc
  1656                           
  1657                           ;Main.c: 51: TListIndex=0;
  1658  08AF  0020               	movlb	0	; select bank0
  1659  08B0  01E4               	clrf	_TListIndex
  1660                           
  1661                           ;Main.c: 52: if(ErrState!=NoErr)
  1662  08B1  0862               	movf	_ErrState,w
  1663  08B2  1903               	btfsc	3,2
  1664  08B3  28DB               	goto	l33622
  1665                           
  1666                           ;Main.c: 53: {
  1667                           ;Main.c: 54: if(TxErrDataIndex==0xff)
  1668  08B4  0868               	movf	_TxErrDataIndex,w
  1669  08B5  3AFF               	xorlw	255
  1670  08B6  1D03               	skipz
  1671  08B7  28B9               	goto	l33598
  1672                           
  1673                           ;Main.c: 55: TxErrDataIndex=0;
  1674  08B8  01E8               	clrf	_TxErrDataIndex
  1675  08B9                     l33598:	
  1676                           
  1677                           ;Main.c: 56: addr=TxErrDataIndex*12;
  1678  08B9  300C               	movlw	12
  1679  08BA  00A0               	movwf	?___bmul
  1680  08BB  0868               	movf	_TxErrDataIndex,w
  1681  08BC  25ED  3188         	fcall	___bmul
  1682  08BE  00CC               	movwf	main@addr
  1683                           
  1684                           ;Main.c: 57: addr+=16;
  1685  08BF  3010               	movlw	16
  1686  08C0  07CC               	addwf	main@addr,f
  1687                           
  1688                           ;Main.c: 58: for(i=0;i<24;i++)
  1689  08C1  01CD               	clrf	main@i
  1690  08C2                     l33608:	
  1691                           
  1692                           ;Main.c: 59: {
  1693                           ;Main.c: 60: eeprom_write(addr+i,TList.All[i]);
  1694  08C2  084D               	movf	main@i,w
  1695  08C3  3E20               	addlw	_TList& (0+255)
  1696  08C4  0086               	movwf	6
  1697  08C5  3001               	movlw	1	; select bank2/3
  1698  08C6  0087               	movwf	7
  1699  08C7  0801               	movf	1,w
  1700  08C8  00A0               	movwf	?_eeprom_write
  1701  08C9  084C               	movf	main@addr,w
  1702  08CA  074D               	addwf	main@i,w
  1703  08CB  26E5  3188         	fcall	_eeprom_write
  1704  08CD  0020               	movlb	0	; select bank0
  1705  08CE  0ACD               	incf	main@i,f
  1706  08CF  3018               	movlw	24
  1707  08D0  024D               	subwf	main@i,w
  1708  08D1  1C03               	skipc
  1709  08D2  28C2               	goto	l33608
  1710                           
  1711                           ;Main.c: 61: }
  1712                           ;Main.c: 62: TxErrDataIndex++;
  1713  08D3  0AE8               	incf	_TxErrDataIndex,f
  1714                           
  1715                           ;Main.c: 63: if(TxErrDataIndex>=10)
  1716  08D4  300A               	movlw	10
  1717  08D5  0268               	subwf	_TxErrDataIndex,w
  1718  08D6  1C03               	skipc
  1719  08D7  28DE               	goto	l33626
  1720                           
  1721                           ;Main.c: 64: {
  1722                           ;Main.c: 65: gFlags.bErrFull=1;
  1723  08D8  15E5               	bsf	_gFlags,3
  1724                           
  1725                           ;Main.c: 66: TxErrDataIndex=0;
  1726  08D9  01E8               	clrf	_TxErrDataIndex
  1727  08DA  28DE               	goto	l33626
  1728  08DB                     l33622:	
  1729                           
  1730                           ;Main.c: 69: else
  1731                           ;Main.c: 70: {
  1732                           ;Main.c: 71: TxErrDataIndex=0xff;
  1733  08DB  30FF               	movlw	255
  1734  08DC  00E8               	movwf	_TxErrDataIndex
  1735                           
  1736                           ;Main.c: 72: gFlags.bErrFull=0;
  1737  08DD  11E5               	bcf	_gFlags,3
  1738  08DE                     l33626:	
  1739                           
  1740                           ;Main.c: 73: }
  1741                           ;Main.c: 74: }
  1742                           ;Main.c: 75: }
  1743                           ;Main.c: 76: if(WERR==1)
  1744  08DE  002F               	movlb	15	; select bank15
  1745  08DF  1E91               	btfss	17,5
  1746  08E0  285E               	goto	l33556
  1747                           
  1748                           ;Main.c: 77: {
  1749                           ;Main.c: 78: WERR=0;
  1750  08E1  1291               	bcf	17,5
  1751  08E2  285E               	goto	l33556
  1752  08E3                     __end_of_main:	
  1753  08E3                     __ptext1967:	
  1754 ;; =============== function _CallSend ends ============
  1755                           
  1756                           
  1757 ;; *************** function _ReadTData *****************
  1758 ;; Defined at:
  1759 ;;		line 106 in file "F:\work\WYP\NBIoT\Main.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;		None
  1762 ;; Auto vars:     Size  Location     Type
  1763 ;;  retry           1   12[BANK0 ] unsigned char 
  1764 ;; Return value:  Size  Location     Type
  1765 ;;		None               void
  1766 ;; Registers used:
  1767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1768 ;; Tracked objects:
  1769 ;;		On entry : 10/0
  1770 ;;		On exit  : 1F/F
  1771 ;;		Unchanged: 0/0
  1772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1773 ;;      Params:         0       0       0       0       0       0       0       0
  1774 ;;      Locals:         0       1       0       0       0       0       0       0
  1775 ;;      Temps:          0       0       0       0       0       0       0       0
  1776 ;;      Totals:         0       1       0       0       0       0       0       0
  1777 ;;Total ram usage:        1 bytes
  1778 ;; Hardware stack levels used:    1
  1779 ;; Hardware stack levels required when called:    6
  1780 ;; This function calls:
  1781 ;;		_DS18X20_StartMeas
  1782 ;;		___delay_20ms
  1783 ;;		_DS18X20_ReadMeas
  1784 ;;		_TCN75_SetConfig
  1785 ;;		_TCN75_ReadReg
  1786 ;;		_LcdDisplay_CurTemp
  1787 ;; This function is called by:
  1788 ;;		_InitSystem
  1789 ;;		_main
  1790 ;;		_TestProc
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793  08E3                     _ReadTData:	
  1794                           
  1795                           ;Main.c: 107: unsigned char retry;
  1796                           ;Main.c: 108: if(gFlags.b18B20)
  1797                           
  1798                           ; Regs used in _ReadTData: [wreg-status,0+pclath+cstack]
  1799  08E3  0020               	movlb	0	; select bank0
  1800  08E4  1CE5               	btfss	_gFlags,1
  1801  08E5  290E               	goto	l6525
  1802                           
  1803                           ;Main.c: 109: {
  1804                           ;Main.c: 110: retry=5;
  1805  08E6  3005               	movlw	5
  1806  08E7  00AC               	movwf	ReadTData@retry
  1807  08E8                     l6526:	
  1808                           ;Main.c: 111: while(retry!=0)
  1809                           
  1810  08E8  08AC               	movf	ReadTData@retry,f
  1811  08E9  1903               	btfsc	3,2
  1812  08EA  2907               	goto	l33374
  1813                           
  1814                           ;Main.c: 112: {
  1815                           ;Main.c: 113: if(DS18X20_StartMeas()!=0x00)
  1816  08EB  3180  202C  3188   	fcall	_DS18X20_StartMeas
  1817  08EE  3A00               	xorlw	0
  1818  08EF  1903               	skipnz
  1819  08F0  28F4               	goto	l33364
  1820  08F1                     l33362:	
  1821                           
  1822                           ;Main.c: 114: {
  1823                           ;Main.c: 115: retry--;
  1824  08F1  0020               	movlb	0	; select bank0
  1825  08F2  03AC               	decf	ReadTData@retry,f
  1826                           
  1827                           ;Main.c: 116: }
  1828  08F3  28E8               	goto	l6526
  1829  08F4                     l33364:	
  1830                           
  1831                           ;Main.c: 117: else
  1832                           ;Main.c: 118: {
  1833                           ;Main.c: 119: __delay_20ms(50);
  1834  08F4  3032               	movlw	50
  1835  08F5  00A0               	movwf	?___delay_20ms
  1836  08F6  01A1               	clrf	?___delay_20ms+1
  1837  08F7  22D5               	fcall	___delay_20ms
  1838                           
  1839                           ;Main.c: 120: if(DS18X20_ReadMeas(1)==0x00)
  1840  08F8  3001               	movlw	1
  1841  08F9  3180  2033  3188   	fcall	_DS18X20_ReadMeas
  1842  08FC  3800               	iorlw	0
  1843  08FD  1D03               	skipz
  1844  08FE  28F1               	goto	l33362
  1845                           
  1846                           ;Main.c: 121: {
  1847                           ;Main.c: 122: CurTemp.u8L=DS18X20_Scratchpad[0];
  1848  08FF  0021               	movlb	1	; select bank1
  1849  0900  0853               	movf	_DS18X20_Scratchpad^(0+128),w
  1850  0901  0020               	movlb	0	; select bank0
  1851  0902  00D6               	movwf	_CurTemp
  1852                           
  1853                           ;Main.c: 123: CurTemp.u8H=DS18X20_Scratchpad[1];
  1854  0903  0021               	movlb	1	; select bank1
  1855  0904  0854               	movf	(_DS18X20_Scratchpad^(0+128)+1),w
  1856  0905  0020               	movlb	0	; select bank0
  1857  0906  00D7               	movwf	_CurTemp+1
  1858  0907                     l33374:	
  1859                           ;Main.c: 124: break;
  1860                           
  1861                           
  1862                           ;Main.c: 129: }
  1863                           ;Main.c: 130: }
  1864                           ;Main.c: 131: }
  1865                           ;Main.c: 132: if(retry==0)
  1866  0907  08AC               	movf	ReadTData@retry,f
  1867  0908  1D03               	skipz
  1868  0909  292C               	goto	l33388
  1869  090A                     l33376:	
  1870                           
  1871                           ;Main.c: 133: CurTemp.u16=0xf000;
  1872  090A  01D6               	clrf	_CurTemp
  1873  090B  30F0               	movlw	240
  1874  090C  00D7               	movwf	_CurTemp+1
  1875  090D  292C               	goto	l33388
  1876  090E                     l6525:	
  1877                           
  1878                           ;Main.c: 135: else
  1879                           ;Main.c: 136: {
  1880                           ;Main.c: 137: TCN75_Config.OneShot=1;
  1881  090E  17E3               	bsf	_TCN75_Config,7
  1882                           
  1883                           ;Main.c: 138: if(TCN75_SetConfig()==1)
  1884  090F  27BB  3188         	fcall	_TCN75_SetConfig
  1885  0911  3A01               	xorlw	1
  1886  0912  1D03               	skipz
  1887  0913  290A               	goto	l33376
  1888                           
  1889                           ;Main.c: 139: {
  1890                           ;Main.c: 140: __delay_20ms(25);
  1891  0914  3019               	movlw	25
  1892  0915  00A0               	movwf	?___delay_20ms
  1893  0916  01A1               	clrf	?___delay_20ms+1
  1894  0917  22D5               	fcall	___delay_20ms
  1895                           
  1896                           ;Main.c: 141: if(TCN75_ReadReg(TCN75_TEMP)==1)
  1897  0918  3000               	movlw	0
  1898  0919  3184  2440  3188   	fcall	_TCN75_ReadReg
  1899  091C  3A01               	xorlw	1
  1900  091D  1D03               	skipz
  1901  091E  290A               	goto	l33376
  1902                           
  1903                           ;Main.c: 142: {
  1904                           ;Main.c: 143: CurTemp.u16=TCN75_RegReadResualt.u16>>4;
  1905  091F  085F               	movf	_TCN75_RegReadResualt+1,w
  1906  0920  00D7               	movwf	_CurTemp+1
  1907  0921  085E               	movf	_TCN75_RegReadResualt,w
  1908  0922  00D6               	movwf	_CurTemp
  1909  0923  0ED6               	swapf	_CurTemp,f
  1910  0924  0ED7               	swapf	_CurTemp+1,f
  1911  0925  300F               	movlw	15
  1912  0926  05D6               	andwf	_CurTemp,f
  1913  0927  0857               	movf	_CurTemp+1,w
  1914  0928  39F0               	andlw	240
  1915  0929  04D6               	iorwf	_CurTemp,f
  1916  092A  300F               	movlw	15
  1917  092B  05D7               	andwf	_CurTemp+1,f
  1918  092C                     l33388:	
  1919                           ;Main.c: 144: }
  1920                           
  1921                           
  1922                           ;Main.c: 153: }
  1923                           ;Main.c: 154: }
  1924                           ;Main.c: 156: LcdDisplay_CurTemp();
  1925  092C  2E96               	ljmp	l32476
  1926  092D                     __end_of_ReadTData:	
  1927  092D                     __ptext1966:	
  1928 ;; =============== function _InitSystem ends ============
  1929                           
  1930                           
  1931 ;; *************** function _CallSend *****************
  1932 ;; Defined at:
  1933 ;;		line 73 in file "F:\work\WYP\NBIoT\Function.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;		None
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  ret             1   38[BANK0 ] unsigned char 
  1938 ;;  strx            1    0        PTR unsigned char 
  1939 ;;		 -> RAM(128), 
  1940 ;;  i               1    0        unsigned char 
  1941 ;; Return value:  Size  Location     Type
  1942 ;;		None               void
  1943 ;; Registers used:
  1944 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1945 ;; Tracked objects:
  1946 ;;		On entry : 1F/0
  1947 ;;		On exit  : 1F/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1950 ;;      Params:         0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       1       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0
  1953 ;;      Totals:         0       1       0       0       0       0       0       0
  1954 ;;Total ram usage:        1 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    7
  1957 ;; This function calls:
  1958 ;;		_InitGPRS
  1959 ;;		___delay_20ms
  1960 ;;		_ATCommand_SendCmd
  1961 ;;		_InteractServer
  1962 ;; This function is called by:
  1963 ;;		_CallProc
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966  092D                     _CallSend:	
  1967                           
  1968                           ;Function.c: 76: ErrState=NoErr;
  1969                           
  1970                           ; Regs used in _CallSend: [wreg-btemp+0+pclath+cstack]
  1971  092D  01E2               	clrf	_ErrState
  1972                           
  1973                           ;Function.c: 77: InitGPRS();
  1974  092E  2170  3188         	fcall	_InitGPRS
  1975                           
  1976                           ;Function.c: 78: if(ErrState!=NoErr)
  1977  0930  0862               	movf	_ErrState,w
  1978  0931  1903               	btfsc	3,2
  1979  0932  293F               	goto	l33406
  1980                           
  1981                           ;Function.c: 79: {
  1982                           ;Function.c: 80: __delay_20ms(3000);
  1983  0933  30B8               	movlw	184
  1984  0934  00A0               	movwf	?___delay_20ms
  1985  0935  300B               	movlw	11
  1986  0936  00A1               	movwf	?___delay_20ms+1
  1987  0937  22D5  3188         	fcall	___delay_20ms
  1988                           
  1989                           ;Function.c: 81: ErrState=NoErr;
  1990  0939  01E2               	clrf	_ErrState
  1991                           
  1992                           ;Function.c: 82: InitGPRS();
  1993  093A  2170  3188         	fcall	_InitGPRS
  1994                           
  1995                           ;Function.c: 83: if(ErrState!=NoErr)
  1996  093C  0862               	movf	_ErrState,w
  1997  093D  1D03               	skipz
  1998  093E  0008               	return
  1999  093F                     l33406:	
  2000                           
  2001                           ;Function.c: 85: }
  2002                           ;Function.c: 89: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  2003  093F  3066               	movlw	low (STR_1| (0+32768))
  2004  0940  00B1               	movwf	?_ATCommand_SendCmd
  2005  0941  3090               	movlw	high (STR_1| (0+32768))
  2006  0942  00B2               	movwf	?_ATCommand_SendCmd+1
  2007  0943  2263  3188         	fcall	_ATCommand_SendCmd
  2008  0945  3A01               	xorlw	1
  2009  0946  1903               	skipnz
  2010  0947  294B               	goto	l8677
  2011  0948                     l33408:	
  2012                           
  2013                           ;Function.c: 90: {
  2014                           ;Function.c: 91: ErrState=MissAT_NSOCR;
  2015  0948  3023               	movlw	35
  2016  0949  00E2               	movwf	_ErrState
  2017  094A  0008               	return
  2018  094B                     l8677:	
  2019                           
  2020                           ;Function.c: 93: }
  2021                           ;Function.c: 94: ATCommand_RetryTimes=1;
  2022  094B  01E0               	clrf	_ATCommand_RetryTimes
  2023  094C  0AE0               	incf	_ATCommand_RetryTimes,f
  2024                           
  2025                           ;Function.c: 95: ATCommand_WaitACKTimes=300;
  2026  094D  302C               	movlw	44
  2027  094E  00D4               	movwf	_ATCommand_WaitACKTimes
  2028  094F  3001               	movlw	1
  2029  0950  00D5               	movwf	_ATCommand_WaitACKTimes+1
  2030                           
  2031                           ;Function.c: 96: if(ATCommand_SendCmd("AT+NSOCO=1,\"www.wlwdjcy.com\",12129\0")!=ATACK_O
      +                          K)
  2032  0951  3022               	movlw	low (STR_2| (0+32768))
  2033  0952  00B1               	movwf	?_ATCommand_SendCmd
  2034  0953  3090               	movlw	high (STR_2| (0+32768))
  2035  0954  00B2               	movwf	?_ATCommand_SendCmd+1
  2036  0955  2263  3188         	fcall	_ATCommand_SendCmd
  2037  0957  3A01               	xorlw	1
  2038  0958  1D03               	btfss	3,2
  2039  0959  2948               	goto	l33408
  2040                           
  2041                           ;Function.c: 100: }
  2042                           ;Function.c: 102: __delay_20ms(50);
  2043  095A  3032               	movlw	50
  2044  095B  00A0               	movwf	?___delay_20ms
  2045  095C  01A1               	clrf	?___delay_20ms+1
  2046  095D  22D5  3188         	fcall	___delay_20ms
  2047                           
  2048                           ;Function.c: 104: ret=InteractServer();
  2049  095F  2324  3188         	fcall	_InteractServer
  2050  0961  00C6               	movwf	CallSend@ret
  2051                           
  2052                           ;Function.c: 105: ATCommand_SendCmd("AT+NSOCL=1\0");
  2053  0962  30BB               	movlw	low (STR_3| (0+32768))
  2054  0963  00B1               	movwf	?_ATCommand_SendCmd
  2055  0964  3090               	movlw	high (STR_3| (0+32768))
  2056  0965  00B2               	movwf	?_ATCommand_SendCmd+1
  2057  0966  2263  3188         	fcall	_ATCommand_SendCmd
  2058                           
  2059                           ;Function.c: 106: ATCommand_SendCmd("AT+CPSMS=1,,,01000111,00000001\0");
  2060  0968  3046               	movlw	low (STR_4| (0+32768))
  2061  0969  00B1               	movwf	?_ATCommand_SendCmd
  2062  096A  3090               	movlw	high (STR_4| (0+32768))
  2063  096B  00B2               	movwf	?_ATCommand_SendCmd+1
  2064  096C  2263               	fcall	_ATCommand_SendCmd
  2065                           
  2066                           ;Function.c: 107: if(ret!=ATACK_OK)
  2067  096D  0B46               	decfsz	CallSend@ret,w
  2068                           
  2069                           ;Function.c: 108: {
  2070                           ;Function.c: 109: gFlags.bRetry=1;
  2071  096E  1665               	bsf	_gFlags,4
  2072                           
  2073                           ;Function.c: 110: return;
  2074  096F  0008               	return
  2075  0970                     __end_of_CallSend:	
  2076  0970                     __ptext1969:	
  2077 ;; =============== function _InteractServer ends ============
  2078                           
  2079                           
  2080 ;; *************** function _InitGPRS *****************
  2081 ;; Defined at:
  2082 ;;		line 345 in file "F:\work\WYP\NBIoT\Function.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;  strx            2   28[BANK0 ] PTR unsigned char 
  2087 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2088 ;;  retry           1   30[BANK0 ] unsigned char 
  2089 ;;  i               1   27[BANK0 ] unsigned char 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;		None               void
  2092 ;; Registers used:
  2093 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 1F/0
  2096 ;;		On exit  : 1F/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2099 ;;      Params:         0       0       0       0       0       0       0       0
  2100 ;;      Locals:         0       4       0       0       0       0       0       0
  2101 ;;      Temps:          0       2       0       0       0       0       0       0
  2102 ;;      Totals:         0       6       0       0       0       0       0       0
  2103 ;;Total ram usage:        6 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    6
  2106 ;; This function calls:
  2107 ;;		_PowerON
  2108 ;;		_ATCommand_SendCmd
  2109 ;;		___delay_20ms
  2110 ;;		_strstr
  2111 ;;		_atoi
  2112 ;;		_LcdDisplay_CSQ
  2113 ;; This function is called by:
  2114 ;;		_CallSend
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117  0970                     _InitGPRS:	
  2118                           
  2119                           ;Function.c: 348: PowerON();
  2120                           
  2121                           ; Regs used in _InitGPRS: [wreg-status,0+pclath+cstack]
  2122  0970  27F0  3188         	fcall	_PowerON
  2123                           
  2124                           ;Function.c: 349: if(ATCommand_SendCmd("AT\0")!=ATACK_OK)
  2125  0972  303B               	movlw	low (STR_22| (0+32768))
  2126  0973  00B1               	movwf	?_ATCommand_SendCmd
  2127  0974  3091               	movlw	high (STR_22| (0+32768))
  2128  0975  00B2               	movwf	?_ATCommand_SendCmd+1
  2129  0976  2263  3188         	fcall	_ATCommand_SendCmd
  2130  0978  3A01               	xorlw	1
  2131  0979  1903               	skipnz
  2132  097A  297E               	goto	l32980
  2133                           
  2134                           ;Function.c: 350: {
  2135                           ;Function.c: 351: ErrState=MissAT;
  2136  097B  3003               	movlw	3
  2137  097C  00E2               	movwf	_ErrState
  2138  097D  0008               	return
  2139  097E                     l32980:	
  2140                           
  2141                           ;Function.c: 353: }
  2142                           ;Function.c: 355: if(ATCommand_SendCmd("ATE1\0")!=ATACK_OK)
  2143  097E  301A               	movlw	low (STR_23| (0+32768))
  2144  097F  00B1               	movwf	?_ATCommand_SendCmd
  2145  0980  3091               	movlw	high (STR_23| (0+32768))
  2146  0981  00B2               	movwf	?_ATCommand_SendCmd+1
  2147  0982  2263  3188         	fcall	_ATCommand_SendCmd
  2148  0984  3A01               	xorlw	1
  2149  0985  1903               	skipnz
  2150  0986  298A               	goto	l32986
  2151                           
  2152                           ;Function.c: 356: {
  2153                           ;Function.c: 357: ErrState=MissAT_ATE1;
  2154  0987  300C               	movlw	12
  2155  0988  00E2               	movwf	_ErrState
  2156  0989  0008               	return
  2157  098A                     l32986:	
  2158                           
  2159                           ;Function.c: 359: }
  2160                           ;Function.c: 360: retry=10;
  2161  098A  300A               	movlw	10
  2162  098B  00BE               	movwf	InitGPRS@retry
  2163  098C                     l32996:	
  2164                           ;Function.c: 361: while(retry!=0)
  2165                           
  2166  098C  08BE               	movf	InitGPRS@retry,f
  2167  098D  1903               	btfsc	3,2
  2168  098E  299F               	goto	l32998
  2169                           
  2170                           ;Function.c: 362: {
  2171                           ;Function.c: 363: if(ATCommand_SendCmd("AT+CIMI\0")==ATACK_OK)
  2172  098F  3002               	movlw	low (STR_24| (0+32768))
  2173  0990  00B1               	movwf	?_ATCommand_SendCmd
  2174  0991  3091               	movlw	high (STR_24| (0+32768))
  2175  0992  00B2               	movwf	?_ATCommand_SendCmd+1
  2176  0993  2263  3188         	fcall	_ATCommand_SendCmd
  2177  0995  3A01               	xorlw	1
  2178  0996  1903               	btfsc	3,2
  2179  0997  299F               	goto	l32998
  2180                           
  2181                           ;Function.c: 366: }
  2182                           ;Function.c: 367: __delay_20ms(150);
  2183  0998  3096               	movlw	150
  2184  0999  00A0               	movwf	?___delay_20ms
  2185  099A  01A1               	clrf	?___delay_20ms+1
  2186  099B  22D5  3188         	fcall	___delay_20ms
  2187                           
  2188                           ;Function.c: 368: retry--;
  2189  099D  03BE               	decf	InitGPRS@retry,f
  2190  099E  298C               	goto	l32996
  2191  099F                     l32998:	
  2192                           
  2193                           ;Function.c: 369: }
  2194                           ;Function.c: 370: if(retry==0)
  2195  099F  08BE               	movf	InitGPRS@retry,f
  2196  09A0  1D03               	skipz
  2197  09A1  29A5               	goto	l33004
  2198                           
  2199                           ;Function.c: 371: {
  2200                           ;Function.c: 372: ErrState=MissSimCard;
  2201  09A2  3004               	movlw	4
  2202  09A3  00E2               	movwf	_ErrState
  2203  09A4  0008               	return
  2204  09A5                     l33004:	
  2205                           
  2206                           ;Function.c: 374: }
  2207                           ;Function.c: 375: retry=10;
  2208  09A5  300A               	movlw	10
  2209  09A6  00BE               	movwf	InitGPRS@retry
  2210                           
  2211                           ;Function.c: 376: while(retry!=0)
  2212  09A7  29AE               	goto	l33032
  2213  09A8                     l33028:	
  2214                           ;Function.c: 389: break;
  2215                           
  2216                           
  2217                           ;Function.c: 391: else
  2218                           ;Function.c: 392: {
  2219                           ;Function.c: 393: retry--;
  2220  09A8  03BE               	decf	InitGPRS@retry,f
  2221                           
  2222                           ;Function.c: 394: __delay_20ms(150);
  2223  09A9  3096               	movlw	150
  2224  09AA  00A0               	movwf	?___delay_20ms
  2225  09AB  01A1               	clrf	?___delay_20ms+1
  2226  09AC  22D5  3188         	fcall	___delay_20ms
  2227  09AE                     l33032:	
  2228  09AE  08BE               	movf	InitGPRS@retry,f
  2229  09AF  1903               	btfsc	3,2
  2230  09B0  29E8               	goto	l33034
  2231                           
  2232                           ;Function.c: 377: {
  2233                           ;Function.c: 379: if(ATCommand_SendCmd("AT+NCCID\0")==ATACK_OK)
  2234  09B1  30DD               	movlw	low (STR_25| (0+32768))
  2235  09B2  00B1               	movwf	?_ATCommand_SendCmd
  2236  09B3  3090               	movlw	high (STR_25| (0+32768))
  2237  09B4  00B2               	movwf	?_ATCommand_SendCmd+1
  2238  09B5  2263  3188         	fcall	_ATCommand_SendCmd
  2239  09B7  3A01               	xorlw	1
  2240  09B8  1D03               	skipz
  2241  09B9  29AE               	goto	l33032
  2242                           
  2243                           ;Function.c: 380: {
  2244                           ;Function.c: 381: strx=strstr((const char*)ATCommand_RxList,"8986");
  2245  09BA  308C               	movlw	140
  2246  09BB  00AD               	movwf	?_strstr
  2247  09BC  3021               	movlw	33
  2248  09BD  00AE               	movwf	?_strstr+1
  2249  09BE  3036               	movlw	low (STR_26| (0+32768))
  2250  09BF  00AF               	movwf	?_strstr+2
  2251  09C0  3091               	movlw	high (STR_26| (0+32768))
  2252  09C1  00B0               	movwf	?_strstr+3
  2253  09C2  22E9  3188         	fcall	_strstr
  2254  09C4  082E               	movf	?_strstr+1,w
  2255  09C5  00BD               	movwf	InitGPRS@strx+1
  2256  09C6  082D               	movf	?_strstr,w
  2257  09C7  00BC               	movwf	InitGPRS@strx
  2258                           
  2259                           ;Function.c: 382: if(strx!=0)
  2260  09C8  043D               	iorwf	InitGPRS@strx+1,w
  2261  09C9  1903               	skipnz
  2262  09CA  29A8               	goto	l33028
  2263                           
  2264                           ;Function.c: 383: {
  2265                           ;Function.c: 384: for(i=0;i<15;i++)
  2266  09CB  01BB               	clrf	InitGPRS@i
  2267  09CC                     l33018:	
  2268                           
  2269                           ;Function.c: 385: {
  2270                           ;Function.c: 386: ICCID[i]=strx[i+5];
  2271  09CC  083B               	movf	InitGPRS@i,w
  2272  09CD  3EA0               	addlw	_ICCID& (0+255)
  2273  09CE  0086               	movwf	6
  2274  09CF  0187               	clrf	7
  2275  09D0  083B               	movf	InitGPRS@i,w
  2276  09D1  073C               	addwf	InitGPRS@strx,w
  2277  09D2  00B9               	movwf	??_InitGPRS
  2278  09D3  083D               	movf	InitGPRS@strx+1,w
  2279  09D4  1803               	skipnc
  2280  09D5  0A89               	incf	9,f
  2281  09D6  1BBB               	btfsc	InitGPRS@i,7
  2282  09D7  0389               	decf	9,f
  2283  09D8  00BA               	movwf	??_InitGPRS+1
  2284  09D9  0839               	movf	??_InitGPRS,w
  2285  09DA  3E05               	addlw	5
  2286  09DB  0084               	movwf	4
  2287  09DC  3000               	movlw	0
  2288  09DD  3D3A               	addwfc	??_InitGPRS+1,w
  2289  09DE  0085               	movwf	5
  2290  09DF  0800               	movf	0,w
  2291  09E0  0081               	movwf	1
  2292  09E1  0ABB               	incf	InitGPRS@i,f
  2293  09E2  300F               	movlw	15
  2294  09E3  023B               	subwf	InitGPRS@i,w
  2295  09E4  1C03               	skipc
  2296  09E5  29CC               	goto	l33018
  2297                           
  2298                           ;Function.c: 387: }
  2299                           ;Function.c: 388: ICCID[15]='\0';
  2300  09E6  0021               	movlb	1	; select bank1
  2301  09E7  01AF               	clrf	(_ICCID^(0+128)+15)
  2302  09E8                     l33034:	
  2303                           
  2304                           ;Function.c: 395: }
  2305                           ;Function.c: 396: }
  2306                           ;Function.c: 398: }
  2307                           ;Function.c: 399: retry=100;
  2308  09E8  3064               	movlw	100
  2309  09E9  0020               	movlb	0	; select bank0
  2310  09EA  00BE               	movwf	InitGPRS@retry
  2311                           
  2312                           ;Function.c: 400: CSQ=0xff;
  2313  09EB  30FF               	movlw	255
  2314  09EC  00E1               	movwf	_CSQ
  2315  09ED                     l33062:	
  2316                           ;Function.c: 401: while(retry!=0)
  2317                           
  2318  09ED  08BE               	movf	InitGPRS@retry,f
  2319  09EE  1903               	btfsc	3,2
  2320  09EF  2A2A               	goto	l33064
  2321                           
  2322                           ;Function.c: 402: {
  2323                           ;Function.c: 403: if(ATCommand_SendCmd("AT+CSQ\0")==ATACK_OK)
  2324  09F0  300B               	movlw	low (STR_27| (0+32768))
  2325  09F1  00B1               	movwf	?_ATCommand_SendCmd
  2326  09F2  3091               	movlw	high (STR_27| (0+32768))
  2327  09F3  00B2               	movwf	?_ATCommand_SendCmd+1
  2328  09F4  2263  3188         	fcall	_ATCommand_SendCmd
  2329  09F6  3A01               	xorlw	1
  2330  09F7  1D03               	skipz
  2331  09F8  29ED               	goto	l33062
  2332                           
  2333                           ;Function.c: 404: {
  2334                           ;Function.c: 405: strx=strstr((const char*)ATCommand_RxList,"+CSQ:");
  2335  09F9  308C               	movlw	140
  2336  09FA  00AD               	movwf	?_strstr
  2337  09FB  3021               	movlw	33
  2338  09FC  00AE               	movwf	?_strstr+1
  2339  09FD  3020               	movlw	low (STR_28| (0+32768))
  2340  09FE  00AF               	movwf	?_strstr+2
  2341  09FF  3091               	movlw	high (STR_28| (0+32768))
  2342  0A00  00B0               	movwf	?_strstr+3
  2343  0A01  22E9  3188         	fcall	_strstr
  2344  0A03  082E               	movf	?_strstr+1,w
  2345  0A04  00BD               	movwf	InitGPRS@strx+1
  2346  0A05  082D               	movf	?_strstr,w
  2347  0A06  00BC               	movwf	InitGPRS@strx
  2348                           
  2349                           ;Function.c: 406: if(strx!=0)
  2350  0A07  043D               	iorwf	InitGPRS@strx+1,w
  2351  0A08  1903               	skipnz
  2352  0A09  2A23               	goto	l33054
  2353                           
  2354                           ;Function.c: 407: {
  2355                           ;Function.c: 408: CSQ=atoi(strx+5);
  2356  0A0A  083C               	movf	InitGPRS@strx,w
  2357  0A0B  3E05               	addlw	5
  2358  0A0C  00B9               	movwf	??_InitGPRS
  2359  0A0D  3000               	movlw	0
  2360  0A0E  3D3D               	addwfc	InitGPRS@strx+1,w
  2361  0A0F  00BA               	movwf	??_InitGPRS+1
  2362  0A10  0839               	movf	??_InitGPRS,w
  2363  0A11  00A6               	movwf	?_atoi
  2364  0A12  083A               	movf	??_InitGPRS+1,w
  2365  0A13  00A7               	movwf	?_atoi+1
  2366  0A14  3185  2598  3188   	fcall	_atoi
  2367  0A17  0826               	movf	?_atoi,w
  2368  0A18  00E1               	movwf	_CSQ
  2369                           
  2370                           ;Function.c: 410: LcdDisplay_CSQ();
  2371  0A19  2788  3188         	fcall	_LcdDisplay_CSQ
  2372                           
  2373                           ;Function.c: 412: if(CSQ!=0 && CSQ!=99)
  2374  0A1B  0020               	movlb	0	; select bank0
  2375  0A1C  0861               	movf	_CSQ,w
  2376  0A1D  1903               	btfsc	3,2
  2377  0A1E  2A23               	goto	l33054
  2378  0A1F  0861               	movf	_CSQ,w
  2379  0A20  3A63               	xorlw	99
  2380  0A21  1D03               	btfss	3,2
  2381  0A22  2A2A               	goto	l33064
  2382  0A23                     l33054:	
  2383                           
  2384                           ;Function.c: 414: else
  2385                           ;Function.c: 415: {
  2386                           ;Function.c: 416: retry--;
  2387  0A23  03BE               	decf	InitGPRS@retry,f
  2388                           
  2389                           ;Function.c: 417: __delay_20ms(150);
  2390  0A24  3096               	movlw	150
  2391  0A25  00A0               	movwf	?___delay_20ms
  2392  0A26  01A1               	clrf	?___delay_20ms+1
  2393  0A27  22D5  3188         	fcall	___delay_20ms
  2394  0A29  29ED               	goto	l33062
  2395  0A2A                     l33064:	
  2396                           
  2397                           ;Function.c: 424: }
  2398                           ;Function.c: 425: }
  2399                           ;Function.c: 426: }
  2400                           ;Function.c: 427: if(retry==0 && CSQ!=0xff)
  2401  0A2A  08BE               	movf	InitGPRS@retry,f
  2402  0A2B  1D03               	skipz
  2403  0A2C  2A34               	goto	l33072
  2404  0A2D  0861               	movf	_CSQ,w
  2405  0A2E  3AFF               	xorlw	255
  2406  0A2F  1903               	skipnz
  2407  0A30  2A34               	goto	l33072
  2408                           
  2409                           ;Function.c: 428: {
  2410                           ;Function.c: 429: ErrState=MissAT_CSQ;
  2411  0A31  300F               	movlw	15
  2412  0A32  00E2               	movwf	_ErrState
  2413  0A33  0008               	return
  2414  0A34                     l33072:	
  2415                           
  2416                           ;Function.c: 431: }
  2417                           ;Function.c: 432: retry=20;
  2418  0A34  3014               	movlw	20
  2419  0A35  00BE               	movwf	InitGPRS@retry
  2420  0A36                     l33090:	
  2421                           ;Function.c: 433: while(retry!=0)
  2422                           
  2423  0A36  08BE               	movf	InitGPRS@retry,f
  2424  0A37  1903               	btfsc	3,2
  2425  0A38  2A5D               	goto	l33092
  2426                           
  2427                           ;Function.c: 434: {
  2428                           ;Function.c: 435: if(ATCommand_SendCmd("AT+CEREG?\0")!=ATACK_OK)
  2429  0A39  30C7               	movlw	low (STR_29| (0+32768))
  2430  0A3A  00B1               	movwf	?_ATCommand_SendCmd
  2431  0A3B  3090               	movlw	high (STR_29| (0+32768))
  2432  0A3C  00B2               	movwf	?_ATCommand_SendCmd+1
  2433  0A3D  2263  3188         	fcall	_ATCommand_SendCmd
  2434  0A3F  3A01               	xorlw	1
  2435  0A40  1903               	skipnz
  2436  0A41  2A45               	goto	l33080
  2437                           
  2438                           ;Function.c: 436: {
  2439                           ;Function.c: 437: ErrState=MissAT_COPS;
  2440  0A42  3010               	movlw	16
  2441  0A43  00E2               	movwf	_ErrState
  2442  0A44  0008               	return
  2443  0A45                     l33080:	
  2444                           
  2445                           ;Function.c: 439: }
  2446                           ;Function.c: 440: strx=strstr((const char*)ATCommand_RxList,"+CEREG:0,1");
  2447  0A45  308C               	movlw	140
  2448  0A46  00AD               	movwf	?_strstr
  2449  0A47  3021               	movlw	33
  2450  0A48  00AE               	movwf	?_strstr+1
  2451  0A49  30D2               	movlw	low (STR_30| (0+32768))
  2452  0A4A  00AF               	movwf	?_strstr+2
  2453  0A4B  3090               	movlw	high (STR_30| (0+32768))
  2454  0A4C  00B0               	movwf	?_strstr+3
  2455  0A4D  22E9  3188         	fcall	_strstr
  2456  0A4F  082E               	movf	?_strstr+1,w
  2457  0A50  00BD               	movwf	InitGPRS@strx+1
  2458  0A51  082D               	movf	?_strstr,w
  2459  0A52  00BC               	movwf	InitGPRS@strx
  2460                           
  2461                           ;Function.c: 441: if(strx!=0)
  2462  0A53  043D               	iorwf	InitGPRS@strx+1,w
  2463  0A54  1D03               	btfss	3,2
  2464  0A55  2A5D               	goto	l33092
  2465                           
  2466                           ;Function.c: 444: }
  2467                           ;Function.c: 445: __delay_20ms(150);
  2468  0A56  3096               	movlw	150
  2469  0A57  00A0               	movwf	?___delay_20ms
  2470  0A58  01A1               	clrf	?___delay_20ms+1
  2471  0A59  22D5  3188         	fcall	___delay_20ms
  2472                           
  2473                           ;Function.c: 446: retry--;
  2474  0A5B  03BE               	decf	InitGPRS@retry,f
  2475  0A5C  2A36               	goto	l33090
  2476  0A5D                     l33092:	
  2477                           
  2478                           ;Function.c: 447: }
  2479                           ;Function.c: 448: if(retry==0)
  2480  0A5D  08BE               	movf	InitGPRS@retry,f
  2481  0A5E  1D03               	skipz
  2482  0A5F  0008               	return
  2483                           
  2484                           ;Function.c: 449: {
  2485                           ;Function.c: 450: ErrState=MissNet;
  2486  0A60  3005               	movlw	5
  2487  0A61  00E2               	movwf	_ErrState
  2488  0A62  0008               	return
  2489  0A63                     __end_of_InitGPRS:	
  2490  0A63                     __ptext1975:	
  2491 ;; =============== function _Uart1_PutString_Hex ends ============
  2492                           
  2493                           
  2494 ;; *************** function _ATCommand_SendCmd *****************
  2495 ;; Defined at:
  2496 ;;		line 71 in file "F:\work\WYP\NBIoT\ATCommand.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  cmd             2   17[BANK0 ] PTR const unsigned char 
  2499 ;;		 -> STR_29(11), STR_27(8), STR_25(10), STR_24(9), 
  2500 ;;		 -> STR_23(6), STR_22(4), STR_4(32), STR_3(12), 
  2501 ;;		 -> STR_2(36), STR_1(23), 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  strx            2   22[BANK0 ] PTR unsigned char 
  2504 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2505 ;;  res             1   24[BANK0 ] unsigned char 
  2506 ;;  retry           1   21[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      unsigned char 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 1F/0
  2513 ;;		On exit  : 1F/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2516 ;;      Params:         0       2       0       0       0       0       0       0
  2517 ;;      Locals:         0       4       0       0       0       0       0       0
  2518 ;;      Temps:          0       2       0       0       0       0       0       0
  2519 ;;      Totals:         0       8       0       0       0       0       0       0
  2520 ;;Total ram usage:        8 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    5
  2523 ;; This function calls:
  2524 ;;		_Uart1_PutString
  2525 ;;		_strstr
  2526 ;;		___delay_20ms
  2527 ;;		_strcpy
  2528 ;; This function is called by:
  2529 ;;		_CallSend
  2530 ;;		_InitGPRS
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533  0A63                     _ATCommand_SendCmd:	
  2534                           
  2535                           ;ATCommand.c: 73: unsigned char retry;
  2536                           ;ATCommand.c: 74: char *strx=0;
  2537                           
  2538                           ; Regs used in _ATCommand_SendCmd: [wreg-status,0+pclath+cstack]
  2539  0A63  01B6               	clrf	ATCommand_SendCmd@strx
  2540  0A64  01B7               	clrf	ATCommand_SendCmd@strx+1
  2541                           
  2542                           ;ATCommand.c: 76: retry=ATCommand_RetryTimes;
  2543  0A65  0860               	movf	_ATCommand_RetryTimes,w
  2544  0A66  00B5               	movwf	ATCommand_SendCmd@retry
  2545                           
  2546                           ;ATCommand.c: 77: res=ATACK_Null;
  2547  0A67  01B8               	clrf	ATCommand_SendCmd@res
  2548  0A68                     l32836:	
  2549                           ;ATCommand.c: 78: while(retry!=0)
  2550                           
  2551  0A68  08B5               	movf	ATCommand_SendCmd@retry,f
  2552  0A69  1903               	btfsc	3,2
  2553  0A6A  2AC0               	goto	l32838
  2554                           
  2555                           ;ATCommand.c: 79: {
  2556                           ;ATCommand.c: 80: Uart1_PutString(cmd);
  2557  0A6B  0832               	movf	ATCommand_SendCmd@cmd+1,w
  2558  0A6C  00A2               	movwf	?_Uart1_PutString+1
  2559  0A6D  0831               	movf	ATCommand_SendCmd@cmd,w
  2560  0A6E  00A1               	movwf	?_Uart1_PutString
  2561  0A6F  25DC  3188         	fcall	_Uart1_PutString
  2562                           
  2563                           ;ATCommand.c: 81: Uart1_PutString("\r\0");
  2564  0A71  3042               	movlw	low (STR_21| (0+32768))
  2565  0A72  00A1               	movwf	?_Uart1_PutString
  2566  0A73  3091               	movlw	high (STR_21| (0+32768))
  2567  0A74  00A2               	movwf	?_Uart1_PutString+1
  2568  0A75  25DC               	fcall	_Uart1_PutString
  2569                           
  2570                           ;ATCommand.c: 82: ATCommand_Flags.bRx=0;
  2571  0A76  10FA               	bcf	_ATCommand_Flags,1
  2572                           
  2573                           ;ATCommand.c: 83: ATCommand_Flags.bChar=0;
  2574  0A77  107A               	bcf	_ATCommand_Flags,0
  2575                           
  2576                           ;ATCommand.c: 84: ATCommand_WaitACKTick=SystemTick;
  2577  0A78  085D               	movf	_SystemTick+1,w
  2578  0A79  00D3               	movwf	_ATCommand_WaitACKTick+1
  2579  0A7A  085C               	movf	_SystemTick,w
  2580  0A7B  00D2               	movwf	_ATCommand_WaitACKTick
  2581                           
  2582                           ;ATCommand.c: 85: ATCommand_RxCount=0;
  2583  0A7C  01FB               	clrf	_ATCommand_RxCount
  2584                           
  2585                           ;ATCommand.c: 86: ATCommand_Flags.bWaitData=1;
  2586  0A7D  157A               	bsf	_ATCommand_Flags,2
  2587                           
  2588                           ;ATCommand.c: 87: ATCommand_RxList[ATCommand_RxCount]='\0';
  2589  0A7E  3185  258F  3188   	fcall	PL2	;call to abstracted procedure
  2590  0A81                     l15038:	
  2591                           ;ATCommand.c: 88: while(1)
  2592                           
  2593                           
  2594                           ;ATCommand.c: 89: {
  2595                           ;ATCommand.c: 90: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  2596  0A81  308C               	movlw	140
  2597  0A82  00AD               	movwf	?_strstr
  2598  0A83  3021               	movlw	33
  2599  0A84  00AE               	movwf	?_strstr+1
  2600  0A85  30C4               	movlw	_ATCommand_OkString& (0+255)
  2601  0A86  00AF               	movwf	?_strstr+2
  2602  0A87  01B0               	clrf	?_strstr+3
  2603  0A88  22E9  3188         	fcall	_strstr
  2604  0A8A  082E               	movf	?_strstr+1,w
  2605  0A8B  00B7               	movwf	ATCommand_SendCmd@strx+1
  2606  0A8C  082D               	movf	?_strstr,w
  2607  0A8D  00B6               	movwf	ATCommand_SendCmd@strx
  2608                           
  2609                           ;ATCommand.c: 91: if(strx!=0)
  2610  0A8E  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2611  0A8F  1903               	skipnz
  2612  0A90  2A94               	goto	l32816
  2613                           
  2614                           ;ATCommand.c: 92: {
  2615                           ;ATCommand.c: 93: res=ATACK_OK;
  2616  0A91  01B8               	clrf	ATCommand_SendCmd@res
  2617  0A92  0AB8               	incf	ATCommand_SendCmd@res,f
  2618  0A93  2AA6               	goto	l32822
  2619  0A94                     l32816:	
  2620                           ;ATCommand.c: 95: break;
  2621                           
  2622                           ;ATCommand.c: 94: ATCommand_Flags.bRx=1;
  2623                           
  2624                           
  2625                           ;ATCommand.c: 97: else
  2626                           ;ATCommand.c: 98: {
  2627                           ;ATCommand.c: 99: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2628  0A94  308C               	movlw	140
  2629  0A95  00AD               	movwf	?_strstr
  2630  0A96  3021               	movlw	33
  2631  0A97  00AE               	movwf	?_strstr+1
  2632  0A98  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2633  0A99  00AF               	movwf	?_strstr+2
  2634  0A9A  01B0               	clrf	?_strstr+3
  2635  0A9B  22E9  3188         	fcall	_strstr
  2636  0A9D  082E               	movf	?_strstr+1,w
  2637  0A9E  00B7               	movwf	ATCommand_SendCmd@strx+1
  2638  0A9F  082D               	movf	?_strstr,w
  2639  0AA0  00B6               	movwf	ATCommand_SendCmd@strx
  2640                           
  2641                           ;ATCommand.c: 100: if(strx!=0)
  2642  0AA1  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2643  0AA2  1903               	skipnz
  2644  0AA3  2AA8               	goto	l32824
  2645                           
  2646                           ;ATCommand.c: 101: {
  2647                           ;ATCommand.c: 102: res=ATACK_Err;
  2648  0AA4  3002               	movlw	2
  2649  0AA5  00B8               	movwf	ATCommand_SendCmd@res
  2650  0AA6                     l32822:	
  2651                           
  2652                           ;ATCommand.c: 103: ATCommand_Flags.bRx=1;
  2653  0AA6  14FA               	bsf	_ATCommand_Flags,1
  2654                           
  2655                           ;ATCommand.c: 104: break;
  2656  0AA7  2AB5               	goto	l15040
  2657  0AA8                     l32824:	
  2658                           
  2659                           ;ATCommand.c: 105: }
  2660                           ;ATCommand.c: 106: }
  2661                           ;ATCommand.c: 107: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2662  0AA8  0852               	movf	_ATCommand_WaitACKTick,w
  2663  0AA9  025C               	subwf	_SystemTick,w
  2664  0AAA  00B3               	movwf	??_ATCommand_SendCmd
  2665  0AAB  0853               	movf	_ATCommand_WaitACKTick+1,w
  2666  0AAC  3B5D               	subwfb	_SystemTick+1,w
  2667  0AAD  00B4               	movwf	??_ATCommand_SendCmd+1
  2668  0AAE  0255               	subwf	_ATCommand_WaitACKTimes+1,w
  2669  0AAF  1D03               	skipz
  2670  0AB0  2AB3               	goto	u7875
  2671  0AB1  0833               	movf	??_ATCommand_SendCmd,w
  2672  0AB2  0254               	subwf	_ATCommand_WaitACKTimes,w
  2673  0AB3                     u7875:	
  2674  0AB3  1803               	skipnc
  2675  0AB4  2A81               	goto	l15038
  2676  0AB5                     l15040:	
  2677                           
  2678                           ;ATCommand.c: 109: }
  2679                           ;ATCommand.c: 110: ATCommand_Flags.bWaitData=0;
  2680  0AB5  117A               	bcf	_ATCommand_Flags,2
  2681                           
  2682                           ;ATCommand.c: 111: if(res==ATACK_OK)
  2683  0AB6  0B38               	decfsz	ATCommand_SendCmd@res,w
  2684  0AB7  2AB9               	goto	l32832
  2685  0AB8  2AC0               	goto	l32838
  2686  0AB9                     l32832:	
  2687                           
  2688                           ;ATCommand.c: 113: __delay_20ms(100);;
  2689  0AB9  3064               	movlw	100
  2690  0ABA  00A0               	movwf	?___delay_20ms
  2691  0ABB  01A1               	clrf	?___delay_20ms+1
  2692  0ABC  22D5  3188         	fcall	___delay_20ms
  2693                           
  2694                           ;ATCommand.c: 114: retry--;
  2695  0ABE  03B5               	decf	ATCommand_SendCmd@retry,f
  2696  0ABF  2A68               	goto	l32836
  2697  0AC0                     l32838:	
  2698                           
  2699                           ;ATCommand.c: 115: }
  2700                           ;ATCommand.c: 116: strcpy(ATCommand_OkString,"OK");
  2701  0AC0  303F               	movlw	low (STR_31| (0+32768))
  2702  0AC1  00A0               	movwf	?_strcpy
  2703  0AC2  3091               	movlw	high (STR_31| (0+32768))
  2704  0AC3  00A1               	movwf	?_strcpy+1
  2705  0AC4  30C4               	movlw	_ATCommand_OkString& (0+255)
  2706  0AC5  25F9  3188         	fcall	_strcpy
  2707                           
  2708                           ;ATCommand.c: 117: strcpy(ATCommand_ErrString,"ERROR");
  2709  0AC7  3026               	movlw	low (STR_20| (0+32768))
  2710  0AC8  00A0               	movwf	?_strcpy
  2711  0AC9  3091               	movlw	high (STR_20| (0+32768))
  2712  0ACA  00A1               	movwf	?_strcpy+1
  2713  0ACB  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2714  0ACC  25F9               	fcall	_strcpy
  2715                           
  2716                           ;ATCommand.c: 118: ATCommand_Clear='\0';
  2717  0ACD  01F9               	clrf	_ATCommand_Clear
  2718                           
  2719                           ;ATCommand.c: 120: ATCommand_RetryTimes=3;
  2720  0ACE  3003               	movlw	3
  2721  0ACF  00E0               	movwf	_ATCommand_RetryTimes
  2722                           
  2723                           ;ATCommand.c: 121: ATCommand_WaitACKTimes=50;
  2724  0AD0  3032               	movlw	50
  2725  0AD1  00D4               	movwf	_ATCommand_WaitACKTimes
  2726  0AD2  01D5               	clrf	_ATCommand_WaitACKTimes+1
  2727                           
  2728                           ;ATCommand.c: 122: return res;
  2729  0AD3  0838               	movf	ATCommand_SendCmd@res,w
  2730  0AD4  0008               	return
  2731  0AD5                     __end_of_ATCommand_SendCmd:	
  2732  0AD5                     __ptext1993:	
  2733 ;; =============== function _Uart1_PutString ends ============
  2734                           
  2735                           
  2736 ;; *************** function ___delay_20ms *****************
  2737 ;; Defined at:
  2738 ;;		line 8 in file "F:\work\WYP\NBIoT\afx.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  x               2    0[BANK0 ] unsigned int 
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;		None
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg
  2747 ;; Tracked objects:
  2748 ;;		On entry : 1F/0
  2749 ;;		On exit  : 1F/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2752 ;;      Params:         0       2       0       0       0       0       0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0
  2754 ;;      Temps:          0       2       0       0       0       0       0       0
  2755 ;;      Totals:         0       4       0       0       0       0       0       0
  2756 ;;Total ram usage:        4 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    3
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_InitSystem
  2763 ;;		_main
  2764 ;;		_ReadTData
  2765 ;;		_PowerON
  2766 ;;		_CallProc
  2767 ;;		_CallSend
  2768 ;;		_InteractServer
  2769 ;;		_InitGPRS
  2770 ;;		_TestProc
  2771 ;;		_ATCommand_SendCmd
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774  0AD5                     ___delay_20ms:	
  2775  0AD5                     l12896:	
  2776                           ;afx.c: 9: while(x--)
  2777                           
  2778                           ; Regs used in ___delay_20ms: [wreg]
  2779                           
  2780  0AD5  3001               	movlw	1
  2781  0AD6  0020               	movlb	0	; select bank0
  2782  0AD7  02A0               	subwf	___delay_20ms@x,f
  2783  0AD8  3000               	movlw	0
  2784  0AD9  3BA1               	subwfb	___delay_20ms@x+1,f
  2785  0ADA  0A20               	incf	___delay_20ms@x,w
  2786  0ADB  1903               	skipnz
  2787  0ADC  0A21               	incf	___delay_20ms@x+1,w
  2788  0ADD  1903               	btfsc	3,2
  2789  0ADE  0008               	return
  2790                           
  2791                           ;afx.c: 10: {
  2792                           ;afx.c: 11: _delay((unsigned long)((20)*(4000000/4000.0)));
  2793  0ADF  301A               	movlw	26
  2794  0AE0  00A3               	movwf	??___delay_20ms+1
  2795  0AE1  30F8               	movlw	248
  2796  0AE2  00A2               	movwf	??___delay_20ms
  2797  0AE3                     u9007:	
  2798  0AE3  0BA2               	decfsz	??___delay_20ms,f
  2799  0AE4  2AE3               	goto	u9007
  2800  0AE5  0BA3               	decfsz	??___delay_20ms+1,f
  2801  0AE6  2AE3               	goto	u9007
  2802  0AE7  0064               	clrwdt
  2803  0AE8  2AD5               	goto	l12896
  2804  0AE9                     __end_of___delay_20ms:	
  2805  0AE9                     __ptext1990:	
  2806 ;; =============== function _atoi ends ============
  2807                           
  2808                           
  2809 ;; *************** function _strstr *****************
  2810 ;; Defined at:
  2811 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strstr.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  s1              2   13[BANK0 ] PTR const unsigned char 
  2814 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2815 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
  2816 ;;		 -> STR_30(11), STR_28(6), STR_26(5), ATCommand_ErrString(15), 
  2817 ;;		 -> ATCommand_OkString(15), 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2    wreg      PTR unsigned char 
  2822 ;; Registers used:
  2823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2824 ;; Tracked objects:
  2825 ;;		On entry : 1F/0
  2826 ;;		On exit  : 1F/0
  2827 ;;		Unchanged: FFFE0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2829 ;;      Params:         0       4       0       0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0
  2832 ;;      Totals:         0       4       0       0       0       0       0       0
  2833 ;;Total ram usage:        4 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    4
  2836 ;; This function calls:
  2837 ;;		_strlen
  2838 ;;		_strncmp
  2839 ;;		_strchr
  2840 ;; This function is called by:
  2841 ;;		_InitGPRS
  2842 ;;		_ATCommand_SendCmd
  2843 ;;		_ATCommand_WaitData
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846  0AE9                     _strstr:	
  2847                           
  2848                           ; Regs used in _strstr: [wreg-status,0+pclath+cstack]
  2849  0AE9  2B16               	goto	l32602
  2850  0AEA                     l32596:	
  2851  0AEA  082E               	movf	strstr@s1+1,w
  2852  0AEB  00A7               	movwf	?_strncmp+1
  2853  0AEC  082D               	movf	strstr@s1,w
  2854  0AED  00A6               	movwf	?_strncmp
  2855  0AEE  0830               	movf	strstr@s2+1,w
  2856  0AEF  00A9               	movwf	?_strncmp+3
  2857  0AF0  082F               	movf	strstr@s2,w
  2858  0AF1  00A8               	movwf	?_strncmp+2
  2859  0AF2  0830               	movf	strstr@s2+1,w
  2860  0AF3  00A1               	movwf	?_strlen+1
  2861  0AF4  082F               	movf	strstr@s2,w
  2862  0AF5  00A0               	movwf	?_strlen
  2863  0AF6  2701  3188         	fcall	_strlen
  2864  0AF8  0821               	movf	?_strlen+1,w
  2865  0AF9  00AB               	movwf	?_strncmp+5
  2866  0AFA  0820               	movf	?_strlen,w
  2867  0AFB  00AA               	movwf	?_strncmp+4
  2868  0AFC  2720  3188         	fcall	_strncmp
  2869  0AFE  0827               	movf	?_strncmp+1,w
  2870  0AFF  0426               	iorwf	?_strncmp,w
  2871  0B00  1903               	btfsc	3,2
  2872  0B01  0008               	return
  2873  0B02  082E               	movf	strstr@s1+1,w
  2874  0B03  00A1               	movwf	?_strchr+1
  2875  0B04  082D               	movf	strstr@s1,w
  2876  0B05  00A0               	movwf	?_strchr
  2877  0B06  0AA0               	incf	?_strchr,f
  2878  0B07  1903               	skipnz
  2879  0B08  0AA1               	incf	?_strchr+1,f
  2880  0B09  082F               	movf	strstr@s2,w
  2881  0B0A  0084               	movwf	4
  2882  0B0B  0830               	movf	strstr@s2+1,w
  2883  0B0C  0085               	movwf	5
  2884  0B0D  0800               	movf	0,w	;code access
  2885  0B0E  00A2               	movwf	?_strchr+2
  2886  0B0F  01A3               	clrf	?_strchr+3
  2887  0B10  2758  3188         	fcall	_strchr
  2888  0B12  0821               	movf	?_strchr+1,w
  2889  0B13  00AE               	movwf	strstr@s1+1
  2890  0B14  0820               	movf	?_strchr,w
  2891  0B15  00AD               	movwf	strstr@s1
  2892  0B16                     l32602:	
  2893  0B16  082E               	movf	strstr@s1+1,w
  2894  0B17  042D               	iorwf	strstr@s1,w
  2895  0B18  1903               	skipnz
  2896  0B19  2B21               	goto	l32606
  2897  0B1A  082D               	movf	strstr@s1,w
  2898  0B1B  0086               	movwf	6
  2899  0B1C  082E               	movf	strstr@s1+1,w
  2900  0B1D  0087               	movwf	7
  2901  0B1E  0881               	movf	1,f
  2902  0B1F  1D03               	skipz
  2903  0B20  2AEA               	goto	l32596
  2904  0B21                     l32606:	
  2905  0B21  01AD               	clrf	?_strstr
  2906  0B22  01AE               	clrf	?_strstr+1
  2907  0B23  0008               	return
  2908  0B24                     __end_of_strstr:	
  2909  0B24                     __ptext1968:	
  2910 ;; =============== function _ReadTData ends ============
  2911                           
  2912                           
  2913 ;; *************** function _InteractServer *****************
  2914 ;; Defined at:
  2915 ;;		line 114 in file "F:\work\WYP\NBIoT\Function.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  j               2   28[BANK0 ] int 
  2920 ;;  i               2   26[BANK0 ] int 
  2921 ;;  i               2   24[BANK0 ] int 
  2922 ;;  t               2   32[BANK0 ] struct .
  2923 ;;  txLen           2   30[BANK0 ] unsigned int 
  2924 ;;  i               1   37[BANK0 ] unsigned char 
  2925 ;;  k               1   36[BANK0 ] unsigned char 
  2926 ;;  j               1   35[BANK0 ] unsigned char 
  2927 ;;  addr            1   34[BANK0 ] unsigned char 
  2928 ;;  res             1   23[BANK0 ] unsigned char 
  2929 ;;  retry           1   22[BANK0 ] unsigned char 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;                  1    wreg      unsigned char 
  2932 ;; Registers used:
  2933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 1F/0
  2936 ;;		On exit  : 1F/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2939 ;;      Params:         0       0       0       0       0       0       0       0
  2940 ;;      Locals:         0      16       0       0       0       0       0       0
  2941 ;;      Temps:          0       0       0       0       0       0       0       0
  2942 ;;      Totals:         0      16       0       0       0       0       0       0
  2943 ;;Total ram usage:       16 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    6
  2946 ;; This function calls:
  2947 ;;		_Uart1_PutString
  2948 ;;		_Uart1_PutString_Hex
  2949 ;;		_Uart1_PutHex
  2950 ;;		_MakeTxTemperature
  2951 ;;		___lwdiv
  2952 ;;		_Uart1_PutChar
  2953 ;;		___lwmod
  2954 ;;		___bmul
  2955 ;;		_eeprom_read
  2956 ;;		_strcpy
  2957 ;;		_ATCommand_WaitData
  2958 ;;		___delay_20ms
  2959 ;; This function is called by:
  2960 ;;		_CallSend
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963  0B24                     _InteractServer:	
  2964                           
  2965                           ;Function.c: 116: unsigned char retry,i,j,k,addr;
  2966                           ;Function.c: 117: uint t;
  2967                           ;Function.c: 118: unsigned int txLen;
  2968                           ;Function.c: 119: retry=1;
  2969                           
  2970                           ; Regs used in _InteractServer: [wreg-btemp+0+pclath+cstack]
  2971  0B24  01B6               	clrf	InteractServer@retry
  2972  0B25  0AB6               	incf	InteractServer@retry,f
  2973                           
  2974                           ;Function.c: 120: res=ATACK_Null;
  2975  0B26  01B7               	clrf	InteractServer@res
  2976  0B27                     l33350:	
  2977                           ;Function.c: 121: while(retry!=0)
  2978                           
  2979  0B27  08B6               	movf	InteractServer@retry,f
  2980  0B28  1903               	btfsc	3,2
  2981  0B29  2D4B               	goto	l33352
  2982                           
  2983                           ;Function.c: 122: {
  2984                           ;Function.c: 123: if(gFlags.bFirst)
  2985  0B2A  1D65               	btfss	_gFlags,2
  2986  0B2B  2B6E               	goto	l8684
  2987                           
  2988                           ;Function.c: 124: {
  2989                           ;Function.c: 125: Uart1_PutString("AT+NSOSD=1,32,\0");
  2990  0B2C  308E               	movlw	low (STR_5| (0+32768))
  2991  0B2D  00A1               	movwf	?_Uart1_PutString
  2992  0B2E  3090               	movlw	high (STR_5| (0+32768))
  2993  0B2F  00A2               	movwf	?_Uart1_PutString+1
  2994  0B30  25DC  3188         	fcall	_Uart1_PutString
  2995                           
  2996                           ;Function.c: 126: Uart1_PutString_Hex("@#pt#1#\0");
  2997  0B32  30E7               	movlw	low (STR_6| (0+32768))
  2998  0B33  00A3               	movwf	?_Uart1_PutString_Hex
  2999  0B34  3090               	movlw	high (STR_6| (0+32768))
  3000  0B35  00A4               	movwf	?_Uart1_PutString_Hex+1
  3001  0B36  256C  3188         	fcall	_Uart1_PutString_Hex
  3002                           
  3003                           ;Function.c: 127: Uart1_PutString_Hex(ICCID);
  3004  0B38  30A0               	movlw	_ICCID& (0+255)
  3005  0B39  00A3               	movwf	?_Uart1_PutString_Hex
  3006  0B3A  01A4               	clrf	?_Uart1_PutString_Hex+1
  3007  0B3B  256C  3188         	fcall	_Uart1_PutString_Hex
  3008                           
  3009                           ;Function.c: 128: Uart1_PutHex('#');
  3010  0B3D  3023               	movlw	35
  3011  0B3E  254D  3188         	fcall	_Uart1_PutHex
  3012                           
  3013                           ;Function.c: 129: if(RomParams.bWinter==0)
  3014  0B40  0020               	movlb	0	; select bank0
  3015  0B41  08E7               	movf	_RomParams+1,f
  3016  0B42  1D03               	skipz
  3017  0B43  2B48               	goto	l33110
  3018                           
  3019                           ;Function.c: 130: {
  3020                           ;Function.c: 131: Uart1_PutString_Hex("60#\0");
  3021  0B44  3031               	movlw	low (STR_7| (0+32768))
  3022  0B45  00A3               	movwf	?_Uart1_PutString_Hex
  3023  0B46  3091               	movlw	high (STR_7| (0+32768))
  3024  0B47  2B4B               	goto	L1
  3025  0B48                     l33110:	
  3026                           ;Function.c: 132: }
  3027                           
  3028                           
  3029                           ;Function.c: 133: else
  3030                           ;Function.c: 134: {
  3031                           ;Function.c: 135: Uart1_PutString_Hex("10#\0");
  3032  0B48  302C               	movlw	low (STR_8| (0+32768))
  3033  0B49  00A3               	movwf	?_Uart1_PutString_Hex
  3034  0B4A  3091               	movlw	high (STR_8| (0+32768))
  3035  0B4B                     L1:	
  3036  0B4B  00A4               	movwf	?_Uart1_PutString_Hex+1
  3037  0B4C  256C  3188         	fcall	_Uart1_PutString_Hex
  3038                           
  3039                           ;Function.c: 136: }
  3040                           ;Function.c: 137: MakeTxTemperature(CurTemp);
  3041  0B4E  0857               	movf	_CurTemp+1,w
  3042  0B4F  00A1               	movwf	?_MakeTxTemperature+1
  3043  0B50  0856               	movf	_CurTemp,w
  3044  0B51  00A0               	movwf	?_MakeTxTemperature
  3045  0B52  257C  3188         	fcall	_MakeTxTemperature
  3046                           
  3047                           ;Function.c: 138: for(int i=0;i<4;i++)
  3048  0B54  01B8               	clrf	InteractServer@i_10575
  3049  0B55  01B9               	clrf	InteractServer@i_10575+1
  3050  0B56                     l33120:	
  3051                           
  3052                           ;Function.c: 139: {
  3053                           ;Function.c: 140: Uart1_PutHex(TxTemperature[i]);
  3054  0B56  0020               	movlb	0	; select bank0
  3055  0B57  0838               	movf	InteractServer@i_10575,w
  3056  0B58  3E4E               	addlw	_TxTemperature& (0+255)
  3057  0B59  0086               	movwf	6
  3058  0B5A  0187               	clrf	7
  3059  0B5B  0801               	movf	1,w
  3060  0B5C  254D  3188         	fcall	_Uart1_PutHex
  3061  0B5E  0020               	movlb	0	; select bank0
  3062  0B5F  0AB8               	incf	InteractServer@i_10575,f
  3063  0B60  1903               	skipnz
  3064  0B61  0AB9               	incf	InteractServer@i_10575+1,f
  3065  0B62  0839               	movf	InteractServer@i_10575+1,w
  3066  0B63  3A80               	xorlw	128
  3067  0B64  00FE               	movwf	126
  3068  0B65  3080               	movlw	128
  3069  0B66  027E               	subwf	126,w
  3070  0B67  1D03               	skipz
  3071  0B68  2B6B               	goto	u8235
  3072  0B69  3004               	movlw	4
  3073  0B6A  0238               	subwf	InteractServer@i_10575,w
  3074  0B6B                     u8235:	
  3075  0B6B  1803               	btfsc	3,0
  3076  0B6C  2D1D               	goto	l33328
  3077  0B6D  2B56               	goto	l33120
  3078  0B6E                     l8684:	
  3079                           
  3080                           ;Function.c: 143: else if(gFlags.bNotify)
  3081  0B6E  1C65               	btfss	_gFlags,0
  3082  0B6F  2BB2               	goto	l33150
  3083                           
  3084                           ;Function.c: 144: {
  3085                           ;Function.c: 145: Uart1_PutString("AT+NSOSD=1,32,\0");
  3086  0B70  308E               	movlw	low (STR_5| (0+32768))
  3087  0B71  00A1               	movwf	?_Uart1_PutString
  3088  0B72  3090               	movlw	high (STR_5| (0+32768))
  3089  0B73  00A2               	movwf	?_Uart1_PutString+1
  3090  0B74  25DC  3188         	fcall	_Uart1_PutString
  3091                           
  3092                           ;Function.c: 146: Uart1_PutString_Hex("@#pt#3#\0");
  3093  0B76  30F9               	movlw	low (STR_10| (0+32768))
  3094  0B77  00A3               	movwf	?_Uart1_PutString_Hex
  3095  0B78  3090               	movlw	high (STR_10| (0+32768))
  3096  0B79  00A4               	movwf	?_Uart1_PutString_Hex+1
  3097  0B7A  256C  3188         	fcall	_Uart1_PutString_Hex
  3098                           
  3099                           ;Function.c: 147: Uart1_PutString_Hex(ICCID);
  3100  0B7C  30A0               	movlw	_ICCID& (0+255)
  3101  0B7D  00A3               	movwf	?_Uart1_PutString_Hex
  3102  0B7E  01A4               	clrf	?_Uart1_PutString_Hex+1
  3103  0B7F  256C  3188         	fcall	_Uart1_PutString_Hex
  3104                           
  3105                           ;Function.c: 148: Uart1_PutHex('#');
  3106  0B81  3023               	movlw	35
  3107  0B82  254D  3188         	fcall	_Uart1_PutHex
  3108                           
  3109                           ;Function.c: 149: if(RomParams.bWinter==0)
  3110  0B84  0020               	movlb	0	; select bank0
  3111  0B85  08E7               	movf	_RomParams+1,f
  3112  0B86  1D03               	skipz
  3113  0B87  2B8C               	goto	l33134
  3114                           
  3115                           ;Function.c: 150: {
  3116                           ;Function.c: 151: Uart1_PutString_Hex("60#\0");
  3117  0B88  3031               	movlw	low (STR_7| (0+32768))
  3118  0B89  00A3               	movwf	?_Uart1_PutString_Hex
  3119  0B8A  3091               	movlw	high (STR_7| (0+32768))
  3120  0B8B  2B8F               	goto	L2
  3121  0B8C                     l33134:	
  3122                           ;Function.c: 152: }
  3123                           
  3124                           
  3125                           ;Function.c: 153: else
  3126                           ;Function.c: 154: {
  3127                           ;Function.c: 155: Uart1_PutString_Hex("10#\0");
  3128  0B8C  302C               	movlw	low (STR_8| (0+32768))
  3129  0B8D  00A3               	movwf	?_Uart1_PutString_Hex
  3130  0B8E  3091               	movlw	high (STR_8| (0+32768))
  3131  0B8F                     L2:	
  3132  0B8F  00A4               	movwf	?_Uart1_PutString_Hex+1
  3133  0B90  256C  3188         	fcall	_Uart1_PutString_Hex
  3134                           
  3135                           ;Function.c: 156: }
  3136                           ;Function.c: 157: MakeTxTemperature(CurTemp);
  3137  0B92  0857               	movf	_CurTemp+1,w
  3138  0B93  00A1               	movwf	?_MakeTxTemperature+1
  3139  0B94  0856               	movf	_CurTemp,w
  3140  0B95  00A0               	movwf	?_MakeTxTemperature
  3141  0B96  257C  3188         	fcall	_MakeTxTemperature
  3142                           
  3143                           ;Function.c: 158: for(int i=0;i<4;i++)
  3144  0B98  01BA               	clrf	InteractServer@i_10580
  3145  0B99  01BB               	clrf	InteractServer@i_10580+1
  3146  0B9A                     l33144:	
  3147                           
  3148                           ;Function.c: 159: {
  3149                           ;Function.c: 160: Uart1_PutHex(TxTemperature[i]);
  3150  0B9A  0020               	movlb	0	; select bank0
  3151  0B9B  083A               	movf	InteractServer@i_10580,w
  3152  0B9C  3E4E               	addlw	_TxTemperature& (0+255)
  3153  0B9D  0086               	movwf	6
  3154  0B9E  0187               	clrf	7
  3155  0B9F  0801               	movf	1,w
  3156  0BA0  254D  3188         	fcall	_Uart1_PutHex
  3157  0BA2  0020               	movlb	0	; select bank0
  3158  0BA3  0ABA               	incf	InteractServer@i_10580,f
  3159  0BA4  1903               	skipnz
  3160  0BA5  0ABB               	incf	InteractServer@i_10580+1,f
  3161  0BA6  083B               	movf	InteractServer@i_10580+1,w
  3162  0BA7  3A80               	xorlw	128
  3163  0BA8  00FE               	movwf	126
  3164  0BA9  3080               	movlw	128
  3165  0BAA  027E               	subwf	126,w
  3166  0BAB  1D03               	skipz
  3167  0BAC  2BAF               	goto	u8265
  3168  0BAD  3004               	movlw	4
  3169  0BAE  023A               	subwf	InteractServer@i_10580,w
  3170  0BAF                     u8265:	
  3171  0BAF  1803               	btfsc	3,0
  3172  0BB0  2D1D               	goto	l33328
  3173  0BB1  2B9A               	goto	l33144
  3174  0BB2                     l33150:	
  3175                           
  3176                           ;Function.c: 163: else
  3177                           ;Function.c: 164: {
  3178                           ;Function.c: 165: if(TxErrDataIndex!=0xff)
  3179  0BB2  0868               	movf	_TxErrDataIndex,w
  3180  0BB3  3AFF               	xorlw	255
  3181  0BB4  1903               	skipnz
  3182  0BB5  2C1B               	goto	l33174
  3183                           
  3184                           ;Function.c: 166: {
  3185                           ;Function.c: 167: if(gFlags.bErrFull)
  3186  0BB6  1DE5               	btfss	_gFlags,3
  3187  0BB7  2BBC               	goto	l33156
  3188                           
  3189                           ;Function.c: 168: {
  3190                           ;Function.c: 169: Uart1_PutString("AT+NSOSD=1,687,\0");
  3191  0BB8  307D               	movlw	low (STR_13| (0+32768))
  3192  0BB9  00A1               	movwf	?_Uart1_PutString
  3193  0BBA  3090               	movlw	high (STR_13| (0+32768))
  3194  0BBB  2C1E               	goto	L3
  3195  0BBC                     l33156:	
  3196                           ;Function.c: 170: }
  3197                           
  3198                           
  3199                           ;Function.c: 171: else
  3200                           ;Function.c: 172: {
  3201                           ;Function.c: 173: Uart1_PutString("AT+NSOSD=1,\0");
  3202  0BBC  30AE               	movlw	low (STR_14| (0+32768))
  3203  0BBD  00A1               	movwf	?_Uart1_PutString
  3204  0BBE  3090               	movlw	high (STR_14| (0+32768))
  3205  0BBF  00A2               	movwf	?_Uart1_PutString+1
  3206  0BC0  25DC  3188         	fcall	_Uart1_PutString
  3207                           
  3208                           ;Function.c: 174: txLen=28;
  3209  0BC2  301C               	movlw	28
  3210  0BC3  00BE               	movwf	InteractServer@txLen
  3211  0BC4  01BF               	clrf	InteractServer@txLen+1
  3212                           
  3213                           ;Function.c: 175: for(i=0;i<TxErrDataIndex;i++)
  3214  0BC5  01C5               	clrf	InteractServer@i
  3215  0BC6                     l33166:	
  3216  0BC6  0868               	movf	_TxErrDataIndex,w
  3217  0BC7  0245               	subwf	InteractServer@i,w
  3218  0BC8  1803               	btfsc	3,0
  3219  0BC9  2BD0               	goto	l33168
  3220                           
  3221                           ;Function.c: 176: {
  3222                           ;Function.c: 177: txLen+=60;
  3223  0BCA  303C               	movlw	60
  3224  0BCB  07BE               	addwf	InteractServer@txLen,f
  3225  0BCC  1803               	skipnc
  3226  0BCD  0ABF               	incf	InteractServer@txLen+1,f
  3227  0BCE  0AC5               	incf	InteractServer@i,f
  3228  0BCF  2BC6               	goto	l33166
  3229  0BD0                     l33168:	
  3230                           
  3231                           ;Function.c: 178: }
  3232                           ;Function.c: 179: txLen+=59;
  3233  0BD0  303B               	movlw	59
  3234  0BD1  07BE               	addwf	InteractServer@txLen,f
  3235  0BD2  1803               	skipnc
  3236  0BD3  0ABF               	incf	InteractServer@txLen+1,f
  3237                           
  3238                           ;Function.c: 180: if(txLen/100!=0)
  3239  0BD4  3064               	movlw	100
  3240  0BD5  00A0               	movwf	?___lwdiv
  3241  0BD6  01A1               	clrf	?___lwdiv+1
  3242  0BD7  083F               	movf	InteractServer@txLen+1,w
  3243  0BD8  00A3               	movwf	?___lwdiv+3
  3244  0BD9  083E               	movf	InteractServer@txLen,w
  3245  0BDA  00A2               	movwf	?___lwdiv+2
  3246  0BDB  260F  3188         	fcall	___lwdiv
  3247  0BDD  0821               	movf	?___lwdiv+1,w
  3248  0BDE  0420               	iorwf	?___lwdiv,w
  3249                           
  3250                           ;Function.c: 181: Uart1_PutChar('0'+txLen/100);
  3251  0BDF  3064               	movlw	100
  3252  0BE0  1903               	skipnz
  3253  0BE1  2BEF               	goto	L5
  3254  0BE2  00A0               	movwf	?___lwdiv
  3255  0BE3  01A1               	clrf	?___lwdiv+1
  3256  0BE4  083F               	movf	InteractServer@txLen+1,w
  3257  0BE5  00A3               	movwf	?___lwdiv+3
  3258  0BE6  083E               	movf	InteractServer@txLen,w
  3259  0BE7  00A2               	movwf	?___lwdiv+2
  3260  0BE8  260F  3188         	fcall	___lwdiv
  3261  0BEA  0820               	movf	?___lwdiv,w
  3262  0BEB  3E30               	addlw	48
  3263  0BEC  25D2  3188         	fcall	_Uart1_PutChar
  3264                           
  3265                           ;Function.c: 182: txLen=txLen%100;
  3266  0BEE  3064               	movlw	100
  3267  0BEF                     L5:	
  3268  0BEF  0020               	movlb	0	; select bank0
  3269  0BF0  00A0               	movwf	?___lwmod
  3270  0BF1  01A1               	clrf	?___lwmod+1
  3271  0BF2  083F               	movf	InteractServer@txLen+1,w
  3272  0BF3  00A3               	movwf	?___lwmod+3
  3273  0BF4  083E               	movf	InteractServer@txLen,w
  3274  0BF5  00A2               	movwf	?___lwmod+2
  3275  0BF6  2676  3188         	fcall	___lwmod
  3276  0BF8  0821               	movf	?___lwmod+1,w
  3277  0BF9  00BF               	movwf	InteractServer@txLen+1
  3278  0BFA  0820               	movf	?___lwmod,w
  3279  0BFB  00BE               	movwf	InteractServer@txLen
  3280                           
  3281                           ;Function.c: 183: Uart1_PutChar('0'+txLen/10);
  3282  0BFC  300A               	movlw	10
  3283  0BFD  00A0               	movwf	?___lwdiv
  3284  0BFE  01A1               	clrf	?___lwdiv+1
  3285  0BFF  083F               	movf	InteractServer@txLen+1,w
  3286  0C00  00A3               	movwf	?___lwdiv+3
  3287  0C01  083E               	movf	InteractServer@txLen,w
  3288  0C02  00A2               	movwf	?___lwdiv+2
  3289  0C03  260F  3188         	fcall	___lwdiv
  3290  0C05  0820               	movf	?___lwdiv,w
  3291  0C06  3E30               	addlw	48
  3292  0C07  25D2  3188         	fcall	_Uart1_PutChar
  3293                           
  3294                           ;Function.c: 184: Uart1_PutChar('0'+txLen%10);
  3295  0C09  300A               	movlw	10
  3296  0C0A  0020               	movlb	0	; select bank0
  3297  0C0B  00A0               	movwf	?___lwmod
  3298  0C0C  01A1               	clrf	?___lwmod+1
  3299  0C0D  083F               	movf	InteractServer@txLen+1,w
  3300  0C0E  00A3               	movwf	?___lwmod+3
  3301  0C0F  083E               	movf	InteractServer@txLen,w
  3302  0C10  00A2               	movwf	?___lwmod+2
  3303  0C11  2676  3188         	fcall	___lwmod
  3304  0C13  0820               	movf	?___lwmod,w
  3305  0C14  3E30               	addlw	48
  3306  0C15  25D2  3188         	fcall	_Uart1_PutChar
  3307                           
  3308                           ;Function.c: 185: Uart1_PutChar(',');
  3309  0C17  302C               	movlw	44
  3310  0C18  25D2  3188         	fcall	_Uart1_PutChar
  3311  0C1A  2C21               	goto	l8703
  3312  0C1B                     l33174:	
  3313                           
  3314                           ;Function.c: 188: else
  3315                           ;Function.c: 189: {
  3316                           ;Function.c: 190: Uart1_PutString("AT+NSOSD=1,87,\0");
  3317  0C1B  309E               	movlw	low (STR_15| (0+32768))
  3318  0C1C  00A1               	movwf	?_Uart1_PutString
  3319  0C1D  3090               	movlw	high (STR_15| (0+32768))
  3320  0C1E                     L3:	
  3321  0C1E  00A2               	movwf	?_Uart1_PutString+1
  3322  0C1F  25DC  3188         	fcall	_Uart1_PutString
  3323  0C21                     l8703:	
  3324                           
  3325                           ;Function.c: 191: }
  3326                           ;Function.c: 192: Uart1_PutString_Hex("@#pt#2#\0");
  3327  0C21  30F0               	movlw	low (STR_16| (0+32768))
  3328  0C22  0020               	movlb	0	; select bank0
  3329  0C23  00A3               	movwf	?_Uart1_PutString_Hex
  3330  0C24  3090               	movlw	high (STR_16| (0+32768))
  3331  0C25  00A4               	movwf	?_Uart1_PutString_Hex+1
  3332  0C26  256C  3188         	fcall	_Uart1_PutString_Hex
  3333                           
  3334                           ;Function.c: 193: Uart1_PutString_Hex(ICCID);
  3335  0C28  30A0               	movlw	_ICCID& (0+255)
  3336  0C29  00A3               	movwf	?_Uart1_PutString_Hex
  3337  0C2A  01A4               	clrf	?_Uart1_PutString_Hex+1
  3338  0C2B  256C  3188         	fcall	_Uart1_PutString_Hex
  3339                           
  3340                           ;Function.c: 194: Uart1_PutHex('#');
  3341  0C2D  3023               	movlw	35
  3342  0C2E  254D  3188         	fcall	_Uart1_PutHex
  3343                           
  3344                           ;Function.c: 195: if(RomParams.bWinter==0)
  3345  0C30  0020               	movlb	0	; select bank0
  3346  0C31  08E7               	movf	_RomParams+1,f
  3347  0C32  1D03               	skipz
  3348  0C33  2C38               	goto	l33182
  3349                           
  3350                           ;Function.c: 196: {
  3351                           ;Function.c: 197: Uart1_PutString_Hex("60#\0");
  3352  0C34  3031               	movlw	low (STR_7| (0+32768))
  3353  0C35  00A3               	movwf	?_Uart1_PutString_Hex
  3354  0C36  3091               	movlw	high (STR_7| (0+32768))
  3355  0C37  2C3B               	goto	L4
  3356  0C38                     l33182:	
  3357                           ;Function.c: 198: }
  3358                           
  3359                           
  3360                           ;Function.c: 199: else
  3361                           ;Function.c: 200: {
  3362                           ;Function.c: 201: Uart1_PutString_Hex("10#\0");
  3363  0C38  302C               	movlw	low (STR_8| (0+32768))
  3364  0C39  00A3               	movwf	?_Uart1_PutString_Hex
  3365  0C3A  3091               	movlw	high (STR_8| (0+32768))
  3366  0C3B                     L4:	
  3367  0C3B  00A4               	movwf	?_Uart1_PutString_Hex+1
  3368  0C3C  256C  3188         	fcall	_Uart1_PutString_Hex
  3369                           
  3370                           ;Function.c: 202: }
  3371                           ;Function.c: 203: if(TxErrDataIndex!=0xff)
  3372  0C3E  0868               	movf	_TxErrDataIndex,w
  3373  0C3F  3AFF               	xorlw	255
  3374  0C40  1903               	skipnz
  3375  0C41  2CE9               	goto	l33300
  3376                           
  3377                           ;Function.c: 204: {
  3378                           ;Function.c: 205: if(gFlags.bErrFull)
  3379  0C42  1DE5               	btfss	_gFlags,3
  3380  0C43  2CB3               	goto	l33264
  3381                           
  3382                           ;Function.c: 206: {
  3383                           ;Function.c: 207: for(i=(TxErrDataIndex-1);i<10;i--)
  3384  0C44  0868               	movf	_TxErrDataIndex,w
  3385  0C45  3EFF               	addlw	255
  3386  0C46  00C5               	movwf	InteractServer@i
  3387  0C47                     l33190:	
  3388  0C47  300A               	movlw	10
  3389  0C48  0245               	subwf	InteractServer@i,w
  3390  0C49  1803               	btfsc	3,0
  3391  0C4A  2C7C               	goto	l33228
  3392                           
  3393                           ;Function.c: 208: {
  3394                           ;Function.c: 209: for(j=0;j<12;j++)
  3395  0C4B  01C3               	clrf	InteractServer@j
  3396  0C4C                     l33200:	
  3397                           
  3398                           ;Function.c: 210: {
  3399                           ;Function.c: 211: addr=(i)*12;
  3400  0C4C  300C               	movlw	12
  3401  0C4D  00A0               	movwf	?___bmul
  3402  0C4E  0845               	movf	InteractServer@i,w
  3403  0C4F  25ED  3188         	fcall	___bmul
  3404  0C51  00C2               	movwf	InteractServer@addr
  3405                           
  3406                           ;Function.c: 212: addr+=16;
  3407  0C52  3010               	movlw	16
  3408  0C53  07C2               	addwf	InteractServer@addr,f
  3409                           
  3410                           ;Function.c: 213: addr+=(j<<1);
  3411  0C54  3543               	lslf	InteractServer@j,w
  3412  0C55  07C2               	addwf	InteractServer@addr,f
  3413                           
  3414                           ;Function.c: 214: t.u8s[0]=eeprom_read(addr);
  3415  0C56  0842               	movf	InteractServer@addr,w
  3416  0C57  25BB  3188         	fcall	_eeprom_read
  3417  0C59  0020               	movlb	0	; select bank0
  3418  0C5A  00C0               	movwf	InteractServer@t
  3419                           
  3420                           ;Function.c: 215: t.u8s[1]=eeprom_read(addr+1);
  3421  0C5B  0A42               	incf	InteractServer@addr,w
  3422  0C5C  25BB  3188         	fcall	_eeprom_read
  3423  0C5E  0020               	movlb	0	; select bank0
  3424  0C5F  00C1               	movwf	InteractServer@t+1
  3425                           
  3426                           ;Function.c: 216: MakeTxTemperature(t);
  3427  0C60  00A1               	movwf	?_MakeTxTemperature+1
  3428  0C61  0840               	movf	InteractServer@t,w
  3429  0C62  00A0               	movwf	?_MakeTxTemperature
  3430  0C63  257C  3188         	fcall	_MakeTxTemperature
  3431                           
  3432                           ;Function.c: 217: for(k=0;k<4;k++)
  3433  0C65  01C4               	clrf	InteractServer@k
  3434  0C66                     l33212:	
  3435                           
  3436                           ;Function.c: 218: {
  3437                           ;Function.c: 219: Uart1_PutHex(TxTemperature[k]);
  3438  0C66  0844               	movf	InteractServer@k,w
  3439  0C67  3E4E               	addlw	_TxTemperature& (0+255)
  3440  0C68  0086               	movwf	6
  3441  0C69  0187               	clrf	7
  3442  0C6A  0801               	movf	1,w
  3443  0C6B  254D  3188         	fcall	_Uart1_PutHex
  3444  0C6D  0020               	movlb	0	; select bank0
  3445  0C6E  0AC4               	incf	InteractServer@k,f
  3446  0C6F  3004               	movlw	4
  3447  0C70  0244               	subwf	InteractServer@k,w
  3448  0C71  1C03               	skipc
  3449  0C72  2C66               	goto	l33212
  3450                           
  3451                           ;Function.c: 220: }
  3452                           ;Function.c: 221: Uart1_PutHex('|');
  3453  0C73  307C               	movlw	124
  3454  0C74  254D  3188         	fcall	_Uart1_PutHex
  3455  0C76  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3456  0C78  1C03               	skipc
  3457  0C79  2C4C               	goto	l33200
  3458  0C7A  03C5               	decf	InteractServer@i,f
  3459  0C7B  2C47               	goto	l33190
  3460  0C7C                     l33228:	
  3461                           
  3462                           ;Function.c: 222: }
  3463                           ;Function.c: 223: }
  3464                           ;Function.c: 224: for(i=9;i>TxErrDataIndex;i--)
  3465  0C7C  3009               	movlw	9
  3466  0C7D  00C5               	movwf	InteractServer@i
  3467  0C7E                     l33262:	
  3468  0C7E  0845               	movf	InteractServer@i,w
  3469  0C7F  0268               	subwf	_TxErrDataIndex,w
  3470  0C80  1803               	btfsc	3,0
  3471  0C81  2CE9               	goto	l33300
  3472                           
  3473                           ;Function.c: 225: {
  3474                           ;Function.c: 226: for(j=0;j<12;j++)
  3475  0C82  01C3               	clrf	InteractServer@j
  3476  0C83                     l33236:	
  3477                           
  3478                           ;Function.c: 227: {
  3479                           ;Function.c: 228: addr=(i)*12;
  3480  0C83  300C               	movlw	12
  3481  0C84  00A0               	movwf	?___bmul
  3482  0C85  0845               	movf	InteractServer@i,w
  3483  0C86  25ED  3188         	fcall	___bmul
  3484  0C88  00C2               	movwf	InteractServer@addr
  3485                           
  3486                           ;Function.c: 229: addr+=16;
  3487  0C89  3010               	movlw	16
  3488  0C8A  07C2               	addwf	InteractServer@addr,f
  3489                           
  3490                           ;Function.c: 230: addr+=(j<<1);
  3491  0C8B  3543               	lslf	InteractServer@j,w
  3492  0C8C  07C2               	addwf	InteractServer@addr,f
  3493                           
  3494                           ;Function.c: 231: t.u8s[0]=eeprom_read(addr);
  3495  0C8D  0842               	movf	InteractServer@addr,w
  3496  0C8E  25BB  3188         	fcall	_eeprom_read
  3497  0C90  0020               	movlb	0	; select bank0
  3498  0C91  00C0               	movwf	InteractServer@t
  3499                           
  3500                           ;Function.c: 232: t.u8s[1]=eeprom_read(addr+1);
  3501  0C92  0A42               	incf	InteractServer@addr,w
  3502  0C93  25BB  3188         	fcall	_eeprom_read
  3503  0C95  0020               	movlb	0	; select bank0
  3504  0C96  00C1               	movwf	InteractServer@t+1
  3505                           
  3506                           ;Function.c: 233: MakeTxTemperature(t);
  3507  0C97  00A1               	movwf	?_MakeTxTemperature+1
  3508  0C98  0840               	movf	InteractServer@t,w
  3509  0C99  00A0               	movwf	?_MakeTxTemperature
  3510  0C9A  257C  3188         	fcall	_MakeTxTemperature
  3511                           
  3512                           ;Function.c: 234: for(k=0;k<4;k++)
  3513  0C9C  01C4               	clrf	InteractServer@k
  3514  0C9D                     l33248:	
  3515                           
  3516                           ;Function.c: 235: {
  3517                           ;Function.c: 236: Uart1_PutHex(TxTemperature[k]);
  3518  0C9D  0844               	movf	InteractServer@k,w
  3519  0C9E  3E4E               	addlw	_TxTemperature& (0+255)
  3520  0C9F  0086               	movwf	6
  3521  0CA0  0187               	clrf	7
  3522  0CA1  0801               	movf	1,w
  3523  0CA2  254D  3188         	fcall	_Uart1_PutHex
  3524  0CA4  0020               	movlb	0	; select bank0
  3525  0CA5  0AC4               	incf	InteractServer@k,f
  3526  0CA6  3004               	movlw	4
  3527  0CA7  0244               	subwf	InteractServer@k,w
  3528  0CA8  1C03               	skipc
  3529  0CA9  2C9D               	goto	l33248
  3530                           
  3531                           ;Function.c: 237: }
  3532                           ;Function.c: 238: Uart1_PutHex('|');
  3533  0CAA  307C               	movlw	124
  3534  0CAB  254D  3188         	fcall	_Uart1_PutHex
  3535  0CAD  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3536  0CAF  1C03               	skipc
  3537  0CB0  2C83               	goto	l33236
  3538  0CB1  03C5               	decf	InteractServer@i,f
  3539  0CB2  2C7E               	goto	l33262
  3540  0CB3                     l33264:	
  3541                           
  3542                           ;Function.c: 242: else
  3543                           ;Function.c: 243: {
  3544                           ;Function.c: 244: for(i=0;i<TxErrDataIndex;i++)
  3545  0CB3  01C5               	clrf	InteractServer@i
  3546  0CB4                     l33298:	
  3547  0CB4  0868               	movf	_TxErrDataIndex,w
  3548  0CB5  0245               	subwf	InteractServer@i,w
  3549  0CB6  1803               	btfsc	3,0
  3550  0CB7  2CE9               	goto	l33300
  3551                           
  3552                           ;Function.c: 245: {
  3553                           ;Function.c: 246: for(j=0;j<12;j++)
  3554  0CB8  01C3               	clrf	InteractServer@j
  3555  0CB9                     l33272:	
  3556                           
  3557                           ;Function.c: 247: {
  3558                           ;Function.c: 248: addr=i*12;
  3559  0CB9  300C               	movlw	12
  3560  0CBA  00A0               	movwf	?___bmul
  3561  0CBB  0845               	movf	InteractServer@i,w
  3562  0CBC  25ED  3188         	fcall	___bmul
  3563  0CBE  00C2               	movwf	InteractServer@addr
  3564                           
  3565                           ;Function.c: 249: addr+=16;
  3566  0CBF  3010               	movlw	16
  3567  0CC0  07C2               	addwf	InteractServer@addr,f
  3568                           
  3569                           ;Function.c: 250: addr+=(j<<1);
  3570  0CC1  3543               	lslf	InteractServer@j,w
  3571  0CC2  07C2               	addwf	InteractServer@addr,f
  3572                           
  3573                           ;Function.c: 251: t.u8s[0]=eeprom_read(addr);
  3574  0CC3  0842               	movf	InteractServer@addr,w
  3575  0CC4  25BB  3188         	fcall	_eeprom_read
  3576  0CC6  0020               	movlb	0	; select bank0
  3577  0CC7  00C0               	movwf	InteractServer@t
  3578                           
  3579                           ;Function.c: 252: t.u8s[1]=eeprom_read(addr+1);
  3580  0CC8  0A42               	incf	InteractServer@addr,w
  3581  0CC9  25BB  3188         	fcall	_eeprom_read
  3582  0CCB  0020               	movlb	0	; select bank0
  3583  0CCC  00C1               	movwf	InteractServer@t+1
  3584                           
  3585                           ;Function.c: 253: MakeTxTemperature(t);
  3586  0CCD  00A1               	movwf	?_MakeTxTemperature+1
  3587  0CCE  0840               	movf	InteractServer@t,w
  3588  0CCF  00A0               	movwf	?_MakeTxTemperature
  3589  0CD0  257C  3188         	fcall	_MakeTxTemperature
  3590                           
  3591                           ;Function.c: 254: for(k=0;k<4;k++)
  3592  0CD2  01C4               	clrf	InteractServer@k
  3593  0CD3                     l33284:	
  3594                           
  3595                           ;Function.c: 255: {
  3596                           ;Function.c: 256: Uart1_PutHex(TxTemperature[k]);
  3597  0CD3  0844               	movf	InteractServer@k,w
  3598  0CD4  3E4E               	addlw	_TxTemperature& (0+255)
  3599  0CD5  0086               	movwf	6
  3600  0CD6  0187               	clrf	7
  3601  0CD7  0801               	movf	1,w
  3602  0CD8  254D  3188         	fcall	_Uart1_PutHex
  3603  0CDA  0020               	movlb	0	; select bank0
  3604  0CDB  0AC4               	incf	InteractServer@k,f
  3605  0CDC  3004               	movlw	4
  3606  0CDD  0244               	subwf	InteractServer@k,w
  3607  0CDE  1C03               	skipc
  3608  0CDF  2CD3               	goto	l33284
  3609                           
  3610                           ;Function.c: 257: }
  3611                           ;Function.c: 258: Uart1_PutHex('|');
  3612  0CE0  307C               	movlw	124
  3613  0CE1  254D  3188         	fcall	_Uart1_PutHex
  3614  0CE3  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3615  0CE5  1C03               	skipc
  3616  0CE6  2CB9               	goto	l33272
  3617  0CE7  0AC5               	incf	InteractServer@i,f
  3618  0CE8  2CB4               	goto	l33298
  3619  0CE9                     l33300:	
  3620                           
  3621                           ;Function.c: 259: }
  3622                           ;Function.c: 260: }
  3623                           ;Function.c: 261: }
  3624                           ;Function.c: 262: }
  3625                           ;Function.c: 263: for(i=0;i<12;i++)
  3626  0CE9  01C5               	clrf	InteractServer@i
  3627  0CEA                     l33302:	
  3628  0CEA  300C               	movlw	12
  3629  0CEB  0245               	subwf	InteractServer@i,w
  3630  0CEC  1803               	btfsc	3,0
  3631  0CED  2D1D               	goto	l33328
  3632                           
  3633                           ;Function.c: 264: {
  3634                           ;Function.c: 265: MakeTxTemperature(TList.T[i]);
  3635  0CEE  3545               	lslf	InteractServer@i,w
  3636  0CEF  3E20               	addlw	_TList& (0+255)
  3637  0CF0  0086               	movwf	6
  3638  0CF1  3001               	movlw	1	; select bank2/3
  3639  0CF2  0087               	movwf	7
  3640  0CF3  3F40               	moviw [0]fsr1
  3641  0CF4  00A0               	movwf	?_MakeTxTemperature
  3642  0CF5  3F41               	moviw [1]fsr1
  3643  0CF6  00A1               	movwf	?_MakeTxTemperature+1
  3644  0CF7  257C  3188         	fcall	_MakeTxTemperature
  3645                           
  3646                           ;Function.c: 266: for(int j=0;j<4;j++)
  3647  0CF9  01BC               	clrf	InteractServer@j_10587
  3648  0CFA  01BD               	clrf	InteractServer@j_10587+1
  3649  0CFB                     l33314:	
  3650                           
  3651                           ;Function.c: 267: {
  3652                           ;Function.c: 268: Uart1_PutHex(TxTemperature[j]);
  3653  0CFB  0020               	movlb	0	; select bank0
  3654  0CFC  083C               	movf	InteractServer@j_10587,w
  3655  0CFD  3E4E               	addlw	_TxTemperature& (0+255)
  3656  0CFE  0086               	movwf	6
  3657  0CFF  0187               	clrf	7
  3658  0D00  0801               	movf	1,w
  3659  0D01  254D  3188         	fcall	_Uart1_PutHex
  3660  0D03  0020               	movlb	0	; select bank0
  3661  0D04  0ABC               	incf	InteractServer@j_10587,f
  3662  0D05  1903               	skipnz
  3663  0D06  0ABD               	incf	InteractServer@j_10587+1,f
  3664  0D07  083D               	movf	InteractServer@j_10587+1,w
  3665  0D08  3A80               	xorlw	128
  3666  0D09  00FE               	movwf	126
  3667  0D0A  3080               	movlw	128
  3668  0D0B  027E               	subwf	126,w
  3669  0D0C  1D03               	skipz
  3670  0D0D  2D10               	goto	u8445
  3671  0D0E  3004               	movlw	4
  3672  0D0F  023C               	subwf	InteractServer@j_10587,w
  3673  0D10                     u8445:	
  3674  0D10  1C03               	skipc
  3675  0D11  2CFB               	goto	l33314
  3676                           
  3677                           ;Function.c: 269: }
  3678                           ;Function.c: 270: if(i!=(12-1))
  3679  0D12  0020               	movlb	0	; select bank0
  3680  0D13  0845               	movf	InteractServer@i,w
  3681  0D14  3A0B               	xorlw	11
  3682  0D15  1903               	skipnz
  3683  0D16  2D1A               	goto	l33324
  3684                           
  3685                           ;Function.c: 271: {
  3686                           ;Function.c: 272: Uart1_PutHex('|');
  3687  0D17  307C               	movlw	124
  3688  0D18  254D  3188         	fcall	_Uart1_PutHex
  3689  0D1A                     l33324:	
  3690  0D1A  0020               	movlb	0	; select bank0
  3691  0D1B  0AC5               	incf	InteractServer@i,f
  3692  0D1C  2CEA               	goto	l33302
  3693  0D1D                     l33328:	
  3694                           
  3695                           ;Function.c: 273: }
  3696                           ;Function.c: 274: }
  3697                           ;Function.c: 275: }
  3698                           ;Function.c: 276: Uart1_PutHex('#');
  3699  0D1D  3023               	movlw	35
  3700  0D1E  254D  3188         	fcall	_Uart1_PutHex
  3701                           
  3702                           ;Function.c: 277: Uart1_PutHex('@');
  3703  0D20  3040               	movlw	64
  3704  0D21  254D  3188         	fcall	_Uart1_PutHex
  3705                           
  3706                           ;Function.c: 278: ATCommand_WaitACKTimes=400;
  3707  0D23  3090               	movlw	144
  3708  0D24  0020               	movlb	0	; select bank0
  3709  0D25  00D4               	movwf	_ATCommand_WaitACKTimes
  3710  0D26  3001               	movlw	1
  3711  0D27  00D5               	movwf	_ATCommand_WaitACKTimes+1
  3712                           
  3713                           ;Function.c: 279: strcpy(ATCommand_OkString,"NSONMI");
  3714  0D28  3013               	movlw	low (STR_19| (0+32768))
  3715  0D29  00A0               	movwf	?_strcpy
  3716  0D2A  3091               	movlw	high (STR_19| (0+32768))
  3717  0D2B  00A1               	movwf	?_strcpy+1
  3718  0D2C  30C4               	movlw	_ATCommand_OkString& (0+255)
  3719  0D2D  25F9  3188         	fcall	_strcpy
  3720                           
  3721                           ;Function.c: 280: strcpy(ATCommand_ErrString,"ERROR");
  3722  0D2F  3026               	movlw	low (STR_20| (0+32768))
  3723  0D30  00A0               	movwf	?_strcpy
  3724  0D31  3091               	movlw	high (STR_20| (0+32768))
  3725  0D32  00A1               	movwf	?_strcpy+1
  3726  0D33  30B5               	movlw	_ATCommand_ErrString& (0+255)
  3727  0D34  25F9  3188         	fcall	_strcpy
  3728                           
  3729                           ;Function.c: 281: ATCommand_Clear='+';
  3730  0D36  302B               	movlw	43
  3731  0D37  00F9               	movwf	_ATCommand_Clear
  3732                           
  3733                           ;Function.c: 282: Uart1_PutString("\r\0");
  3734  0D38  3042               	movlw	low (STR_21| (0+32768))
  3735  0D39  00A1               	movwf	?_Uart1_PutString
  3736  0D3A  3091               	movlw	high (STR_21| (0+32768))
  3737  0D3B  00A2               	movwf	?_Uart1_PutString+1
  3738  0D3C  25DC               	fcall	_Uart1_PutString
  3739                           
  3740                           ;Function.c: 283: res=ATCommand_WaitData();
  3741  0D3D  3185  2538  3188   	fcall	_ATCommand_WaitData
  3742  0D40  00B7               	movwf	InteractServer@res
  3743                           
  3744                           ;Function.c: 284: if(res!=ATACK_Null)
  3745  0D41  0837               	movf	InteractServer@res,w
  3746  0D42  1D03               	skipz
  3747  0D43  2D4B               	goto	l33352
  3748                           
  3749                           ;Function.c: 286: __delay_20ms(100);;
  3750  0D44  3064               	movlw	100
  3751  0D45  00A0               	movwf	?___delay_20ms
  3752  0D46  01A1               	clrf	?___delay_20ms+1
  3753  0D47  22D5  3188         	fcall	___delay_20ms
  3754                           
  3755                           ;Function.c: 287: retry--;
  3756  0D49  03B6               	decf	InteractServer@retry,f
  3757  0D4A  2B27               	goto	l33350
  3758  0D4B                     l33352:	
  3759                           
  3760                           ;Function.c: 288: }
  3761                           ;Function.c: 289: return res;
  3762  0D4B  0837               	movf	InteractServer@res,w
  3763  0D4C  0008               	return
  3764  0D4D                     __end_of_InteractServer:	
  3765  0D4D                     __ptext1991:	
  3766 ;; =============== function _strstr ends ============
  3767                           
  3768                           
  3769 ;; *************** function _Uart1_PutHex *****************
  3770 ;; Defined at:
  3771 ;;		line 88 in file "F:\work\WYP\NBIoT\Uart.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  c               1    wreg     unsigned char 
  3774 ;; Auto vars:     Size  Location     Type
  3775 ;;  c               1    1[BANK0 ] unsigned char 
  3776 ;;  b               1    2[BANK0 ] unsigned char 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;		None               void
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, pclath, cstack
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 1F/3
  3784 ;;		Unchanged: FFFE0/0
  3785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3786 ;;      Params:         0       0       0       0       0       0       0       0
  3787 ;;      Locals:         0       2       0       0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0
  3789 ;;      Totals:         0       2       0       0       0       0       0       0
  3790 ;;Total ram usage:        2 bytes
  3791 ;; Hardware stack levels used:    1
  3792 ;; Hardware stack levels required when called:    4
  3793 ;; This function calls:
  3794 ;;		_Uart1_PutChar
  3795 ;; This function is called by:
  3796 ;;		_InteractServer
  3797 ;;		_Uart1_PutString_Hex
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800  0D4D                     _Uart1_PutHex:	
  3801                           
  3802                           ; Regs used in _Uart1_PutHex: [wreg+status,2+status,0+pclath+cstack]
  3803                           ;Uart1_PutHex@c stored from wreg
  3804  0D4D  0020               	movlb	0	; select bank0
  3805  0D4E  00A1               	movwf	Uart1_PutHex@c
  3806                           
  3807                           ;Uart.c: 89: unsigned char b;
  3808                           ;Uart.c: 90: b=(c>>4);
  3809  0D4F  0E21               	swapf	Uart1_PutHex@c,w
  3810  0D50  390F               	andlw	15
  3811  0D51  00A2               	movwf	Uart1_PutHex@b
  3812                           
  3813                           ;Uart.c: 91: if (b>9)
  3814  0D52  300A               	movlw	10
  3815  0D53  0222               	subwf	Uart1_PutHex@b,w
  3816  0D54  1C03               	skipc
  3817  0D55  2D58               	goto	l32578
  3818                           
  3819                           ;Uart.c: 92: b += 'A'-10;
  3820  0D56  3037               	movlw	55
  3821  0D57  2D59               	goto	L6
  3822  0D58                     l32578:	
  3823                           
  3824                           ;Uart.c: 93: else
  3825                           ;Uart.c: 94: b += '0';
  3826  0D58  3030               	movlw	48
  3827  0D59                     L6:	
  3828  0D59  07A2               	addwf	Uart1_PutHex@b,f
  3829                           
  3830                           ;Uart.c: 95: Uart1_PutChar(b);
  3831  0D5A  0822               	movf	Uart1_PutHex@b,w
  3832  0D5B  25D2  3188         	fcall	_Uart1_PutChar
  3833                           
  3834                           ;Uart.c: 96: b=(c&0x0F);
  3835  0D5D  0020               	movlb	0	; select bank0
  3836  0D5E  0821               	movf	Uart1_PutHex@c,w
  3837  0D5F  00A2               	movwf	Uart1_PutHex@b
  3838  0D60  300F               	movlw	15
  3839  0D61  05A2               	andwf	Uart1_PutHex@b,f
  3840                           
  3841                           ;Uart.c: 97: if (b>9)
  3842  0D62  300A               	movlw	10
  3843  0D63  0222               	subwf	Uart1_PutHex@b,w
  3844  0D64  1C03               	skipc
  3845  0D65  2D68               	goto	l32590
  3846                           
  3847                           ;Uart.c: 98: b += 'A'-10;
  3848  0D66  3037               	movlw	55
  3849  0D67  2D69               	goto	L7
  3850  0D68                     l32590:	
  3851                           
  3852                           ;Uart.c: 99: else
  3853                           ;Uart.c: 100: b += '0';
  3854  0D68  3030               	movlw	48
  3855  0D69                     L7:	
  3856  0D69  07A2               	addwf	Uart1_PutHex@b,f
  3857                           
  3858                           ;Uart.c: 101: Uart1_PutChar(b);
  3859  0D6A  0822               	movf	Uart1_PutHex@b,w
  3860  0D6B  2DD2               	ljmp	_Uart1_PutChar
  3861  0D6C                     __end_of_Uart1_PutHex:	
  3862  0D6C                     __ptext1974:	
  3863 ;; =============== function _ATCommand_WaitData ends ============
  3864                           
  3865                           
  3866 ;; *************** function _Uart1_PutString_Hex *****************
  3867 ;; Defined at:
  3868 ;;		line 75 in file "F:\work\WYP\NBIoT\Uart.c"
  3869 ;; Parameters:    Size  Location     Type
  3870 ;;  pString         2    3[BANK0 ] PTR const unsigned char 
  3871 ;;		 -> STR_18(5), STR_17(5), STR_16(9), STR_12(5), 
  3872 ;;		 -> STR_11(5), STR_10(9), STR_8(5), STR_7(5), 
  3873 ;;		 -> ICCID(21), STR_6(9), 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  c               1    5[BANK0 ] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;		None               void
  3878 ;; Registers used:
  3879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 1F/0
  3882 ;;		On exit  : 1F/0
  3883 ;;		Unchanged: FFFE0/0
  3884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3885 ;;      Params:         0       2       0       0       0       0       0       0
  3886 ;;      Locals:         0       1       0       0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0
  3888 ;;      Totals:         0       3       0       0       0       0       0       0
  3889 ;;Total ram usage:        3 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    5
  3892 ;; This function calls:
  3893 ;;		_Uart1_PutHex
  3894 ;; This function is called by:
  3895 ;;		_InteractServer
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898  0D6C                     _Uart1_PutString_Hex:	
  3899  0D6C                     l23345:	
  3900                           ; Regs used in _Uart1_PutString_Hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3901                           ;Uart.c: 76: char c;
  3902                           ;Uart.c: 77: while(1)
  3903                           
  3904                           
  3905                           ;Uart.c: 78: {
  3906                           ;Uart.c: 79: c=*pString;
  3907  0D6C  0823               	movf	Uart1_PutString_Hex@pString,w
  3908  0D6D  0084               	movwf	4
  3909  0D6E  0824               	movf	Uart1_PutString_Hex@pString+1,w
  3910  0D6F  0085               	movwf	5
  3911  0D70  0800               	movf	0,w	;code access
  3912  0D71  00A5               	movwf	Uart1_PutString_Hex@c
  3913                           
  3914                           ;Uart.c: 80: if(c=='\0')
  3915  0D72  08A5               	movf	Uart1_PutString_Hex@c,f
  3916  0D73  1903               	btfsc	3,2
  3917  0D74  0008               	return
  3918                           
  3919                           ;Uart.c: 82: Uart1_PutHex(c);
  3920  0D75  254D  3188         	fcall	_Uart1_PutHex
  3921                           
  3922                           ;Uart.c: 83: pString++;
  3923  0D77  0020               	movlb	0	; select bank0
  3924  0D78  0AA3               	incf	Uart1_PutString_Hex@pString,f
  3925  0D79  1903               	skipnz
  3926  0D7A  0AA4               	incf	Uart1_PutString_Hex@pString+1,f
  3927  0D7B  2D6C               	goto	l23345
  3928  0D7C                     __end_of_Uart1_PutString_Hex:	
  3929  0D7C                     __ptext2019:	
  3930 ;; =============== function _Uart1_PutChar ends ============
  3931                           
  3932                           
  3933 ;; *************** function _MakeTxTemperature *****************
  3934 ;; Defined at:
  3935 ;;		line 292 in file "F:\work\WYP\NBIoT\Function.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  T               2    0[BANK0 ] struct .
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  x               1    2[BANK0 ] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;		None               void
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 1F/0
  3946 ;;		On exit  : 1F/0
  3947 ;;		Unchanged: FFFE0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3949 ;;      Params:         0       2       0       0       0       0       0       0
  3950 ;;      Locals:         0       1       0       0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0
  3952 ;;      Totals:         0       3       0       0       0       0       0       0
  3953 ;;Total ram usage:        3 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    3
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_InteractServer
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962  0D7C                     _MakeTxTemperature:	
  3963                           
  3964                           ;Function.c: 293: unsigned char x;
  3965                           ;Function.c: 294: x=(T.u8H>>4);
  3966                           
  3967                           ; Regs used in _MakeTxTemperature: [wreg+status,2+status,0]
  3968  0D7C  0E21               	swapf	MakeTxTemperature@T+1,w
  3969  0D7D  390F               	andlw	15
  3970  0D7E  00A2               	movwf	MakeTxTemperature@x
  3971                           
  3972                           ;Function.c: 295: if(x>9)
  3973  0D7F  300A               	movlw	10
  3974  0D80  0222               	subwf	MakeTxTemperature@x,w
  3975  0D81  1C03               	skipc
  3976  0D82  2D87               	goto	l32292
  3977                           
  3978                           ;Function.c: 296: {
  3979                           ;Function.c: 297: x=x-10;
  3980  0D83  30F6               	movlw	246
  3981  0D84  07A2               	addwf	MakeTxTemperature@x,f
  3982                           
  3983                           ;Function.c: 298: x=x+0x41;
  3984  0D85  3041               	movlw	65
  3985  0D86  2D88               	goto	L11
  3986  0D87                     l32292:	
  3987                           ;Function.c: 300: }
  3988                           
  3989                           
  3990                           ;Function.c: 301: else
  3991                           ;Function.c: 302: {
  3992                           ;Function.c: 303: x=x+'0';
  3993  0D87  3030               	movlw	48
  3994  0D88                     L11:	
  3995  0D88  07A2               	addwf	MakeTxTemperature@x,f
  3996                           
  3997                           ;Function.c: 299: TxTemperature[0]=x;
  3998  0D89  0822               	movf	MakeTxTemperature@x,w
  3999  0D8A  00CE               	movwf	_TxTemperature
  4000                           
  4001                           ;Function.c: 305: }
  4002                           ;Function.c: 306: x=(T.u8H&0x0F);
  4003  0D8B  0821               	movf	MakeTxTemperature@T+1,w
  4004  0D8C  00A2               	movwf	MakeTxTemperature@x
  4005  0D8D  300F               	movlw	15
  4006  0D8E  05A2               	andwf	MakeTxTemperature@x,f
  4007                           
  4008                           ;Function.c: 307: if(x>9)
  4009  0D8F  300A               	movlw	10
  4010  0D90  0222               	subwf	MakeTxTemperature@x,w
  4011  0D91  1C03               	skipc
  4012  0D92  2D97               	goto	l32304
  4013                           
  4014                           ;Function.c: 308: {
  4015                           ;Function.c: 309: x=x-10;
  4016  0D93  30F6               	movlw	246
  4017  0D94  07A2               	addwf	MakeTxTemperature@x,f
  4018                           
  4019                           ;Function.c: 310: x=x+0x41;
  4020  0D95  3041               	movlw	65
  4021  0D96  2D98               	goto	L12
  4022  0D97                     l32304:	
  4023                           ;Function.c: 312: }
  4024                           
  4025                           
  4026                           ;Function.c: 313: else
  4027                           ;Function.c: 314: {
  4028                           ;Function.c: 315: x=x+'0';
  4029  0D97  3030               	movlw	48
  4030  0D98                     L12:	
  4031  0D98  07A2               	addwf	MakeTxTemperature@x,f
  4032                           
  4033                           ;Function.c: 311: TxTemperature[1]=x;
  4034  0D99  0822               	movf	MakeTxTemperature@x,w
  4035  0D9A  00CF               	movwf	_TxTemperature+1
  4036                           
  4037                           ;Function.c: 317: }
  4038                           ;Function.c: 318: x=(T.u8L>>4);
  4039  0D9B  0E20               	swapf	MakeTxTemperature@T,w
  4040  0D9C  390F               	andlw	15
  4041  0D9D  00A2               	movwf	MakeTxTemperature@x
  4042                           
  4043                           ;Function.c: 319: if(x>9)
  4044  0D9E  300A               	movlw	10
  4045  0D9F  0222               	subwf	MakeTxTemperature@x,w
  4046  0DA0  1C03               	skipc
  4047  0DA1  2DA6               	goto	l32314
  4048                           
  4049                           ;Function.c: 320: {
  4050                           ;Function.c: 321: x=x-10;
  4051  0DA2  30F6               	movlw	246
  4052  0DA3  07A2               	addwf	MakeTxTemperature@x,f
  4053                           
  4054                           ;Function.c: 322: x=x+0x41;
  4055  0DA4  3041               	movlw	65
  4056  0DA5  2DA7               	goto	L13
  4057  0DA6                     l32314:	
  4058                           ;Function.c: 324: }
  4059                           
  4060                           
  4061                           ;Function.c: 325: else
  4062                           ;Function.c: 326: {
  4063                           ;Function.c: 327: x=x+'0';
  4064  0DA6  3030               	movlw	48
  4065  0DA7                     L13:	
  4066  0DA7  07A2               	addwf	MakeTxTemperature@x,f
  4067                           
  4068                           ;Function.c: 323: TxTemperature[2]=x;
  4069  0DA8  0822               	movf	MakeTxTemperature@x,w
  4070  0DA9  00D0               	movwf	_TxTemperature+2
  4071                           
  4072                           ;Function.c: 329: }
  4073                           ;Function.c: 330: x=(T.u8L&0x0F);
  4074  0DAA  0820               	movf	MakeTxTemperature@T,w
  4075  0DAB  00A2               	movwf	MakeTxTemperature@x
  4076  0DAC  300F               	movlw	15
  4077  0DAD  05A2               	andwf	MakeTxTemperature@x,f
  4078                           
  4079                           ;Function.c: 331: if(x>9)
  4080  0DAE  300A               	movlw	10
  4081  0DAF  0222               	subwf	MakeTxTemperature@x,w
  4082  0DB0  1C03               	skipc
  4083  0DB1  2DB9               	goto	l32326
  4084                           
  4085                           ;Function.c: 332: {
  4086                           ;Function.c: 333: x=x-10;
  4087  0DB2  30F6               	movlw	246
  4088  0DB3  07A2               	addwf	MakeTxTemperature@x,f
  4089                           
  4090                           ;Function.c: 334: x=x+0x41;
  4091  0DB4  3041               	movlw	65
  4092  0DB5                     L10:	
  4093  0DB5  07A2               	addwf	MakeTxTemperature@x,f
  4094                           
  4095                           ;Function.c: 335: TxTemperature[3]=x;
  4096  0DB6  0822               	movf	MakeTxTemperature@x,w
  4097  0DB7  00D1               	movwf	_TxTemperature+3
  4098                           
  4099                           ;Function.c: 336: }
  4100  0DB8  0008               	return
  4101  0DB9                     l32326:	
  4102                           
  4103                           ;Function.c: 337: else
  4104                           ;Function.c: 338: {
  4105                           ;Function.c: 339: x=x+'0';
  4106  0DB9  3030               	movlw	48
  4107  0DBA  2DB5               	goto	L10
  4108  0DBB                     __end_of_MakeTxTemperature:	
  4109  0DBB                     __ptext2017:	
  4110 ;; =============== function _strcpy ends ============
  4111                           
  4112                           
  4113 ;; *************** function _eeprom_read *****************
  4114 ;; Defined at:
  4115 ;;		line 8 in file "eeread.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  addr            1    wreg     unsigned char 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  addr            1    2[BANK0 ] unsigned char 
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      unsigned char 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, status,0
  4124 ;; Tracked objects:
  4125 ;;		On entry : 1F/0
  4126 ;;		On exit  : 1F/3
  4127 ;;		Unchanged: FFFE0/0
  4128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4129 ;;      Params:         0       0       0       0       0       0       0       0
  4130 ;;      Locals:         0       1       0       0       0       0       0       0
  4131 ;;      Temps:          0       2       0       0       0       0       0       0
  4132 ;;      Totals:         0       3       0       0       0       0       0       0
  4133 ;;Total ram usage:        3 bytes
  4134 ;; Hardware stack levels used:    1
  4135 ;; Hardware stack levels required when called:    3
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_InteractServer
  4140 ;;		_GetRomData
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143  0DBB                     _eeprom_read:	
  4144                           
  4145                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4146                           ;eeprom_read@addr stored from wreg
  4147  0DBB  00A2               	movwf	eeprom_read@addr
  4148  0DBC                     l27510:	
  4149  0DBC  0064               	clrwdt	;#
  4150  0DBD  0023               	movlb	3	; select bank3
  4151  0DBE  1895               	btfsc	21,1
  4152  0DBF  2DBC               	goto	l27510
  4153  0DC0  0020               	movlb	0	; select bank0
  4154  0DC1  0822               	movf	eeprom_read@addr,w
  4155  0DC2  0023               	movlb	3	; select bank3
  4156  0DC3  0091               	movwf	17	;volatile
  4157  0DC4  303F               	movlw	63
  4158  0DC5  0595               	andwf	21,f	;volatile
  4159  0DC6  1415               	bsf	21,0
  4160  0DC7  1003               	clrc
  4161  0DC8  1815               	btfsc	21,0
  4162  0DC9  1403               	setc
  4163  0DCA  3000               	movlw	0
  4164  0DCB  3D09               	addwfc	9,w
  4165  0DCC  0020               	movlb	0	; select bank0
  4166  0DCD  00A0               	movwf	??_eeprom_read
  4167  0DCE  01A1               	clrf	??_eeprom_read+1
  4168  0DCF  0023               	movlb	3	; select bank3
  4169  0DD0  0813               	movf	19,w	;volatile
  4170  0DD1  0008               	return
  4171  0DD2                     __end_of_eeprom_read:	
  4172  0DD2                     __ptext2018:	
  4173 ;; =============== function _eeprom_read ends ============
  4174                           
  4175                           
  4176 ;; *************** function _Uart1_PutChar *****************
  4177 ;; Defined at:
  4178 ;;		line 47 in file "F:\work\WYP\NBIoT\Uart.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  c               1    wreg     unsigned char 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  c               1    0[BANK0 ] unsigned char 
  4183 ;; Return value:  Size  Location     Type
  4184 ;;		None               void
  4185 ;; Registers used:
  4186 ;;		wreg
  4187 ;; Tracked objects:
  4188 ;;		On entry : 1C/0
  4189 ;;		On exit  : 1F/3
  4190 ;;		Unchanged: FFFE0/0
  4191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4192 ;;      Params:         0       0       0       0       0       0       0       0
  4193 ;;      Locals:         0       1       0       0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0
  4195 ;;      Totals:         0       1       0       0       0       0       0       0
  4196 ;;Total ram usage:        1 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:    3
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_InteractServer
  4203 ;;		_Uart1_PutString
  4204 ;;		_Uart1_PutHex
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207  0DD2                     _Uart1_PutChar:	
  4208                           
  4209                           ; Regs used in _Uart1_PutChar: [wreg]
  4210                           ;Uart1_PutChar@c stored from wreg
  4211  0DD2  0020               	movlb	0	; select bank0
  4212  0DD3  00A0               	movwf	Uart1_PutChar@c
  4213  0DD4                     l23326:	
  4214                           ;Uart.c: 48: while(TRMT==0);
  4215                           
  4216  0DD4  0023               	movlb	3	; select bank3
  4217  0DD5  1C9E               	btfss	30,1
  4218  0DD6  2DD4               	goto	l23326
  4219                           
  4220                           ;Uart.c: 52: TXREG=c;
  4221  0DD7  0020               	movlb	0	; select bank0
  4222  0DD8  0820               	movf	Uart1_PutChar@c,w
  4223  0DD9  0023               	movlb	3	; select bank3
  4224  0DDA  009A               	movwf	26	;volatile
  4225  0DDB  0008               	return
  4226  0DDC                     __end_of_Uart1_PutChar:	
  4227  0DDC                     __ptext1992:	
  4228 ;; =============== function _Uart1_PutHex ends ============
  4229                           
  4230                           
  4231 ;; *************** function _Uart1_PutString *****************
  4232 ;; Defined at:
  4233 ;;		line 63 in file "F:\work\WYP\NBIoT\Uart.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;  pString         2    1[BANK0 ] PTR const unsigned char 
  4236 ;;		 -> STR_33(3), STR_29(11), STR_27(8), STR_25(10), 
  4237 ;;		 -> STR_24(9), STR_23(6), STR_22(4), STR_21(3), 
  4238 ;;		 -> STR_15(16), STR_14(13), STR_13(17), STR_9(16), 
  4239 ;;		 -> STR_5(16), STR_4(32), STR_3(12), STR_2(36), 
  4240 ;;		 -> STR_1(23), 
  4241 ;; Auto vars:     Size  Location     Type
  4242 ;;  c               1    3[BANK0 ] unsigned char 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;		None               void
  4245 ;; Registers used:
  4246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 1F/0
  4249 ;;		On exit  : 1F/0
  4250 ;;		Unchanged: FFFE0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4252 ;;      Params:         0       2       0       0       0       0       0       0
  4253 ;;      Locals:         0       1       0       0       0       0       0       0
  4254 ;;      Temps:          0       0       0       0       0       0       0       0
  4255 ;;      Totals:         0       3       0       0       0       0       0       0
  4256 ;;Total ram usage:        3 bytes
  4257 ;; Hardware stack levels used:    1
  4258 ;; Hardware stack levels required when called:    4
  4259 ;; This function calls:
  4260 ;;		_Uart1_PutChar
  4261 ;; This function is called by:
  4262 ;;		_InteractServer
  4263 ;;		_ATCommand_SendCmd
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266  0DDC                     _Uart1_PutString:	
  4267  0DDC                     l23338:	
  4268                           ; Regs used in _Uart1_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4269                           ;Uart.c: 64: char c;
  4270                           ;Uart.c: 65: while(1)
  4271                           
  4272                           
  4273                           ;Uart.c: 66: {
  4274                           ;Uart.c: 67: c=*pString;
  4275  0DDC  0821               	movf	Uart1_PutString@pString,w
  4276  0DDD  0084               	movwf	4
  4277  0DDE  0822               	movf	Uart1_PutString@pString+1,w
  4278  0DDF  0085               	movwf	5
  4279  0DE0  0800               	movf	0,w	;code access
  4280  0DE1  00A3               	movwf	Uart1_PutString@c
  4281                           
  4282                           ;Uart.c: 68: if(c=='\0')
  4283  0DE2  08A3               	movf	Uart1_PutString@c,f
  4284  0DE3  1903               	btfsc	3,2
  4285  0DE4  0008               	return
  4286                           
  4287                           ;Uart.c: 70: Uart1_PutChar(c);
  4288  0DE5  0823               	movf	Uart1_PutString@c,w
  4289  0DE6  25D2  3188         	fcall	_Uart1_PutChar
  4290                           
  4291                           ;Uart.c: 71: pString++;
  4292  0DE8  0020               	movlb	0	; select bank0
  4293  0DE9  0AA1               	incf	Uart1_PutString@pString,f
  4294  0DEA  1903               	skipnz
  4295  0DEB  0AA2               	incf	Uart1_PutString@pString+1,f
  4296  0DEC  2DDC               	goto	l23338
  4297  0DED                     __end_of_Uart1_PutString:	
  4298  0DED                     __ptext2008:	
  4299 ;; =============== function ___wmul ends ============
  4300                           
  4301                           
  4302 ;; *************** function ___bmul *****************
  4303 ;; Defined at:
  4304 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\bmul.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  multiplier      1    wreg     unsigned char 
  4307 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4310 ;;  product         1    1[BANK0 ] unsigned char 
  4311 ;; Return value:  Size  Location     Type
  4312 ;;                  1    wreg      unsigned char 
  4313 ;; Registers used:
  4314 ;;		wreg, status,2, status,0
  4315 ;; Tracked objects:
  4316 ;;		On entry : 1F/0
  4317 ;;		On exit  : 1F/0
  4318 ;;		Unchanged: FFFE0/0
  4319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4320 ;;      Params:         0       1       0       0       0       0       0       0
  4321 ;;      Locals:         0       2       0       0       0       0       0       0
  4322 ;;      Temps:          0       0       0       0       0       0       0       0
  4323 ;;      Totals:         0       3       0       0       0       0       0       0
  4324 ;;Total ram usage:        3 bytes
  4325 ;; Hardware stack levels used:    1
  4326 ;; Hardware stack levels required when called:    3
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_main
  4331 ;;		_InteractServer
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334  0DED                     ___bmul:	
  4335                           
  4336                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4337                           ;___bmul@multiplier stored from wreg
  4338  0DED  00A2               	movwf	___bmul@multiplier
  4339  0DEE  01A1               	clrf	___bmul@product
  4340  0DEF                     l32350:	
  4341  0DEF  0820               	movf	___bmul@multiplicand,w
  4342  0DF0  1822               	btfsc	___bmul@multiplier,0
  4343  0DF1  07A1               	addwf	___bmul@product,f
  4344  0DF2  35A0               	lslf	___bmul@multiplicand,f
  4345  0DF3  36A2               	lsrf	___bmul@multiplier,f
  4346  0DF4  08A2               	movf	___bmul@multiplier,f
  4347  0DF5  1D03               	skipz
  4348  0DF6  2DEF               	goto	l32350
  4349  0DF7  0821               	movf	___bmul@product,w
  4350  0DF8  0008               	return
  4351  0DF9                     __end_of___bmul:	
  4352  0DF9                     __ptext2016:	
  4353 ;; =============== function _GetVerify_Sum ends ============
  4354                           
  4355                           
  4356 ;; *************** function _strcpy *****************
  4357 ;; Defined at:
  4358 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strcpy.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;  to              1    wreg     PTR unsigned char 
  4361 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4362 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4363 ;;		 -> STR_37(6), STR_36(3), STR_35(6), STR_34(3), 
  4364 ;;		 -> STR_32(6), STR_31(3), STR_20(6), STR_19(7), 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4367 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4368 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  4369 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      PTR unsigned char 
  4372 ;; Registers used:
  4373 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4374 ;; Tracked objects:
  4375 ;;		On entry : 1F/0
  4376 ;;		On exit  : 1F/0
  4377 ;;		Unchanged: FFFE0/0
  4378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4379 ;;      Params:         0       2       0       0       0       0       0       0
  4380 ;;      Locals:         0       2       0       0       0       0       0       0
  4381 ;;      Temps:          0       2       0       0       0       0       0       0
  4382 ;;      Totals:         0       6       0       0       0       0       0       0
  4383 ;;Total ram usage:        6 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    3
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_InteractServer
  4390 ;;		_ATCommand_Init
  4391 ;;		_ATCommand_SendCmd
  4392 ;;		_ATCommand_WaitData
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395  0DF9                     _strcpy:	
  4396                           
  4397                           ; Regs used in _strcpy: [wreg-status,0+pclath]
  4398                           ;strcpy@to stored from wreg
  4399  0DF9  00A4               	movwf	strcpy@to
  4400  0DFA  00A5               	movwf	strcpy@cp
  4401  0DFB                     l30592:	
  4402  0DFB  0825               	movf	strcpy@cp,w
  4403  0DFC  0086               	movwf	6
  4404  0DFD  0187               	clrf	7
  4405  0DFE  0AA5               	incf	strcpy@cp,f
  4406  0DFF  0821               	movf	strcpy@from+1,w
  4407  0E00  00A3               	movwf	??_strcpy+1
  4408  0E01  0820               	movf	strcpy@from,w
  4409  0E02  00A2               	movwf	??_strcpy
  4410  0E03  0AA0               	incf	strcpy@from,f
  4411  0E04  1903               	skipnz
  4412  0E05  0AA1               	incf	strcpy@from+1,f
  4413  0E06  0084               	movwf	4
  4414  0E07  0823               	movf	??_strcpy+1,w
  4415  0E08  0085               	movwf	5
  4416  0E09  0800               	movf	0,w	;code access
  4417  0E0A  3FC0               	movwi [0]fsr1
  4418  0E0B  0889               	movf	9,f
  4419  0E0C  1903               	btfsc	3,2
  4420  0E0D  0008               	return
  4421  0E0E  2DFB               	goto	l30592
  4422  0E0F                     __end_of_strcpy:	
  4423  0E0F                     __ptext2006:	
  4424 ;; =============== function ___lwmod ends ============
  4425                           
  4426                           
  4427 ;; *************** function ___lwdiv *****************
  4428 ;; Defined at:
  4429 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  divisor         2    0[BANK0 ] unsigned int 
  4432 ;;  dividend        2    2[BANK0 ] unsigned int 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  quotient        2    5[BANK0 ] unsigned int 
  4435 ;;  counter         1    4[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2    0[BANK0 ] unsigned int 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 1F/0
  4442 ;;		On exit  : 1F/0
  4443 ;;		Unchanged: FFFE0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4445 ;;      Params:         0       4       0       0       0       0       0       0
  4446 ;;      Locals:         0       3       0       0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0
  4448 ;;      Totals:         0       7       0       0       0       0       0       0
  4449 ;;Total ram usage:        7 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    3
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_InteractServer
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458  0E0F                     ___lwdiv:	
  4459                           
  4460                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4461  0E0F  01A5               	clrf	___lwdiv@quotient
  4462  0E10  01A6               	clrf	___lwdiv@quotient+1
  4463  0E11  0821               	movf	___lwdiv@divisor+1,w
  4464  0E12  0420               	iorwf	___lwdiv@divisor,w
  4465  0E13  1903               	skipnz
  4466  0E14  2E2F               	goto	l32402
  4467  0E15  01A4               	clrf	___lwdiv@counter
  4468  0E16                     L9:	
  4469  0E16  0AA4               	incf	___lwdiv@counter,f
  4470  0E17  1BA1               	btfsc	___lwdiv@divisor+1,7
  4471  0E18  2E1C               	goto	l32390
  4472  0E19  35A0               	lslf	___lwdiv@divisor,f
  4473  0E1A  0DA1               	rlf	___lwdiv@divisor+1,f
  4474  0E1B  2E16               	goto	L9
  4475  0E1C                     l32390:	
  4476  0E1C  35A5               	lslf	___lwdiv@quotient,f
  4477  0E1D  0DA6               	rlf	___lwdiv@quotient+1,f
  4478  0E1E  0821               	movf	___lwdiv@divisor+1,w
  4479  0E1F  0223               	subwf	___lwdiv@dividend+1,w
  4480  0E20  1D03               	skipz
  4481  0E21  2E24               	goto	u7075
  4482  0E22  0820               	movf	___lwdiv@divisor,w
  4483  0E23  0222               	subwf	___lwdiv@dividend,w
  4484  0E24                     u7075:	
  4485  0E24  1C03               	skipc
  4486  0E25  2E2B               	goto	l32398
  4487  0E26  0820               	movf	___lwdiv@divisor,w
  4488  0E27  02A2               	subwf	___lwdiv@dividend,f
  4489  0E28  0821               	movf	___lwdiv@divisor+1,w
  4490  0E29  3BA3               	subwfb	___lwdiv@dividend+1,f
  4491  0E2A  1425               	bsf	___lwdiv@quotient,0
  4492  0E2B                     l32398:	
  4493  0E2B  36A1               	lsrf	___lwdiv@divisor+1,f
  4494  0E2C  0CA0               	rrf	___lwdiv@divisor,f
  4495  0E2D  0BA4               	decfsz	___lwdiv@counter,f
  4496  0E2E  2E1C               	goto	l32390
  4497  0E2F                     l32402:	
  4498  0E2F  0826               	movf	___lwdiv@quotient+1,w
  4499  0E30  00A1               	movwf	?___lwdiv+1
  4500  0E31  0825               	movf	___lwdiv@quotient,w
  4501  0E32  00A0               	movwf	?___lwdiv
  4502  0E33  0008               	return
  4503  0E34                     __end_of___lwdiv:	
  4504  0E34                     __ptext1964:	
  4505 ;; =============== function _TestProc ends ============
  4506                           
  4507                           
  4508 ;; *************** function _CallProc *****************
  4509 ;; Defined at:
  4510 ;;		line 14 in file "F:\work\WYP\NBIoT\Function.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;		None
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  retry           1   39[BANK0 ] unsigned char 
  4515 ;; Return value:  Size  Location     Type
  4516 ;;		None               void
  4517 ;; Registers used:
  4518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  4519 ;; Tracked objects:
  4520 ;;		On entry : 10/F
  4521 ;;		On exit  : 1F/F
  4522 ;;		Unchanged: 0/0
  4523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4524 ;;      Params:         0       0       0       0       0       0       0       0
  4525 ;;      Locals:         0       1       0       0       0       0       0       0
  4526 ;;      Temps:          0       0       0       0       0       0       0       0
  4527 ;;      Totals:         0       1       0       0       0       0       0       0
  4528 ;;Total ram usage:        1 bytes
  4529 ;; Hardware stack levels used:    1
  4530 ;; Hardware stack levels required when called:    8
  4531 ;; This function calls:
  4532 ;;		_CallSend
  4533 ;;		_LcdDisplay_CurTemp
  4534 ;;		___delay_20ms
  4535 ;;		_LcdDisplay_Err
  4536 ;; This function is called by:
  4537 ;;		_main
  4538 ;;		_TestProc
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541  0E34                     _CallProc:	
  4542  0E34                     l8633:	
  4543                           ;Function.c: 16: while(WA==0);
  4544                           
  4545                           ; Regs used in _CallProc: [wreg-btemp+0+pclath+cstack]
  4546                           
  4547  0E34  002F               	movlb	15	; select bank15
  4548  0E35  1E12               	btfss	18,4
  4549  0E36  2E34               	goto	l8633
  4550                           
  4551                           ;Function.c: 17: SEG5COM0=1;
  4552  0E37  16A0               	bsf	32,5
  4553  0E38                     l8636:	
  4554                           ;Function.c: 18: while(WA==0);
  4555                           
  4556  0E38  1E12               	btfss	18,4
  4557  0E39  2E38               	goto	l8636
  4558                           
  4559                           ;Function.c: 19: SEG5COM2=1;
  4560  0E3A  16A6               	bsf	38,5
  4561  0E3B                     l8639:	
  4562                           ;Function.c: 20: while(WA==0);
  4563                           
  4564  0E3B  1E12               	btfss	18,4
  4565  0E3C  2E3B               	goto	l8639
  4566                           
  4567                           ;Function.c: 21: SEG21COM3=0;
  4568  0E3D  12AB               	bcf	43,5
  4569  0E3E                     l8642:	
  4570                           ;Function.c: 22: while(WA==0);
  4571                           
  4572  0E3E  1E12               	btfss	18,4
  4573  0E3F  2E3E               	goto	l8642
  4574                           
  4575                           ;Function.c: 23: SEG21COM2=0;
  4576  0E40  12A8               	bcf	40,5
  4577                           
  4578                           ;Function.c: 24: if(gFlags.bNotify)
  4579  0E41  0020               	movlb	0	; select bank0
  4580  0E42  1C65               	btfss	_gFlags,0
  4581  0E43  2E4B               	goto	l33482
  4582  0E44                     l8646:	
  4583  0E44  002F               	movlb	15	; select bank15
  4584  0E45  1E12               	btfss	18,4
  4585  0E46  2E44               	goto	l8646
  4586                           
  4587                           ;Function.c: 27: SEG22COM3=1;
  4588  0E47  172B               	bsf	43,6
  4589  0E48                     l8649:	
  4590                           ;Function.c: 28: while(WA==0);
  4591                           
  4592  0E48  1E12               	btfss	18,4
  4593  0E49  2E48               	goto	l8649
  4594                           
  4595                           ;Function.c: 29: SEG3COM3=1;
  4596  0E4A  15A9               	bsf	41,3
  4597  0E4B                     l33482:	
  4598                           
  4599                           ;Function.c: 30: }
  4600                           ;Function.c: 32: unsigned char retry=2;
  4601  0E4B  3002               	movlw	2
  4602  0E4C  0020               	movlb	0	; select bank0
  4603  0E4D  00C7               	movwf	CallProc@retry
  4604                           
  4605                           ;Function.c: 33: while(retry!=0)
  4606  0E4E  2E59               	goto	l33498
  4607  0E4F                     l33492:	
  4608                           
  4609                           ;Function.c: 39: {
  4610                           ;Function.c: 40: retry--;
  4611  0E4F  03C7               	decf	CallProc@retry,f
  4612                           
  4613                           ;Function.c: 45: LcdDisplay_CurTemp();
  4614  0E50  2696  3188         	fcall	_LcdDisplay_CurTemp
  4615                           
  4616                           ;Function.c: 46: __delay_20ms(3000);
  4617  0E52  30B8               	movlw	184
  4618  0E53  0020               	movlb	0	; select bank0
  4619  0E54  00A0               	movwf	?___delay_20ms
  4620  0E55  300B               	movlw	11
  4621  0E56  00A1               	movwf	?___delay_20ms+1
  4622  0E57  22D5  3188         	fcall	___delay_20ms
  4623  0E59                     l33498:	
  4624                           ;Function.c: 47: }
  4625                           
  4626  0E59  08C7               	movf	CallProc@retry,f
  4627  0E5A  1903               	btfsc	3,2
  4628  0E5B  2E62               	goto	l8657
  4629                           
  4630                           ;Function.c: 34: {
  4631                           ;Function.c: 35: ErrState=NoErr;
  4632  0E5C  01E2               	clrf	_ErrState
  4633                           
  4634                           ;Function.c: 36: gFlags.bRetry=0;
  4635  0E5D  1265               	bcf	_gFlags,4
  4636                           
  4637                           ;Function.c: 37: CallSend();
  4638  0E5E  212D  3188         	fcall	_CallSend
  4639                           
  4640                           ;Function.c: 38: if(gFlags.bRetry)
  4641  0E60  1A65               	btfsc	_gFlags,4
  4642  0E61  2E4F               	goto	l33492
  4643  0E62                     l8657:	
  4644  0E62  002F               	movlb	15	; select bank15
  4645  0E63  1E12               	btfss	18,4
  4646  0E64  2E62               	goto	l8657
  4647                           
  4648                           ;Function.c: 54: SEG5COM0=0;
  4649  0E65  12A0               	bcf	32,5
  4650  0E66                     l8660:	
  4651                           ;Function.c: 55: while(WA==0);
  4652                           
  4653  0E66  1E12               	btfss	18,4
  4654  0E67  2E66               	goto	l8660
  4655                           
  4656                           ;Function.c: 56: SEG5COM2=0;
  4657  0E68  12A6               	bcf	38,5
  4658  0E69                     l8663:	
  4659                           ;Function.c: 57: while(WA==0);
  4660                           
  4661  0E69  1E12               	btfss	18,4
  4662  0E6A  2E69               	goto	l8663
  4663                           
  4664                           ;Function.c: 58: SEG22COM3=0;
  4665  0E6B  132B               	bcf	43,6
  4666  0E6C                     l8666:	
  4667                           ;Function.c: 59: while(WA==0);
  4668                           
  4669  0E6C  1E12               	btfss	18,4
  4670  0E6D  2E6C               	goto	l8666
  4671                           
  4672                           ;Function.c: 60: SEG3COM3=0;
  4673  0E6E  11A9               	bcf	41,3
  4674                           
  4675                           ;Function.c: 61: if(ErrState!=NoErr)
  4676  0E6F  0020               	movlb	0	; select bank0
  4677  0E70  0862               	movf	_ErrState,w
  4678  0E71  1903               	btfsc	3,2
  4679  0E72  2E75               	goto	l33504
  4680                           
  4681                           ;Function.c: 62: {
  4682                           ;Function.c: 63: LcdDisplay_Err();
  4683  0E73  3184  2C17         	ljmp	l2339
  4684  0E75                     l33504:	
  4685                           ;Function.c: 64: }
  4686                           
  4687                           
  4688                           ;Function.c: 65: else
  4689                           ;Function.c: 66: {
  4690                           ;Function.c: 67: LcdDisplay_CurTemp();
  4691  0E75  2E96               	ljmp	l32476
  4692  0E76                     __end_of_CallProc:	
  4693  0E76                     __ptext2005:	
  4694 ;; =============== function ___lbdiv ends ============
  4695                           
  4696                           
  4697 ;; *************** function ___lwmod *****************
  4698 ;; Defined at:
  4699 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  divisor         2    0[BANK0 ] unsigned int 
  4702 ;;  dividend        2    2[BANK0 ] unsigned int 
  4703 ;; Auto vars:     Size  Location     Type
  4704 ;;  counter         1    4[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  2    0[BANK0 ] unsigned int 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0
  4709 ;; Tracked objects:
  4710 ;;		On entry : 1F/0
  4711 ;;		On exit  : 1F/0
  4712 ;;		Unchanged: FFFE0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4714 ;;      Params:         0       4       0       0       0       0       0       0
  4715 ;;      Locals:         0       1       0       0       0       0       0       0
  4716 ;;      Temps:          0       0       0       0       0       0       0       0
  4717 ;;      Totals:         0       5       0       0       0       0       0       0
  4718 ;;Total ram usage:        5 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    3
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_InteractServer
  4725 ;; This function uses a non-reentrant model
  4726 ;;
  4727  0E76                     ___lwmod:	
  4728                           
  4729                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4730  0E76  0821               	movf	___lwmod@divisor+1,w
  4731  0E77  0420               	iorwf	___lwmod@divisor,w
  4732  0E78  1903               	skipnz
  4733  0E79  2E91               	goto	l32422
  4734  0E7A  01A4               	clrf	___lwmod@counter
  4735  0E7B                     L8:	
  4736  0E7B  0AA4               	incf	___lwmod@counter,f
  4737  0E7C  1BA1               	btfsc	___lwmod@divisor+1,7
  4738  0E7D  2E81               	goto	l32414
  4739  0E7E  35A0               	lslf	___lwmod@divisor,f
  4740  0E7F  0DA1               	rlf	___lwmod@divisor+1,f
  4741  0E80  2E7B               	goto	L8
  4742  0E81                     l32414:	
  4743  0E81  0821               	movf	___lwmod@divisor+1,w
  4744  0E82  0223               	subwf	___lwmod@dividend+1,w
  4745  0E83  1D03               	skipz
  4746  0E84  2E87               	goto	u7115
  4747  0E85  0820               	movf	___lwmod@divisor,w
  4748  0E86  0222               	subwf	___lwmod@dividend,w
  4749  0E87                     u7115:	
  4750  0E87  1C03               	skipc
  4751  0E88  2E8D               	goto	l32418
  4752  0E89  0820               	movf	___lwmod@divisor,w
  4753  0E8A  02A2               	subwf	___lwmod@dividend,f
  4754  0E8B  0821               	movf	___lwmod@divisor+1,w
  4755  0E8C  3BA3               	subwfb	___lwmod@dividend+1,f
  4756  0E8D                     l32418:	
  4757  0E8D  36A1               	lsrf	___lwmod@divisor+1,f
  4758  0E8E  0CA0               	rrf	___lwmod@divisor,f
  4759  0E8F  0BA4               	decfsz	___lwmod@counter,f
  4760  0E90  2E81               	goto	l32414
  4761  0E91                     l32422:	
  4762  0E91  0823               	movf	___lwmod@dividend+1,w
  4763  0E92  00A1               	movwf	?___lwmod+1
  4764  0E93  0822               	movf	___lwmod@dividend,w
  4765  0E94  00A0               	movwf	?___lwmod
  4766  0E95  0008               	return
  4767  0E96                     __end_of___lwmod:	
  4768  0E96                     __ptext2000:	
  4769 ;; =============== function _LcdDisplay_Err ends ============
  4770                           
  4771                           
  4772 ;; *************** function _LcdDisplay_CurTemp *****************
  4773 ;; Defined at:
  4774 ;;		line 340 in file "F:\work\WYP\NBIoT\Display.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;		None
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  t2              1    8[BANK0 ] unsigned char 
  4779 ;;  t1              1    7[BANK0 ] unsigned char 
  4780 ;; Return value:  Size  Location     Type
  4781 ;;		None               void
  4782 ;; Registers used:
  4783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 1F/0
  4786 ;;		On exit  : 1F/F
  4787 ;;		Unchanged: FFFE0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4789 ;;      Params:         0       0       0       0       0       0       0       0
  4790 ;;      Locals:         0       2       0       0       0       0       0       0
  4791 ;;      Temps:          0       2       0       0       0       0       0       0
  4792 ;;      Totals:         0       4       0       0       0       0       0       0
  4793 ;;Total ram usage:        4 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    4
  4796 ;; This function calls:
  4797 ;;		___lbdiv
  4798 ;;		___lbmod
  4799 ;;		_LcdDisplayNum
  4800 ;; This function is called by:
  4801 ;;		_ReadTData
  4802 ;;		_CallProc
  4803 ;; This function uses a non-reentrant model
  4804 ;;
  4805  0E96                     _LcdDisplay_CurTemp:	
  4806  0E96                     l32476:	
  4807                           ; Regs used in _LcdDisplay_CurTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4808                           
  4809                           
  4810                           ;Display.c: 341: unsigned char t1,t2;
  4811                           ;Display.c: 345: if(CurTemp.u16==0xf000)
  4812  0E96  0857               	movf	_CurTemp+1,w
  4813  0E97  3AF0               	xorlw	240
  4814  0E98  0456               	iorwf	_CurTemp,w
  4815  0E99  1D03               	skipz
  4816  0E9A  2EA9               	goto	l2333
  4817                           
  4818                           ;Display.c: 346: {
  4819                           ;Display.c: 347: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  4820  0E9B  3079               	movlw	121
  4821  0E9C  00E9               	movwf	_DpyNum
  4822                           
  4823                           ;Display.c: 348: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20;
  4824  0E9D  303F               	movlw	63
  4825  0E9E  00EA               	movwf	_DpyNum+1
  4826                           
  4827                           ;Display.c: 349: DpyNum[2]=0x02 | 0x04;
  4828  0E9F  3006               	movlw	6
  4829  0EA0  00EB               	movwf	_DpyNum+2
  4830  0EA1                     l2326:	
  4831                           ;Display.c: 350: while(WA==0);
  4832                           
  4833  0EA1  002F               	movlb	15	; select bank15
  4834  0EA2  1E12               	btfss	18,4
  4835  0EA3  2EA1               	goto	l2326
  4836                           
  4837                           ;Display.c: 351: SEG21COM2=1;
  4838  0EA4  16A8               	bsf	40,5
  4839  0EA5                     l2329:	
  4840                           ;Display.c: 352: while(WA==0);
  4841                           
  4842  0EA5  1E12               	btfss	18,4
  4843  0EA6  2EA5               	goto	l2329
  4844                           
  4845                           ;Display.c: 353: SEG5COM3=0;
  4846  0EA7  12A9               	bcf	41,5
  4847                           
  4848                           ;Display.c: 354: }
  4849  0EA8  2EE3               	goto	l32496
  4850  0EA9                     l2333:	
  4851  0EA9  002F               	movlb	15	; select bank15
  4852  0EAA  1E12               	btfss	18,4
  4853  0EAB  2EA9               	goto	l2333
  4854                           
  4855                           ;Display.c: 358: SEG5COM3=1;
  4856  0EAC  16A9               	bsf	41,5
  4857                           
  4858                           ;Display.c: 359: t1=CurTemp.u16>>4;
  4859  0EAD  0020               	movlb	0	; select bank0
  4860  0EAE  0857               	movf	_CurTemp+1,w
  4861  0EAF  00A6               	movwf	??_LcdDisplay_CurTemp+1
  4862  0EB0  0856               	movf	_CurTemp,w
  4863  0EB1  00A5               	movwf	??_LcdDisplay_CurTemp
  4864  0EB2  3004               	movlw	4
  4865  0EB3                     u7545:	
  4866  0EB3  36A6               	lsrf	??_LcdDisplay_CurTemp+1,f
  4867  0EB4  0CA5               	rrf	??_LcdDisplay_CurTemp,f
  4868  0EB5  0B89               	decfsz	9,f
  4869  0EB6  2EB3               	goto	u7545
  4870  0EB7  0825               	movf	??_LcdDisplay_CurTemp,w
  4871  0EB8  00A7               	movwf	LcdDisplay_CurTemp@t1
  4872                           
  4873                           ;Display.c: 360: t2=CurTemp.u16&0x0f;
  4874  0EB9  0856               	movf	_CurTemp,w
  4875  0EBA  00A8               	movwf	LcdDisplay_CurTemp@t2
  4876  0EBB  300F               	movlw	15
  4877  0EBC  05A8               	andwf	LcdDisplay_CurTemp@t2,f
  4878                           
  4879                           ;Display.c: 361: t2=DS18X20_ToDecicel[t2];
  4880  0EBD  0828               	movf	LcdDisplay_CurTemp@t2,w
  4881  0EBE  3E12               	addlw	low (_DS18X20_ToDecicel| (0+32768))
  4882  0EBF  0084               	movwf	4
  4883  0EC0  3090               	movlw	high (_DS18X20_ToDecicel| (0+32768))
  4884  0EC1  1803               	skipnc
  4885  0EC2  3E01               	addlw	1
  4886  0EC3  0085               	movwf	5
  4887  0EC4  0800               	movf	0,w	;code access
  4888  0EC5  00A8               	movwf	LcdDisplay_CurTemp@t2
  4889                           
  4890                           ;Display.c: 362: DpyNum[0]=SegCode[t1/10];
  4891  0EC6  300A               	movlw	10
  4892  0EC7  00A0               	movwf	?___lbdiv
  4893  0EC8  0827               	movf	LcdDisplay_CurTemp@t1,w
  4894  0EC9  2770  3188         	fcall	___lbdiv
  4895  0ECB  3E01               	addlw	low (_SegCode| (0+32768))
  4896  0ECC  0084               	movwf	4
  4897  0ECD  3090               	movlw	high (_SegCode| (0+32768))
  4898  0ECE  1803               	skipnc
  4899  0ECF  3E01               	addlw	1
  4900  0ED0  0085               	movwf	5
  4901  0ED1  0800               	movf	0,w	;code access
  4902  0ED2  00E9               	movwf	_DpyNum
  4903                           
  4904                           ;Display.c: 363: DpyNum[1]=SegCode[t1%10];
  4905  0ED3  300A               	movlw	10
  4906  0ED4  00A0               	movwf	?___lbmod
  4907  0ED5  0827               	movf	LcdDisplay_CurTemp@t1,w
  4908  0ED6  27A3               	fcall	___lbmod
  4909  0ED7  3184  2437         	fcall	PL4	;call to abstracted procedure
  4910                           
  4911                           ;Display.c: 364: DpyNum[1] |= 0x80;
  4912  0ED9  17EA               	bsf	_DpyNum+1,7
  4913                           
  4914                           ;Display.c: 365: DpyNum[2]=SegCode[t2];
  4915  0EDA  0828               	movf	LcdDisplay_CurTemp@t2,w
  4916  0EDB  3E01               	addlw	low (_SegCode| (0+32768))
  4917  0EDC  0084               	movwf	4
  4918  0EDD  3090               	movlw	high (_SegCode| (0+32768))
  4919  0EDE  1803               	skipnc
  4920  0EDF  3E01               	addlw	1
  4921  0EE0  0085               	movwf	5
  4922  0EE1  0800               	movf	0,w	;code access
  4923  0EE2  00EB               	movwf	_DpyNum+2
  4924  0EE3                     l32496:	
  4925                           
  4926                           ;Display.c: 366: }
  4927                           ;Display.c: 367: LcdDisplayNum();
  4928  0EE3  3183  2B0E         	ljmp	l32110
  4929  0EE5                     __end_of_LcdDisplay_CurTemp:	
  4930  0EE5                     __ptext2020:	
  4931 ;; =============== function _MakeTxTemperature ends ============
  4932                           
  4933                           
  4934 ;; *************** function _eeprom_write *****************
  4935 ;; Defined at:
  4936 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\eewrite.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  addr            1    wreg     unsigned char 
  4939 ;;  value           1    0[BANK0 ] unsigned char 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;  addr            1    1[BANK0 ] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;		None               void
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 1F/0
  4948 ;;		On exit  : 1F/3
  4949 ;;		Unchanged: FFFE0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4951 ;;      Params:         0       1       0       0       0       0       0       0
  4952 ;;      Locals:         0       1       0       0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0
  4954 ;;      Totals:         0       2       0       0       0       0       0       0
  4955 ;;Total ram usage:        2 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; Hardware stack levels required when called:    3
  4958 ;; This function calls:
  4959 ;;		Nothing
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;;		_SaveRomData
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965  0EE5                     _eeprom_write:	
  4966                           
  4967                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4968                           ;eeprom_write@addr stored from wreg
  4969  0EE5  00A1               	movwf	eeprom_write@addr
  4970  0EE6                     l27532:	
  4971  0EE6  0023               	movlb	3	; select bank3
  4972  0EE7  1895               	btfsc	21,1
  4973  0EE8  2EE6               	goto	l27532
  4974  0EE9  0020               	movlb	0	; select bank0
  4975  0EEA  0821               	movf	eeprom_write@addr,w
  4976  0EEB  0023               	movlb	3	; select bank3
  4977  0EEC  0091               	movwf	17	;volatile
  4978  0EED  0020               	movlb	0	; select bank0
  4979  0EEE  0820               	movf	eeprom_write@value,w
  4980  0EEF  0023               	movlb	3	; select bank3
  4981  0EF0  0093               	movwf	19	;volatile
  4982  0EF1  303F               	movlw	63
  4983  0EF2  0595               	andwf	21,f	;volatile
  4984  0EF3  1003               	bcf	3,0
  4985  0EF4  1B8B               	btfsc	11,7
  4986  0EF5  1403               	bsf	3,0
  4987  0EF6  138B               	bcf	11,7
  4988  0EF7  1515               	bsf	21,2
  4989  0EF8  3055               	movlw	85
  4990  0EF9  0096               	movwf	22	;volatile
  4991  0EFA  30AA               	movlw	170
  4992  0EFB  0096               	movwf	22	;volatile
  4993  0EFC  1495               	bsf	21,1
  4994  0EFD  1115               	bcf	21,2
  4995  0EFE  1803               	btfsc	3,0
  4996  0EFF  178B               	bsf	11,7
  4997  0F00  0008               	return
  4998  0F01                     __end_of_eeprom_write:	
  4999  0F01                     __ptext2011:	
  5000 ;; =============== function _strncmp ends ============
  5001                           
  5002                           
  5003 ;; *************** function _strlen *****************
  5004 ;; Defined at:
  5005 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strlen.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5008 ;;		 -> STR_30(11), STR_28(6), STR_26(5), ATCommand_ErrString(15), 
  5009 ;;		 -> ATCommand_OkString(15), 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  5012 ;;		 -> STR_30(11), STR_28(6), STR_26(5), ATCommand_ErrString(15), 
  5013 ;;		 -> ATCommand_OkString(15), 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  2    0[BANK0 ] unsigned int 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5018 ;; Tracked objects:
  5019 ;;		On entry : 1F/0
  5020 ;;		On exit  : 1F/0
  5021 ;;		Unchanged: FFFE0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5023 ;;      Params:         0       2       0       0       0       0       0       0
  5024 ;;      Locals:         0       2       0       0       0       0       0       0
  5025 ;;      Temps:          0       2       0       0       0       0       0       0
  5026 ;;      Totals:         0       6       0       0       0       0       0       0
  5027 ;;Total ram usage:        6 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    3
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_strstr
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036  0F01                     _strlen:	
  5037                           
  5038                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  5039  0F01  0821               	movf	strlen@s+1,w
  5040  0F02  00A5               	movwf	strlen@cp+1
  5041  0F03  0820               	movf	strlen@s,w
  5042  0F04  00A4               	movwf	strlen@cp
  5043  0F05                     l30666:	
  5044  0F05  0825               	movf	strlen@cp+1,w
  5045  0F06  00A3               	movwf	??_strlen+1
  5046  0F07  0824               	movf	strlen@cp,w
  5047  0F08  00A2               	movwf	??_strlen
  5048  0F09  0AA4               	incf	strlen@cp,f
  5049  0F0A  1903               	skipnz
  5050  0F0B  0AA5               	incf	strlen@cp+1,f
  5051  0F0C  0084               	movwf	4
  5052  0F0D  0823               	movf	??_strlen+1,w
  5053  0F0E  0085               	movwf	5
  5054  0F0F  0800               	movf	0,w	;code access
  5055  0F10  3800               	iorlw	0
  5056  0F11  1D03               	skipz
  5057  0F12  2F05               	goto	l30666
  5058  0F13  0820               	movf	strlen@s,w
  5059  0F14  0224               	subwf	strlen@cp,w
  5060  0F15  00A2               	movwf	??_strlen
  5061  0F16  0821               	movf	strlen@s+1,w
  5062  0F17  3B25               	subwfb	strlen@cp+1,w
  5063  0F18  00A3               	movwf	??_strlen+1
  5064  0F19  0822               	movf	??_strlen,w
  5065  0F1A  3EFF               	addlw	255
  5066  0F1B  00A0               	movwf	?_strlen
  5067  0F1C  30FF               	movlw	255
  5068  0F1D  3D23               	addwfc	??_strlen+1,w
  5069  0F1E  00A1               	movwf	?_strlen+1
  5070  0F1F  0008               	return
  5071  0F20                     __end_of_strlen:	
  5072  0F20                     __ptext2010:	
  5073 ;; =============== function _strchr ends ============
  5074                           
  5075                           
  5076 ;; *************** function _strncmp *****************
  5077 ;; Defined at:
  5078 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strncmp.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  5081 ;;		 -> ATCommand_RxList(100), RAM(128), 
  5082 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  5083 ;;		 -> STR_30(11), STR_28(6), STR_26(5), ATCommand_ErrString(15), 
  5084 ;;		 -> ATCommand_OkString(15), 
  5085 ;;  len             2   10[BANK0 ] unsigned int 
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  2    6[BANK0 ] int 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5092 ;; Tracked objects:
  5093 ;;		On entry : 1F/0
  5094 ;;		On exit  : 1F/0
  5095 ;;		Unchanged: FFFE0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5097 ;;      Params:         0       6       0       0       0       0       0       0
  5098 ;;      Locals:         0       0       0       0       0       0       0       0
  5099 ;;      Temps:          0       1       0       0       0       0       0       0
  5100 ;;      Totals:         0       7       0       0       0       0       0       0
  5101 ;;Total ram usage:        7 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:    3
  5104 ;; This function calls:
  5105 ;;		Nothing
  5106 ;; This function is called by:
  5107 ;;		_strstr
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110  0F20                     _strncmp:	
  5111  0F20                     l30684:	
  5112                           ; Regs used in _strncmp: [wreg-status,0+pclath]
  5113                           
  5114  0F20  3001               	movlw	1
  5115  0F21  02AA               	subwf	strncmp@len,f
  5116  0F22  3000               	movlw	0
  5117  0F23  3BAB               	subwfb	strncmp@len+1,f
  5118  0F24  0A2A               	incf	strncmp@len,w
  5119  0F25  1903               	skipnz
  5120  0F26  0A2B               	incf	strncmp@len+1,w
  5121  0F27  1903               	btfsc	3,2
  5122  0F28  2F55               	goto	l30686
  5123  0F29  0826               	movf	strncmp@s1,w
  5124  0F2A  0086               	movwf	6
  5125  0F2B  0827               	movf	strncmp@s1+1,w
  5126  0F2C  0087               	movwf	7
  5127  0F2D  0801               	movf	1,w
  5128  0F2E  3A00               	xorlw	0
  5129  0F2F  1903               	skipnz
  5130  0F30  2F3F               	goto	l30678
  5131  0F31  0828               	movf	strncmp@s2,w
  5132  0F32  0084               	movwf	4
  5133  0F33  0829               	movf	strncmp@s2+1,w
  5134  0F34  0085               	movwf	5
  5135  0F35  0800               	movf	0,w	;code access
  5136  0F36  00AC               	movwf	??_strncmp
  5137  0F37  0826               	movf	strncmp@s1,w
  5138  0F38  0086               	movwf	6
  5139  0F39  0827               	movf	strncmp@s1+1,w
  5140  0F3A  0087               	movwf	7
  5141  0F3B  0801               	movf	1,w
  5142  0F3C  062C               	xorwf	??_strncmp,w
  5143  0F3D  1903               	skipnz
  5144  0F3E  2F4E               	goto	l30682
  5145  0F3F                     l30678:	
  5146  0F3F  0826               	movf	strncmp@s1,w
  5147  0F40  0086               	movwf	6
  5148  0F41  0827               	movf	strncmp@s1+1,w
  5149  0F42  0087               	movwf	7
  5150  0F43  0828               	movf	strncmp@s2,w
  5151  0F44  0084               	movwf	4
  5152  0F45  0829               	movf	strncmp@s2+1,w
  5153  0F46  0085               	movwf	5
  5154  0F47  0800               	movf	0,w	;code access
  5155  0F48  0201               	subwf	1,w
  5156  0F49  00A6               	movwf	?_strncmp
  5157  0F4A  01A7               	clrf	?_strncmp+1
  5158  0F4B  1C03               	skipc
  5159  0F4C  03A7               	decf	?_strncmp+1,f
  5160  0F4D  0008               	return
  5161  0F4E                     l30682:	
  5162  0F4E  0AA6               	incf	strncmp@s1,f
  5163  0F4F  1903               	skipnz
  5164  0F50  0AA7               	incf	strncmp@s1+1,f
  5165  0F51  0AA8               	incf	strncmp@s2,f
  5166  0F52  1903               	skipnz
  5167  0F53  0AA9               	incf	strncmp@s2+1,f
  5168  0F54  2F20               	goto	l30684
  5169  0F55                     l30686:	
  5170  0F55  01A6               	clrf	?_strncmp
  5171  0F56  01A7               	clrf	?_strncmp+1
  5172  0F57  0008               	return
  5173  0F58                     __end_of_strncmp:	
  5174  0F58                     __ptext2009:	
  5175 ;; =============== function ___bmul ends ============
  5176                           
  5177                           
  5178 ;; *************** function _strchr *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strchr.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  5183 ;;		 -> ATCommand_RxList(100), RAM(128), 
  5184 ;;  chr             2    2[BANK0 ] int 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2    wreg      PTR unsigned char 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 1F/0
  5193 ;;		On exit  : 1F/0
  5194 ;;		Unchanged: FFFE0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5196 ;;      Params:         0       4       0       0       0       0       0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0       0
  5198 ;;      Temps:          0       2       0       0       0       0       0       0
  5199 ;;      Totals:         0       6       0       0       0       0       0       0
  5200 ;;Total ram usage:        6 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    3
  5203 ;; This function calls:
  5204 ;;		Nothing
  5205 ;; This function is called by:
  5206 ;;		_strstr
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209  0F58                     _strchr:	
  5210  0F58                     l27925:	
  5211                           ; Regs used in _strchr: [wreg+fsr1l-status,0]
  5212                           
  5213  0F58  0820               	movf	strchr@ptr,w
  5214  0F59  0086               	movwf	6
  5215  0F5A  0821               	movf	strchr@ptr+1,w
  5216  0F5B  0087               	movwf	7
  5217  0F5C  0801               	movf	1,w
  5218  0F5D  0622               	xorwf	strchr@chr,w
  5219  0F5E  1903               	btfsc	3,2
  5220  0F5F  0008               	return
  5221  0F60  0821               	movf	strchr@ptr+1,w
  5222  0F61  00A5               	movwf	??_strchr+1
  5223  0F62  0820               	movf	strchr@ptr,w
  5224  0F63  00A4               	movwf	??_strchr
  5225  0F64  0AA0               	incf	strchr@ptr,f
  5226  0F65  1903               	skipnz
  5227  0F66  0AA1               	incf	strchr@ptr+1,f
  5228  0F67  0086               	movwf	6
  5229  0F68  0825               	movf	??_strchr+1,w
  5230  0F69  0087               	movwf	7
  5231  0F6A  0881               	movf	1,f
  5232  0F6B  1D03               	skipz
  5233  0F6C  2F58               	goto	l27925
  5234  0F6D  01A0               	clrf	?_strchr
  5235  0F6E  01A1               	clrf	?_strchr+1
  5236  0F6F  0008               	return
  5237  0F70                     __end_of_strchr:	
  5238  0F70                     __ptext2004:	
  5239 ;; =============== function ___lbmod ends ============
  5240                           
  5241                           
  5242 ;; *************** function ___lbdiv *****************
  5243 ;; Defined at:
  5244 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbdiv.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  dividend        1    wreg     unsigned char 
  5247 ;;  divisor         1    0[BANK0 ] unsigned char 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  dividend        1    1[BANK0 ] unsigned char 
  5250 ;;  quotient        1    3[BANK0 ] unsigned char 
  5251 ;;  counter         1    2[BANK0 ] unsigned char 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  1    wreg      unsigned char 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 1F/0
  5258 ;;		On exit  : 1F/0
  5259 ;;		Unchanged: FFFE0/0
  5260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5261 ;;      Params:         0       1       0       0       0       0       0       0
  5262 ;;      Locals:         0       3       0       0       0       0       0       0
  5263 ;;      Temps:          0       0       0       0       0       0       0       0
  5264 ;;      Totals:         0       4       0       0       0       0       0       0
  5265 ;;Total ram usage:        4 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; Hardware stack levels required when called:    3
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_LcdDisplay_CSQ
  5272 ;;		_LcdDisplay_CurTemp
  5273 ;;		_LcdDisplay_Err
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276  0F70                     ___lbdiv:	
  5277                           
  5278                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5279                           ;___lbdiv@dividend stored from wreg
  5280  0F70  00A1               	movwf	___lbdiv@dividend
  5281  0F71  01A3               	clrf	___lbdiv@quotient
  5282  0F72  0820               	movf	___lbdiv@divisor,w
  5283  0F73  1903               	btfsc	3,2
  5284  0F74  2F86               	goto	l32446
  5285  0F75  01A2               	clrf	___lbdiv@counter
  5286  0F76                     l32432:	
  5287  0F76  0AA2               	incf	___lbdiv@counter,f
  5288  0F77  1BA0               	btfsc	___lbdiv@divisor,7
  5289  0F78  2F7B               	goto	l27623
  5290  0F79  35A0               	lslf	___lbdiv@divisor,f
  5291  0F7A  2F76               	goto	l32432
  5292  0F7B                     l27623:	
  5293  0F7B  35A3               	lslf	___lbdiv@quotient,f
  5294  0F7C  0820               	movf	___lbdiv@divisor,w
  5295  0F7D  0221               	subwf	___lbdiv@dividend,w
  5296  0F7E  1C03               	skipc
  5297  0F7F  2F83               	goto	l32442
  5298  0F80  0820               	movf	___lbdiv@divisor,w
  5299  0F81  02A1               	subwf	___lbdiv@dividend,f
  5300  0F82  1423               	bsf	___lbdiv@quotient,0
  5301  0F83                     l32442:	
  5302  0F83  36A0               	lsrf	___lbdiv@divisor,f
  5303  0F84  0BA2               	decfsz	___lbdiv@counter,f
  5304  0F85  2F7B               	goto	l27623
  5305  0F86                     l32446:	
  5306  0F86  0823               	movf	___lbdiv@quotient,w
  5307  0F87  0008               	return
  5308  0F88                     __end_of___lbdiv:	
  5309  0F88                     __ptext2001:	
  5310 ;; =============== function _LcdDisplay_CurTemp ends ============
  5311                           
  5312                           
  5313 ;; *************** function _LcdDisplay_CSQ *****************
  5314 ;; Defined at:
  5315 ;;		line 327 in file "F:\work\WYP\NBIoT\Display.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;		None
  5318 ;; Auto vars:     Size  Location     Type
  5319 ;;  t2              1    6[BANK0 ] unsigned char 
  5320 ;;  t1              1    5[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 1F/0
  5327 ;;		On exit  : 1F/F
  5328 ;;		Unchanged: FFFE0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5330 ;;      Params:         0       0       0       0       0       0       0       0
  5331 ;;      Locals:         0       2       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0
  5333 ;;      Totals:         0       2       0       0       0       0       0       0
  5334 ;;Total ram usage:        2 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    4
  5337 ;; This function calls:
  5338 ;;		___lbdiv
  5339 ;;		___lbmod
  5340 ;;		_LcdDisplayNum
  5341 ;; This function is called by:
  5342 ;;		_InitGPRS
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345  0F88                     _LcdDisplay_CSQ:	
  5346                           
  5347                           ;Display.c: 328: unsigned char t1,t2;
  5348                           ;Display.c: 332: t1=CSQ/10;
  5349                           
  5350                           ; Regs used in _LcdDisplay_CSQ: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5351  0F88  300A               	movlw	10
  5352  0F89  00A0               	movwf	?___lbdiv
  5353  0F8A  0861               	movf	_CSQ,w
  5354  0F8B  2770  3188         	fcall	___lbdiv
  5355  0F8D  00A5               	movwf	LcdDisplay_CSQ@t1
  5356                           
  5357                           ;Display.c: 333: t2=CSQ%10;
  5358  0F8E  300A               	movlw	10
  5359  0F8F  00A0               	movwf	?___lbmod
  5360  0F90  0861               	movf	_CSQ,w
  5361  0F91  27A3               	fcall	___lbmod
  5362  0F92  00A6               	movwf	LcdDisplay_CSQ@t2
  5363                           
  5364                           ;Display.c: 334: DpyNum[0]=0x01 | 0x02 | 0x10 | 0x20 | 0x40;
  5365  0F93  3073               	movlw	115
  5366  0F94  00E9               	movwf	_DpyNum
  5367                           
  5368                           ;Display.c: 335: DpyNum[1]=SegCode[t1];
  5369  0F95  0825               	movf	LcdDisplay_CSQ@t1,w
  5370  0F96  3184  2437         	fcall	PL4	;call to abstracted procedure
  5371                           
  5372                           ;Display.c: 336: DpyNum[2]=SegCode[t2];
  5373  0F98  0826               	movf	LcdDisplay_CSQ@t2,w
  5374  0F99  3E01               	addlw	low (_SegCode| (0+32768))
  5375  0F9A  0084               	movwf	4
  5376  0F9B  3090               	movlw	high (_SegCode| (0+32768))
  5377  0F9C  1803               	skipnc
  5378  0F9D  3E01               	addlw	1
  5379  0F9E  0085               	movwf	5
  5380  0F9F  0800               	movf	0,w	;code access
  5381  0FA0  00EB               	movwf	_DpyNum+2
  5382                           
  5383                           ;Display.c: 337: LcdDisplayNum();
  5384  0FA1  3183  2B0E         	ljmp	l32110
  5385  0FA3                     __end_of_LcdDisplay_CSQ:	
  5386  0FA3                     __ptext2003:	
  5387 ;; =============== function _LcdDisplayAll ends ============
  5388                           
  5389                           
  5390 ;; *************** function ___lbmod *****************
  5391 ;; Defined at:
  5392 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbmod.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;  dividend        1    wreg     unsigned char 
  5395 ;;  divisor         1    0[BANK0 ] unsigned char 
  5396 ;; Auto vars:     Size  Location     Type
  5397 ;;  dividend        1    2[BANK0 ] unsigned char 
  5398 ;;  rem             1    4[BANK0 ] unsigned char 
  5399 ;;  counter         1    3[BANK0 ] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  1    wreg      unsigned char 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 1F/0
  5406 ;;		On exit  : 1F/0
  5407 ;;		Unchanged: FFFE0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5409 ;;      Params:         0       1       0       0       0       0       0       0
  5410 ;;      Locals:         0       3       0       0       0       0       0       0
  5411 ;;      Temps:          0       1       0       0       0       0       0       0
  5412 ;;      Totals:         0       5       0       0       0       0       0       0
  5413 ;;Total ram usage:        5 bytes
  5414 ;; Hardware stack levels used:    1
  5415 ;; Hardware stack levels required when called:    3
  5416 ;; This function calls:
  5417 ;;		Nothing
  5418 ;; This function is called by:
  5419 ;;		_LcdDisplay_CSQ
  5420 ;;		_LcdDisplay_CurTemp
  5421 ;;		_LcdDisplay_Err
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424  0FA3                     ___lbmod:	
  5425                           
  5426                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5427                           ;___lbmod@dividend stored from wreg
  5428  0FA3  00A2               	movwf	___lbmod@dividend
  5429  0FA4  3008               	movlw	8
  5430  0FA5  00A3               	movwf	___lbmod@counter
  5431  0FA6  01A4               	clrf	___lbmod@rem
  5432  0FA7                     l30806:	
  5433  0FA7  0822               	movf	___lbmod@dividend,w
  5434  0FA8  00A1               	movwf	??___lbmod
  5435  0FA9  3007               	movlw	7
  5436  0FAA                     u4335:	
  5437  0FAA  36A1               	lsrf	??___lbmod,f
  5438  0FAB  0B89               	decfsz	9,f
  5439  0FAC  2FAA               	goto	u4335
  5440  0FAD  3524               	lslf	___lbmod@rem,w
  5441  0FAE  0421               	iorwf	??___lbmod,w
  5442  0FAF  00A4               	movwf	___lbmod@rem
  5443  0FB0  35A2               	lslf	___lbmod@dividend,f
  5444  0FB1  0820               	movf	___lbmod@divisor,w
  5445  0FB2  0224               	subwf	___lbmod@rem,w
  5446  0FB3  1C03               	skipc
  5447  0FB4  2FB7               	goto	l30814
  5448  0FB5  0820               	movf	___lbmod@divisor,w
  5449  0FB6  02A4               	subwf	___lbmod@rem,f
  5450  0FB7                     l30814:	
  5451  0FB7  0BA3               	decfsz	___lbmod@counter,f
  5452  0FB8  2FA7               	goto	l30806
  5453  0FB9  0824               	movf	___lbmod@rem,w
  5454  0FBA  0008               	return
  5455  0FBB                     __end_of___lbmod:	
  5456  0FBB                     __ptext1978:	
  5457 ;; =============== function _TCN75_ReadReg ends ============
  5458                           
  5459                           
  5460 ;; *************** function _TCN75_SetConfig *****************
  5461 ;; Defined at:
  5462 ;;		line 47 in file "F:\work\WYP\NBIoT\TCN75.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;		None
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  bRight          1    4[BANK0 ] unsigned char 
  5467 ;;  ErrTimes        1    3[BANK0 ] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  1    wreg      unsigned char 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0, pclath, cstack
  5472 ;; Tracked objects:
  5473 ;;		On entry : 1F/0
  5474 ;;		On exit  : 1F/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5477 ;;      Params:         0       0       0       0       0       0       0       0
  5478 ;;      Locals:         0       2       0       0       0       0       0       0
  5479 ;;      Temps:          0       0       0       0       0       0       0       0
  5480 ;;      Totals:         0       2       0       0       0       0       0       0
  5481 ;;Total ram usage:        2 bytes
  5482 ;; Hardware stack levels used:    1
  5483 ;; Hardware stack levels required when called:    4
  5484 ;; This function calls:
  5485 ;;		_SimI2C_Start
  5486 ;;		_SimI2C_SendByte
  5487 ;;		_SimI2C_RecAck
  5488 ;;		_SimI2C_Stop
  5489 ;; This function is called by:
  5490 ;;		_InitSystem
  5491 ;;		_ReadTData
  5492 ;; This function uses a non-reentrant model
  5493 ;;
  5494  0FBB                     _TCN75_SetConfig:	
  5495                           
  5496                           ;TCN75.c: 48: unsigned char ErrTimes=2;
  5497                           
  5498                           ; Regs used in _TCN75_SetConfig: [wreg+status,2+status,0+pclath+cstack]
  5499  0FBB  3002               	movlw	2
  5500  0FBC  00A3               	movwf	TCN75_SetConfig@ErrTimes
  5501                           
  5502                           ;TCN75.c: 49: unsigned char bRight=0;
  5503  0FBD  01A4               	clrf	TCN75_SetConfig@bRight
  5504  0FBE                     l32734:	
  5505                           ;TCN75.c: 63: break;
  5506                           
  5507                           ;TCN75.c: 50: while(ErrTimes--)
  5508                           
  5509  0FBE  03A3               	decf	TCN75_SetConfig@ErrTimes,f
  5510  0FBF  0823               	movf	TCN75_SetConfig@ErrTimes,w
  5511  0FC0  3AFF               	xorlw	255
  5512  0FC1  1903               	btfsc	3,2
  5513  0FC2  2FE6               	goto	l32736
  5514                           
  5515                           ;TCN75.c: 51: {
  5516                           ;TCN75.c: 52: SimI2C_Start();
  5517  0FC3  3184  24AB  3188   	fcall	_SimI2C_Start
  5518                           
  5519                           ;TCN75.c: 53: SimI2C_SendByte(0b10010000&0xfe);
  5520  0FC6  3090               	movlw	144
  5521  0FC7  3184  2476  3188   	fcall	_SimI2C_SendByte
  5522                           
  5523                           ;TCN75.c: 54: if(SimI2C_RecAck())
  5524  0FCA  3184  2497  3188   	fcall	_SimI2C_RecAck
  5525  0FCD  3A00               	xorlw	0
  5526  0FCE  1D03               	btfss	3,2
  5527  0FCF  2FBE               	goto	l32734
  5528                           
  5529                           ;TCN75.c: 56: SimI2C_SendByte(0x01);
  5530  0FD0  3001               	movlw	1
  5531  0FD1  3184  2476  3188   	fcall	_SimI2C_SendByte
  5532                           
  5533                           ;TCN75.c: 57: if(SimI2C_RecAck())
  5534  0FD4  3184  2497  3188   	fcall	_SimI2C_RecAck
  5535  0FD7  3A00               	xorlw	0
  5536  0FD8  1D03               	btfss	3,2
  5537  0FD9  2FBE               	goto	l32734
  5538                           
  5539                           ;TCN75.c: 59: SimI2C_SendByte(TCN75_Config.AllFlag);
  5540  0FDA  0863               	movf	_TCN75_Config,w
  5541  0FDB  3184  2476  3188   	fcall	_SimI2C_SendByte
  5542                           
  5543                           ;TCN75.c: 60: if(SimI2C_RecAck())
  5544  0FDE  3184  2497  3188   	fcall	_SimI2C_RecAck
  5545  0FE1  3A00               	xorlw	0
  5546  0FE2  1D03               	btfss	3,2
  5547  0FE3  2FBE               	goto	l32734
  5548                           
  5549                           ;TCN75.c: 62: bRight=1;
  5550  0FE4  01A4               	clrf	TCN75_SetConfig@bRight
  5551  0FE5  0AA4               	incf	TCN75_SetConfig@bRight,f
  5552  0FE6                     l32736:	
  5553                           
  5554                           ;TCN75.c: 64: }
  5555                           ;TCN75.c: 65: SimI2C_Stop();
  5556  0FE6  3184  24E8         	fcall	_SimI2C_Stop
  5557                           
  5558                           ;TCN75.c: 66: return bRight;
  5559  0FE8  0020               	movlb	0	; select bank0
  5560  0FE9  0824               	movf	TCN75_SetConfig@bRight,w
  5561  0FEA  0008               	return
  5562  0FEB                     __end_of_TCN75_SetConfig:	
  5563  0FEB                     PL5:	
  5564  0FEB  0020               	movlb	0	; select bank0
  5565  0FEC  0AC3               	incf	InteractServer@j,f
  5566  0FED  300C               	movlw	12
  5567  0FEE  0243               	subwf	InteractServer@j,w
  5568  0FEF  0008               	return
  5569  0FF0                     __ptext1976:	
  5570 ;; =============== function _ATCommand_SendCmd ends ============
  5571                           
  5572                           
  5573 ;; *************** function _PowerON *****************
  5574 ;; Defined at:
  5575 ;;		line 7 in file "F:\work\WYP\NBIoT\Function.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;		None
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;		None
  5580 ;; Return value:  Size  Location     Type
  5581 ;;		None               void
  5582 ;; Registers used:
  5583 ;;		wreg, status,2, status,0, pclath, cstack
  5584 ;; Tracked objects:
  5585 ;;		On entry : 1F/0
  5586 ;;		On exit  : 1F/0
  5587 ;;		Unchanged: 0/0
  5588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5589 ;;      Params:         0       0       0       0       0       0       0       0
  5590 ;;      Locals:         0       0       0       0       0       0       0       0
  5591 ;;      Temps:          0       0       0       0       0       0       0       0
  5592 ;;      Totals:         0       0       0       0       0       0       0       0
  5593 ;;Total ram usage:        0 bytes
  5594 ;; Hardware stack levels used:    1
  5595 ;; Hardware stack levels required when called:    4
  5596 ;; This function calls:
  5597 ;;		___delay_20ms
  5598 ;; This function is called by:
  5599 ;;		_InitGPRS
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602  0FF0                     _PowerON:	
  5603                           
  5604                           ;Function.c: 8: LATD5=1;
  5605                           
  5606                           ; Regs used in _PowerON: [wreg+status,2+status,0+pclath+cstack]
  5607  0FF0  0022               	movlb	2	; select bank2
  5608  0FF1  168F               	bsf	15,5
  5609                           
  5610                           ;Function.c: 9: __delay_20ms(5);
  5611  0FF2  3005               	movlw	5
  5612  0FF3  0020               	movlb	0	; select bank0
  5613  0FF4  00A0               	movwf	?___delay_20ms
  5614  0FF5  01A1               	clrf	?___delay_20ms+1
  5615  0FF6  22D5  3188         	fcall	___delay_20ms
  5616                           
  5617                           ;Function.c: 10: LATD5=0;
  5618  0FF8  0022               	movlb	2	; select bank2
  5619  0FF9  128F               	bcf	15,5
  5620                           
  5621                           ;Function.c: 11: __delay_20ms(500);
  5622  0FFA  30F4               	movlw	244
  5623  0FFB  0020               	movlb	0	; select bank0
  5624  0FFC  00A0               	movwf	?___delay_20ms
  5625  0FFD  3001               	movlw	1
  5626  0FFE  00A1               	movwf	?___delay_20ms+1
  5627  0FFF  2AD5               	ljmp	l12896
  5628  1000                     __end_of_PowerON:	
  5629                           
  5630                           	psect	bssCOMMON
  5631  0077                     __pbssCOMMON:	
  5632  0077                     _RunTick:	
  5633  0077                     	ds	2
  5634  0079                     _ATCommand_Clear:	
  5635  0079                     	ds	1
  5636  007A                     _ATCommand_Flags:	
  5637  007A                     	ds	1
  5638  007B                     _ATCommand_RxCount:	
  5639  007B                     	ds	1
  5640                           
  5641                           	psect	bssBANK0
  5642  004E                     __pbssBANK0:	
  5643  004E                     _TxTemperature:	
  5644  004E                     	ds	4
  5645  0052                     _ATCommand_WaitACKTick:	
  5646  0052                     	ds	2
  5647  0054                     _ATCommand_WaitACKTimes:	
  5648  0054                     	ds	2
  5649  0056                     _CurTemp:	
  5650  0056                     	ds	2
  5651  0058                     _MeasurementTick:	
  5652  0058                     	ds	2
  5653  005A                     _NeedMeasurementTick:	
  5654  005A                     	ds	2
  5655  005C                     _SystemTick:	
  5656  005C                     	ds	2
  5657  005E                     _TCN75_RegReadResualt:	
  5658  005E                     	ds	2
  5659  0060                     _ATCommand_RetryTimes:	
  5660  0060                     	ds	1
  5661  0061                     _CSQ:	
  5662  0061                     	ds	1
  5663  0062                     _ErrState:	
  5664  0062                     	ds	1
  5665  0063                     _TCN75_Config:	
  5666  0063                     	ds	1
  5667  0064                     _TListIndex:	
  5668  0064                     	ds	1
  5669  0065                     _gFlags:	
  5670  0065                     	ds	1
  5671  0066                     _RomParams:	
  5672  0066                     	ds	2
  5673  0068                     _TxErrDataIndex:	
  5674  0068                     	ds	1
  5675                           
  5676                           	psect	dataBANK0
  5677  0069                     __pdataBANK0:	
  5678  0069                     _DpyNum:	
  5679  0069                     	ds	6
  5680                           
  5681                           	psect	bssBANK1
  5682  00A0                     __pbssBANK1:	
  5683  00A0                     _ICCID:	
  5684  00A0                     	ds	21
  5685  00B5                     _ATCommand_ErrString:	
  5686  00B5                     	ds	15
  5687  00C4                     _ATCommand_OkString:	
  5688  00C4                     	ds	15
  5689  00D3                     _DS18X20_Scratchpad:	
  5690  00D3                     	ds	9
  5691                           
  5692                           	psect	bssBANK2
  5693  0120                     __pbssBANK2:	
  5694  0120                     _TList:	
  5695  0120                     	ds	24
  5696                           
  5697                           	psect	clrtext
  5698  0621                     clear_ram:	
  5699                           ;	Called with FSR0 containing the base address, and
  5700                           ;	btemp/btemp+1 has the size to clear
  5701                           
  5702  0621  0064               	clrwdt	;clear the watchdog before getting into this loop
  5703  0622                     clrloop:	
  5704  0622  0180               	clrf	0	;clear RAM location pointed to by FSR
  5705  0623  3101               	addfsr 0,1
  5706  0624  3001               	movlw	1
  5707  0625  02FE               	subwf	126,f
  5708  0626  3000               	movlw	0
  5709  0627  3BFF               	subwfb	127,f
  5710  0628  087F               	movf	127,w
  5711  0629  047E               	iorwf	126,w
  5712  062A  1903               	btfsc	3,2
  5713  062B  3400               	retlw	0	;all done for this memory range, return
  5714  062C  2E22               	goto	clrloop	;have we reached the end yet?
  5715                           
  5716                           	psect	cstackCOMMON
  5717  0070                     __pcstackCOMMON:	
  5718  0070                     ?_SaveRomData:	
  5719  0070                     ?_ATCommand_Init:	
  5720                           ; 0 bytes @ 0x0
  5721                           
  5722  0070                     ?_TCN75_Init:	
  5723                           ; 0 bytes @ 0x0
  5724                           
  5725  0070                     ?_ReadTData:	
  5726                           ; 0 bytes @ 0x0
  5727                           
  5728  0070                     ?_TestProc:	
  5729                           ; 0 bytes @ 0x0
  5730                           
  5731  0070                     ?_CallProc:	
  5732                           ; 0 bytes @ 0x0
  5733                           
  5734  0070                     ?_ATCommand_ProcRx:	
  5735                           ; 0 bytes @ 0x0
  5736                           
  5737  0070                     ?_CallSend:	
  5738                           ; 0 bytes @ 0x0
  5739                           
  5740  0070                     ?_InitGPRS:	
  5741                           ; 0 bytes @ 0x0
  5742                           
  5743  0070                     ?_Uart1_PutHex:	
  5744                           ; 0 bytes @ 0x0
  5745                           
  5746  0070                     ?_Uart1_PutChar:	
  5747                           ; 0 bytes @ 0x0
  5748                           
  5749  0070                     ?_isgraph:	
  5750                           ; 0 bytes @ 0x0
  5751                           
  5752  0070                     ??_isgraph:	
  5753                           ; 1 bit 
  5754                           
  5755  0070                     ?_OneWire_WriteByte:	
  5756                           ; 0 bytes @ 0x0
  5757                           
  5758  0070                     ?_SimI2C_Init:	
  5759                           ; 0 bytes @ 0x0
  5760                           
  5761  0070                     ?_SimI2C_Start:	
  5762                           ; 0 bytes @ 0x0
  5763                           
  5764  0070                     ?_SimI2C_SendByte:	
  5765                           ; 0 bytes @ 0x0
  5766                           
  5767  0070                     ?_SimI2C_Ack:	
  5768                           ; 0 bytes @ 0x0
  5769                           
  5770  0070                     ?_SimI2C_NoAck:	
  5771                           ; 0 bytes @ 0x0
  5772                           
  5773  0070                     ?_SimI2C_Stop:	
  5774                           ; 0 bytes @ 0x0
  5775                           
  5776  0070                     ?_isdigit:	
  5777                           ; 0 bytes @ 0x0
  5778                           
  5779  0070                     ?_LcdDisplayNum:	
  5780                           ; 1 bit 
  5781                           
  5782  0070                     ?_LcdDisplayAll:	
  5783                           ; 0 bytes @ 0x0
  5784                           
  5785  0070                     ?_LcdDisplay_CSQ:	
  5786                           ; 0 bytes @ 0x0
  5787                           
  5788  0070                     ?_LcdDisplay_CurTemp:	
  5789                           ; 0 bytes @ 0x0
  5790                           
  5791  0070                     ?_LcdDisplay_Err:	
  5792                           ; 0 bytes @ 0x0
  5793                           
  5794  0070                     ?_DisplayInit:	
  5795                           ; 0 bytes @ 0x0
  5796                           
  5797  0070                     ?_InitMCU:	
  5798                           ; 0 bytes @ 0x0
  5799                           
  5800  0070                     ?_InitVariable:	
  5801                           ; 0 bytes @ 0x0
  5802                           
  5803  0070                     ?_InitSystem:	
  5804                           ; 0 bytes @ 0x0
  5805                           
  5806  0070                     ?_main:	
  5807                           ; 0 bytes @ 0x0
  5808                           
  5809  0070                     ?_highISR:	
  5810                           ; 0 bytes @ 0x0
  5811                           
  5812  0070                     ?_PowerON:	
  5813                           ; 0 bytes @ 0x0
  5814                           
  5815  0070                     ?_GetRomData:	
  5816                           ; 0 bytes @ 0x0
  5817                           
  5818  0070                     ?_OneWire_Reset:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_TCN75_SetConfig:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ?_DS18X20_StartMeas:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_DS18X20_ReadMeas:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ?_TCN75_ReadReg:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_InteractServer:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_eeprom_read:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ?_ATCommand_WaitData:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_OneWire_Command:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ?_OneWire_ReadByte:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_SimI2C_RecAck:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ?_SimI2C_ReadByte:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     _isgraph$31768:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857                           
  5858                           ; 1 bytes @ 0x0
  5859  0070                     	ds	1
  5860  0071                     isgraph@c:	
  5861                           
  5862                           ; 1 bytes @ 0x1
  5863  0071                     	ds	1
  5864  0072                     ??_ATCommand_ProcRx:	
  5865                           
  5866                           ; 0 bytes @ 0x2
  5867  0072                     	ds	3
  5868  0075                     ATCommand_ProcRx@rx:	
  5869                           
  5870                           ; 1 bytes @ 0x5
  5871  0075                     	ds	1
  5872  0076                     ??_highISR:	
  5873  0076                     highISR@rx:	
  5874                           ; 0 bytes @ 0x6
  5875                           
  5876                           
  5877                           ; 1 bytes @ 0x6
  5878  0076                     	ds	1
  5879                           
  5880                           	psect	cstackBANK0
  5881  0020                     __pcstackBANK0:	
  5882  0020                     ??_OneWire_Reset:	
  5883  0020                     ??_TCN75_Init:	
  5884                           ; 0 bytes @ 0x0
  5885                           
  5886  0020                     ?___delay_20ms:	
  5887                           ; 0 bytes @ 0x0
  5888                           
  5889  0020                     ?_eeprom_write:	
  5890                           ; 0 bytes @ 0x0
  5891                           
  5892  0020                     ?_MakeTxTemperature:	
  5893                           ; 0 bytes @ 0x0
  5894                           
  5895  0020                     ??_Uart1_PutChar:	
  5896                           ; 0 bytes @ 0x0
  5897                           
  5898  0020                     ??_eeprom_read:	
  5899                           ; 0 bytes @ 0x0
  5900                           
  5901  0020                     ??_OneWire_ReadByte:	
  5902                           ; 0 bytes @ 0x0
  5903                           
  5904  0020                     ??_OneWire_WriteByte:	
  5905                           ; 0 bytes @ 0x0
  5906                           
  5907  0020                     ??_SimI2C_Init:	
  5908                           ; 0 bytes @ 0x0
  5909                           
  5910  0020                     ??_SimI2C_Start:	
  5911                           ; 0 bytes @ 0x0
  5912                           
  5913  0020                     ??_SimI2C_SendByte:	
  5914                           ; 0 bytes @ 0x0
  5915                           
  5916  0020                     ??_SimI2C_RecAck:	
  5917                           ; 0 bytes @ 0x0
  5918                           
  5919  0020                     ??_SimI2C_ReadByte:	
  5920                           ; 0 bytes @ 0x0
  5921                           
  5922  0020                     ??_SimI2C_Ack:	
  5923                           ; 0 bytes @ 0x0
  5924                           
  5925  0020                     ??_SimI2C_NoAck:	
  5926                           ; 0 bytes @ 0x0
  5927                           
  5928  0020                     ??_SimI2C_Stop:	
  5929                           ; 0 bytes @ 0x0
  5930                           
  5931  0020                     ??_isdigit:	
  5932                           ; 0 bytes @ 0x0
  5933                           
  5934  0020                     ??_LcdDisplayNum:	
  5935                           ; 0 bytes @ 0x0
  5936                           
  5937  0020                     ??_LcdDisplayAll:	
  5938                           ; 0 bytes @ 0x0
  5939                           
  5940  0020                     ??_DisplayInit:	
  5941                           ; 0 bytes @ 0x0
  5942                           
  5943  0020                     ??_InitMCU:	
  5944                           ; 0 bytes @ 0x0
  5945                           
  5946  0020                     ?_strcpy:	
  5947                           ; 0 bytes @ 0x0
  5948                           
  5949  0020                     ?_GetVerify_Sum:	
  5950                           ; 1 bytes @ 0x0
  5951                           
  5952  0020                     ?_GetVerify_CRC8:	
  5953                           ; 1 bytes @ 0x0
  5954                           
  5955  0020                     ?___bmul:	
  5956                           ; 1 bytes @ 0x0
  5957                           
  5958  0020                     ?___lbdiv:	
  5959                           ; 1 bytes @ 0x0
  5960                           
  5961  0020                     ?___lbmod:	
  5962                           ; 1 bytes @ 0x0
  5963                           
  5964  0020                     ?_strlen:	
  5965                           ; 1 bytes @ 0x0
  5966                           
  5967  0020                     ?_strchr:	
  5968                           ; 2 bytes @ 0x0
  5969                           
  5970  0020                     ?___wmul:	
  5971                           ; 2 bytes @ 0x0
  5972                           
  5973  0020                     ?___lwdiv:	
  5974                           ; 2 bytes @ 0x0
  5975                           
  5976  0020                     ?___lwmod:	
  5977                           ; 2 bytes @ 0x0
  5978                           
  5979  0020                     LcdDisplayAll@x:	
  5980                           ; 2 bytes @ 0x0
  5981                           
  5982  0020                     Uart1_PutChar@c:	
  5983                           ; 1 bytes @ 0x0
  5984                           
  5985  0020                     SimI2C_RecAck@t:	
  5986                           ; 1 bytes @ 0x0
  5987                           
  5988  0020                     SimI2C_SendByte@data:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0020                     SimI2C_ReadByte@data:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0020                     eeprom_write@value:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0020                     _isdigit$31765:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0020                     ___bmul@multiplicand:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0020                     ___lbdiv@divisor:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0020                     ___lbmod@divisor:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0020                     MakeTxTemperature@T:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0020                     ___delay_20ms@x:	
  6013                           ; 2 bytes @ 0x0
  6014                           
  6015  0020                     GetVerify_Sum@Count:	
  6016                           ; 2 bytes @ 0x0
  6017                           
  6018  0020                     GetVerify_CRC8@Count:	
  6019                           ; 2 bytes @ 0x0
  6020                           
  6021  0020                     strcpy@from:	
  6022                           ; 2 bytes @ 0x0
  6023                           
  6024  0020                     ___wmul@multiplier:	
  6025                           ; 2 bytes @ 0x0
  6026                           
  6027  0020                     ___lwdiv@divisor:	
  6028                           ; 2 bytes @ 0x0
  6029                           
  6030  0020                     ___lwmod@divisor:	
  6031                           ; 2 bytes @ 0x0
  6032                           
  6033  0020                     strchr@ptr:	
  6034                           ; 2 bytes @ 0x0
  6035                           
  6036  0020                     strlen@s:	
  6037                           ; 2 bytes @ 0x0
  6038                           
  6039                           
  6040                           ; 2 bytes @ 0x0
  6041  0020                     	ds	1
  6042  0021                     ??_eeprom_write:	
  6043  0021                     ?_Uart1_PutString:	
  6044                           ; 0 bytes @ 0x1
  6045                           
  6046  0021                     ??_Uart1_PutHex:	
  6047                           ; 0 bytes @ 0x1
  6048                           
  6049  0021                     ??___bmul:	
  6050                           ; 0 bytes @ 0x1
  6051                           
  6052  0021                     ??___lbdiv:	
  6053                           ; 0 bytes @ 0x1
  6054                           
  6055  0021                     ??___lbmod:	
  6056                           ; 0 bytes @ 0x1
  6057                           
  6058  0021                     OneWire_Reset@Retry:	
  6059                           ; 0 bytes @ 0x1
  6060                           
  6061  0021                     OneWire_WriteByte@val:	
  6062                           ; 1 bytes @ 0x1
  6063                           
  6064  0021                     OneWire_ReadByte@b:	
  6065                           ; 1 bytes @ 0x1
  6066                           
  6067  0021                     Uart1_PutHex@c:	
  6068                           ; 1 bytes @ 0x1
  6069                           
  6070  0021                     SimI2C_SendByte@t:	
  6071                           ; 1 bytes @ 0x1
  6072                           
  6073  0021                     SimI2C_ReadByte@i:	
  6074                           ; 1 bytes @ 0x1
  6075                           
  6076  0021                     eeprom_write@addr:	
  6077                           ; 1 bytes @ 0x1
  6078                           
  6079  0021                     isdigit@c:	
  6080                           ; 1 bytes @ 0x1
  6081                           
  6082  0021                     ___bmul@product:	
  6083                           ; 1 bytes @ 0x1
  6084                           
  6085  0021                     ___lbdiv@dividend:	
  6086                           ; 1 bytes @ 0x1
  6087                           
  6088  0021                     Uart1_PutString@pString:	
  6089                           ; 1 bytes @ 0x1
  6090                           
  6091                           
  6092                           ; 2 bytes @ 0x1
  6093  0021                     	ds	1
  6094  0022                     ??___delay_20ms:	
  6095  0022                     ??_MakeTxTemperature:	
  6096                           ; 0 bytes @ 0x2
  6097                           
  6098  0022                     ??_strcpy:	
  6099                           ; 0 bytes @ 0x2
  6100                           
  6101  0022                     ??_GetVerify_Sum:	
  6102                           ; 0 bytes @ 0x2
  6103                           
  6104  0022                     ??_GetVerify_CRC8:	
  6105                           ; 0 bytes @ 0x2
  6106                           
  6107  0022                     ??_strlen:	
  6108                           ; 0 bytes @ 0x2
  6109                           
  6110  0022                     MakeTxTemperature@x:	
  6111                           ; 0 bytes @ 0x2
  6112                           
  6113  0022                     OneWire_Reset@r:	
  6114                           ; 1 bytes @ 0x2
  6115                           
  6116  0022                     OneWire_WriteByte@temp:	
  6117                           ; 1 bytes @ 0x2
  6118                           
  6119  0022                     OneWire_ReadByte@value:	
  6120                           ; 1 bytes @ 0x2
  6121                           
  6122  0022                     Uart1_PutHex@b:	
  6123                           ; 1 bytes @ 0x2
  6124                           
  6125  0022                     SimI2C_SendByte@i:	
  6126                           ; 1 bytes @ 0x2
  6127                           
  6128  0022                     eeprom_read@addr:	
  6129                           ; 1 bytes @ 0x2
  6130                           
  6131  0022                     ___bmul@multiplier:	
  6132                           ; 1 bytes @ 0x2
  6133                           
  6134  0022                     ___lbdiv@counter:	
  6135                           ; 1 bytes @ 0x2
  6136                           
  6137  0022                     ___lbmod@dividend:	
  6138                           ; 1 bytes @ 0x2
  6139                           
  6140  0022                     ___wmul@multiplicand:	
  6141                           ; 1 bytes @ 0x2
  6142                           
  6143  0022                     ___lwdiv@dividend:	
  6144                           ; 2 bytes @ 0x2
  6145                           
  6146  0022                     ___lwmod@dividend:	
  6147                           ; 2 bytes @ 0x2
  6148                           
  6149  0022                     strchr@chr:	
  6150                           ; 2 bytes @ 0x2
  6151                           
  6152                           
  6153                           ; 2 bytes @ 0x2
  6154  0022                     	ds	1
  6155  0023                     ??_TCN75_SetConfig:	
  6156  0023                     ??_TCN75_ReadReg:	
  6157                           ; 0 bytes @ 0x3
  6158                           
  6159  0023                     ??_Uart1_PutString:	
  6160                           ; 0 bytes @ 0x3
  6161                           
  6162  0023                     ?_Uart1_PutString_Hex:	
  6163                           ; 0 bytes @ 0x3
  6164                           
  6165  0023                     OneWire_WriteByte@i:	
  6166                           ; 0 bytes @ 0x3
  6167                           
  6168  0023                     OneWire_ReadByte@i:	
  6169                           ; 1 bytes @ 0x3
  6170                           
  6171  0023                     TCN75_ReadReg@RegPoint:	
  6172                           ; 1 bytes @ 0x3
  6173                           
  6174  0023                     TCN75_SetConfig@ErrTimes:	
  6175                           ; 1 bytes @ 0x3
  6176                           
  6177  0023                     Uart1_PutString@c:	
  6178                           ; 1 bytes @ 0x3
  6179                           
  6180  0023                     GetVerify_CRC8@pBuff:	
  6181                           ; 1 bytes @ 0x3
  6182                           
  6183  0023                     ___lbdiv@quotient:	
  6184                           ; 1 bytes @ 0x3
  6185                           
  6186  0023                     ___lbmod@counter:	
  6187                           ; 1 bytes @ 0x3
  6188                           
  6189  0023                     Uart1_PutString_Hex@pString:	
  6190                           ; 1 bytes @ 0x3
  6191                           
  6192                           
  6193                           ; 2 bytes @ 0x3
  6194  0023                     	ds	1
  6195  0024                     ??_OneWire_Command:	
  6196  0024                     ??_strchr:	
  6197                           ; 0 bytes @ 0x4
  6198                           
  6199  0024                     ??_PowerON:	
  6200                           ; 0 bytes @ 0x4
  6201                           
  6202  0024                     ??___wmul:	
  6203                           ; 0 bytes @ 0x4
  6204                           
  6205  0024                     ??___lwdiv:	
  6206                           ; 0 bytes @ 0x4
  6207                           
  6208  0024                     ??___lwmod:	
  6209                           ; 0 bytes @ 0x4
  6210                           
  6211  0024                     OneWire_Command@command:	
  6212                           ; 0 bytes @ 0x4
  6213                           
  6214  0024                     TCN75_ReadReg@ErrTimes:	
  6215                           ; 1 bytes @ 0x4
  6216                           
  6217  0024                     TCN75_SetConfig@bRight:	
  6218                           ; 1 bytes @ 0x4
  6219                           
  6220  0024                     GetVerify_Sum@pBuff:	
  6221                           ; 1 bytes @ 0x4
  6222                           
  6223  0024                     GetVerify_CRC8@bit_counter:	
  6224                           ; 1 bytes @ 0x4
  6225                           
  6226  0024                     strcpy@to:	
  6227                           ; 1 bytes @ 0x4
  6228                           
  6229  0024                     ___lwdiv@counter:	
  6230                           ; 1 bytes @ 0x4
  6231                           
  6232  0024                     ___lwmod@counter:	
  6233                           ; 1 bytes @ 0x4
  6234                           
  6235  0024                     ___lbmod@rem:	
  6236                           ; 1 bytes @ 0x4
  6237                           
  6238  0024                     ___wmul@product:	
  6239                           ; 1 bytes @ 0x4
  6240                           
  6241  0024                     strlen@cp:	
  6242                           ; 2 bytes @ 0x4
  6243                           
  6244                           
  6245                           ; 2 bytes @ 0x4
  6246  0024                     	ds	1
  6247  0025                     ??_DS18X20_StartMeas:	
  6248  0025                     ??_Uart1_PutString_Hex:	
  6249                           ; 0 bytes @ 0x5
  6250                           
  6251  0025                     ??_LcdDisplay_CSQ:	
  6252                           ; 0 bytes @ 0x5
  6253                           
  6254  0025                     ??_LcdDisplay_CurTemp:	
  6255                           ; 0 bytes @ 0x5
  6256                           
  6257  0025                     ??_LcdDisplay_Err:	
  6258                           ; 0 bytes @ 0x5
  6259                           
  6260  0025                     LcdDisplay_CSQ@t1:	
  6261                           ; 0 bytes @ 0x5
  6262                           
  6263  0025                     TCN75_ReadReg@bRight:	
  6264                           ; 1 bytes @ 0x5
  6265                           
  6266  0025                     Uart1_PutString_Hex@c:	
  6267                           ; 1 bytes @ 0x5
  6268                           
  6269  0025                     GetVerify_Sum@sum:	
  6270                           ; 1 bytes @ 0x5
  6271                           
  6272  0025                     GetVerify_CRC8@data:	
  6273                           ; 1 bytes @ 0x5
  6274                           
  6275  0025                     strcpy@cp:	
  6276                           ; 1 bytes @ 0x5
  6277                           
  6278  0025                     ___lwdiv@quotient:	
  6279                           ; 1 bytes @ 0x5
  6280                           
  6281                           
  6282                           ; 2 bytes @ 0x5
  6283  0025                     	ds	1
  6284  0026                     ??_ATCommand_Init:	
  6285  0026                     ?_atoi:	
  6286                           ; 0 bytes @ 0x6
  6287                           
  6288  0026                     ?_strncmp:	
  6289                           ; 2 bytes @ 0x6
  6290                           
  6291  0026                     LcdDisplay_CSQ@t2:	
  6292                           ; 2 bytes @ 0x6
  6293                           
  6294  0026                     GetVerify_Sum@i:	
  6295                           ; 1 bytes @ 0x6
  6296                           
  6297  0026                     GetVerify_CRC8@i:	
  6298                           ; 1 bytes @ 0x6
  6299                           
  6300  0026                     atoi@s:	
  6301                           ; 2 bytes @ 0x6
  6302                           
  6303  0026                     strncmp@s1:	
  6304                           ; 2 bytes @ 0x6
  6305                           
  6306                           
  6307                           ; 2 bytes @ 0x6
  6308  0026                     	ds	1
  6309  0027                     ??_GetRomData:	
  6310  0027                     ??_SaveRomData:	
  6311                           ; 0 bytes @ 0x7
  6312                           
  6313  0027                     LcdDisplay_CurTemp@t1:	
  6314                           ; 0 bytes @ 0x7
  6315                           
  6316  0027                     GetRomData@i:	
  6317                           ; 1 bytes @ 0x7
  6318                           
  6319  0027                     SaveRomData@i:	
  6320                           ; 1 bytes @ 0x7
  6321                           
  6322                           
  6323                           ; 1 bytes @ 0x7
  6324  0027                     	ds	1
  6325  0028                     ??_atoi:	
  6326  0028                     ??_InitVariable:	
  6327                           ; 0 bytes @ 0x8
  6328                           
  6329  0028                     LcdDisplay_CurTemp@t2:	
  6330                           ; 0 bytes @ 0x8
  6331                           
  6332  0028                     GetVerify_CRC8@feedback_bit:	
  6333                           ; 1 bytes @ 0x8
  6334                           
  6335  0028                     strncmp@s2:	
  6336                           ; 1 bytes @ 0x8
  6337                           
  6338                           
  6339                           ; 2 bytes @ 0x8
  6340  0028                     	ds	1
  6341  0029                     GetVerify_CRC8@crc:	
  6342                           
  6343                           ; 1 bytes @ 0x9
  6344  0029                     	ds	1
  6345  002A                     ??_DS18X20_ReadMeas:	
  6346  002A                     DS18X20_ReadMeas@bVerify:	
  6347                           ; 0 bytes @ 0xA
  6348                           
  6349  002A                     strncmp@len:	
  6350                           ; 1 bytes @ 0xA
  6351                           
  6352                           
  6353                           ; 2 bytes @ 0xA
  6354  002A                     	ds	1
  6355  002B                     DS18X20_ReadMeas@i:	
  6356                           
  6357                           ; 1 bytes @ 0xB
  6358  002B                     	ds	1
  6359  002C                     ??_ReadTData:	
  6360  002C                     ??_strncmp:	
  6361                           ; 0 bytes @ 0xC
  6362                           
  6363  002C                     ReadTData@retry:	
  6364                           ; 0 bytes @ 0xC
  6365                           
  6366  002C                     atoi@sign:	
  6367                           ; 1 bytes @ 0xC
  6368                           
  6369                           
  6370                           ; 1 bytes @ 0xC
  6371  002C                     	ds	1
  6372  002D                     ??_InitSystem:	
  6373  002D                     ?_strstr:	
  6374                           ; 0 bytes @ 0xD
  6375                           
  6376  002D                     InitSystem@x:	
  6377                           ; 2 bytes @ 0xD
  6378                           
  6379  002D                     atoi@a:	
  6380                           ; 1 bytes @ 0xD
  6381                           
  6382  002D                     strstr@s1:	
  6383                           ; 2 bytes @ 0xD
  6384                           
  6385                           
  6386                           ; 2 bytes @ 0xD
  6387  002D                     	ds	2
  6388  002F                     strstr@s2:	
  6389                           
  6390                           ; 2 bytes @ 0xF
  6391  002F                     	ds	2
  6392  0031                     ??_ATCommand_WaitData:	
  6393  0031                     ??_strstr:	
  6394                           ; 0 bytes @ 0x11
  6395                           
  6396  0031                     ?_ATCommand_SendCmd:	
  6397                           ; 0 bytes @ 0x11
  6398                           
  6399  0031                     ATCommand_SendCmd@cmd:	
  6400                           ; 1 bytes @ 0x11
  6401                           
  6402                           
  6403                           ; 2 bytes @ 0x11
  6404  0031                     	ds	2
  6405  0033                     ??_ATCommand_SendCmd:	
  6406  0033                     ATCommand_WaitData@res:	
  6407                           ; 0 bytes @ 0x13
  6408                           
  6409                           
  6410                           ; 1 bytes @ 0x13
  6411  0033                     	ds	1
  6412  0034                     ATCommand_WaitData@strx:	
  6413                           
  6414                           ; 2 bytes @ 0x14
  6415  0034                     	ds	1
  6416  0035                     ATCommand_SendCmd@retry:	
  6417                           
  6418                           ; 1 bytes @ 0x15
  6419  0035                     	ds	1
  6420  0036                     ??_InteractServer:	
  6421  0036                     InteractServer@retry:	
  6422                           ; 0 bytes @ 0x16
  6423                           
  6424  0036                     ATCommand_SendCmd@strx:	
  6425                           ; 1 bytes @ 0x16
  6426                           
  6427                           
  6428                           ; 2 bytes @ 0x16
  6429  0036                     	ds	1
  6430  0037                     InteractServer@res:	
  6431                           
  6432                           ; 1 bytes @ 0x17
  6433  0037                     	ds	1
  6434  0038                     ATCommand_SendCmd@res:	
  6435  0038                     InteractServer@i_10575:	
  6436                           ; 1 bytes @ 0x18
  6437                           
  6438                           
  6439                           ; 2 bytes @ 0x18
  6440  0038                     	ds	1
  6441  0039                     ??_InitGPRS:	
  6442                           
  6443                           ; 0 bytes @ 0x19
  6444  0039                     	ds	1
  6445  003A                     InteractServer@i_10580:	
  6446                           
  6447                           ; 2 bytes @ 0x1A
  6448  003A                     	ds	1
  6449  003B                     InitGPRS@i:	
  6450                           
  6451                           ; 1 bytes @ 0x1B
  6452  003B                     	ds	1
  6453  003C                     InteractServer@j_10587:	
  6454  003C                     InitGPRS@strx:	
  6455                           ; 2 bytes @ 0x1C
  6456                           
  6457                           
  6458                           ; 2 bytes @ 0x1C
  6459  003C                     	ds	2
  6460  003E                     InitGPRS@retry:	
  6461  003E                     InteractServer@txLen:	
  6462                           ; 1 bytes @ 0x1E
  6463                           
  6464                           
  6465                           ; 2 bytes @ 0x1E
  6466  003E                     	ds	2
  6467  0040                     InteractServer@t:	
  6468                           
  6469                           ; 2 bytes @ 0x20
  6470  0040                     	ds	2
  6471  0042                     InteractServer@addr:	
  6472                           
  6473                           ; 1 bytes @ 0x22
  6474  0042                     	ds	1
  6475  0043                     InteractServer@j:	
  6476                           
  6477                           ; 1 bytes @ 0x23
  6478  0043                     	ds	1
  6479  0044                     InteractServer@k:	
  6480                           
  6481                           ; 1 bytes @ 0x24
  6482  0044                     	ds	1
  6483  0045                     InteractServer@i:	
  6484                           
  6485                           ; 1 bytes @ 0x25
  6486  0045                     	ds	1
  6487  0046                     ??_CallSend:	
  6488  0046                     CallSend@ret:	
  6489                           ; 0 bytes @ 0x26
  6490                           
  6491                           
  6492                           ; 1 bytes @ 0x26
  6493  0046                     	ds	1
  6494  0047                     ??_CallProc:	
  6495  0047                     CallProc@retry:	
  6496                           ; 0 bytes @ 0x27
  6497                           
  6498                           
  6499                           ; 1 bytes @ 0x27
  6500  0047                     	ds	1
  6501  0048                     ??_TestProc:	
  6502                           
  6503                           ; 0 bytes @ 0x28
  6504  0048                     	ds	2
  6505  004A                     ??_main:	
  6506                           
  6507                           ; 0 bytes @ 0x2A
  6508  004A                     	ds	2
  6509  004C                     main@addr:	
  6510                           
  6511                           ; 1 bytes @ 0x2C
  6512  004C                     	ds	1
  6513  004D                     main@i:	
  6514                           
  6515                           ; 1 bytes @ 0x2D
  6516  004D                     	ds	1
  6517                           
  6518                           	psect	text1963
  6519  024B                     __ptext1963:	
  6520 ;; =============== function _main ends ============
  6521                           
  6522                           
  6523 ;; *************** function _TestProc *****************
  6524 ;; Defined at:
  6525 ;;		line 9 in file "F:\work\WYP\NBIoT\TestProc.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;		None
  6530 ;; Return value:  Size  Location     Type
  6531 ;;		None               void
  6532 ;; Registers used:
  6533 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6534 ;; Tracked objects:
  6535 ;;		On entry : 1F/0
  6536 ;;		On exit  : 1F/0
  6537 ;;		Unchanged: 0/0
  6538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6539 ;;      Params:         0       0       0       0       0       0       0       0
  6540 ;;      Locals:         0       0       0       0       0       0       0       0
  6541 ;;      Temps:          0       2       0       0       0       0       0       0
  6542 ;;      Totals:         0       2       0       0       0       0       0       0
  6543 ;;Total ram usage:        2 bytes
  6544 ;; Hardware stack levels used:    1
  6545 ;; Hardware stack levels required when called:    9
  6546 ;; This function calls:
  6547 ;;		_LcdDisplayAll
  6548 ;;		___delay_20ms
  6549 ;;		_ReadTData
  6550 ;;		_LcdDisplay_Err
  6551 ;;		_CallProc
  6552 ;; This function is called by:
  6553 ;;		_main
  6554 ;; This function uses a non-reentrant model
  6555 ;;
  6556  024B                     _TestProc:	
  6557                           
  6558                           ;TestProc.c: 10: if(RB7==0)
  6559                           
  6560                           ; Regs used in _TestProc: [wreg-btemp+0+pclath+cstack]
  6561  024B  1B8D               	btfsc	13,7
  6562  024C  0008               	return
  6563                           
  6564                           ;TestProc.c: 11: {
  6565                           ;TestProc.c: 12: _delay((unsigned long)((20)*(4000000/4000.0)));
  6566  024D  301A               	movlw	26
  6567  024E  00C9               	movwf	??_TestProc+1
  6568  024F  30F8               	movlw	248
  6569  0250  00C8               	movwf	??_TestProc
  6570  0251                     u8977:	
  6571  0251  0BC8               	decfsz	??_TestProc,f
  6572  0252  2A51               	goto	u8977
  6573  0253  0BC9               	decfsz	??_TestProc+1,f
  6574  0254  2A51               	goto	u8977
  6575  0255  0064               	clrwdt
  6576                           
  6577                           ;TestProc.c: 13: if(RB7==0)
  6578  0256  0020               	movlb	0	; select bank0
  6579  0257  1B8D               	btfsc	13,7
  6580  0258  0008               	return
  6581                           
  6582                           ;TestProc.c: 14: {
  6583                           ;TestProc.c: 15: LcdDisplayAll(0);
  6584  0259  3000               	movlw	0
  6585  025A  2296               	fcall	_LcdDisplayAll
  6586                           
  6587                           ;TestProc.c: 16: __delay_20ms(150);
  6588  025B  3096               	movlw	150
  6589  025C  0020               	movlb	0	; select bank0
  6590  025D  00A0               	movwf	?___delay_20ms
  6591  025E  01A1               	clrf	?___delay_20ms+1
  6592  025F  318A  22D5  3182   	fcall	___delay_20ms
  6593                           
  6594                           ;TestProc.c: 17: LcdDisplayAll(1);
  6595  0262  3001               	movlw	1
  6596  0263  2296               	fcall	_LcdDisplayAll
  6597                           
  6598                           ;TestProc.c: 18: ReadTData();
  6599  0264  3188  20E3  3182   	fcall	_ReadTData
  6600                           
  6601                           ;TestProc.c: 19: if(CurTemp.u16==0xf000)
  6602  0267  0020               	movlb	0	; select bank0
  6603  0268  0857               	movf	_CurTemp+1,w
  6604  0269  3AF0               	xorlw	240
  6605  026A  0456               	iorwf	_CurTemp,w
  6606  026B  1D03               	skipz
  6607  026C  2A76               	goto	l33522
  6608                           
  6609                           ;TestProc.c: 20: {
  6610                           ;TestProc.c: 21: LATA4=0;
  6611  026D  0022               	movlb	2	; select bank2
  6612  026E  120C               	bcf	12,4
  6613                           
  6614                           ;TestProc.c: 22: LATA3=1;
  6615  026F  158C               	bsf	12,3
  6616                           
  6617                           ;TestProc.c: 23: ErrState=MissT;
  6618  0270  0020               	movlb	0	; select bank0
  6619  0271  01E2               	clrf	_ErrState
  6620  0272  0AE2               	incf	_ErrState,f
  6621  0273                     l33520:	
  6622                           
  6623                           ;TestProc.c: 24: LcdDisplay_Err();
  6624  0273  2417  3182         	fcall	_LcdDisplay_Err
  6625                           
  6626                           ;TestProc.c: 25: }
  6627  0275  2A88               	goto	l33534
  6628  0276                     l33522:	
  6629                           
  6630                           ;TestProc.c: 26: else
  6631                           ;TestProc.c: 27: {
  6632                           ;TestProc.c: 28: ErrState=NoErr;
  6633  0276  01E2               	clrf	_ErrState
  6634                           
  6635                           ;TestProc.c: 29: CallProc();
  6636  0277  318E  2634  3182   	fcall	_CallProc
  6637                           
  6638                           ;TestProc.c: 30: if(ErrState!=NoErr)
  6639  027A  0020               	movlb	0	; select bank0
  6640  027B  0862               	movf	_ErrState,w
  6641  027C  1903               	btfsc	3,2
  6642  027D  2A82               	goto	l10839
  6643                           
  6644                           ;TestProc.c: 31: {
  6645                           ;TestProc.c: 32: LATA4=0;
  6646  027E  0022               	movlb	2	; select bank2
  6647  027F  120C               	bcf	12,4
  6648                           
  6649                           ;TestProc.c: 33: LATA3=1;
  6650  0280  158C               	bsf	12,3
  6651  0281  2A73               	goto	l33520
  6652  0282                     l10839:	
  6653                           
  6654                           ;TestProc.c: 36: else
  6655                           ;TestProc.c: 37: {
  6656                           ;TestProc.c: 38: LATA4=1;
  6657  0282  0022               	movlb	2	; select bank2
  6658  0283  160C               	bsf	12,4
  6659                           
  6660                           ;TestProc.c: 39: LATA3=0;
  6661  0284  118C               	bcf	12,3
  6662                           
  6663                           ;TestProc.c: 40: LcdDisplayAll(2);
  6664  0285  3002               	movlw	2
  6665  0286  2296  3182         	fcall	_LcdDisplayAll
  6666  0288                     l33534:	
  6667                           
  6668                           ;TestProc.c: 44: {
  6669                           ;TestProc.c: 45: if(ErrState!=NoErr)
  6670  0288  0020               	movlb	0	; select bank0
  6671  0289  0862               	movf	_ErrState,w
  6672  028A  1903               	btfsc	3,2
  6673  028B  2A88               	goto	l33534
  6674                           
  6675                           ;TestProc.c: 46: {
  6676                           ;TestProc.c: 47: __delay_20ms(20);
  6677  028C  3014               	movlw	20
  6678  028D  00A0               	movwf	?___delay_20ms
  6679  028E  01A1               	clrf	?___delay_20ms+1
  6680  028F  318A  22D5  3182   	fcall	___delay_20ms
  6681                           
  6682                           ;TestProc.c: 48: LATA3=!LATA3;
  6683  0292  3008               	movlw	8
  6684  0293  0022               	movlb	2	; select bank2
  6685  0294  068C               	xorwf	12,f
  6686  0295  2A88               	goto	l33534
  6687  0296                     __end_of_TestProc:	
  6688  0296                     __ptext2002:	
  6689 ;; =============== function _LcdDisplay_CSQ ends ============
  6690                           
  6691                           
  6692 ;; *************** function _LcdDisplayAll *****************
  6693 ;; Defined at:
  6694 ;;		line 240 in file "F:\work\WYP\NBIoT\Display.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  x               1    wreg     unsigned char 
  6697 ;; Auto vars:     Size  Location     Type
  6698 ;;  x               1    0[BANK0 ] unsigned char 
  6699 ;; Return value:  Size  Location     Type
  6700 ;;		None               void
  6701 ;; Registers used:
  6702 ;;		wreg, status,2, status,0, pclath, cstack
  6703 ;; Tracked objects:
  6704 ;;		On entry : 1D/0
  6705 ;;		On exit  : 10/0
  6706 ;;		Unchanged: FFFE0/0
  6707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6708 ;;      Params:         0       0       0       0       0       0       0       0
  6709 ;;      Locals:         0       1       0       0       0       0       0       0
  6710 ;;      Temps:          0       0       0       0       0       0       0       0
  6711 ;;      Totals:         0       1       0       0       0       0       0       0
  6712 ;;Total ram usage:        1 bytes
  6713 ;; Hardware stack levels used:    1
  6714 ;; Hardware stack levels required when called:    4
  6715 ;; This function calls:
  6716 ;;		_LcdDisplayNum
  6717 ;; This function is called by:
  6718 ;;		_TestProc
  6719 ;; This function uses a non-reentrant model
  6720 ;;
  6721  0296                     _LcdDisplayAll:	
  6722                           
  6723                           ; Regs used in _LcdDisplayAll: [wreg+status,2+status,0+pclath+cstack]
  6724                           ;LcdDisplayAll@x stored from wreg
  6725  0296  0020               	movlb	0	; select bank0
  6726  0297  00A0               	movwf	LcdDisplayAll@x
  6727                           
  6728                           ;Display.c: 244: if(x==0)
  6729  0298  08A0               	movf	LcdDisplayAll@x,f
  6730  0299  1D03               	skipz
  6731  029A  2AC0               	goto	l32456
  6732                           
  6733                           ;Display.c: 245: {
  6734                           ;Display.c: 246: DpyNum[0]=0xff;
  6735  029B  30FF               	movlw	255
  6736  029C  00E9               	movwf	_DpyNum
  6737                           
  6738                           ;Display.c: 247: DpyNum[1]=0xff;
  6739  029D  00EA               	movwf	_DpyNum+1
  6740                           
  6741                           ;Display.c: 248: DpyNum[2]=0xff;
  6742  029E  00EB               	movwf	_DpyNum+2
  6743                           
  6744                           ;Display.c: 249: LcdDisplayNum();
  6745  029F  230E  3182         	fcall	_LcdDisplayNum
  6746  02A1                     l2225:	
  6747                           ;Display.c: 250: while(WA==0);
  6748                           
  6749  02A1  1E12               	btfss	18,4
  6750  02A2  2AA1               	goto	l2225
  6751                           
  6752                           ;Display.c: 251: SEG5COM0=1;
  6753  02A3  16A0               	bsf	32,5
  6754  02A4                     l2228:	
  6755                           ;Display.c: 252: while(WA==0);
  6756                           
  6757  02A4  1E12               	btfss	18,4
  6758  02A5  2AA4               	goto	l2228
  6759                           
  6760                           ;Display.c: 253: SEG5COM1=1;
  6761  02A6  16A3               	bsf	35,5
  6762  02A7                     l2231:	
  6763                           ;Display.c: 254: while(WA==0);
  6764                           
  6765  02A7  1E12               	btfss	18,4
  6766  02A8  2AA7               	goto	l2231
  6767                           
  6768                           ;Display.c: 255: SEG5COM2=1;
  6769  02A9  16A6               	bsf	38,5
  6770  02AA                     l2234:	
  6771                           ;Display.c: 256: while(WA==0);
  6772                           
  6773  02AA  1E12               	btfss	18,4
  6774  02AB  2AAA               	goto	l2234
  6775                           
  6776                           ;Display.c: 257: SEG5COM3=1;
  6777  02AC  16A9               	bsf	41,5
  6778  02AD                     l2237:	
  6779                           ;Display.c: 258: while(WA==0);
  6780                           
  6781  02AD  1E12               	btfss	18,4
  6782  02AE  2AAD               	goto	l2237
  6783                           
  6784                           ;Display.c: 259: SEG22COM3=1;
  6785  02AF  172B               	bsf	43,6
  6786  02B0                     l2240:	
  6787                           ;Display.c: 260: while(WA==0);
  6788                           
  6789  02B0  1E12               	btfss	18,4
  6790  02B1  2AB0               	goto	l2240
  6791                           
  6792                           ;Display.c: 261: SEG3COM3=1;
  6793  02B2  15A9               	bsf	41,3
  6794  02B3                     l2243:	
  6795                           ;Display.c: 262: while(WA==0);
  6796                           
  6797  02B3  1E12               	btfss	18,4
  6798  02B4  2AB3               	goto	l2243
  6799                           
  6800                           ;Display.c: 263: SEG21COM3=1;
  6801  02B5  16AB               	bsf	43,5
  6802  02B6                     l2246:	
  6803                           ;Display.c: 264: while(WA==0);
  6804                           
  6805  02B6  1E12               	btfss	18,4
  6806  02B7  2AB6               	goto	l2246
  6807                           
  6808                           ;Display.c: 265: SEG21COM2=1;
  6809  02B8  16A8               	bsf	40,5
  6810  02B9                     l2249:	
  6811                           ;Display.c: 266: while(WA==0);
  6812                           
  6813  02B9  1E12               	btfss	18,4
  6814  02BA  2AB9               	goto	l2249
  6815                           
  6816                           ;Display.c: 267: SEG21COM1=1;
  6817  02BB  16A5               	bsf	37,5
  6818  02BC                     l2252:	
  6819                           ;Display.c: 268: while(WA==0);
  6820                           
  6821  02BC  1E12               	btfss	18,4
  6822  02BD  2ABC               	goto	l2252
  6823                           
  6824                           ;Display.c: 269: SEG21COM0=1;
  6825  02BE  16A2               	bsf	34,5
  6826                           
  6827                           ;Display.c: 270: }
  6828  02BF  0008               	return
  6829  02C0                     l32456:	
  6830                           
  6831                           ;Display.c: 271: else if(x==1)
  6832  02C0  0B20               	decfsz	LcdDisplayAll@x,w
  6833  02C1  2AE6               	goto	l32462
  6834                           
  6835                           ;Display.c: 272: {
  6836                           ;Display.c: 273: DpyNum[0]=0;
  6837  02C2  01E9               	clrf	_DpyNum
  6838                           
  6839                           ;Display.c: 274: DpyNum[1]=0;
  6840  02C3  01EA               	clrf	_DpyNum+1
  6841                           
  6842                           ;Display.c: 275: DpyNum[2]=0;
  6843  02C4  01EB               	clrf	_DpyNum+2
  6844                           
  6845                           ;Display.c: 276: LcdDisplayNum();
  6846  02C5  230E  3182         	fcall	_LcdDisplayNum
  6847  02C7                     l2257:	
  6848                           ;Display.c: 277: while(WA==0);
  6849                           
  6850  02C7  1E12               	btfss	18,4
  6851  02C8  2AC7               	goto	l2257
  6852                           
  6853                           ;Display.c: 278: SEG5COM0=0;
  6854  02C9  12A0               	bcf	32,5
  6855  02CA                     l2260:	
  6856                           ;Display.c: 279: while(WA==0);
  6857                           
  6858  02CA  1E12               	btfss	18,4
  6859  02CB  2ACA               	goto	l2260
  6860                           
  6861                           ;Display.c: 280: SEG5COM1=0;
  6862  02CC  12A3               	bcf	35,5
  6863  02CD                     l2263:	
  6864                           ;Display.c: 281: while(WA==0);
  6865                           
  6866  02CD  1E12               	btfss	18,4
  6867  02CE  2ACD               	goto	l2263
  6868                           
  6869                           ;Display.c: 282: SEG5COM2=0;
  6870  02CF  12A6               	bcf	38,5
  6871  02D0                     l2266:	
  6872                           ;Display.c: 283: while(WA==0);
  6873                           
  6874  02D0  1E12               	btfss	18,4
  6875  02D1  2AD0               	goto	l2266
  6876                           
  6877                           ;Display.c: 284: SEG5COM3=0;
  6878  02D2  12A9               	bcf	41,5
  6879  02D3                     l2269:	
  6880                           ;Display.c: 285: while(WA==0);
  6881                           
  6882  02D3  1E12               	btfss	18,4
  6883  02D4  2AD3               	goto	l2269
  6884                           
  6885                           ;Display.c: 286: SEG22COM3=0;
  6886  02D5  132B               	bcf	43,6
  6887  02D6                     l2272:	
  6888                           ;Display.c: 287: while(WA==0);
  6889                           
  6890  02D6  1E12               	btfss	18,4
  6891  02D7  2AD6               	goto	l2272
  6892                           
  6893                           ;Display.c: 288: SEG3COM3=0;
  6894  02D8  11A9               	bcf	41,3
  6895  02D9                     l2275:	
  6896                           ;Display.c: 289: while(WA==0);
  6897                           
  6898  02D9  1E12               	btfss	18,4
  6899  02DA  2AD9               	goto	l2275
  6900                           
  6901                           ;Display.c: 290: SEG21COM3=0;
  6902  02DB  12AB               	bcf	43,5
  6903  02DC                     l2278:	
  6904                           ;Display.c: 291: while(WA==0);
  6905                           
  6906  02DC  1E12               	btfss	18,4
  6907  02DD  2ADC               	goto	l2278
  6908                           
  6909                           ;Display.c: 292: SEG21COM2=0;
  6910  02DE  12A8               	bcf	40,5
  6911  02DF                     l2281:	
  6912                           ;Display.c: 293: while(WA==0);
  6913                           
  6914  02DF  1E12               	btfss	18,4
  6915  02E0  2ADF               	goto	l2281
  6916                           
  6917                           ;Display.c: 294: SEG21COM1=0;
  6918  02E1  12A5               	bcf	37,5
  6919  02E2                     l2284:	
  6920                           ;Display.c: 295: while(WA==0);
  6921                           
  6922  02E2  1E12               	btfss	18,4
  6923  02E3  2AE2               	goto	l2284
  6924  02E4                     l2286:	
  6925                           
  6926                           ;Display.c: 296: SEG21COM0=0;
  6927  02E4  12A2               	bcf	34,5
  6928                           
  6929                           ;Display.c: 297: }
  6930  02E5  0008               	return
  6931  02E6                     l32462:	
  6932                           
  6933                           ;Display.c: 298: else if(x==2)
  6934  02E6  0820               	movf	LcdDisplayAll@x,w
  6935  02E7  3A02               	xorlw	2
  6936  02E8  1D03               	skipz
  6937  02E9  0008               	return
  6938                           
  6939                           ;Display.c: 299: {
  6940                           ;Display.c: 300: DpyNum[0]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6941  02EA  3077               	movlw	119
  6942  02EB  00E9               	movwf	_DpyNum
  6943                           
  6944                           ;Display.c: 301: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6945  02EC  00EA               	movwf	_DpyNum+1
  6946                           
  6947                           ;Display.c: 302: DpyNum[2]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6948  02ED  00EB               	movwf	_DpyNum+2
  6949                           
  6950                           ;Display.c: 303: LcdDisplayNum();
  6951  02EE  230E  3182         	fcall	_LcdDisplayNum
  6952  02F0                     l2289:	
  6953                           ;Display.c: 304: while(WA==0);
  6954                           
  6955  02F0  1E12               	btfss	18,4
  6956  02F1  2AF0               	goto	l2289
  6957                           
  6958                           ;Display.c: 305: SEG5COM0=0;
  6959  02F2  12A0               	bcf	32,5
  6960  02F3                     l2292:	
  6961                           ;Display.c: 306: while(WA==0);
  6962                           
  6963  02F3  1E12               	btfss	18,4
  6964  02F4  2AF3               	goto	l2292
  6965                           
  6966                           ;Display.c: 307: SEG5COM1=0;
  6967  02F5  12A3               	bcf	35,5
  6968  02F6                     l2295:	
  6969                           ;Display.c: 308: while(WA==0);
  6970                           
  6971  02F6  1E12               	btfss	18,4
  6972  02F7  2AF6               	goto	l2295
  6973                           
  6974                           ;Display.c: 309: SEG5COM2=0;
  6975  02F8  12A6               	bcf	38,5
  6976  02F9                     l2298:	
  6977                           ;Display.c: 310: while(WA==0);
  6978                           
  6979  02F9  1E12               	btfss	18,4
  6980  02FA  2AF9               	goto	l2298
  6981                           
  6982                           ;Display.c: 311: SEG5COM3=0;
  6983  02FB  12A9               	bcf	41,5
  6984  02FC                     l2301:	
  6985                           ;Display.c: 312: while(WA==0);
  6986                           
  6987  02FC  1E12               	btfss	18,4
  6988  02FD  2AFC               	goto	l2301
  6989                           
  6990                           ;Display.c: 313: SEG22COM3=0;
  6991  02FE  132B               	bcf	43,6
  6992  02FF                     l2304:	
  6993                           ;Display.c: 314: while(WA==0);
  6994                           
  6995  02FF  1E12               	btfss	18,4
  6996  0300  2AFF               	goto	l2304
  6997                           
  6998                           ;Display.c: 315: SEG3COM3=0;
  6999  0301  11A9               	bcf	41,3
  7000  0302                     l2307:	
  7001                           ;Display.c: 316: while(WA==0);
  7002                           
  7003  0302  1E12               	btfss	18,4
  7004  0303  2B02               	goto	l2307
  7005                           
  7006                           ;Display.c: 317: SEG21COM3=0;
  7007  0304  12AB               	bcf	43,5
  7008  0305                     l2310:	
  7009                           ;Display.c: 318: while(WA==0);
  7010                           
  7011  0305  1E12               	btfss	18,4
  7012  0306  2B05               	goto	l2310
  7013                           
  7014                           ;Display.c: 319: SEG21COM2=0;
  7015  0307  12A8               	bcf	40,5
  7016  0308                     l2313:	
  7017                           ;Display.c: 320: while(WA==0);
  7018                           
  7019  0308  1E12               	btfss	18,4
  7020  0309  2B08               	goto	l2313
  7021                           
  7022                           ;Display.c: 321: SEG21COM1=0;
  7023  030A  12A5               	bcf	37,5
  7024  030B                     l2316:	
  7025                           ;Display.c: 322: while(WA==0);
  7026                           
  7027  030B  1A12               	btfsc	18,4
  7028  030C  2AE4               	goto	l2286
  7029  030D  2B0B               	goto	l2316
  7030  030E                     __end_of_LcdDisplayAll:	
  7031  030E                     __ptext2023:	
  7032 ;; =============== function _DisplayInit ends ============
  7033                           
  7034                           
  7035 ;; *************** function _LcdDisplayNum *****************
  7036 ;; Defined at:
  7037 ;;		line 12 in file "F:\work\WYP\NBIoT\Display.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;		None
  7040 ;; Auto vars:     Size  Location     Type
  7041 ;;		None
  7042 ;; Return value:  Size  Location     Type
  7043 ;;		None               void
  7044 ;; Registers used:
  7045 ;;		None
  7046 ;; Tracked objects:
  7047 ;;		On entry : 10/0
  7048 ;;		On exit  : 1F/F
  7049 ;;		Unchanged: FFFE0/0
  7050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7051 ;;      Params:         0       0       0       0       0       0       0       0
  7052 ;;      Locals:         0       0       0       0       0       0       0       0
  7053 ;;      Temps:          0       0       0       0       0       0       0       0
  7054 ;;      Totals:         0       0       0       0       0       0       0       0
  7055 ;;Total ram usage:        0 bytes
  7056 ;; Hardware stack levels used:    1
  7057 ;; Hardware stack levels required when called:    3
  7058 ;; This function calls:
  7059 ;;		Nothing
  7060 ;; This function is called by:
  7061 ;;		_LcdDisplayAll
  7062 ;;		_LcdDisplay_CSQ
  7063 ;;		_LcdDisplay_CurTemp
  7064 ;;		_LcdDisplay_Err
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067  030E                     _LcdDisplayNum:	
  7068  030E                     l32110:	
  7069                           ; Regs used in _LcdDisplayNum: []
  7070                           
  7071                           
  7072                           ;Display.c: 16: if(DpyNum[0]&0x01)
  7073  030E  0020               	movlb	0	; select bank0
  7074  030F  1C69               	btfss	_DpyNum,0
  7075  0310  2B16               	goto	l2050
  7076  0311                     l2046:	
  7077  0311  002F               	movlb	15	; select bank15
  7078  0312  1E12               	btfss	18,4
  7079  0313  2B11               	goto	l2046
  7080                           
  7081                           ;Display.c: 19: SEG23COM0 = 1;
  7082  0314  17A2               	bsf	34,7
  7083                           
  7084                           ;Display.c: 20: }
  7085  0315  2B1A               	goto	l2049
  7086  0316                     l2050:	
  7087  0316  002F               	movlb	15	; select bank15
  7088  0317  1E12               	btfss	18,4
  7089  0318  2B16               	goto	l2050
  7090                           
  7091                           ;Display.c: 24: SEG23COM0 = 0;
  7092  0319  13A2               	bcf	34,7
  7093  031A                     l2049:	
  7094                           
  7095                           ;Display.c: 25: }
  7096                           ;Display.c: 26: if(DpyNum[0]&0x02)
  7097  031A  0020               	movlb	0	; select bank0
  7098  031B  1CE9               	btfss	_DpyNum,1
  7099  031C  2B22               	goto	l2058
  7100  031D                     l2054:	
  7101  031D  002F               	movlb	15	; select bank15
  7102  031E  1E12               	btfss	18,4
  7103  031F  2B1D               	goto	l2054
  7104                           
  7105                           ;Display.c: 29: SEG23COM1 = 1;
  7106  0320  17A5               	bsf	37,7
  7107                           
  7108                           ;Display.c: 30: }
  7109  0321  2B26               	goto	l2057
  7110  0322                     l2058:	
  7111  0322  002F               	movlb	15	; select bank15
  7112  0323  1E12               	btfss	18,4
  7113  0324  2B22               	goto	l2058
  7114                           
  7115                           ;Display.c: 34: SEG23COM1 = 0;
  7116  0325  13A5               	bcf	37,7
  7117  0326                     l2057:	
  7118                           
  7119                           ;Display.c: 35: }
  7120                           ;Display.c: 36: if(DpyNum[0]&0x04)
  7121  0326  0020               	movlb	0	; select bank0
  7122  0327  1D69               	btfss	_DpyNum,2
  7123  0328  2B2E               	goto	l2066
  7124  0329                     l2062:	
  7125  0329  002F               	movlb	15	; select bank15
  7126  032A  1E12               	btfss	18,4
  7127  032B  2B29               	goto	l2062
  7128                           
  7129                           ;Display.c: 39: SEG23COM2 = 1;
  7130  032C  17A8               	bsf	40,7
  7131                           
  7132                           ;Display.c: 40: }
  7133  032D  2B32               	goto	l2065
  7134  032E                     l2066:	
  7135  032E  002F               	movlb	15	; select bank15
  7136  032F  1E12               	btfss	18,4
  7137  0330  2B2E               	goto	l2066
  7138                           
  7139                           ;Display.c: 44: SEG23COM2 = 0;
  7140  0331  13A8               	bcf	40,7
  7141  0332                     l2065:	
  7142                           
  7143                           ;Display.c: 45: }
  7144                           ;Display.c: 46: if(DpyNum[0]&0x08)
  7145  0332  0020               	movlb	0	; select bank0
  7146  0333  1DE9               	btfss	_DpyNum,3
  7147  0334  2B3A               	goto	l2074
  7148  0335                     l2070:	
  7149  0335  002F               	movlb	15	; select bank15
  7150  0336  1E12               	btfss	18,4
  7151  0337  2B35               	goto	l2070
  7152                           
  7153                           ;Display.c: 49: SEG23COM3 = 1;
  7154  0338  17AB               	bsf	43,7
  7155                           
  7156                           ;Display.c: 50: }
  7157  0339  2B3E               	goto	l2073
  7158  033A                     l2074:	
  7159  033A  002F               	movlb	15	; select bank15
  7160  033B  1E12               	btfss	18,4
  7161  033C  2B3A               	goto	l2074
  7162                           
  7163                           ;Display.c: 54: SEG23COM3 = 0;
  7164  033D  13AB               	bcf	43,7
  7165  033E                     l2073:	
  7166                           
  7167                           ;Display.c: 55: }
  7168                           ;Display.c: 56: if(DpyNum[0]&0x10)
  7169  033E  0020               	movlb	0	; select bank0
  7170  033F  1E69               	btfss	_DpyNum,4
  7171  0340  2B46               	goto	l2082
  7172  0341                     l2078:	
  7173  0341  002F               	movlb	15	; select bank15
  7174  0342  1E12               	btfss	18,4
  7175  0343  2B41               	goto	l2078
  7176                           
  7177                           ;Display.c: 59: SEG22COM2 = 1;
  7178  0344  1728               	bsf	40,6
  7179                           
  7180                           ;Display.c: 60: }
  7181  0345  2B4A               	goto	l2081
  7182  0346                     l2082:	
  7183  0346  002F               	movlb	15	; select bank15
  7184  0347  1E12               	btfss	18,4
  7185  0348  2B46               	goto	l2082
  7186                           
  7187                           ;Display.c: 64: SEG22COM2 = 0;
  7188  0349  1328               	bcf	40,6
  7189  034A                     l2081:	
  7190                           
  7191                           ;Display.c: 65: }
  7192                           ;Display.c: 66: if(DpyNum[0]&0x20)
  7193  034A  0020               	movlb	0	; select bank0
  7194  034B  1EE9               	btfss	_DpyNum,5
  7195  034C  2B52               	goto	l2090
  7196  034D                     l2086:	
  7197  034D  002F               	movlb	15	; select bank15
  7198  034E  1E12               	btfss	18,4
  7199  034F  2B4D               	goto	l2086
  7200                           
  7201                           ;Display.c: 69: SEG22COM0 = 1;
  7202  0350  1722               	bsf	34,6
  7203                           
  7204                           ;Display.c: 70: }
  7205  0351  2B56               	goto	l2089
  7206  0352                     l2090:	
  7207  0352  002F               	movlb	15	; select bank15
  7208  0353  1E12               	btfss	18,4
  7209  0354  2B52               	goto	l2090
  7210                           
  7211                           ;Display.c: 74: SEG22COM0 = 0;
  7212  0355  1322               	bcf	34,6
  7213  0356                     l2089:	
  7214                           
  7215                           ;Display.c: 75: }
  7216                           ;Display.c: 76: if(DpyNum[0]&0x40)
  7217  0356  0020               	movlb	0	; select bank0
  7218  0357  1F69               	btfss	_DpyNum,6
  7219  0358  2B5E               	goto	l2098
  7220  0359                     l2094:	
  7221  0359  002F               	movlb	15	; select bank15
  7222  035A  1E12               	btfss	18,4
  7223  035B  2B59               	goto	l2094
  7224                           
  7225                           ;Display.c: 79: SEG22COM1 = 1;
  7226  035C  1725               	bsf	37,6
  7227                           
  7228                           ;Display.c: 80: }
  7229  035D  2B62               	goto	l2097
  7230  035E                     l2098:	
  7231  035E  002F               	movlb	15	; select bank15
  7232  035F  1E12               	btfss	18,4
  7233  0360  2B5E               	goto	l2098
  7234                           
  7235                           ;Display.c: 84: SEG22COM1 = 0;
  7236  0361  1325               	bcf	37,6
  7237  0362                     l2097:	
  7238                           
  7239                           ;Display.c: 85: }
  7240                           ;Display.c: 87: if(DpyNum[1]&0x01)
  7241  0362  0020               	movlb	0	; select bank0
  7242  0363  1C6A               	btfss	_DpyNum+1,0
  7243  0364  2B6A               	goto	l2106
  7244  0365                     l2102:	
  7245  0365  002F               	movlb	15	; select bank15
  7246  0366  1E12               	btfss	18,4
  7247  0367  2B65               	goto	l2102
  7248                           
  7249                           ;Display.c: 90: SEG6COM0 = 1;
  7250  0368  1720               	bsf	32,6
  7251                           
  7252                           ;Display.c: 91: }
  7253  0369  2B6E               	goto	l2105
  7254  036A                     l2106:	
  7255  036A  002F               	movlb	15	; select bank15
  7256  036B  1E12               	btfss	18,4
  7257  036C  2B6A               	goto	l2106
  7258                           
  7259                           ;Display.c: 95: SEG6COM0 = 0;
  7260  036D  1320               	bcf	32,6
  7261  036E                     l2105:	
  7262                           
  7263                           ;Display.c: 96: }
  7264                           ;Display.c: 97: if(DpyNum[1]&0x02)
  7265  036E  0020               	movlb	0	; select bank0
  7266  036F  1CEA               	btfss	_DpyNum+1,1
  7267  0370  2B76               	goto	l2114
  7268  0371                     l2110:	
  7269  0371  002F               	movlb	15	; select bank15
  7270  0372  1E12               	btfss	18,4
  7271  0373  2B71               	goto	l2110
  7272                           
  7273                           ;Display.c: 100: SEG6COM1 = 1;
  7274  0374  1723               	bsf	35,6
  7275                           
  7276                           ;Display.c: 101: }
  7277  0375  2B7A               	goto	l2113
  7278  0376                     l2114:	
  7279  0376  002F               	movlb	15	; select bank15
  7280  0377  1E12               	btfss	18,4
  7281  0378  2B76               	goto	l2114
  7282                           
  7283                           ;Display.c: 105: SEG6COM1 = 0;
  7284  0379  1323               	bcf	35,6
  7285  037A                     l2113:	
  7286                           
  7287                           ;Display.c: 106: }
  7288                           ;Display.c: 107: if(DpyNum[1]&0x04)
  7289  037A  0020               	movlb	0	; select bank0
  7290  037B  1D6A               	btfss	_DpyNum+1,2
  7291  037C  2B82               	goto	l2122
  7292  037D                     l2118:	
  7293  037D  002F               	movlb	15	; select bank15
  7294  037E  1E12               	btfss	18,4
  7295  037F  2B7D               	goto	l2118
  7296                           
  7297                           ;Display.c: 110: SEG6COM2 = 1;
  7298  0380  1726               	bsf	38,6
  7299                           
  7300                           ;Display.c: 111: }
  7301  0381  2B86               	goto	l2121
  7302  0382                     l2122:	
  7303  0382  002F               	movlb	15	; select bank15
  7304  0383  1E12               	btfss	18,4
  7305  0384  2B82               	goto	l2122
  7306                           
  7307                           ;Display.c: 115: SEG6COM2 = 0;
  7308  0385  1326               	bcf	38,6
  7309  0386                     l2121:	
  7310                           
  7311                           ;Display.c: 116: }
  7312                           ;Display.c: 117: if(DpyNum[1]&0x08)
  7313  0386  0020               	movlb	0	; select bank0
  7314  0387  1DEA               	btfss	_DpyNum+1,3
  7315  0388  2B8E               	goto	l2130
  7316  0389                     l2126:	
  7317  0389  002F               	movlb	15	; select bank15
  7318  038A  1E12               	btfss	18,4
  7319  038B  2B89               	goto	l2126
  7320                           
  7321                           ;Display.c: 120: SEG6COM3 = 1;
  7322  038C  1729               	bsf	41,6
  7323                           
  7324                           ;Display.c: 121: }
  7325  038D  2B92               	goto	l2129
  7326  038E                     l2130:	
  7327  038E  002F               	movlb	15	; select bank15
  7328  038F  1E12               	btfss	18,4
  7329  0390  2B8E               	goto	l2130
  7330                           
  7331                           ;Display.c: 125: SEG6COM3 = 0;
  7332  0391  1329               	bcf	41,6
  7333  0392                     l2129:	
  7334                           
  7335                           ;Display.c: 126: }
  7336                           ;Display.c: 127: if(DpyNum[1]&0x10)
  7337  0392  0020               	movlb	0	; select bank0
  7338  0393  1E6A               	btfss	_DpyNum+1,4
  7339  0394  2B9A               	goto	l2138
  7340  0395                     l2134:	
  7341  0395  002F               	movlb	15	; select bank15
  7342  0396  1E12               	btfss	18,4
  7343  0397  2B95               	goto	l2134
  7344                           
  7345                           ;Display.c: 130: SEG3COM2 = 1;
  7346  0398  15A6               	bsf	38,3
  7347                           
  7348                           ;Display.c: 131: }
  7349  0399  2B9E               	goto	l2137
  7350  039A                     l2138:	
  7351  039A  002F               	movlb	15	; select bank15
  7352  039B  1E12               	btfss	18,4
  7353  039C  2B9A               	goto	l2138
  7354                           
  7355                           ;Display.c: 135: SEG3COM2 = 0;
  7356  039D  11A6               	bcf	38,3
  7357  039E                     l2137:	
  7358                           
  7359                           ;Display.c: 136: }
  7360                           ;Display.c: 137: if(DpyNum[1]&0x20)
  7361  039E  0020               	movlb	0	; select bank0
  7362  039F  1EEA               	btfss	_DpyNum+1,5
  7363  03A0  2BA6               	goto	l2146
  7364  03A1                     l2142:	
  7365  03A1  002F               	movlb	15	; select bank15
  7366  03A2  1E12               	btfss	18,4
  7367  03A3  2BA1               	goto	l2142
  7368                           
  7369                           ;Display.c: 140: SEG3COM0 = 1;
  7370  03A4  15A0               	bsf	32,3
  7371                           
  7372                           ;Display.c: 141: }
  7373  03A5  2BAA               	goto	l2145
  7374  03A6                     l2146:	
  7375  03A6  002F               	movlb	15	; select bank15
  7376  03A7  1E12               	btfss	18,4
  7377  03A8  2BA6               	goto	l2146
  7378                           
  7379                           ;Display.c: 145: SEG3COM0 = 0;
  7380  03A9  11A0               	bcf	32,3
  7381  03AA                     l2145:	
  7382                           
  7383                           ;Display.c: 146: }
  7384                           ;Display.c: 147: if(DpyNum[1]&0x40)
  7385  03AA  0020               	movlb	0	; select bank0
  7386  03AB  1F6A               	btfss	_DpyNum+1,6
  7387  03AC  2BB2               	goto	l2154
  7388  03AD                     l2150:	
  7389  03AD  002F               	movlb	15	; select bank15
  7390  03AE  1E12               	btfss	18,4
  7391  03AF  2BAD               	goto	l2150
  7392                           
  7393                           ;Display.c: 150: SEG3COM1 = 1;
  7394  03B0  15A3               	bsf	35,3
  7395                           
  7396                           ;Display.c: 151: }
  7397  03B1  2BB6               	goto	l2153
  7398  03B2                     l2154:	
  7399  03B2  002F               	movlb	15	; select bank15
  7400  03B3  1E12               	btfss	18,4
  7401  03B4  2BB2               	goto	l2154
  7402                           
  7403                           ;Display.c: 155: SEG3COM1 = 0;
  7404  03B5  11A3               	bcf	35,3
  7405  03B6                     l2153:	
  7406                           
  7407                           ;Display.c: 156: }
  7408                           ;Display.c: 157: if(DpyNum[1]&0x80)
  7409  03B6  0020               	movlb	0	; select bank0
  7410  03B7  1FEA               	btfss	_DpyNum+1,7
  7411  03B8  2BBE               	goto	l2162
  7412  03B9                     l2158:	
  7413  03B9  002F               	movlb	15	; select bank15
  7414  03BA  1E12               	btfss	18,4
  7415  03BB  2BB9               	goto	l2158
  7416                           
  7417                           ;Display.c: 160: SEG16COM3 = 1;
  7418  03BC  142B               	bsf	43,0
  7419                           
  7420                           ;Display.c: 161: }
  7421  03BD  2BC2               	goto	l2161
  7422  03BE                     l2162:	
  7423  03BE  002F               	movlb	15	; select bank15
  7424  03BF  1E12               	btfss	18,4
  7425  03C0  2BBE               	goto	l2162
  7426                           
  7427                           ;Display.c: 165: SEG16COM3 = 0;
  7428  03C1  102B               	bcf	43,0
  7429  03C2                     l2161:	
  7430                           
  7431                           ;Display.c: 166: }
  7432                           ;Display.c: 168: if(DpyNum[2]&0x01)
  7433  03C2  0020               	movlb	0	; select bank0
  7434  03C3  1C6B               	btfss	_DpyNum+2,0
  7435  03C4  2BCA               	goto	l2170
  7436  03C5                     l2166:	
  7437  03C5  002F               	movlb	15	; select bank15
  7438  03C6  1E12               	btfss	18,4
  7439  03C7  2BC5               	goto	l2166
  7440                           
  7441                           ;Display.c: 171: SEG11COM0 = 1;
  7442  03C8  15A1               	bsf	33,3
  7443                           
  7444                           ;Display.c: 172: }
  7445  03C9  2BCE               	goto	l2169
  7446  03CA                     l2170:	
  7447  03CA  002F               	movlb	15	; select bank15
  7448  03CB  1E12               	btfss	18,4
  7449  03CC  2BCA               	goto	l2170
  7450                           
  7451                           ;Display.c: 176: SEG11COM0 = 0;
  7452  03CD  11A1               	bcf	33,3
  7453  03CE                     l2169:	
  7454                           
  7455                           ;Display.c: 177: }
  7456                           ;Display.c: 178: if(DpyNum[2]&0x02)
  7457  03CE  0020               	movlb	0	; select bank0
  7458  03CF  1CEB               	btfss	_DpyNum+2,1
  7459  03D0  2BD6               	goto	l2178
  7460  03D1                     l2174:	
  7461  03D1  002F               	movlb	15	; select bank15
  7462  03D2  1E12               	btfss	18,4
  7463  03D3  2BD1               	goto	l2174
  7464                           
  7465                           ;Display.c: 181: SEG11COM1 = 1;
  7466  03D4  15A4               	bsf	36,3
  7467                           
  7468                           ;Display.c: 182: }
  7469  03D5  2BDA               	goto	l2177
  7470  03D6                     l2178:	
  7471  03D6  002F               	movlb	15	; select bank15
  7472  03D7  1E12               	btfss	18,4
  7473  03D8  2BD6               	goto	l2178
  7474                           
  7475                           ;Display.c: 186: SEG11COM1 = 0;
  7476  03D9  11A4               	bcf	36,3
  7477  03DA                     l2177:	
  7478                           
  7479                           ;Display.c: 187: }
  7480                           ;Display.c: 188: if(DpyNum[2]&0x04)
  7481  03DA  0020               	movlb	0	; select bank0
  7482  03DB  1D6B               	btfss	_DpyNum+2,2
  7483  03DC  2BE2               	goto	l2186
  7484  03DD                     l2182:	
  7485  03DD  002F               	movlb	15	; select bank15
  7486  03DE  1E12               	btfss	18,4
  7487  03DF  2BDD               	goto	l2182
  7488                           
  7489                           ;Display.c: 191: SEG11COM2 = 1;
  7490  03E0  15A7               	bsf	39,3
  7491                           
  7492                           ;Display.c: 192: }
  7493  03E1  2BE6               	goto	l2185
  7494  03E2                     l2186:	
  7495  03E2  002F               	movlb	15	; select bank15
  7496  03E3  1E12               	btfss	18,4
  7497  03E4  2BE2               	goto	l2186
  7498                           
  7499                           ;Display.c: 196: SEG11COM2 = 0;
  7500  03E5  11A7               	bcf	39,3
  7501  03E6                     l2185:	
  7502                           
  7503                           ;Display.c: 197: }
  7504                           ;Display.c: 198: if(DpyNum[2]&0x08)
  7505  03E6  0020               	movlb	0	; select bank0
  7506  03E7  1DEB               	btfss	_DpyNum+2,3
  7507  03E8  2BEE               	goto	l2194
  7508  03E9                     l2190:	
  7509  03E9  002F               	movlb	15	; select bank15
  7510  03EA  1E12               	btfss	18,4
  7511  03EB  2BE9               	goto	l2190
  7512                           
  7513                           ;Display.c: 201: SEG11COM3 = 1;
  7514  03EC  15AA               	bsf	42,3
  7515                           
  7516                           ;Display.c: 202: }
  7517  03ED  2BF2               	goto	l2193
  7518  03EE                     l2194:	
  7519  03EE  002F               	movlb	15	; select bank15
  7520  03EF  1E12               	btfss	18,4
  7521  03F0  2BEE               	goto	l2194
  7522                           
  7523                           ;Display.c: 206: SEG11COM3 = 0;
  7524  03F1  11AA               	bcf	42,3
  7525  03F2                     l2193:	
  7526                           
  7527                           ;Display.c: 207: }
  7528                           ;Display.c: 208: if(DpyNum[2]&0x10)
  7529  03F2  0020               	movlb	0	; select bank0
  7530  03F3  1E6B               	btfss	_DpyNum+2,4
  7531  03F4  2BFA               	goto	l2202
  7532  03F5                     l2198:	
  7533  03F5  002F               	movlb	15	; select bank15
  7534  03F6  1E12               	btfss	18,4
  7535  03F7  2BF5               	goto	l2198
  7536                           
  7537                           ;Display.c: 211: SEG16COM2 = 1;
  7538  03F8  1428               	bsf	40,0
  7539                           
  7540                           ;Display.c: 212: }
  7541  03F9  2BFE               	goto	l2201
  7542  03FA                     l2202:	
  7543  03FA  002F               	movlb	15	; select bank15
  7544  03FB  1E12               	btfss	18,4
  7545  03FC  2BFA               	goto	l2202
  7546                           
  7547                           ;Display.c: 216: SEG16COM2 = 0;
  7548  03FD  1028               	bcf	40,0
  7549  03FE                     l2201:	
  7550                           
  7551                           ;Display.c: 217: }
  7552                           ;Display.c: 218: if(DpyNum[2]&0x20)
  7553  03FE  0020               	movlb	0	; select bank0
  7554  03FF  1EEB               	btfss	_DpyNum+2,5
  7555  0400  2C06               	goto	l2210
  7556  0401                     l2206:	
  7557  0401  002F               	movlb	15	; select bank15
  7558  0402  1E12               	btfss	18,4
  7559  0403  2C01               	goto	l2206
  7560                           
  7561                           ;Display.c: 221: SEG16COM0 = 1;
  7562  0404  1422               	bsf	34,0
  7563                           
  7564                           ;Display.c: 222: }
  7565  0405  2C0A               	goto	l2209
  7566  0406                     l2210:	
  7567  0406  002F               	movlb	15	; select bank15
  7568  0407  1E12               	btfss	18,4
  7569  0408  2C06               	goto	l2210
  7570                           
  7571                           ;Display.c: 226: SEG16COM0 = 0;
  7572  0409  1022               	bcf	34,0
  7573  040A                     l2209:	
  7574                           
  7575                           ;Display.c: 227: }
  7576                           ;Display.c: 228: if(DpyNum[2]&0x40)
  7577  040A  0020               	movlb	0	; select bank0
  7578  040B  1F6B               	btfss	_DpyNum+2,6
  7579  040C  2C12               	goto	l2218
  7580  040D                     l2214:	
  7581  040D  002F               	movlb	15	; select bank15
  7582  040E  1E12               	btfss	18,4
  7583  040F  2C0D               	goto	l2214
  7584                           
  7585                           ;Display.c: 231: SEG16COM1 = 1;
  7586  0410  1425               	bsf	37,0
  7587                           
  7588                           ;Display.c: 232: }
  7589  0411  0008               	return
  7590  0412                     l2218:	
  7591  0412  002F               	movlb	15	; select bank15
  7592  0413  1E12               	btfss	18,4
  7593  0414  2C12               	goto	l2218
  7594                           
  7595                           ;Display.c: 236: SEG16COM1 = 0;
  7596  0415  1025               	bcf	37,0
  7597  0416  0008               	return
  7598  0417                     __end_of_LcdDisplayNum:	
  7599  0417                     __ptext1999:	
  7600 ;; =============== function _GetRomData ends ============
  7601                           
  7602                           
  7603 ;; *************** function _LcdDisplay_Err *****************
  7604 ;; Defined at:
  7605 ;;		line 370 in file "F:\work\WYP\NBIoT\Display.c"
  7606 ;; Parameters:    Size  Location     Type
  7607 ;;		None
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;		None
  7610 ;; Return value:  Size  Location     Type
  7611 ;;		None               void
  7612 ;; Registers used:
  7613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 1D/0
  7616 ;;		On exit  : 1F/F
  7617 ;;		Unchanged: FFFE0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7619 ;;      Params:         0       0       0       0       0       0       0       0
  7620 ;;      Locals:         0       0       0       0       0       0       0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0
  7622 ;;      Totals:         0       0       0       0       0       0       0       0
  7623 ;;Total ram usage:        0 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    4
  7626 ;; This function calls:
  7627 ;;		___lbdiv
  7628 ;;		___lbmod
  7629 ;;		_LcdDisplayNum
  7630 ;; This function is called by:
  7631 ;;		_CallProc
  7632 ;;		_TestProc
  7633 ;; This function uses a non-reentrant model
  7634 ;;
  7635  0417                     _LcdDisplay_Err:	
  7636  0417                     l2339:	
  7637                           ;Display.c: 374: while(WA==0);
  7638                           
  7639                           ; Regs used in _LcdDisplay_Err: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7640                           
  7641  0417  002F               	movlb	15	; select bank15
  7642  0418  1E12               	btfss	18,4
  7643  0419  2C17               	goto	l2339
  7644                           
  7645                           ;Display.c: 375: SEG5COM3=0;
  7646  041A  12A9               	bcf	41,5
  7647  041B                     l2342:	
  7648                           ;Display.c: 376: while(WA==0);
  7649                           
  7650  041B  1E12               	btfss	18,4
  7651  041C  2C1B               	goto	l2342
  7652                           
  7653                           ;Display.c: 377: SEG21COM2=1;
  7654  041D  16A8               	bsf	40,5
  7655                           
  7656                           ;Display.c: 378: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  7657  041E  3079               	movlw	121
  7658  041F  0020               	movlb	0	; select bank0
  7659  0420  00E9               	movwf	_DpyNum
  7660                           
  7661                           ;Display.c: 379: DpyNum[1]=SegCode[ErrState/10];
  7662  0421  300A               	movlw	10
  7663  0422  00A0               	movwf	?___lbdiv
  7664  0423  0862               	movf	_ErrState,w
  7665  0424  318F  2770  3182   	fcall	___lbdiv
  7666  0427  2437               	fcall	PL4	;call to abstracted procedure
  7667                           
  7668                           ;Display.c: 380: DpyNum[2]=SegCode[ErrState%10];
  7669  0428  300A               	movlw	10
  7670  0429  00A0               	movwf	?___lbmod
  7671  042A  0862               	movf	_ErrState,w
  7672  042B  318F  27A3  3182   	fcall	___lbmod
  7673  042E  3E01               	addlw	low (_SegCode| (0+32768))
  7674  042F  0084               	movwf	4
  7675  0430  3090               	movlw	high (_SegCode| (0+32768))
  7676  0431  1803               	skipnc
  7677  0432  3E01               	addlw	1
  7678  0433  0085               	movwf	5
  7679  0434  0800               	movf	0,w	;code access
  7680  0435  00EB               	movwf	_DpyNum+2
  7681                           
  7682                           ;Display.c: 381: LcdDisplayNum();
  7683  0436  2B0E               	ljmp	l32110
  7684  0437                     __end_of_LcdDisplay_Err:	
  7685  0437                     PL4:	
  7686  0437  3E01               	addlw	low (_SegCode| (0+32768))
  7687  0438  0084               	movwf	4
  7688  0439  3090               	movlw	high (_SegCode| (0+32768))
  7689  043A  1803               	skipnc
  7690  043B  3E01               	addlw	1
  7691  043C  0085               	movwf	5
  7692  043D  0800               	movf	0,w	;code access
  7693  043E  00EA               	movwf	_DpyNum+1
  7694  043F  0008               	return
  7695                           
  7696                           	psect	text1971
  7697  002C                     __ptext1971:	
  7698 ;; =============== function _DS18X20_ReadMeas ends ============
  7699                           
  7700                           
  7701 ;; *************** function _DS18X20_StartMeas *****************
  7702 ;; Defined at:
  7703 ;;		line 133 in file "F:\work\WYP\NBIoT\DS18x20.c"
  7704 ;; Parameters:    Size  Location     Type
  7705 ;;		None
  7706 ;; Auto vars:     Size  Location     Type
  7707 ;;		None
  7708 ;; Return value:  Size  Location     Type
  7709 ;;                  1    wreg      unsigned char 
  7710 ;; Registers used:
  7711 ;;		wreg, status,2, status,0, pclath, cstack
  7712 ;; Tracked objects:
  7713 ;;		On entry : 10/0
  7714 ;;		On exit  : 1F/0
  7715 ;;		Unchanged: 0/0
  7716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7717 ;;      Params:         0       0       0       0       0       0       0       0
  7718 ;;      Locals:         0       0       0       0       0       0       0       0
  7719 ;;      Temps:          0       0       0       0       0       0       0       0
  7720 ;;      Totals:         0       0       0       0       0       0       0       0
  7721 ;;Total ram usage:        0 bytes
  7722 ;; Hardware stack levels used:    1
  7723 ;; Hardware stack levels required when called:    5
  7724 ;; This function calls:
  7725 ;;		_OneWire_Reset
  7726 ;;		_OneWire_Command
  7727 ;; This function is called by:
  7728 ;;		_ReadTData
  7729 ;; This function uses a non-reentrant model
  7730 ;;
  7731  002C                     _DS18X20_StartMeas:	
  7732                           
  7733                           ;DS18x20.c: 134: if(OneWire_Reset())
  7734                           
  7735                           ; Regs used in _DS18X20_StartMeas: [wreg+status,2+status,0+pclath+cstack]
  7736  002C  21B2  3180         	fcall	_OneWire_Reset
  7737  002E  3A00               	xorlw	0
  7738  002F  1D03               	btfss	3,2
  7739                           
  7740                           ;DS18x20.c: 135: return 0x01;
  7741  0030  3401               	retlw	1
  7742                           
  7743                           ;DS18x20.c: 136: return OneWire_Command( 0x44);
  7744  0031  3044               	movlw	68
  7745  0032  28BA               	ljmp	_OneWire_Command
  7746  0033                     __end_of_DS18X20_StartMeas:	
  7747  0033                     __ptext1970:	
  7748 ;; =============== function _InitGPRS ends ============
  7749                           
  7750                           
  7751 ;; *************** function _DS18X20_ReadMeas *****************
  7752 ;; Defined at:
  7753 ;;		line 144 in file "F:\work\WYP\NBIoT\DS18x20.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  bVerify         1    wreg     unsigned char 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  bVerify         1   10[BANK0 ] unsigned char 
  7758 ;;  i               1   11[BANK0 ] unsigned char 
  7759 ;; Return value:  Size  Location     Type
  7760 ;;                  1    wreg      unsigned char 
  7761 ;; Registers used:
  7762 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7763 ;; Tracked objects:
  7764 ;;		On entry : 1F/0
  7765 ;;		On exit  : 1E/0
  7766 ;;		Unchanged: 0/0
  7767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7768 ;;      Params:         0       0       0       0       0       0       0       0
  7769 ;;      Locals:         0       2       0       0       0       0       0       0
  7770 ;;      Temps:          0       0       0       0       0       0       0       0
  7771 ;;      Totals:         0       2       0       0       0       0       0       0
  7772 ;;Total ram usage:        2 bytes
  7773 ;; Hardware stack levels used:    1
  7774 ;; Hardware stack levels required when called:    5
  7775 ;; This function calls:
  7776 ;;		_OneWire_Reset
  7777 ;;		_OneWire_Command
  7778 ;;		_OneWire_ReadByte
  7779 ;;		_GetVerify_CRC8
  7780 ;; This function is called by:
  7781 ;;		_ReadTData
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784  0033                     _DS18X20_ReadMeas:	
  7785                           
  7786                           ; Regs used in _DS18X20_ReadMeas: [wreg+fsr1l-status,0+pclath+cstack]
  7787                           ;DS18X20_ReadMeas@bVerify stored from wreg
  7788  0033  00AA               	movwf	DS18X20_ReadMeas@bVerify
  7789                           
  7790                           ;DS18x20.c: 145: unsigned char i;
  7791                           ;DS18x20.c: 146: if(OneWire_Reset())
  7792  0034  21B2  3180         	fcall	_OneWire_Reset
  7793  0036  3A00               	xorlw	0
  7794  0037  1D03               	btfss	3,2
  7795                           
  7796                           ;DS18x20.c: 147: return 0x01;
  7797  0038  3401               	retlw	1
  7798                           
  7799                           ;DS18x20.c: 148: if(OneWire_Command(0xBE))
  7800  0039  30BE               	movlw	190
  7801  003A  20BA  3180         	fcall	_OneWire_Command
  7802  003C  3A00               	xorlw	0
  7803  003D  1D03               	btfss	3,2
  7804  003E  3401               	retlw	1
  7805                           
  7806                           ;DS18x20.c: 150: if(bVerify)
  7807  003F  082A               	movf	DS18X20_ReadMeas@bVerify,w
  7808  0040  1903               	btfsc	3,2
  7809  0041  285A               	goto	l32964
  7810                           
  7811                           ;DS18x20.c: 151: {
  7812                           ;DS18x20.c: 152: for ( i=0 ; i< 9; i++ )
  7813  0042  01AB               	clrf	DS18X20_ReadMeas@i
  7814  0043                     l32946:	
  7815                           
  7816                           ;DS18x20.c: 153: DS18X20_Scratchpad[i]=OneWire_ReadByte();
  7817  0043  082B               	movf	DS18X20_ReadMeas@i,w
  7818  0044  3ED3               	addlw	_DS18X20_Scratchpad& (0+255)
  7819  0045  0086               	movwf	6
  7820  0046  0187               	clrf	7
  7821  0047  2062  3180         	fcall	_OneWire_ReadByte
  7822  0049  0081               	movwf	1
  7823  004A  0AAB               	incf	DS18X20_ReadMeas@i,f
  7824  004B  3009               	movlw	9
  7825  004C  022B               	subwf	DS18X20_ReadMeas@i,w
  7826  004D  1C03               	skipc
  7827  004E  2843               	goto	l32946
  7828                           
  7829                           ;DS18x20.c: 154: if ( GetVerify_CRC8( DS18X20_Scratchpad, 9-1 )!=DS18X20_Scratchpad[9-1]
      +                           )
  7830  004F  3008               	movlw	8
  7831  0050  00A0               	movwf	?_GetVerify_CRC8
  7832  0051  01A1               	clrf	?_GetVerify_CRC8+1
  7833  0052  30D3               	movlw	_DS18X20_Scratchpad& (0+255)
  7834  0053  208E  3180         	fcall	_GetVerify_CRC8
  7835  0055  0021               	movlb	1	; select bank1
  7836  0056  065B               	xorwf	(_DS18X20_Scratchpad^(0+128)+8),w
  7837  0057  1D03               	btfss	3,2
  7838                           
  7839                           ;DS18x20.c: 155: return 0x03;
  7840  0058  3403               	retlw	3
  7841                           
  7842                           ;DS18x20.c: 156: return 0x00;
  7843  0059  3400               	retlw	0
  7844  005A                     l32964:	
  7845                           
  7846                           ;DS18x20.c: 158: else
  7847                           ;DS18x20.c: 159: {
  7848                           ;DS18x20.c: 160: DS18X20_Scratchpad[0]=OneWire_ReadByte();
  7849  005A  2062  3180         	fcall	_OneWire_ReadByte
  7850  005C  0021               	movlb	1	; select bank1
  7851  005D  00D3               	movwf	_DS18X20_Scratchpad^(0+128)
  7852                           
  7853                           ;DS18x20.c: 161: DS18X20_Scratchpad[1]=OneWire_ReadByte();
  7854  005E  2062               	fcall	_OneWire_ReadByte
  7855  005F  0021               	movlb	1	; select bank1
  7856  0060  00D4               	movwf	(_DS18X20_Scratchpad^(0+128)+1)
  7857  0061  3400               	retlw	0
  7858  0062                     __end_of_DS18X20_ReadMeas:	
  7859  0062                     __ptext1988:	
  7860 ;; =============== function _OneWire_WriteByte ends ============
  7861                           
  7862                           
  7863 ;; *************** function _OneWire_ReadByte *****************
  7864 ;; Defined at:
  7865 ;;		line 190 in file "F:\work\WYP\NBIoT\OneWire.c"
  7866 ;; Parameters:    Size  Location     Type
  7867 ;;		None
  7868 ;; Auto vars:     Size  Location     Type
  7869 ;;  i               1    3[BANK0 ] unsigned char 
  7870 ;;  value           1    2[BANK0 ] unsigned char 
  7871 ;;  b               1    1[BANK0 ] unsigned char 
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  1    wreg      unsigned char 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 1E/0
  7878 ;;		On exit  : 1F/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7881 ;;      Params:         0       0       0       0       0       0       0       0
  7882 ;;      Locals:         0       3       0       0       0       0       0       0
  7883 ;;      Temps:          0       1       0       0       0       0       0       0
  7884 ;;      Totals:         0       4       0       0       0       0       0       0
  7885 ;;Total ram usage:        4 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:    3
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_DS18X20_ReadMeas
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894  0062                     _OneWire_ReadByte:	
  7895                           
  7896                           ;OneWire.c: 191: unsigned char i;
  7897                           ;OneWire.c: 192: unsigned char b;
  7898                           ;OneWire.c: 193: unsigned char value=0;
  7899                           
  7900                           ; Regs used in _OneWire_ReadByte: [wreg+status,2+status,0]
  7901  0062  0020               	movlb	0	; select bank0
  7902  0063  01A2               	clrf	OneWire_ReadByte@value
  7903                           
  7904                           ;OneWire.c: 194: for(i=0;i<8;i++)
  7905  0064  01A3               	clrf	OneWire_ReadByte@i
  7906  0065                     l19192:	
  7907                           
  7908                           ;OneWire.c: 195: {
  7909                           ;OneWire.c: 196: (GIE = 0);
  7910  0065  138B               	bcf	11,7
  7911                           
  7912                           ;OneWire.c: 197: TRISB1 = 0;LATB1=0;
  7913  0066  0021               	movlb	1	; select bank1
  7914  0067  108D               	bcf	13,1
  7915  0068  0022               	movlb	2	; select bank2
  7916  0069  108D               	bcf	13,1
  7917                           
  7918                           ;OneWire.c: 198: _delay((unsigned long)((2)*(4000000/4000000.0)));
  7919  006A  286B               	nop2	;2 cycle nop
  7920                           
  7921                           ;OneWire.c: 200: TRISB1=1;
  7922  006B  0021               	movlb	1	; select bank1
  7923  006C  148D               	bsf	13,1
  7924                           
  7925                           ;OneWire.c: 201: _delay((unsigned long)((15-3-9)*(4000000/4000000.0)));
  7926  006D  286E               	nop2	;2 cycle nop
  7927  006E  0064               	clrwdt
  7928                           
  7929                           ;OneWire.c: 202: b=RB1;
  7930  006F  3000               	movlw	0
  7931  0070  0020               	movlb	0	; select bank0
  7932  0071  188D               	btfsc	13,1
  7933  0072  3001               	movlw	1
  7934  0073  00A1               	movwf	OneWire_ReadByte@b
  7935                           
  7936                           ;OneWire.c: 203: (GIE = 1);
  7937  0074  178B               	bsf	11,7
  7938                           
  7939                           ;OneWire.c: 204: _delay((unsigned long)((60)*(4000000/4000000.0)));
  7940  0075  3013               	movlw	19
  7941  0076  00A0               	movwf	??_OneWire_ReadByte
  7942  0077                     u8997:	
  7943  0077  0BA0               	decfsz	??_OneWire_ReadByte,f
  7944  0078  2877               	goto	u8997
  7945  0079  287A               	nop2	;nop
  7946                           
  7947                           ;OneWire.c: 206: if(b)
  7948  007A  0020               	movlb	0	; select bank0
  7949  007B  0821               	movf	OneWire_ReadByte@b,w
  7950  007C  1903               	btfsc	3,2
  7951  007D  2887               	goto	l31056
  7952                           
  7953                           ;OneWire.c: 207: {
  7954                           ;OneWire.c: 208: value|=(0x01<<i);
  7955  007E  3001               	movlw	1
  7956  007F  00A0               	movwf	??_OneWire_ReadByte
  7957  0080  0A23               	incf	OneWire_ReadByte@i,w
  7958  0081  2883               	goto	u4964
  7959  0082                     u4965:	
  7960  0082  35A0               	lslf	??_OneWire_ReadByte,f
  7961  0083                     u4964:	
  7962  0083  0B89               	decfsz	9,f
  7963  0084  2882               	goto	u4965
  7964  0085  0820               	movf	??_OneWire_ReadByte,w
  7965  0086  04A2               	iorwf	OneWire_ReadByte@value,f
  7966  0087                     l31056:	
  7967  0087  0AA3               	incf	OneWire_ReadByte@i,f
  7968  0088  3008               	movlw	8
  7969  0089  0223               	subwf	OneWire_ReadByte@i,w
  7970  008A  1C03               	skipc
  7971  008B  2865               	goto	l19192
  7972                           
  7973                           ;OneWire.c: 210: }
  7974                           ;OneWire.c: 211: }
  7975                           ;OneWire.c: 212: return(value);
  7976  008C  0822               	movf	OneWire_ReadByte@value,w
  7977  008D  0008               	return
  7978  008E                     __end_of_OneWire_ReadByte:	
  7979  008E                     __ptext2014:	
  7980 ;; =============== function _SimI2C_Init ends ============
  7981                           
  7982                           
  7983 ;; *************** function _GetVerify_CRC8 *****************
  7984 ;; Defined at:
  7985 ;;		line 90 in file "F:\work\WYP\NBIoT\Verify.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  pBuff           1    wreg     PTR unsigned char 
  7988 ;;		 -> DS18X20_Scratchpad(9), 
  7989 ;;  Count           2    0[BANK0 ] unsigned int 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  pBuff           1    3[BANK0 ] PTR unsigned char 
  7992 ;;		 -> DS18X20_Scratchpad(9), 
  7993 ;;  i               2    6[BANK0 ] unsigned int 
  7994 ;;  crc             1    9[BANK0 ] unsigned char 
  7995 ;;  feedback_bit    1    8[BANK0 ] unsigned char 
  7996 ;;  data            1    5[BANK0 ] unsigned char 
  7997 ;;  bit_counter     1    4[BANK0 ] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      unsigned char 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8002 ;; Tracked objects:
  8003 ;;		On entry : 1F/0
  8004 ;;		On exit  : 1F/0
  8005 ;;		Unchanged: FFFE0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8007 ;;      Params:         0       2       0       0       0       0       0       0
  8008 ;;      Locals:         0       7       0       0       0       0       0       0
  8009 ;;      Temps:          0       1       0       0       0       0       0       0
  8010 ;;      Totals:         0      10       0       0       0       0       0       0
  8011 ;;Total ram usage:       10 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    3
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_DS18X20_ReadMeas
  8018 ;; This function uses a non-reentrant model
  8019 ;;
  8020  008E                     _GetVerify_CRC8:	
  8021                           
  8022                           ; Regs used in _GetVerify_CRC8: [wreg+fsr1l-status,0]
  8023                           ;GetVerify_CRC8@pBuff stored from wreg
  8024  008E  00A3               	movwf	GetVerify_CRC8@pBuff
  8025                           
  8026                           ;Verify.c: 91: unsigned char crc;
  8027                           ;Verify.c: 92: unsigned int i;
  8028                           ;Verify.c: 93: unsigned char bit_counter;
  8029                           ;Verify.c: 94: unsigned char data;
  8030                           ;Verify.c: 95: unsigned char feedback_bit;
  8031                           ;Verify.c: 97: crc = 0x00;
  8032  008F  01A9               	clrf	GetVerify_CRC8@crc
  8033                           
  8034                           ;Verify.c: 99: for(i = 0; i != Count; i++)
  8035  0090  01A6               	clrf	GetVerify_CRC8@i
  8036  0091  01A7               	clrf	GetVerify_CRC8@i+1
  8037  0092                     l30644:	
  8038  0092  0821               	movf	GetVerify_CRC8@Count+1,w
  8039  0093  0627               	xorwf	GetVerify_CRC8@i+1,w
  8040  0094  1D03               	skipz
  8041  0095  2898               	goto	u4085
  8042  0096  0820               	movf	GetVerify_CRC8@Count,w
  8043  0097  0626               	xorwf	GetVerify_CRC8@i,w
  8044  0098                     u4085:	
  8045  0098  1903               	btfsc	3,2
  8046  0099  28B8               	goto	l30646
  8047                           
  8048                           ;Verify.c: 100: {
  8049                           ;Verify.c: 101: data = pBuff[i];
  8050  009A  0826               	movf	GetVerify_CRC8@i,w
  8051  009B  0723               	addwf	GetVerify_CRC8@pBuff,w
  8052  009C  00A2               	movwf	??_GetVerify_CRC8
  8053  009D  0086               	movwf	6
  8054  009E  0187               	clrf	7
  8055  009F  0801               	movf	1,w
  8056  00A0  00A5               	movwf	GetVerify_CRC8@data
  8057                           
  8058                           ;Verify.c: 102: bit_counter = 8;
  8059  00A1  3008               	movlw	8
  8060  00A2  00A4               	movwf	GetVerify_CRC8@bit_counter
  8061  00A3                     l30624:	
  8062                           
  8063                           ;Verify.c: 104: {
  8064                           ;Verify.c: 105: feedback_bit = (crc ^ data) & 0x01;
  8065  00A3  0829               	movf	GetVerify_CRC8@crc,w
  8066  00A4  0625               	xorwf	GetVerify_CRC8@data,w
  8067  00A5  00A8               	movwf	GetVerify_CRC8@feedback_bit
  8068  00A6  3001               	movlw	1
  8069  00A7  05A8               	andwf	GetVerify_CRC8@feedback_bit,f
  8070                           
  8071                           ;Verify.c: 106: if ( feedback_bit == 0x01 )
  8072  00A8  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8073  00A9  28AC               	goto	l30632
  8074                           
  8075                           ;Verify.c: 107: crc = crc ^ 0x18;
  8076  00AA  3018               	movlw	24
  8077  00AB  06A9               	xorwf	GetVerify_CRC8@crc,f
  8078  00AC                     l30632:	
  8079                           
  8080                           ;Verify.c: 108: crc = (crc >> 1) & 0x7F;
  8081  00AC  36A9               	lsrf	GetVerify_CRC8@crc,f
  8082  00AD  13A9               	bcf	GetVerify_CRC8@crc,7
  8083                           
  8084                           ;Verify.c: 109: if ( feedback_bit == 0x01 )
  8085  00AE  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8086  00AF  28B1               	goto	l25409
  8087                           
  8088                           ;Verify.c: 110: crc = crc | 0x80;
  8089  00B0  17A9               	bsf	GetVerify_CRC8@crc,7
  8090  00B1                     l25409:	
  8091                           
  8092                           ;Verify.c: 111: data = data >> 1;
  8093  00B1  36A5               	lsrf	GetVerify_CRC8@data,f
  8094                           
  8095                           ;Verify.c: 112: bit_counter--;
  8096  00B2  0BA4               	decfsz	GetVerify_CRC8@bit_counter,f
  8097                           
  8098                           ;Verify.c: 113: }while (bit_counter > 0);
  8099  00B3  28A3               	goto	l30624
  8100  00B4  0AA6               	incf	GetVerify_CRC8@i,f
  8101  00B5  1903               	skipnz
  8102  00B6  0AA7               	incf	GetVerify_CRC8@i+1,f
  8103  00B7  2892               	goto	l30644
  8104  00B8                     l30646:	
  8105                           
  8106                           ;Verify.c: 114: }
  8107                           ;Verify.c: 115: return crc;
  8108  00B8  0829               	movf	GetVerify_CRC8@crc,w
  8109  00B9  0008               	return
  8110  00BA                     __end_of_GetVerify_CRC8:	
  8111  00BA                     __ptext1972:	
  8112 ;; =============== function _DS18X20_StartMeas ends ============
  8113                           
  8114                           
  8115 ;; *************** function _OneWire_Command *****************
  8116 ;; Defined at:
  8117 ;;		line 126 in file "F:\work\WYP\NBIoT\OneWire.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  command         1    wreg     unsigned char 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  command         1    4[BANK0 ] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  1    wreg      unsigned char 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0, pclath, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 1F/0
  8128 ;;		On exit  : 1F/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8131 ;;      Params:         0       0       0       0       0       0       0       0
  8132 ;;      Locals:         0       1       0       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0       0
  8134 ;;      Totals:         0       1       0       0       0       0       0       0
  8135 ;;Total ram usage:        1 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:    4
  8138 ;; This function calls:
  8139 ;;		_OneWire_Reset
  8140 ;;		_OneWire_WriteByte
  8141 ;; This function is called by:
  8142 ;;		_DS18X20_StartMeas
  8143 ;;		_DS18X20_ReadMeas
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146  00BA                     _OneWire_Command:	
  8147                           
  8148                           ; Regs used in _OneWire_Command: [wreg+status,2+status,0+pclath+cstack]
  8149                           ;OneWire_Command@command stored from wreg
  8150  00BA  00A4               	movwf	OneWire_Command@command
  8151                           
  8152                           ;OneWire.c: 127: if(OneWire_Reset())
  8153  00BB  21B2  3180         	fcall	_OneWire_Reset
  8154  00BD  3A00               	xorlw	0
  8155  00BE  1D03               	btfss	3,2
  8156                           
  8157                           ;OneWire.c: 128: return 0x01;
  8158  00BF  3401               	retlw	1
  8159                           
  8160                           ;OneWire.c: 129: OneWire_WriteByte( 0xCC );
  8161  00C0  30CC               	movlw	204
  8162  00C1  20C6  3180         	fcall	_OneWire_WriteByte
  8163                           
  8164                           ;OneWire.c: 130: OneWire_WriteByte( command );
  8165  00C3  0824               	movf	OneWire_Command@command,w
  8166  00C4  20C6               	fcall	_OneWire_WriteByte
  8167                           
  8168                           ;OneWire.c: 131: return 0x00;
  8169  00C5  3400               	retlw	0
  8170  00C6                     __end_of_OneWire_Command:	
  8171  00C6                     __ptext1987:	
  8172 ;; =============== function _SimI2C_Start ends ============
  8173                           
  8174                           
  8175 ;; *************** function _OneWire_WriteByte *****************
  8176 ;; Defined at:
  8177 ;;		line 167 in file "F:\work\WYP\NBIoT\OneWire.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  val             1    wreg     unsigned char 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  val             1    1[BANK0 ] unsigned char 
  8182 ;;  i               1    3[BANK0 ] unsigned char 
  8183 ;;  temp            1    2[BANK0 ] unsigned char 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;		None               void
  8186 ;; Registers used:
  8187 ;;		wreg, status,2, status,0
  8188 ;; Tracked objects:
  8189 ;;		On entry : 1F/0
  8190 ;;		On exit  : 1F/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8193 ;;      Params:         0       0       0       0       0       0       0       0
  8194 ;;      Locals:         0       3       0       0       0       0       0       0
  8195 ;;      Temps:          0       1       0       0       0       0       0       0
  8196 ;;      Totals:         0       4       0       0       0       0       0       0
  8197 ;;Total ram usage:        4 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    3
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		_OneWire_Command
  8204 ;; This function uses a non-reentrant model
  8205 ;;
  8206  00C6                     _OneWire_WriteByte:	
  8207                           
  8208                           ; Regs used in _OneWire_WriteByte: [wreg+status,2+status,0]
  8209                           ;OneWire_WriteByte@val stored from wreg
  8210  00C6  00A1               	movwf	OneWire_WriteByte@val
  8211                           
  8212                           ;OneWire.c: 168: unsigned char i;
  8213                           ;OneWire.c: 169: unsigned char temp;
  8214                           ;OneWire.c: 170: for (i=0;i<8;i++)
  8215  00C7  01A3               	clrf	OneWire_WriteByte@i
  8216  00C8                     l31068:	
  8217                           
  8218                           ;OneWire.c: 171: {
  8219                           ;OneWire.c: 172: temp=val>>i;
  8220  00C8  0821               	movf	OneWire_WriteByte@val,w
  8221  00C9  00A0               	movwf	??_OneWire_WriteByte
  8222  00CA  0A23               	incf	OneWire_WriteByte@i,w
  8223  00CB  28CD               	goto	u4984
  8224  00CC                     u4985:	
  8225  00CC  36A0               	lsrf	??_OneWire_WriteByte,f
  8226  00CD                     u4984:	
  8227  00CD  0B89               	decfsz	9,f
  8228  00CE  28CC               	goto	u4985
  8229  00CF  0820               	movf	??_OneWire_WriteByte,w
  8230  00D0  00A2               	movwf	OneWire_WriteByte@temp
  8231                           
  8232                           ;OneWire.c: 173: temp&=0x01;
  8233  00D1  3001               	movlw	1
  8234  00D2  05A2               	andwf	OneWire_WriteByte@temp,f
  8235                           
  8236                           ;OneWire.c: 174: (GIE = 0);
  8237  00D3  138B               	bcf	11,7
  8238                           
  8239                           ;OneWire.c: 175: TRISB1 = 0;LATB1=0;
  8240  00D4  0021               	movlb	1	; select bank1
  8241  00D5  108D               	bcf	13,1
  8242  00D6  0022               	movlb	2	; select bank2
  8243  00D7  108D               	bcf	13,1
  8244                           
  8245                           ;OneWire.c: 176: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8246  00D8  28D9               	nop2	;2 cycle nop
  8247                           
  8248                           ;OneWire.c: 177: if (temp==1)
  8249  00D9  0020               	movlb	0	; select bank0
  8250  00DA  0322               	decf	OneWire_WriteByte@temp,w
  8251  00DB  1D03               	skipz
  8252  00DC  28DF               	goto	l31082
  8253                           
  8254                           ;OneWire.c: 178: {
  8255                           ;OneWire.c: 179: TRISB1=1;
  8256  00DD  0021               	movlb	1	; select bank1
  8257  00DE  148D               	bsf	13,1
  8258  00DF                     l31082:	
  8259                           
  8260                           ;OneWire.c: 180: }
  8261                           ;OneWire.c: 181: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8262  00DF  3018               	movlw	24
  8263  00E0  0020               	movlb	0	; select bank0
  8264  00E1  00A0               	movwf	??_OneWire_WriteByte
  8265  00E2                     u8987:	
  8266  00E2  0BA0               	decfsz	??_OneWire_WriteByte,f
  8267  00E3  28E2               	goto	u8987
  8268  00E4  28E5               	nop2	;nop
  8269                           
  8270                           ;OneWire.c: 182: TRISB1=1;
  8271  00E5  0021               	movlb	1	; select bank1
  8272  00E6  148D               	bsf	13,1
  8273                           
  8274                           ;OneWire.c: 183: (GIE = 1);
  8275  00E7  178B               	bsf	11,7
  8276  00E8  0020               	movlb	0	; select bank0
  8277  00E9  0AA3               	incf	OneWire_WriteByte@i,f
  8278  00EA  3008               	movlw	8
  8279  00EB  0223               	subwf	OneWire_WriteByte@i,w
  8280  00EC  1803               	btfsc	3,0
  8281  00ED  0008               	return
  8282  00EE  28C8               	goto	l31068
  8283  00EF                     __end_of_OneWire_WriteByte:	
  8284  00EF                     __ptext1965:	
  8285 ;; =============== function _CallProc ends ============
  8286                           
  8287                           
  8288 ;; *************** function _InitSystem *****************
  8289 ;; Defined at:
  8290 ;;		line 73 in file "F:\work\WYP\NBIoT\Init.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;  x               1   13[BANK0 ] unsigned char 
  8295 ;; Return value:  Size  Location     Type
  8296 ;;		None               void
  8297 ;; Registers used:
  8298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 17F/0
  8301 ;;		On exit  : 1F/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8304 ;;      Params:         0       0       0       0       0       0       0       0
  8305 ;;      Locals:         0       1       0       0       0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0
  8307 ;;      Totals:         0       1       0       0       0       0       0       0
  8308 ;;Total ram usage:        1 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    7
  8311 ;; This function calls:
  8312 ;;		_InitMCU
  8313 ;;		_InitVariable
  8314 ;;		_DisplayInit
  8315 ;;		_ATCommand_Init
  8316 ;;		_OneWire_Reset
  8317 ;;		_TCN75_Init
  8318 ;;		_TCN75_SetConfig
  8319 ;;		___delay_20ms
  8320 ;;		_ReadTData
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325  00EF                     _InitSystem:	
  8326                           
  8327                           ;Init.c: 74: unsigned char x;
  8328                           ;Init.c: 75: InitMCU();
  8329                           
  8330                           ; Regs used in _InitSystem: [wreg-status,0+pclath+cstack]
  8331  00EF  215D  3180         	fcall	_InitMCU
  8332                           
  8333                           ;Init.c: 76: InitVariable();
  8334  00F1  21E4  3180         	fcall	_InitVariable
  8335                           
  8336                           ;Init.c: 78: DisplayInit();
  8337  00F3  2130  3180         	fcall	_DisplayInit
  8338                           
  8339                           ;Init.c: 79: if(RomParams.bWinter==0)
  8340  00F5  0020               	movlb	0	; select bank0
  8341  00F6  08E7               	movf	_RomParams+1,f
  8342  00F7  1D03               	skipz
  8343  00F8  28FE               	goto	l4421
  8344  00F9                     l4417:	
  8345  00F9  002F               	movlb	15	; select bank15
  8346  00FA  1E12               	btfss	18,4
  8347  00FB  28F9               	goto	l4417
  8348                           
  8349                           ;Init.c: 82: SEG21COM0=1;
  8350  00FC  16A2               	bsf	34,5
  8351                           
  8352                           ;Init.c: 83: }
  8353  00FD  2902               	goto	l33442
  8354  00FE                     l4421:	
  8355  00FE  002F               	movlb	15	; select bank15
  8356  00FF  1E12               	btfss	18,4
  8357  0100  28FE               	goto	l4421
  8358                           
  8359                           ;Init.c: 87: SEG21COM0=0;
  8360  0101  12A2               	bcf	34,5
  8361  0102                     l33442:	
  8362                           
  8363                           ;Init.c: 88: }
  8364                           ;Init.c: 90: ATCommand_Init();
  8365  0102  219B  3180         	fcall	_ATCommand_Init
  8366                           
  8367                           ;Init.c: 92: x=10;
  8368  0104  300A               	movlw	10
  8369  0105  00AD               	movwf	InitSystem@x
  8370                           
  8371                           ;Init.c: 93: while(x!=0)
  8372  0106  2908               	goto	l4424
  8373  0107                     l33450:	
  8374                           ;Init.c: 98: break;
  8375                           
  8376                           
  8377                           ;Init.c: 99: }
  8378                           ;Init.c: 100: x--;
  8379  0107  03AD               	decf	InitSystem@x,f
  8380  0108                     l4424:	
  8381  0108  08AD               	movf	InitSystem@x,f
  8382  0109  1903               	btfsc	3,2
  8383  010A  2911               	goto	l33452
  8384                           
  8385                           ;Init.c: 94: {
  8386                           ;Init.c: 95: if(OneWire_Reset()==0)
  8387  010B  21B2  3180         	fcall	_OneWire_Reset
  8388  010D  3800               	iorlw	0
  8389  010E  1D03               	skipz
  8390  010F  2907               	goto	l33450
  8391                           
  8392                           ;Init.c: 96: {
  8393                           ;Init.c: 97: gFlags.b18B20=1;
  8394  0110  14E5               	bsf	_gFlags,1
  8395  0111                     l33452:	
  8396                           
  8397                           ;Init.c: 101: }
  8398                           ;Init.c: 102: if(x==0)
  8399  0111  08AD               	movf	InitSystem@x,f
  8400  0112  1D03               	skipz
  8401  0113  2922               	goto	l33472
  8402                           
  8403                           ;Init.c: 103: {
  8404                           ;Init.c: 104: gFlags.b18B20=0;
  8405  0114  10E5               	bcf	_gFlags,1
  8406                           
  8407                           ;Init.c: 105: TCN75_Init();
  8408  0115  21E3               	fcall	_TCN75_Init
  8409                           
  8410                           ;Init.c: 106: TCN75_Config.bShutdown=1;
  8411  0116  0020               	movlb	0	; select bank0
  8412  0117  1463               	bsf	_TCN75_Config,0
  8413                           
  8414                           ;Init.c: 107: TCN75_Config.COMP_INT=0;
  8415  0118  10E3               	bcf	_TCN75_Config,1
  8416                           
  8417                           ;Init.c: 108: TCN75_Config.Polarity=0;
  8418  0119  1163               	bcf	_TCN75_Config,2
  8419                           
  8420                           ;Init.c: 109: TCN75_Config.FaultQueue=0b00;
  8421  011A  30E7               	movlw	-25
  8422  011B  05E3               	andwf	_TCN75_Config,f
  8423                           
  8424                           ;Init.c: 110: TCN75_Config.Resolution=0b11;
  8425  011C  3060               	movlw	96
  8426  011D  04E3               	iorwf	_TCN75_Config,f
  8427                           
  8428                           ;Init.c: 111: TCN75_Config.OneShot=0;
  8429  011E  13E3               	bcf	_TCN75_Config,7
  8430                           
  8431                           ;Init.c: 112: TCN75_SetConfig();
  8432  011F  318F  27BB  3180   	fcall	_TCN75_SetConfig
  8433  0122                     l33472:	
  8434                           
  8435                           ;Init.c: 113: }
  8436                           ;Init.c: 114: __delay_20ms(50);
  8437  0122  3032               	movlw	50
  8438  0123  00A0               	movwf	?___delay_20ms
  8439  0124  01A1               	clrf	?___delay_20ms+1
  8440  0125  318A  22D5  3180   	fcall	___delay_20ms
  8441                           
  8442                           ;Init.c: 115: ReadTData();
  8443  0128  3188  20E3         	fcall	_ReadTData
  8444                           
  8445                           ;Init.c: 116: __delay_20ms(250);
  8446  012A  30FA               	movlw	250
  8447  012B  0020               	movlb	0	; select bank0
  8448  012C  00A0               	movwf	?___delay_20ms
  8449  012D  01A1               	clrf	?___delay_20ms+1
  8450  012E  318A  2AD5         	ljmp	l12896
  8451  0130                     __end_of_InitSystem:	
  8452  0130                     __ptext2022:	
  8453 ;; =============== function _InitMCU ends ============
  8454                           
  8455                           
  8456 ;; *************** function _DisplayInit *****************
  8457 ;; Defined at:
  8458 ;;		line 385 in file "F:\work\WYP\NBIoT\Display.c"
  8459 ;; Parameters:    Size  Location     Type
  8460 ;;		None
  8461 ;; Auto vars:     Size  Location     Type
  8462 ;;		None
  8463 ;; Return value:  Size  Location     Type
  8464 ;;		None               void
  8465 ;; Registers used:
  8466 ;;		wreg, status,2
  8467 ;; Tracked objects:
  8468 ;;		On entry : 17F/0
  8469 ;;		On exit  : 17F/F
  8470 ;;		Unchanged: FFE80/0
  8471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8472 ;;      Params:         0       0       0       0       0       0       0       0
  8473 ;;      Locals:         0       0       0       0       0       0       0       0
  8474 ;;      Temps:          0       0       0       0       0       0       0       0
  8475 ;;      Totals:         0       0       0       0       0       0       0       0
  8476 ;;Total ram usage:        0 bytes
  8477 ;; Hardware stack levels used:    1
  8478 ;; Hardware stack levels required when called:    3
  8479 ;; This function calls:
  8480 ;;		Nothing
  8481 ;; This function is called by:
  8482 ;;		_InitSystem
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485  0130                     _DisplayInit:	
  8486                           
  8487                           ;Display.c: 389: LCDPS = 0b00000011;
  8488                           
  8489                           ; Regs used in _DisplayInit: [wreg+status,2]
  8490  0130  3003               	movlw	3
  8491  0131  002F               	movlb	15	; select bank15
  8492  0132  0092               	movwf	18	;volatile
  8493                           
  8494                           ;Display.c: 390: LCDSE0 = 0;
  8495  0133  0198               	clrf	24	;volatile
  8496                           
  8497                           ;Display.c: 391: LCDSE1 = 0;
  8498  0134  0199               	clrf	25	;volatile
  8499                           
  8500                           ;Display.c: 392: LCDSE2 = 0;
  8501  0135  019A               	clrf	26	;volatile
  8502                           
  8503                           ;Display.c: 393: SEG21=1;
  8504  0136  169A               	bsf	26,5
  8505                           
  8506                           ;Display.c: 394: SEG5=1;
  8507  0137  1698               	bsf	24,5
  8508                           
  8509                           ;Display.c: 395: SEG11=1;
  8510  0138  1599               	bsf	25,3
  8511                           
  8512                           ;Display.c: 396: SEG16=1;
  8513  0139  141A               	bsf	26,0
  8514                           
  8515                           ;Display.c: 397: SEG6=1;
  8516  013A  1718               	bsf	24,6
  8517                           
  8518                           ;Display.c: 398: SEG3=1;
  8519  013B  1598               	bsf	24,3
  8520                           
  8521                           ;Display.c: 399: SEG23=1;
  8522  013C  179A               	bsf	26,7
  8523                           
  8524                           ;Display.c: 400: SEG22=1;
  8525  013D  171A               	bsf	26,6
  8526                           
  8527                           ;Display.c: 402: LCDCON = 0b00001111;
  8528  013E  300F               	movlw	15
  8529  013F  0091               	movwf	17	;volatile
  8530                           
  8531                           ;Display.c: 403: LCDDATA0=0;
  8532  0140  01A0               	clrf	32	;volatile
  8533                           
  8534                           ;Display.c: 404: LCDDATA1=0;
  8535  0141  01A1               	clrf	33	;volatile
  8536                           
  8537                           ;Display.c: 405: LCDDATA2=0;
  8538  0142  01A2               	clrf	34	;volatile
  8539                           
  8540                           ;Display.c: 406: LCDDATA3=0;
  8541  0143  01A3               	clrf	35	;volatile
  8542                           
  8543                           ;Display.c: 407: LCDDATA4=0;
  8544  0144  01A4               	clrf	36	;volatile
  8545                           
  8546                           ;Display.c: 408: LCDDATA5=0;
  8547  0145  01A5               	clrf	37	;volatile
  8548                           
  8549                           ;Display.c: 409: LCDDATA6=0;
  8550  0146  01A6               	clrf	38	;volatile
  8551                           
  8552                           ;Display.c: 410: LCDDATA7=0;
  8553  0147  01A7               	clrf	39	;volatile
  8554                           
  8555                           ;Display.c: 411: LCDDATA8=0;
  8556  0148  01A8               	clrf	40	;volatile
  8557                           
  8558                           ;Display.c: 412: LCDDATA9=0;
  8559  0149  01A9               	clrf	41	;volatile
  8560                           
  8561                           ;Display.c: 413: LCDDATA10=0;
  8562  014A  01AA               	clrf	42	;volatile
  8563                           
  8564                           ;Display.c: 414: LCDDATA11=0;
  8565  014B  01AB               	clrf	43	;volatile
  8566                           
  8567                           ;Display.c: 416: LCDREF = 0b10100000;
  8568  014C  30A0               	movlw	160
  8569  014D  0093               	movwf	19	;volatile
  8570                           
  8571                           ;Display.c: 417: LCDRL = 0b00110000;
  8572  014E  3030               	movlw	48
  8573  014F  0095               	movwf	21	;volatile
  8574                           
  8575                           ;Display.c: 418: LCDCST = 0b00000000;
  8576  0150  0194               	clrf	20	;volatile
  8577                           
  8578                           ;Display.c: 420: LCDEN=1;
  8579  0151  1791               	bsf	17,7
  8580                           
  8581                           ;Display.c: 440: SEG5COM0=0;
  8582  0152  12A0               	bcf	32,5
  8583                           
  8584                           ;Display.c: 441: SEG5COM1=0;
  8585  0153  12A3               	bcf	35,5
  8586                           
  8587                           ;Display.c: 442: SEG5COM2=0;
  8588  0154  12A6               	bcf	38,5
  8589                           
  8590                           ;Display.c: 443: SEG5COM3=1;
  8591  0155  16A9               	bsf	41,5
  8592                           
  8593                           ;Display.c: 444: SEG22COM3=0;
  8594  0156  132B               	bcf	43,6
  8595                           
  8596                           ;Display.c: 445: SEG3COM3=0;
  8597  0157  11A9               	bcf	41,3
  8598                           
  8599                           ;Display.c: 446: SEG21COM3=0;
  8600  0158  12AB               	bcf	43,5
  8601                           
  8602                           ;Display.c: 447: SEG21COM2=0;
  8603  0159  12A8               	bcf	40,5
  8604                           
  8605                           ;Display.c: 448: SEG21COM1=0;
  8606  015A  12A5               	bcf	37,5
  8607                           
  8608                           ;Display.c: 449: SEG21COM0=0;
  8609  015B  12A2               	bcf	34,5
  8610  015C  0008               	return
  8611  015D                     __end_of_DisplayInit:	
  8612  015D                     __ptext2021:	
  8613 ;; =============== function _eeprom_write ends ============
  8614                           
  8615                           
  8616 ;; *************** function _InitMCU *****************
  8617 ;; Defined at:
  8618 ;;		line 3 in file "F:\work\WYP\NBIoT\Init.c"
  8619 ;; Parameters:    Size  Location     Type
  8620 ;;		None
  8621 ;; Auto vars:     Size  Location     Type
  8622 ;;		None
  8623 ;; Return value:  Size  Location     Type
  8624 ;;		None               void
  8625 ;; Registers used:
  8626 ;;		wreg, status,2
  8627 ;; Tracked objects:
  8628 ;;		On entry : 17F/0
  8629 ;;		On exit  : 17F/0
  8630 ;;		Unchanged: FFE80/0
  8631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8632 ;;      Params:         0       0       0       0       0       0       0       0
  8633 ;;      Locals:         0       0       0       0       0       0       0       0
  8634 ;;      Temps:          0       0       0       0       0       0       0       0
  8635 ;;      Totals:         0       0       0       0       0       0       0       0
  8636 ;;Total ram usage:        0 bytes
  8637 ;; Hardware stack levels used:    1
  8638 ;; Hardware stack levels required when called:    3
  8639 ;; This function calls:
  8640 ;;		Nothing
  8641 ;; This function is called by:
  8642 ;;		_InitSystem
  8643 ;; This function uses a non-reentrant model
  8644 ;;
  8645  015D                     _InitMCU:	
  8646                           
  8647                           ;Init.c: 5: ADCON1=0b00111111;
  8648                           
  8649                           ; Regs used in _InitMCU: [wreg+status,2]
  8650  015D  303F               	movlw	63
  8651  015E  0021               	movlb	1	; select bank1
  8652  015F  009E               	movwf	30	;volatile
  8653                           
  8654                           ;Init.c: 7: ANSELA=0;
  8655  0160  0023               	movlb	3	; select bank3
  8656  0161  018C               	clrf	12	;volatile
  8657                           
  8658                           ;Init.c: 8: ANSELB=0;
  8659  0162  018D               	clrf	13	;volatile
  8660                           
  8661                           ;Init.c: 9: ANSELD=0;
  8662  0163  018F               	clrf	15	;volatile
  8663                           
  8664                           ;Init.c: 10: ANSELE=0;
  8665  0164  0190               	clrf	16	;volatile
  8666                           
  8667                           ;Init.c: 12: LATD5=0;
  8668  0165  0022               	movlb	2	; select bank2
  8669  0166  128F               	bcf	15,5
  8670                           
  8671                           ;Init.c: 13: TRISD5=0;
  8672  0167  0021               	movlb	1	; select bank1
  8673  0168  128F               	bcf	15,5
  8674                           
  8675                           ;Init.c: 14: TRISD4=1;
  8676  0169  160F               	bsf	15,4
  8677                           
  8678                           ;Init.c: 16: nWPUEN=0;
  8679  016A  1395               	bcf	21,7
  8680                           
  8681                           ;Init.c: 17: TRISB7=1;
  8682  016B  178D               	bsf	13,7
  8683                           
  8684                           ;Init.c: 18: WPUB7=1;
  8685  016C  0024               	movlb	4	; select bank4
  8686  016D  178D               	bsf	13,7
  8687                           
  8688                           ;Init.c: 20: LATA4=0;
  8689  016E  0022               	movlb	2	; select bank2
  8690  016F  120C               	bcf	12,4
  8691                           
  8692                           ;Init.c: 21: LATA3=0;
  8693  0170  118C               	bcf	12,3
  8694                           
  8695                           ;Init.c: 23: TRISA4=0;
  8696  0171  0021               	movlb	1	; select bank1
  8697  0172  120C               	bcf	12,4
  8698                           
  8699                           ;Init.c: 24: TRISA3=0;
  8700  0173  118C               	bcf	12,3
  8701                           
  8702                           ;Init.c: 26: TRISB2=1;
  8703  0174  150D               	bsf	13,2
  8704                           
  8705                           ;Init.c: 30: T2CON=0b00111011;
  8706  0175  303B               	movlw	59
  8707  0176  0020               	movlb	0	; select bank0
  8708  0177  009C               	movwf	28	;volatile
  8709                           
  8710                           ;Init.c: 31: PR2=227;
  8711  0178  30E3               	movlw	227
  8712  0179  009B               	movwf	27	;volatile
  8713                           
  8714                           ;Init.c: 32: TMR2ON=0;
  8715  017A  111C               	bcf	28,2
  8716                           
  8717                           ;Init.c: 33: TMR2IE=0;
  8718  017B  0021               	movlb	1	; select bank1
  8719  017C  1091               	bcf	17,1
  8720                           
  8721                           ;Init.c: 34: TMR2IF=0;
  8722  017D  0020               	movlb	0	; select bank0
  8723  017E  1091               	bcf	17,1
  8724                           
  8725                           ;Init.c: 38: T1CON=0b01110000;
  8726  017F  3070               	movlw	112
  8727  0180  0098               	movwf	24	;volatile
  8728                           
  8729                           ;Init.c: 39: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
  8730  0181  303C               	movlw	60
  8731  0182  0097               	movwf	23	;volatile
  8732  0183  30B0               	movlw	176
  8733  0184  0096               	movwf	22	;volatile
  8734                           
  8735                           ;Init.c: 40: TMR1ON=1;
  8736  0185  1418               	bsf	24,0
  8737                           
  8738                           ;Init.c: 41: TMR1IE=1;
  8739  0186  0021               	movlb	1	; select bank1
  8740  0187  1411               	bsf	17,0
  8741                           
  8742                           ;Init.c: 42: TMR1IF=0;
  8743  0188  0020               	movlb	0	; select bank0
  8744  0189  1011               	bcf	17,0
  8745                           
  8746                           ;Init.c: 48: TRISC7=1;
  8747  018A  0021               	movlb	1	; select bank1
  8748  018B  178E               	bsf	14,7
  8749                           
  8750                           ;Init.c: 49: TRISC6=1;
  8751  018C  170E               	bsf	14,6
  8752                           
  8753                           ;Init.c: 50: TXSTA=0b00100110;
  8754  018D  3026               	movlw	38
  8755  018E  0023               	movlb	3	; select bank3
  8756  018F  009E               	movwf	30	;volatile
  8757                           
  8758                           ;Init.c: 51: RCSTA=0b10010000;
  8759  0190  3090               	movlw	144
  8760  0191  009D               	movwf	29	;volatile
  8761                           
  8762                           ;Init.c: 52: SPBRG=25;
  8763  0192  3019               	movlw	25
  8764  0193  009B               	movwf	27	;volatile
  8765                           
  8766                           ;Init.c: 53: RCIE=1;
  8767  0194  0021               	movlb	1	; select bank1
  8768  0195  1691               	bsf	17,5
  8769                           
  8770                           ;Init.c: 54: RCIF=0;
  8771  0196  0020               	movlb	0	; select bank0
  8772  0197  1291               	bcf	17,5
  8773                           
  8774                           ;Init.c: 56: PEIE=1;
  8775  0198  170B               	bsf	11,6
  8776                           
  8777                           ;Init.c: 57: GIE=1;
  8778  0199  178B               	bsf	11,7
  8779  019A  0008               	return
  8780  019B                     __end_of_InitMCU:	
  8781  019B                     __ptext1996:	
  8782 ;; =============== function _OneWire_Reset ends ============
  8783                           
  8784                           
  8785 ;; *************** function _ATCommand_Init *****************
  8786 ;; Defined at:
  8787 ;;		line 17 in file "F:\work\WYP\NBIoT\ATCommand.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;		None
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;		None
  8792 ;; Return value:  Size  Location     Type
  8793 ;;		None               void
  8794 ;; Registers used:
  8795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 17F/F
  8798 ;;		On exit  : 17F/0
  8799 ;;		Unchanged: FFE80/0
  8800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8801 ;;      Params:         0       0       0       0       0       0       0       0
  8802 ;;      Locals:         0       0       0       0       0       0       0       0
  8803 ;;      Temps:          0       0       0       0       0       0       0       0
  8804 ;;      Totals:         0       0       0       0       0       0       0       0
  8805 ;;Total ram usage:        0 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    4
  8808 ;; This function calls:
  8809 ;;		_strcpy
  8810 ;; This function is called by:
  8811 ;;		_InitSystem
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814  019B                     _ATCommand_Init:	
  8815                           
  8816                           ;ATCommand.c: 18: ATCommand_WaitACKTimes=50;
  8817                           
  8818                           ; Regs used in _ATCommand_Init: [wreg-status,0+pclath+cstack]
  8819  019B  3032               	movlw	50
  8820  019C  0020               	movlb	0	; select bank0
  8821  019D  00D4               	movwf	_ATCommand_WaitACKTimes
  8822  019E  01D5               	clrf	_ATCommand_WaitACKTimes+1
  8823                           
  8824                           ;ATCommand.c: 19: ATCommand_RetryTimes=3;
  8825  019F  3003               	movlw	3
  8826  01A0  00E0               	movwf	_ATCommand_RetryTimes
  8827                           
  8828                           ;ATCommand.c: 20: strcpy(ATCommand_OkString,"OK");
  8829  01A1  303F               	movlw	low (STR_31| (0+32768))
  8830  01A2  00A0               	movwf	?_strcpy
  8831  01A3  3091               	movlw	high (STR_31| (0+32768))
  8832  01A4  00A1               	movwf	?_strcpy+1
  8833  01A5  30C4               	movlw	_ATCommand_OkString& (0+255)
  8834  01A6  318D  25F9  3180   	fcall	_strcpy
  8835                           
  8836                           ;ATCommand.c: 21: strcpy(ATCommand_ErrString,"ERROR");
  8837  01A9  3026               	movlw	low (STR_20| (0+32768))
  8838  01AA  00A0               	movwf	?_strcpy
  8839  01AB  3091               	movlw	high (STR_20| (0+32768))
  8840  01AC  00A1               	movwf	?_strcpy+1
  8841  01AD  30B5               	movlw	_ATCommand_ErrString& (0+255)
  8842  01AE  318D  25F9         	fcall	_strcpy
  8843                           
  8844                           ;ATCommand.c: 22: ATCommand_Clear='\0';
  8845  01B0  01F9               	clrf	_ATCommand_Clear
  8846  01B1  0008               	return
  8847  01B2                     __end_of_ATCommand_Init:	
  8848  01B2                     __ptext1995:	
  8849 ;; =============== function _TCN75_Init ends ============
  8850                           
  8851                           
  8852 ;; *************** function _OneWire_Reset *****************
  8853 ;; Defined at:
  8854 ;;		line 6 in file "F:\work\WYP\NBIoT\OneWire.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;  r               1    2[BANK0 ] unsigned char 
  8859 ;;  Retry           1    1[BANK0 ] unsigned char 
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      unsigned char 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0
  8864 ;; Tracked objects:
  8865 ;;		On entry : 1F/0
  8866 ;;		On exit  : 1F/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8869 ;;      Params:         0       0       0       0       0       0       0       0
  8870 ;;      Locals:         0       2       0       0       0       0       0       0
  8871 ;;      Temps:          0       1       0       0       0       0       0       0
  8872 ;;      Totals:         0       3       0       0       0       0       0       0
  8873 ;;Total ram usage:        3 bytes
  8874 ;; Hardware stack levels used:    1
  8875 ;; Hardware stack levels required when called:    3
  8876 ;; This function calls:
  8877 ;;		Nothing
  8878 ;; This function is called by:
  8879 ;;		_InitSystem
  8880 ;;		_DS18X20_StartMeas
  8881 ;;		_DS18X20_ReadMeas
  8882 ;;		_OneWire_Command
  8883 ;; This function uses a non-reentrant model
  8884 ;;
  8885  01B2                     _OneWire_Reset:	
  8886                           
  8887                           ;OneWire.c: 7: unsigned char r,Retry;
  8888                           ;OneWire.c: 8: r=1;
  8889                           
  8890                           ; Regs used in _OneWire_Reset: [wreg+status,2+status,0]
  8891  01B2  01A2               	clrf	OneWire_Reset@r
  8892  01B3  0AA2               	incf	OneWire_Reset@r,f
  8893                           
  8894                           ;OneWire.c: 9: Retry=5;
  8895  01B4  3005               	movlw	5
  8896  01B5  00A1               	movwf	OneWire_Reset@Retry
  8897  01B6                     l30950:	
  8898                           ;OneWire.c: 10: while(Retry--)
  8899                           
  8900  01B6  03A1               	decf	OneWire_Reset@Retry,f
  8901  01B7  0821               	movf	OneWire_Reset@Retry,w
  8902  01B8  3AFF               	xorlw	255
  8903  01B9  1903               	btfsc	3,2
  8904  01BA  29E1               	goto	l30952
  8905                           
  8906                           ;OneWire.c: 11: {
  8907                           ;OneWire.c: 12: TRISB1 = 0;LATB1=0;
  8908  01BB  0021               	movlb	1	; select bank1
  8909  01BC  108D               	bcf	13,1
  8910  01BD  0022               	movlb	2	; select bank2
  8911  01BE  108D               	bcf	13,1
  8912                           
  8913                           ;OneWire.c: 13: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8914  01BF  309F               	movlw	159
  8915  01C0  0020               	movlb	0	; select bank0
  8916  01C1  00A0               	movwf	??_OneWire_Reset
  8917  01C2                     u9017:	
  8918  01C2  0BA0               	decfsz	??_OneWire_Reset,f
  8919  01C3  29C2               	goto	u9017
  8920  01C4  29C5               	nop2	;nop
  8921                           
  8922                           ;OneWire.c: 14: TRISB1=1;
  8923  01C5  0021               	movlb	1	; select bank1
  8924  01C6  148D               	bsf	13,1
  8925                           
  8926                           ;OneWire.c: 15: (GIE = 0);
  8927  01C7  138B               	bcf	11,7
  8928                           
  8929                           ;OneWire.c: 16: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8930  01C8  3018               	movlw	24
  8931  01C9  0020               	movlb	0	; select bank0
  8932  01CA  00A0               	movwf	??_OneWire_Reset
  8933  01CB                     u9027:	
  8934  01CB  0BA0               	decfsz	??_OneWire_Reset,f
  8935  01CC  29CB               	goto	u9027
  8936  01CD  29CE               	nop2	;nop
  8937                           
  8938                           ;OneWire.c: 17: r=RB1;
  8939  01CE  3000               	movlw	0
  8940  01CF  0020               	movlb	0	; select bank0
  8941  01D0  188D               	btfsc	13,1
  8942  01D1  3001               	movlw	1
  8943  01D2  00A2               	movwf	OneWire_Reset@r
  8944                           
  8945                           ;OneWire.c: 18: (GIE = 1);
  8946  01D3  178B               	bsf	11,7
  8947                           
  8948                           ;OneWire.c: 19: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8949  01D4  309F               	movlw	159
  8950  01D5  00A0               	movwf	??_OneWire_Reset
  8951  01D6                     u9037:	
  8952  01D6  0BA0               	decfsz	??_OneWire_Reset,f
  8953  01D7  29D6               	goto	u9037
  8954  01D8  29D9               	nop2	;nop
  8955                           
  8956                           ;OneWire.c: 20: if(RB1==0)
  8957  01D9  0020               	movlb	0	; select bank0
  8958  01DA  188D               	btfsc	13,1
  8959  01DB  29DE               	goto	l30946
  8960                           
  8961                           ;OneWire.c: 21: r=1;
  8962  01DC  01A2               	clrf	OneWire_Reset@r
  8963  01DD  0AA2               	incf	OneWire_Reset@r,f
  8964  01DE                     l30946:	
  8965                           
  8966                           ;OneWire.c: 22: if(r==0)
  8967  01DE  08A2               	movf	OneWire_Reset@r,f
  8968  01DF  1D03               	skipz
  8969  01E0  29B6               	goto	l30950
  8970  01E1                     l30952:	
  8971                           
  8972                           ;OneWire.c: 24: }
  8973                           ;OneWire.c: 25: return r;
  8974  01E1  0822               	movf	OneWire_Reset@r,w
  8975  01E2  0008               	return
  8976  01E3                     __end_of_OneWire_Reset:	
  8977  01E3                     __ptext1994:	
  8978 ;; =============== function ___delay_20ms ends ============
  8979                           
  8980                           
  8981 ;; *************** function _TCN75_Init *****************
  8982 ;; Defined at:
  8983 ;;		line 16 in file "F:\work\WYP\NBIoT\TCN75.c"
  8984 ;; Parameters:    Size  Location     Type
  8985 ;;		None
  8986 ;; Auto vars:     Size  Location     Type
  8987 ;;		None
  8988 ;; Return value:  Size  Location     Type
  8989 ;;		None               void
  8990 ;; Registers used:
  8991 ;;		status,2, status,0, pclath, cstack
  8992 ;; Tracked objects:
  8993 ;;		On entry : 1F/0
  8994 ;;		On exit  : 1F/2
  8995 ;;		Unchanged: FFFE0/0
  8996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8997 ;;      Params:         0       0       0       0       0       0       0       0
  8998 ;;      Locals:         0       0       0       0       0       0       0       0
  8999 ;;      Temps:          0       0       0       0       0       0       0       0
  9000 ;;      Totals:         0       0       0       0       0       0       0       0
  9001 ;;Total ram usage:        0 bytes
  9002 ;; Hardware stack levels used:    1
  9003 ;; Hardware stack levels required when called:    4
  9004 ;; This function calls:
  9005 ;;		_SimI2C_Init
  9006 ;; This function is called by:
  9007 ;;		_InitSystem
  9008 ;; This function uses a non-reentrant model
  9009 ;;
  9010  01E3                     _TCN75_Init:	
  9011                           
  9012                           ;TCN75.c: 17: SimI2C_Init();
  9013                           
  9014                           ; Regs used in _TCN75_Init: [status,2+status,0+pclath+cstack]
  9015  01E3  2A2B               	ljmp	l32334
  9016  01E4                     __end_of_TCN75_Init:	
  9017  01E4                     __ptext1979:	
  9018 ;; =============== function _TCN75_SetConfig ends ============
  9019                           
  9020                           
  9021 ;; *************** function _InitVariable *****************
  9022 ;; Defined at:
  9023 ;;		line 60 in file "F:\work\WYP\NBIoT\Init.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;		None
  9028 ;; Return value:  Size  Location     Type
  9029 ;;		None               void
  9030 ;; Registers used:
  9031 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9032 ;; Tracked objects:
  9033 ;;		On entry : 17F/0
  9034 ;;		On exit  : 17F/0
  9035 ;;		Unchanged: FFE80/0
  9036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9037 ;;      Params:         0       0       0       0       0       0       0       0
  9038 ;;      Locals:         0       0       0       0       0       0       0       0
  9039 ;;      Temps:          0       0       0       0       0       0       0       0
  9040 ;;      Totals:         0       0       0       0       0       0       0       0
  9041 ;;Total ram usage:        0 bytes
  9042 ;; Hardware stack levels used:    1
  9043 ;; Hardware stack levels required when called:    5
  9044 ;; This function calls:
  9045 ;;		_GetRomData
  9046 ;;		_SaveRomData
  9047 ;; This function is called by:
  9048 ;;		_InitSystem
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051  01E4                     _InitVariable:	
  9052                           
  9053                           ;Init.c: 61: if(GetRomData()==0)
  9054                           
  9055                           ; Regs used in _InitVariable: [wreg+fsr1l-status,0+pclath+cstack]
  9056  01E4  21F5  3180         	fcall	_GetRomData
  9057  01E6  3800               	iorlw	0
  9058  01E7  1D03               	skipz
  9059  01E8  29EC               	goto	l32702
  9060                           
  9061                           ;Init.c: 62: {
  9062                           ;Init.c: 63: RomParams.bWinter=1;
  9063  01E9  01E7               	clrf	_RomParams+1
  9064  01EA  0AE7               	incf	_RomParams+1,f
  9065                           
  9066                           ;Init.c: 64: SaveRomData();
  9067  01EB  2232               	fcall	_SaveRomData
  9068  01EC                     l32702:	
  9069                           
  9070                           ;Init.c: 65: }
  9071                           ;Init.c: 66: gFlags.AllFlag=0;
  9072  01EC  01E5               	clrf	_gFlags
  9073                           
  9074                           ;Init.c: 67: SystemTick=0;
  9075  01ED  01DC               	clrf	_SystemTick
  9076  01EE  01DD               	clrf	_SystemTick+1
  9077                           
  9078                           ;Init.c: 68: NeedMeasurementTick=6000;
  9079  01EF  3070               	movlw	112
  9080  01F0  00DA               	movwf	_NeedMeasurementTick
  9081  01F1  3017               	movlw	23
  9082  01F2  00DB               	movwf	_NeedMeasurementTick+1
  9083                           
  9084                           ;Init.c: 69: TxErrDataIndex=0;
  9085  01F3  01E8               	clrf	_TxErrDataIndex
  9086  01F4  0008               	return
  9087  01F5                     __end_of_InitVariable:	
  9088  01F5                     __ptext1998:	
  9089 ;; =============== function _SaveRomData ends ============
  9090                           
  9091                           
  9092 ;; *************** function _GetRomData *****************
  9093 ;; Defined at:
  9094 ;;		line 125 in file "F:\work\WYP\NBIoT\afx.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;		None
  9097 ;; Auto vars:     Size  Location     Type
  9098 ;;  i               1    7[BANK0 ] unsigned char 
  9099 ;; Return value:  Size  Location     Type
  9100 ;;                  1    wreg      unsigned char 
  9101 ;; Registers used:
  9102 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9103 ;; Tracked objects:
  9104 ;;		On entry : 17F/0
  9105 ;;		On exit  : 17F/0
  9106 ;;		Unchanged: FFE80/0
  9107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9108 ;;      Params:         0       0       0       0       0       0       0       0
  9109 ;;      Locals:         0       1       0       0       0       0       0       0
  9110 ;;      Temps:          0       0       0       0       0       0       0       0
  9111 ;;      Totals:         0       1       0       0       0       0       0       0
  9112 ;;Total ram usage:        1 bytes
  9113 ;; Hardware stack levels used:    1
  9114 ;; Hardware stack levels required when called:    4
  9115 ;; This function calls:
  9116 ;;		_eeprom_read
  9117 ;;		_GetVerify_Sum
  9118 ;; This function is called by:
  9119 ;;		_InitVariable
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122  01F5                     _GetRomData:	
  9123                           
  9124                           ;afx.c: 126: unsigned char i;
  9125                           ;afx.c: 127: for(i=0;i<2;i++)
  9126                           
  9127                           ; Regs used in _GetRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9128  01F5  01A7               	clrf	GetRomData@i
  9129  01F6                     l32514:	
  9130                           
  9131                           ;afx.c: 128: RomParams.All[i]=eeprom_read(i);
  9132  01F6  0827               	movf	GetRomData@i,w
  9133  01F7  3E66               	addlw	_RomParams& (0+255)
  9134  01F8  0086               	movwf	6
  9135  01F9  0187               	clrf	7
  9136  01FA  0827               	movf	GetRomData@i,w
  9137  01FB  318D  25BB  3180   	fcall	_eeprom_read
  9138  01FE  0081               	movwf	1
  9139  01FF  0020               	movlb	0	; select bank0
  9140  0200  0AA7               	incf	GetRomData@i,f
  9141  0201  3002               	movlw	2
  9142  0202  0227               	subwf	GetRomData@i,w
  9143  0203  1C03               	skipc
  9144  0204  29F6               	goto	l32514
  9145                           
  9146                           ;afx.c: 129: i=GetVerify_Sum(&RomParams.All[1],2-1);
  9147  0205  01A0               	clrf	?_GetVerify_Sum
  9148  0206  0AA0               	incf	?_GetVerify_Sum,f
  9149  0207  01A1               	clrf	?_GetVerify_Sum+1
  9150  0208  3067               	movlw	(_RomParams+1)& (0+255)
  9151  0209  2212  3180         	fcall	_GetVerify_Sum
  9152  020B  00A7               	movwf	GetRomData@i
  9153                           
  9154                           ;afx.c: 130: i+=1;
  9155  020C  0AA7               	incf	GetRomData@i,f
  9156                           
  9157                           ;afx.c: 131: if(i==RomParams.sum)
  9158  020D  0866               	movf	_RomParams,w
  9159  020E  0627               	xorwf	GetRomData@i,w
  9160  020F  1903               	btfsc	3,2
  9161                           
  9162                           ;afx.c: 132: {
  9163                           ;afx.c: 133: return 1;
  9164  0210  3401               	retlw	1
  9165                           
  9166                           ;afx.c: 135: else
  9167                           ;afx.c: 136: return 0;
  9168  0211  3400               	retlw	0
  9169  0212                     __end_of_GetRomData:	
  9170  0212                     __ptext2015:	
  9171 ;; =============== function _GetVerify_CRC8 ends ============
  9172                           
  9173                           
  9174 ;; *************** function _GetVerify_Sum *****************
  9175 ;; Defined at:
  9176 ;;		line 79 in file "F:\work\WYP\NBIoT\Verify.c"
  9177 ;; Parameters:    Size  Location     Type
  9178 ;;  pBuff           1    wreg     PTR unsigned char 
  9179 ;;		 -> RomParams(2), 
  9180 ;;  Count           2    0[BANK0 ] unsigned int 
  9181 ;; Auto vars:     Size  Location     Type
  9182 ;;  pBuff           1    4[BANK0 ] PTR unsigned char 
  9183 ;;		 -> RomParams(2), 
  9184 ;;  i               1    6[BANK0 ] unsigned char 
  9185 ;;  sum             1    5[BANK0 ] unsigned char 
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      unsigned char 
  9188 ;; Registers used:
  9189 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9190 ;; Tracked objects:
  9191 ;;		On entry : 17F/0
  9192 ;;		On exit  : 17F/0
  9193 ;;		Unchanged: FFE80/0
  9194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9195 ;;      Params:         0       2       0       0       0       0       0       0
  9196 ;;      Locals:         0       3       0       0       0       0       0       0
  9197 ;;      Temps:          0       2       0       0       0       0       0       0
  9198 ;;      Totals:         0       7       0       0       0       0       0       0
  9199 ;;Total ram usage:        7 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    3
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_GetRomData
  9206 ;;		_SaveRomData
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209  0212                     _GetVerify_Sum:	
  9210                           
  9211                           ; Regs used in _GetVerify_Sum: [wreg+fsr1l-status,0]
  9212                           ;GetVerify_Sum@pBuff stored from wreg
  9213  0212  00A4               	movwf	GetVerify_Sum@pBuff
  9214                           
  9215                           ;Verify.c: 80: unsigned char sum,i;
  9216                           ;Verify.c: 81: sum=0;
  9217  0213  01A5               	clrf	GetVerify_Sum@sum
  9218                           
  9219                           ;Verify.c: 82: for(i=0;i<Count;i++)
  9220  0214  01A6               	clrf	GetVerify_Sum@i
  9221  0215                     l30600:	
  9222  0215  0826               	movf	GetVerify_Sum@i,w
  9223  0216  00A2               	movwf	??_GetVerify_Sum
  9224  0217  01A3               	clrf	??_GetVerify_Sum+1
  9225  0218  0821               	movf	GetVerify_Sum@Count+1,w
  9226  0219  0223               	subwf	??_GetVerify_Sum+1,w
  9227  021A  1D03               	skipz
  9228  021B  2A1E               	goto	u4025
  9229  021C  0820               	movf	GetVerify_Sum@Count,w
  9230  021D  0222               	subwf	??_GetVerify_Sum,w
  9231  021E                     u4025:	
  9232  021E  1803               	btfsc	3,0
  9233  021F  2A29               	goto	l30602
  9234                           
  9235                           ;Verify.c: 83: {
  9236                           ;Verify.c: 84: sum=(unsigned char)(sum+pBuff[i]);
  9237  0220  0826               	movf	GetVerify_Sum@i,w
  9238  0221  0724               	addwf	GetVerify_Sum@pBuff,w
  9239  0222  00A2               	movwf	??_GetVerify_Sum
  9240  0223  0086               	movwf	6
  9241  0224  0187               	clrf	7
  9242  0225  0801               	movf	1,w
  9243  0226  07A5               	addwf	GetVerify_Sum@sum,f
  9244  0227  0AA6               	incf	GetVerify_Sum@i,f
  9245  0228  2A15               	goto	l30600
  9246  0229                     l30602:	
  9247                           
  9248                           ;Verify.c: 85: }
  9249                           ;Verify.c: 86: return sum;
  9250  0229  0825               	movf	GetVerify_Sum@sum,w
  9251  022A  0008               	return
  9252  022B                     __end_of_GetVerify_Sum:	
  9253  022B                     __ptext2013:	
  9254 ;; =============== function _isdigit ends ============
  9255                           
  9256                           
  9257 ;; *************** function _SimI2C_Init *****************
  9258 ;; Defined at:
  9259 ;;		line 3 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9260 ;; Parameters:    Size  Location     Type
  9261 ;;		None
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;		None
  9264 ;; Return value:  Size  Location     Type
  9265 ;;		None               void
  9266 ;; Registers used:
  9267 ;;		None
  9268 ;; Tracked objects:
  9269 ;;		On entry : 1F/0
  9270 ;;		On exit  : 1F/2
  9271 ;;		Unchanged: FFFE0/0
  9272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9273 ;;      Params:         0       0       0       0       0       0       0       0
  9274 ;;      Locals:         0       0       0       0       0       0       0       0
  9275 ;;      Temps:          0       0       0       0       0       0       0       0
  9276 ;;      Totals:         0       0       0       0       0       0       0       0
  9277 ;;Total ram usage:        0 bytes
  9278 ;; Hardware stack levels used:    1
  9279 ;; Hardware stack levels required when called:    3
  9280 ;; This function calls:
  9281 ;;		Nothing
  9282 ;; This function is called by:
  9283 ;;		_TCN75_Init
  9284 ;; This function uses a non-reentrant model
  9285 ;;
  9286  022B                     _SimI2C_Init:	
  9287  022B                     l32334:	
  9288                           ; Regs used in _SimI2C_Init: []
  9289                           
  9290                           
  9291                           ;SimI2C.c: 4: TRISD7=0;
  9292  022B  0021               	movlb	1	; select bank1
  9293  022C  138F               	bcf	15,7
  9294                           
  9295                           ;SimI2C.c: 5: TRISD6=0;
  9296  022D  130F               	bcf	15,6
  9297                           
  9298                           ;SimI2C.c: 13: LATD7=1;
  9299  022E  0022               	movlb	2	; select bank2
  9300  022F  178F               	bsf	15,7
  9301                           
  9302                           ;SimI2C.c: 14: LATD6=1;
  9303  0230  170F               	bsf	15,6
  9304  0231  0008               	return
  9305  0232                     __end_of_SimI2C_Init:	
  9306  0232                     __ptext1997:	
  9307 ;; =============== function _ATCommand_Init ends ============
  9308                           
  9309                           
  9310 ;; *************** function _SaveRomData *****************
  9311 ;; Defined at:
  9312 ;;		line 139 in file "F:\work\WYP\NBIoT\afx.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  i               1    7[BANK0 ] unsigned char 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;		None               void
  9319 ;; Registers used:
  9320 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : 17F/0
  9323 ;;		On exit  : 17F/0
  9324 ;;		Unchanged: FFE80/0
  9325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9326 ;;      Params:         0       0       0       0       0       0       0       0
  9327 ;;      Locals:         0       1       0       0       0       0       0       0
  9328 ;;      Temps:          0       0       0       0       0       0       0       0
  9329 ;;      Totals:         0       1       0       0       0       0       0       0
  9330 ;;Total ram usage:        1 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:    4
  9333 ;; This function calls:
  9334 ;;		_GetVerify_Sum
  9335 ;;		_eeprom_write
  9336 ;; This function is called by:
  9337 ;;		_InitVariable
  9338 ;; This function uses a non-reentrant model
  9339 ;;
  9340  0232                     _SaveRomData:	
  9341                           
  9342                           ;afx.c: 140: unsigned char i;
  9343                           ;afx.c: 141: RomParams.sum=GetVerify_Sum(&RomParams.All[1],2-1);
  9344                           
  9345                           ; Regs used in _SaveRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9346  0232  01A0               	clrf	?_GetVerify_Sum
  9347  0233  0AA0               	incf	?_GetVerify_Sum,f
  9348  0234  01A1               	clrf	?_GetVerify_Sum+1
  9349  0235  3067               	movlw	(_RomParams+1)& (0+255)
  9350  0236  2212               	fcall	_GetVerify_Sum
  9351  0237  00E6               	movwf	_RomParams
  9352                           
  9353                           ;afx.c: 142: RomParams.sum+=1;
  9354  0238  0AE6               	incf	_RomParams,f
  9355                           
  9356                           ;afx.c: 143: for(i=0;i<2;i++)
  9357  0239  01A7               	clrf	SaveRomData@i
  9358  023A                     l32546:	
  9359                           
  9360                           ;afx.c: 144: eeprom_write(i,RomParams.All[i]);
  9361  023A  0827               	movf	SaveRomData@i,w
  9362  023B  3E66               	addlw	_RomParams& (0+255)
  9363  023C  0086               	movwf	6
  9364  023D  0187               	clrf	7
  9365  023E  0801               	movf	1,w
  9366  023F  00A0               	movwf	?_eeprom_write
  9367  0240  0827               	movf	SaveRomData@i,w
  9368  0241  318E  26E5  3180   	fcall	_eeprom_write
  9369  0244  0020               	movlb	0	; select bank0
  9370  0245  0AA7               	incf	SaveRomData@i,f
  9371  0246  3002               	movlw	2
  9372  0247  0227               	subwf	SaveRomData@i,w
  9373  0248  1803               	btfsc	3,0
  9374  0249  0008               	return
  9375  024A  2A3A               	goto	l32546
  9376  024B                     __end_of_SaveRomData:	
  9377                           
  9378                           	psect	text1977
  9379  0440                     __ptext1977:	
  9380 ;; =============== function _PowerON ends ============
  9381                           
  9382                           
  9383 ;; *************** function _TCN75_ReadReg *****************
  9384 ;; Defined at:
  9385 ;;		line 20 in file "F:\work\WYP\NBIoT\TCN75.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  RegPoint        1    wreg     unsigned char 
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;  RegPoint        1    3[BANK0 ] unsigned char 
  9390 ;;  bRight          1    5[BANK0 ] unsigned char 
  9391 ;;  ErrTimes        1    4[BANK0 ] unsigned char 
  9392 ;; Return value:  Size  Location     Type
  9393 ;;                  1    wreg      unsigned char 
  9394 ;; Registers used:
  9395 ;;		wreg, status,2, status,0, pclath, cstack
  9396 ;; Tracked objects:
  9397 ;;		On entry : 1F/0
  9398 ;;		On exit  : 1F/0
  9399 ;;		Unchanged: 0/0
  9400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9401 ;;      Params:         0       0       0       0       0       0       0       0
  9402 ;;      Locals:         0       3       0       0       0       0       0       0
  9403 ;;      Temps:          0       0       0       0       0       0       0       0
  9404 ;;      Totals:         0       3       0       0       0       0       0       0
  9405 ;;Total ram usage:        3 bytes
  9406 ;; Hardware stack levels used:    1
  9407 ;; Hardware stack levels required when called:    4
  9408 ;; This function calls:
  9409 ;;		_SimI2C_Start
  9410 ;;		_SimI2C_SendByte
  9411 ;;		_SimI2C_RecAck
  9412 ;;		_SimI2C_ReadByte
  9413 ;;		_SimI2C_Ack
  9414 ;;		_SimI2C_NoAck
  9415 ;;		_SimI2C_Stop
  9416 ;; This function is called by:
  9417 ;;		_ReadTData
  9418 ;; This function uses a non-reentrant model
  9419 ;;
  9420  0440                     _TCN75_ReadReg:	
  9421                           
  9422                           ; Regs used in _TCN75_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  9423                           ;TCN75_ReadReg@RegPoint stored from wreg
  9424  0440  00A3               	movwf	TCN75_ReadReg@RegPoint
  9425                           
  9426                           ;TCN75.c: 21: unsigned char ErrTimes=2;
  9427  0441  3002               	movlw	2
  9428  0442  00A4               	movwf	TCN75_ReadReg@ErrTimes
  9429                           
  9430                           ;TCN75.c: 22: unsigned char bRight=0;
  9431  0443  01A5               	clrf	TCN75_ReadReg@bRight
  9432  0444                     l32776:	
  9433                           ;TCN75.c: 41: break;
  9434                           
  9435                           ;TCN75.c: 23: while(ErrTimes--)
  9436                           
  9437  0444  03A4               	decf	TCN75_ReadReg@ErrTimes,f
  9438  0445  0824               	movf	TCN75_ReadReg@ErrTimes,w
  9439  0446  3AFF               	xorlw	255
  9440  0447  1903               	btfsc	3,2
  9441  0448  2C72               	goto	l32778
  9442                           
  9443                           ;TCN75.c: 24: {
  9444                           ;TCN75.c: 25: SimI2C_Start();
  9445  0449  24AB  3184         	fcall	_SimI2C_Start
  9446                           
  9447                           ;TCN75.c: 26: SimI2C_SendByte(0b10010000&0xfe);
  9448  044B  3090               	movlw	144
  9449  044C  2476  3184         	fcall	_SimI2C_SendByte
  9450                           
  9451                           ;TCN75.c: 27: if(SimI2C_RecAck())
  9452  044E  2497  3184         	fcall	_SimI2C_RecAck
  9453  0450  3A00               	xorlw	0
  9454  0451  1D03               	btfss	3,2
  9455  0452  2C44               	goto	l32776
  9456                           
  9457                           ;TCN75.c: 29: SimI2C_SendByte(RegPoint);
  9458  0453  0823               	movf	TCN75_ReadReg@RegPoint,w
  9459  0454  2476  3184         	fcall	_SimI2C_SendByte
  9460                           
  9461                           ;TCN75.c: 30: if(SimI2C_RecAck())
  9462  0456  2497  3184         	fcall	_SimI2C_RecAck
  9463  0458  3A00               	xorlw	0
  9464  0459  1D03               	btfss	3,2
  9465  045A  2C44               	goto	l32776
  9466                           
  9467                           ;TCN75.c: 32: SimI2C_Start();
  9468  045B  24AB  3184         	fcall	_SimI2C_Start
  9469                           
  9470                           ;TCN75.c: 33: SimI2C_SendByte(0b10010000|0x01);
  9471  045D  3091               	movlw	145
  9472  045E  2476  3184         	fcall	_SimI2C_SendByte
  9473                           
  9474                           ;TCN75.c: 34: if(SimI2C_RecAck())
  9475  0460  2497  3184         	fcall	_SimI2C_RecAck
  9476  0462  3A00               	xorlw	0
  9477  0463  1D03               	btfss	3,2
  9478  0464  2C44               	goto	l32776
  9479                           
  9480                           ;TCN75.c: 36: TCN75_RegReadResualt.u8H=SimI2C_ReadByte();
  9481  0465  24B5  3184         	fcall	_SimI2C_ReadByte
  9482  0467  00DF               	movwf	_TCN75_RegReadResualt+1
  9483                           
  9484                           ;TCN75.c: 37: SimI2C_Ack();
  9485  0468  24D5  3184         	fcall	_SimI2C_Ack
  9486                           
  9487                           ;TCN75.c: 38: TCN75_RegReadResualt.u8L=SimI2C_ReadByte();
  9488  046A  24B5  3184         	fcall	_SimI2C_ReadByte
  9489  046C  00DE               	movwf	_TCN75_RegReadResualt
  9490                           
  9491                           ;TCN75.c: 39: SimI2C_NoAck();
  9492  046D  24E1  3184         	fcall	_SimI2C_NoAck
  9493                           
  9494                           ;TCN75.c: 40: bRight=1;
  9495  046F  0020               	movlb	0	; select bank0
  9496  0470  01A5               	clrf	TCN75_ReadReg@bRight
  9497  0471  0AA5               	incf	TCN75_ReadReg@bRight,f
  9498  0472                     l32778:	
  9499                           
  9500                           ;TCN75.c: 42: }
  9501                           ;TCN75.c: 43: SimI2C_Stop();
  9502  0472  24E8               	fcall	_SimI2C_Stop
  9503                           
  9504                           ;TCN75.c: 44: return bRight;
  9505  0473  0020               	movlb	0	; select bank0
  9506  0474  0825               	movf	TCN75_ReadReg@bRight,w
  9507  0475  0008               	return
  9508  0476                     __end_of_TCN75_ReadReg:	
  9509  0476                     __ptext1985:	
  9510 ;; =============== function _SimI2C_RecAck ends ============
  9511                           
  9512                           
  9513 ;; *************** function _SimI2C_SendByte *****************
  9514 ;; Defined at:
  9515 ;;		line 71 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;  data            1    wreg     unsigned char 
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;  data            1    0[BANK0 ] unsigned char 
  9520 ;;  i               1    2[BANK0 ] unsigned char 
  9521 ;;  t               1    1[BANK0 ] unsigned char 
  9522 ;; Return value:  Size  Location     Type
  9523 ;;		None               void
  9524 ;; Registers used:
  9525 ;;		wreg, status,2, status,0
  9526 ;; Tracked objects:
  9527 ;;		On entry : 1D/2
  9528 ;;		On exit  : 1F/2
  9529 ;;		Unchanged: 0/0
  9530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9531 ;;      Params:         0       0       0       0       0       0       0       0
  9532 ;;      Locals:         0       3       0       0       0       0       0       0
  9533 ;;      Temps:          0       0       0       0       0       0       0       0
  9534 ;;      Totals:         0       3       0       0       0       0       0       0
  9535 ;;Total ram usage:        3 bytes
  9536 ;; Hardware stack levels used:    1
  9537 ;; Hardware stack levels required when called:    3
  9538 ;; This function calls:
  9539 ;;		Nothing
  9540 ;; This function is called by:
  9541 ;;		_TCN75_ReadReg
  9542 ;;		_TCN75_SetConfig
  9543 ;; This function uses a non-reentrant model
  9544 ;;
  9545  0476                     _SimI2C_SendByte:	
  9546                           
  9547                           ; Regs used in _SimI2C_SendByte: [wreg+status,2+status,0]
  9548                           ;SimI2C_SendByte@data stored from wreg
  9549  0476  0020               	movlb	0	; select bank0
  9550  0477  00A0               	movwf	SimI2C_SendByte@data
  9551                           
  9552                           ;SimI2C.c: 72: unsigned char i;
  9553                           ;SimI2C.c: 73: unsigned char t;
  9554                           ;SimI2C.c: 74: for(i=0;i<8;i++)
  9555  0478  01A2               	clrf	SimI2C_SendByte@i
  9556  0479                     l27487:	
  9557                           
  9558                           ;SimI2C.c: 75: {
  9559                           ;SimI2C.c: 76: LATD7=0;
  9560  0479  0022               	movlb	2	; select bank2
  9561  047A  138F               	bcf	15,7
  9562                           
  9563                           ;SimI2C.c: 77: t=data&0x80;
  9564  047B  0020               	movlb	0	; select bank0
  9565  047C  0820               	movf	SimI2C_SendByte@data,w
  9566  047D  00A1               	movwf	SimI2C_SendByte@t
  9567  047E  3080               	movlw	128
  9568  047F  05A1               	andwf	SimI2C_SendByte@t,f
  9569                           
  9570                           ;SimI2C.c: 78: if(t==0x00)
  9571  0480  08A1               	movf	SimI2C_SendByte@t,f
  9572  0481  1D03               	skipz
  9573  0482  2C86               	goto	l27489
  9574                           
  9575                           ;SimI2C.c: 79: LATD6=0;
  9576  0483  0022               	movlb	2	; select bank2
  9577  0484  130F               	bcf	15,6
  9578  0485  2C88               	goto	l27490
  9579  0486                     l27489:	
  9580                           
  9581                           ;SimI2C.c: 80: else
  9582                           ;SimI2C.c: 81: LATD6=1;
  9583  0486  0022               	movlb	2	; select bank2
  9584  0487  170F               	bsf	15,6
  9585  0488                     l27490:	
  9586                           
  9587                           ;SimI2C.c: 82: data<<=1;
  9588  0488  0020               	movlb	0	; select bank0
  9589  0489  35A0               	lslf	SimI2C_SendByte@data,f
  9590                           
  9591                           ;SimI2C.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9592  048A  0064               	clrwdt
  9593                           
  9594                           ;SimI2C.c: 84: LATD7=1;
  9595  048B  0022               	movlb	2	; select bank2
  9596  048C  178F               	bsf	15,7
  9597                           
  9598                           ;SimI2C.c: 85: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9599  048D  0064               	clrwdt
  9600  048E  0020               	movlb	0	; select bank0
  9601  048F  0AA2               	incf	SimI2C_SendByte@i,f
  9602  0490  3008               	movlw	8
  9603  0491  0222               	subwf	SimI2C_SendByte@i,w
  9604  0492  1C03               	skipc
  9605  0493  2C79               	goto	l27487
  9606                           
  9607                           ;SimI2C.c: 86: }
  9608                           ;SimI2C.c: 87: LATD7=0;
  9609  0494  0022               	movlb	2	; select bank2
  9610  0495  138F               	bcf	15,7
  9611  0496  0008               	return
  9612  0497                     __end_of_SimI2C_SendByte:	
  9613  0497                     __ptext1984:	
  9614 ;; =============== function _SimI2C_ReadByte ends ============
  9615                           
  9616                           
  9617 ;; *************** function _SimI2C_RecAck *****************
  9618 ;; Defined at:
  9619 ;;		line 39 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  t               1    0[BANK0 ] unsigned char 
  9624 ;; Return value:  Size  Location     Type
  9625 ;;                  1    wreg      unsigned char 
  9626 ;; Registers used:
  9627 ;;		wreg
  9628 ;; Tracked objects:
  9629 ;;		On entry : 1F/2
  9630 ;;		On exit  : 1F/0
  9631 ;;		Unchanged: 0/0
  9632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9633 ;;      Params:         0       0       0       0       0       0       0       0
  9634 ;;      Locals:         0       1       0       0       0       0       0       0
  9635 ;;      Temps:          0       0       0       0       0       0       0       0
  9636 ;;      Totals:         0       1       0       0       0       0       0       0
  9637 ;;Total ram usage:        1 bytes
  9638 ;; Hardware stack levels used:    1
  9639 ;; Hardware stack levels required when called:    3
  9640 ;; This function calls:
  9641 ;;		Nothing
  9642 ;; This function is called by:
  9643 ;;		_TCN75_ReadReg
  9644 ;;		_TCN75_SetConfig
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647  0497                     _SimI2C_RecAck:	
  9648                           
  9649                           ;SimI2C.c: 40: unsigned char t;
  9650                           ;SimI2C.c: 41: TRISD6=1;
  9651                           
  9652                           ; Regs used in _SimI2C_RecAck: [wreg]
  9653  0497  0021               	movlb	1	; select bank1
  9654  0498  170F               	bsf	15,6
  9655                           
  9656                           ;SimI2C.c: 42: LATD7=0;
  9657  0499  0022               	movlb	2	; select bank2
  9658  049A  138F               	bcf	15,7
  9659                           
  9660                           ;SimI2C.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9661  049B  0064               	clrwdt
  9662                           
  9663                           ;SimI2C.c: 44: LATD7=1;
  9664  049C  0022               	movlb	2	; select bank2
  9665  049D  178F               	bsf	15,7
  9666                           
  9667                           ;SimI2C.c: 45: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9668  049E  0064               	clrwdt
  9669                           
  9670                           ;SimI2C.c: 46: t=RD6;
  9671  049F  3000               	movlw	0
  9672  04A0  0020               	movlb	0	; select bank0
  9673  04A1  1B0F               	btfsc	15,6
  9674  04A2  3001               	movlw	1
  9675  04A3  00A0               	movwf	SimI2C_RecAck@t
  9676                           
  9677                           ;SimI2C.c: 47: LATD7=0;
  9678  04A4  0022               	movlb	2	; select bank2
  9679  04A5  138F               	bcf	15,7
  9680                           
  9681                           ;SimI2C.c: 48: TRISD6=0;
  9682  04A6  0021               	movlb	1	; select bank1
  9683  04A7  130F               	bcf	15,6
  9684                           
  9685                           ;SimI2C.c: 49: return t;
  9686  04A8  0020               	movlb	0	; select bank0
  9687  04A9  0820               	movf	SimI2C_RecAck@t,w
  9688  04AA  0008               	return
  9689  04AB                     __end_of_SimI2C_RecAck:	
  9690  04AB                     __ptext1986:	
  9691 ;; =============== function _SimI2C_SendByte ends ============
  9692                           
  9693                           
  9694 ;; *************** function _SimI2C_Start *****************
  9695 ;; Defined at:
  9696 ;;		line 19 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;		None
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;		None
  9701 ;; Return value:  Size  Location     Type
  9702 ;;		None               void
  9703 ;; Registers used:
  9704 ;;		None
  9705 ;; Tracked objects:
  9706 ;;		On entry : 1F/0
  9707 ;;		On exit  : 1F/2
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9710 ;;      Params:         0       0       0       0       0       0       0       0
  9711 ;;      Locals:         0       0       0       0       0       0       0       0
  9712 ;;      Temps:          0       0       0       0       0       0       0       0
  9713 ;;      Totals:         0       0       0       0       0       0       0       0
  9714 ;;Total ram usage:        0 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; Hardware stack levels required when called:    3
  9717 ;; This function calls:
  9718 ;;		Nothing
  9719 ;; This function is called by:
  9720 ;;		_TCN75_ReadReg
  9721 ;;		_TCN75_SetConfig
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724  04AB                     _SimI2C_Start:	
  9725                           
  9726                           ;SimI2C.c: 20: LATD6=1;
  9727                           
  9728                           ; Regs used in _SimI2C_Start: []
  9729  04AB  0022               	movlb	2	; select bank2
  9730  04AC  170F               	bsf	15,6
  9731                           
  9732                           ;SimI2C.c: 21: LATD7=1;
  9733  04AD  178F               	bsf	15,7
  9734                           
  9735                           ;SimI2C.c: 22: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9736  04AE  0064               	clrwdt
  9737                           
  9738                           ;SimI2C.c: 23: LATD6=0;
  9739  04AF  0022               	movlb	2	; select bank2
  9740  04B0  130F               	bcf	15,6
  9741                           
  9742                           ;SimI2C.c: 24: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9743  04B1  0064               	clrwdt
  9744                           
  9745                           ;SimI2C.c: 25: LATD7=0;
  9746  04B2  0022               	movlb	2	; select bank2
  9747  04B3  138F               	bcf	15,7
  9748  04B4  0008               	return
  9749  04B5                     __end_of_SimI2C_Start:	
  9750  04B5                     __ptext1983:	
  9751 ;; =============== function _SimI2C_Ack ends ============
  9752                           
  9753                           
  9754 ;; *************** function _SimI2C_ReadByte *****************
  9755 ;; Defined at:
  9756 ;;		line 90 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9757 ;; Parameters:    Size  Location     Type
  9758 ;;		None
  9759 ;; Auto vars:     Size  Location     Type
  9760 ;;  i               1    1[BANK0 ] unsigned char 
  9761 ;;  data            1    0[BANK0 ] unsigned char 
  9762 ;; Return value:  Size  Location     Type
  9763 ;;                  1    wreg      unsigned char 
  9764 ;; Registers used:
  9765 ;;		wreg, status,2, status,0
  9766 ;; Tracked objects:
  9767 ;;		On entry : 1D/0
  9768 ;;		On exit  : 1F/0
  9769 ;;		Unchanged: 0/0
  9770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9771 ;;      Params:         0       0       0       0       0       0       0       0
  9772 ;;      Locals:         0       2       0       0       0       0       0       0
  9773 ;;      Temps:          0       0       0       0       0       0       0       0
  9774 ;;      Totals:         0       2       0       0       0       0       0       0
  9775 ;;Total ram usage:        2 bytes
  9776 ;; Hardware stack levels used:    1
  9777 ;; Hardware stack levels required when called:    3
  9778 ;; This function calls:
  9779 ;;		Nothing
  9780 ;; This function is called by:
  9781 ;;		_TCN75_ReadReg
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784  04B5                     _SimI2C_ReadByte:	
  9785                           
  9786                           ;SimI2C.c: 91: unsigned char data,i;
  9787                           ;SimI2C.c: 92: TRISD6=1;
  9788                           
  9789                           ; Regs used in _SimI2C_ReadByte: [wreg+status,2+status,0]
  9790  04B5  0021               	movlb	1	; select bank1
  9791  04B6  170F               	bsf	15,6
  9792                           
  9793                           ;SimI2C.c: 93: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9794  04B7  0064               	clrwdt
  9795                           
  9796                           ;SimI2C.c: 94: LATD7=0;
  9797  04B8  0022               	movlb	2	; select bank2
  9798  04B9  138F               	bcf	15,7
  9799                           
  9800                           ;SimI2C.c: 95: data=0;
  9801  04BA  0020               	movlb	0	; select bank0
  9802  04BB  01A0               	clrf	SimI2C_ReadByte@data
  9803                           
  9804                           ;SimI2C.c: 96: for(i=0;i<8;i++)
  9805  04BC  01A1               	clrf	SimI2C_ReadByte@i
  9806  04BD                     l27494:	
  9807                           
  9808                           ;SimI2C.c: 97: {
  9809                           ;SimI2C.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9810  04BD  0064               	clrwdt
  9811                           
  9812                           ;SimI2C.c: 99: LATD7=1;
  9813  04BE  0022               	movlb	2	; select bank2
  9814  04BF  178F               	bsf	15,7
  9815                           
  9816                           ;SimI2C.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9817  04C0  0064               	clrwdt
  9818                           
  9819                           ;SimI2C.c: 101: data=data<<1;
  9820  04C1  0020               	movlb	0	; select bank0
  9821  04C2  35A0               	lslf	SimI2C_ReadByte@data,f
  9822                           
  9823                           ;SimI2C.c: 102: if(RD6)
  9824  04C3  1B0F               	btfsc	15,6
  9825                           
  9826                           ;SimI2C.c: 103: data=data|0x01;
  9827  04C4  1420               	bsf	SimI2C_ReadByte@data,0
  9828                           
  9829                           ;SimI2C.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9830  04C5  0064               	clrwdt
  9831                           
  9832                           ;SimI2C.c: 105: LATD7=0;
  9833  04C6  0022               	movlb	2	; select bank2
  9834  04C7  138F               	bcf	15,7
  9835                           
  9836                           ;SimI2C.c: 106: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9837  04C8  0064               	clrwdt
  9838  04C9  0020               	movlb	0	; select bank0
  9839  04CA  0AA1               	incf	SimI2C_ReadByte@i,f
  9840  04CB  3008               	movlw	8
  9841  04CC  0221               	subwf	SimI2C_ReadByte@i,w
  9842  04CD  1C03               	skipc
  9843  04CE  2CBD               	goto	l27494
  9844                           
  9845                           ;SimI2C.c: 107: }
  9846                           ;SimI2C.c: 108: TRISD6=0;
  9847  04CF  0021               	movlb	1	; select bank1
  9848  04D0  130F               	bcf	15,6
  9849                           
  9850                           ;SimI2C.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9851  04D1  0064               	clrwdt
  9852                           
  9853                           ;SimI2C.c: 110: return data;
  9854  04D2  0020               	movlb	0	; select bank0
  9855  04D3  0820               	movf	SimI2C_ReadByte@data,w
  9856  04D4  0008               	return
  9857  04D5                     __end_of_SimI2C_ReadByte:	
  9858  04D5                     __ptext1982:	
  9859 ;; =============== function _SimI2C_NoAck ends ============
  9860                           
  9861                           
  9862 ;; *************** function _SimI2C_Ack *****************
  9863 ;; Defined at:
  9864 ;;		line 53 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;		None
  9867 ;; Auto vars:     Size  Location     Type
  9868 ;;		None
  9869 ;; Return value:  Size  Location     Type
  9870 ;;		None               void
  9871 ;; Registers used:
  9872 ;;		None
  9873 ;; Tracked objects:
  9874 ;;		On entry : 1F/0
  9875 ;;		On exit  : 1F/2
  9876 ;;		Unchanged: 0/0
  9877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9878 ;;      Params:         0       0       0       0       0       0       0       0
  9879 ;;      Locals:         0       0       0       0       0       0       0       0
  9880 ;;      Temps:          0       0       0       0       0       0       0       0
  9881 ;;      Totals:         0       0       0       0       0       0       0       0
  9882 ;;Total ram usage:        0 bytes
  9883 ;; Hardware stack levels used:    1
  9884 ;; Hardware stack levels required when called:    3
  9885 ;; This function calls:
  9886 ;;		Nothing
  9887 ;; This function is called by:
  9888 ;;		_TCN75_ReadReg
  9889 ;; This function uses a non-reentrant model
  9890 ;;
  9891  04D5                     _SimI2C_Ack:	
  9892                           
  9893                           ;SimI2C.c: 54: LATD6=0;
  9894                           
  9895                           ; Regs used in _SimI2C_Ack: []
  9896  04D5  0022               	movlb	2	; select bank2
  9897  04D6  130F               	bcf	15,6
  9898                           
  9899                           ;SimI2C.c: 55: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9900  04D7  0064               	clrwdt
  9901                           
  9902                           ;SimI2C.c: 56: LATD7=1;
  9903  04D8  0022               	movlb	2	; select bank2
  9904  04D9  178F               	bsf	15,7
  9905                           
  9906                           ;SimI2C.c: 57: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9907  04DA  0064               	clrwdt
  9908                           
  9909                           ;SimI2C.c: 58: LATD7=0;
  9910  04DB  0022               	movlb	2	; select bank2
  9911  04DC  138F               	bcf	15,7
  9912                           
  9913                           ;SimI2C.c: 59: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9914  04DD  0064               	clrwdt
  9915                           
  9916                           ;SimI2C.c: 60: LATD6=1;
  9917  04DE  0022               	movlb	2	; select bank2
  9918  04DF  170F               	bsf	15,6
  9919  04E0  0008               	return
  9920  04E1                     __end_of_SimI2C_Ack:	
  9921  04E1                     __ptext1981:	
  9922 ;; =============== function _SimI2C_Stop ends ============
  9923                           
  9924                           
  9925 ;; *************** function _SimI2C_NoAck *****************
  9926 ;; Defined at:
  9927 ;;		line 64 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;		None               void
  9934 ;; Registers used:
  9935 ;;		None
  9936 ;; Tracked objects:
  9937 ;;		On entry : 1F/0
  9938 ;;		On exit  : 1F/2
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9941 ;;      Params:         0       0       0       0       0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used:    1
  9947 ;; Hardware stack levels required when called:    3
  9948 ;; This function calls:
  9949 ;;		Nothing
  9950 ;; This function is called by:
  9951 ;;		_TCN75_ReadReg
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954  04E1                     _SimI2C_NoAck:	
  9955                           
  9956                           ;SimI2C.c: 65: LATD7=1;
  9957                           
  9958                           ; Regs used in _SimI2C_NoAck: []
  9959  04E1  0022               	movlb	2	; select bank2
  9960  04E2  178F               	bsf	15,7
  9961                           
  9962                           ;SimI2C.c: 66: LATD6=1;
  9963  04E3  170F               	bsf	15,6
  9964                           
  9965                           ;SimI2C.c: 67: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9966  04E4  0064               	clrwdt
  9967                           
  9968                           ;SimI2C.c: 68: LATD7=0;
  9969  04E5  0022               	movlb	2	; select bank2
  9970  04E6  138F               	bcf	15,7
  9971  04E7  0008               	return
  9972  04E8                     __end_of_SimI2C_NoAck:	
  9973  04E8                     __ptext1980:	
  9974 ;; =============== function _InitVariable ends ============
  9975                           
  9976                           
  9977 ;; *************** function _SimI2C_Stop *****************
  9978 ;; Defined at:
  9979 ;;		line 29 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9980 ;; Parameters:    Size  Location     Type
  9981 ;;		None
  9982 ;; Auto vars:     Size  Location     Type
  9983 ;;		None
  9984 ;; Return value:  Size  Location     Type
  9985 ;;		None               void
  9986 ;; Registers used:
  9987 ;;		None
  9988 ;; Tracked objects:
  9989 ;;		On entry : 1F/0
  9990 ;;		On exit  : 1F/2
  9991 ;;		Unchanged: 0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9993 ;;      Params:         0       0       0       0       0       0       0       0
  9994 ;;      Locals:         0       0       0       0       0       0       0       0
  9995 ;;      Temps:          0       0       0       0       0       0       0       0
  9996 ;;      Totals:         0       0       0       0       0       0       0       0
  9997 ;;Total ram usage:        0 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    3
 10000 ;; This function calls:
 10001 ;;		Nothing
 10002 ;; This function is called by:
 10003 ;;		_TCN75_ReadReg
 10004 ;;		_TCN75_SetConfig
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007  04E8                     _SimI2C_Stop:	
 10008                           
 10009                           ;SimI2C.c: 30: LATD7=0;
 10010                           
 10011                           ; Regs used in _SimI2C_Stop: []
 10012  04E8  0022               	movlb	2	; select bank2
 10013  04E9  138F               	bcf	15,7
 10014                           
 10015                           ;SimI2C.c: 31: LATD6=0;
 10016  04EA  130F               	bcf	15,6
 10017                           
 10018                           ;SimI2C.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10019  04EB  0064               	clrwdt
 10020                           
 10021                           ;SimI2C.c: 33: LATD7=1;
 10022  04EC  0022               	movlb	2	; select bank2
 10023  04ED  178F               	bsf	15,7
 10024                           
 10025                           ;SimI2C.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10026  04EE  0064               	clrwdt
 10027                           
 10028                           ;SimI2C.c: 35: LATD6=1;
 10029  04EF  0022               	movlb	2	; select bank2
 10030  04F0  170F               	bsf	15,6
 10031  04F1  0008               	return
 10032  04F2                     __end_of_SimI2C_Stop:	
 10033                           
 10034                           	psect	text1989
 10035  0598                     __ptext1989:	
 10036 ;; =============== function _OneWire_ReadByte ends ============
 10037                           
 10038                           
 10039 ;; *************** function _atoi *****************
 10040 ;; Defined at:
 10041 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\atoi.c"
 10042 ;; Parameters:    Size  Location     Type
 10043 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 10044 ;;		 -> ATCommand_RxList(100), RAM(128), 
 10045 ;; Auto vars:     Size  Location     Type
 10046 ;;  a               2   13[BANK0 ] int 
 10047 ;;  sign            1   12[BANK0 ] unsigned char 
 10048 ;; Return value:  Size  Location     Type
 10049 ;;                  2    6[BANK0 ] int 
 10050 ;; Registers used:
 10051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10052 ;; Tracked objects:
 10053 ;;		On entry : 1F/0
 10054 ;;		On exit  : 1F/0
 10055 ;;		Unchanged: FFFE0/0
 10056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10057 ;;      Params:         0       2       0       0       0       0       0       0
 10058 ;;      Locals:         0       3       0       0       0       0       0       0
 10059 ;;      Temps:          0       4       0       0       0       0       0       0
 10060 ;;      Totals:         0       9       0       0       0       0       0       0
 10061 ;;Total ram usage:        9 bytes
 10062 ;; Hardware stack levels used:    1
 10063 ;; Hardware stack levels required when called:    4
 10064 ;; This function calls:
 10065 ;;		___wmul
 10066 ;;		_isdigit
 10067 ;; This function is called by:
 10068 ;;		_InitGPRS
 10069 ;; This function uses a non-reentrant model
 10070 ;;
 10071  0598                     _atoi:	
 10072  0598                     l32614:	
 10073                           ; Regs used in _atoi: [wreg+fsr1l-status,0+pclath+cstack]
 10074                           
 10075  0598  0826               	movf	atoi@s,w
 10076  0599  0086               	movwf	6
 10077  059A  0827               	movf	atoi@s+1,w
 10078  059B  0087               	movwf	7
 10079  059C  0801               	movf	1,w
 10080  059D  3A20               	xorlw	32
 10081  059E  1D03               	btfss	3,2
 10082  059F  2DA4               	goto	l32616
 10083  05A0                     l32612:	
 10084  05A0  0AA6               	incf	atoi@s,f
 10085  05A1  1903               	skipnz
 10086  05A2  0AA7               	incf	atoi@s+1,f
 10087  05A3  2D98               	goto	l32614
 10088  05A4                     l32616:	
 10089  05A4  0826               	movf	atoi@s,w
 10090  05A5  0086               	movwf	6
 10091  05A6  0827               	movf	atoi@s+1,w
 10092  05A7  0087               	movwf	7
 10093  05A8  0801               	movf	1,w
 10094  05A9  3A09               	xorlw	9
 10095  05AA  1903               	skipnz
 10096  05AB  2DA0               	goto	l32612
 10097  05AC  01AD               	clrf	atoi@a
 10098  05AD  01AE               	clrf	atoi@a+1
 10099  05AE  01AC               	clrf	atoi@sign
 10100  05AF  0826               	movf	atoi@s,w
 10101  05B0  0086               	movwf	6
 10102  05B1  0827               	movf	atoi@s+1,w
 10103  05B2  0087               	movwf	7
 10104  05B3  0801               	movf	1,w
 10105  05B4  3A2D               	xorlw	45
 10106  05B5  1D03               	skipz
 10107  05B6  2DB9               	goto	l32624
 10108  05B7  0AAC               	incf	atoi@sign,f
 10109  05B8  2DE6               	goto	l32626
 10110  05B9                     l32624:	
 10111  05B9  0826               	movf	atoi@s,w
 10112  05BA  0086               	movwf	6
 10113  05BB  0827               	movf	atoi@s+1,w
 10114  05BC  0087               	movwf	7
 10115  05BD  0801               	movf	1,w
 10116  05BE  3A2B               	xorlw	43
 10117  05BF  1903               	btfsc	3,2
 10118  05C0  2DE6               	goto	l32626
 10119  05C1                     l32632:	
 10120  05C1  0826               	movf	atoi@s,w
 10121  05C2  0086               	movwf	6
 10122  05C3  0827               	movf	atoi@s+1,w
 10123  05C4  0087               	movwf	7
 10124  05C5  0801               	movf	1,w
 10125  05C6  25FE  3185         	fcall	_isdigit
 10126  05C8  1C03               	btfss	3,0
 10127  05C9  2DEA               	goto	l32634
 10128  05CA  0826               	movf	atoi@s,w
 10129  05CB  0086               	movwf	6
 10130  05CC  0827               	movf	atoi@s+1,w
 10131  05CD  0087               	movwf	7
 10132  05CE  0801               	movf	1,w
 10133  05CF  00A8               	movwf	??_atoi
 10134  05D0  01A9               	clrf	??_atoi+1
 10135  05D1  082E               	movf	atoi@a+1,w
 10136  05D2  00A1               	movwf	?___wmul+1
 10137  05D3  082D               	movf	atoi@a,w
 10138  05D4  00A0               	movwf	?___wmul
 10139  05D5  300A               	movlw	10
 10140  05D6  00A2               	movwf	?___wmul+2
 10141  05D7  01A3               	clrf	?___wmul+3
 10142  05D8  260C  3185         	fcall	___wmul
 10143  05DA  0828               	movf	??_atoi,w
 10144  05DB  0720               	addwf	?___wmul,w
 10145  05DC  00AA               	movwf	??_atoi+2
 10146  05DD  0829               	movf	??_atoi+1,w
 10147  05DE  3D21               	addwfc	?___wmul+1,w
 10148  05DF  00AB               	movwf	??_atoi+3
 10149  05E0  082A               	movf	??_atoi+2,w
 10150  05E1  3ED0               	addlw	208
 10151  05E2  00AD               	movwf	atoi@a
 10152  05E3  30FF               	movlw	255
 10153  05E4  3D2B               	addwfc	??_atoi+3,w
 10154  05E5  00AE               	movwf	atoi@a+1
 10155  05E6                     l32626:	
 10156  05E6  0AA6               	incf	atoi@s,f
 10157  05E7  1903               	skipnz
 10158  05E8  0AA7               	incf	atoi@s+1,f
 10159  05E9  2DC1               	goto	l32632
 10160  05EA                     l32634:	
 10161  05EA  082C               	movf	atoi@sign,w
 10162  05EB  1903               	btfsc	3,2
 10163  05EC  2DF9               	goto	l32640
 10164  05ED  092D               	comf	atoi@a,w
 10165  05EE  00A8               	movwf	??_atoi
 10166  05EF  092E               	comf	atoi@a+1,w
 10167  05F0  00A9               	movwf	??_atoi+1
 10168  05F1  0AA8               	incf	??_atoi,f
 10169  05F2  1903               	skipnz
 10170  05F3  0AA9               	incf	??_atoi+1,f
 10171  05F4  0828               	movf	??_atoi,w
 10172  05F5  00A6               	movwf	?_atoi
 10173  05F6  0829               	movf	??_atoi+1,w
 10174  05F7  00A7               	movwf	?_atoi+1
 10175  05F8  0008               	return
 10176  05F9                     l32640:	
 10177  05F9  082E               	movf	atoi@a+1,w
 10178  05FA  00A7               	movwf	?_atoi+1
 10179  05FB  082D               	movf	atoi@a,w
 10180  05FC  00A6               	movwf	?_atoi
 10181  05FD  0008               	return
 10182  05FE                     __end_of_atoi:	
 10183  05FE                     __ptext2012:	
 10184 ;; =============== function _strlen ends ============
 10185                           
 10186                           
 10187 ;; *************** function _isdigit *****************
 10188 ;; Defined at:
 10189 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isdigit.c"
 10190 ;; Parameters:    Size  Location     Type
 10191 ;;  c               1    wreg     unsigned char 
 10192 ;; Auto vars:     Size  Location     Type
 10193 ;;  c               1    1[BANK0 ] unsigned char 
 10194 ;; Return value:  Size  Location     Type
 10195 ;;		None               void
 10196 ;; Registers used:
 10197 ;;		wreg, status,2, status,0
 10198 ;; Tracked objects:
 10199 ;;		On entry : 1F/0
 10200 ;;		On exit  : 1F/0
 10201 ;;		Unchanged: FFFE0/0
 10202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10203 ;;      Params:         0       0       0       0       0       0       0       0
 10204 ;;      Locals:         0       2       0       0       0       0       0       0
 10205 ;;      Temps:          0       0       0       0       0       0       0       0
 10206 ;;      Totals:         0       2       0       0       0       0       0       0
 10207 ;;Total ram usage:        2 bytes
 10208 ;; Hardware stack levels used:    1
 10209 ;; Hardware stack levels required when called:    3
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_atoi
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216  05FE                     _isdigit:	
 10217                           
 10218                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10219                           ;isdigit@c stored from wreg
 10220  05FE  00A1               	movwf	isdigit@c
 10221  05FF  01A0               	clrf	_isdigit$31765
 10222  0600  303A               	movlw	58
 10223  0601  0221               	subwf	isdigit@c,w
 10224  0602  1803               	skipnc
 10225  0603  2E0A               	goto	l32344
 10226  0604  3030               	movlw	48
 10227  0605  0221               	subwf	isdigit@c,w
 10228  0606  1C03               	skipc
 10229  0607  2E0A               	goto	l32344
 10230  0608  01A0               	clrf	_isdigit$31765
 10231  0609  0AA0               	incf	_isdigit$31765,f
 10232  060A                     l32344:	
 10233  060A  0C20               	rrf	_isdigit$31765,w
 10234  060B  0008               	return
 10235  060C                     __end_of_isdigit:	
 10236  060C                     __ptext2007:	
 10237 ;; =============== function ___lwdiv ends ============
 10238                           
 10239                           
 10240 ;; *************** function ___wmul *****************
 10241 ;; Defined at:
 10242 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\wmul.c"
 10243 ;; Parameters:    Size  Location     Type
 10244 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10245 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;  product         2    4[BANK0 ] unsigned int 
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  2    0[BANK0 ] unsigned int 
 10250 ;; Registers used:
 10251 ;;		wreg, status,2, status,0
 10252 ;; Tracked objects:
 10253 ;;		On entry : 1F/0
 10254 ;;		On exit  : 1F/0
 10255 ;;		Unchanged: FFFE0/0
 10256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10257 ;;      Params:         0       4       0       0       0       0       0       0
 10258 ;;      Locals:         0       2       0       0       0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0
 10260 ;;      Totals:         0       6       0       0       0       0       0       0
 10261 ;;Total ram usage:        6 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:    3
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_atoi
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270  060C                     ___wmul:	
 10271                           
 10272                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10273  060C  01A4               	clrf	___wmul@product
 10274  060D  01A5               	clrf	___wmul@product+1
 10275  060E                     l32366:	
 10276  060E  1C20               	btfss	___wmul@multiplier,0
 10277  060F  2E14               	goto	l32370
 10278  0610  0822               	movf	___wmul@multiplicand,w
 10279  0611  07A4               	addwf	___wmul@product,f
 10280  0612  0823               	movf	___wmul@multiplicand+1,w
 10281  0613  3DA5               	addwfc	___wmul@product+1,f
 10282  0614                     l32370:	
 10283  0614  35A2               	lslf	___wmul@multiplicand,f
 10284  0615  0DA3               	rlf	___wmul@multiplicand+1,f
 10285  0616  36A1               	lsrf	___wmul@multiplier+1,f
 10286  0617  0CA0               	rrf	___wmul@multiplier,f
 10287  0618  0821               	movf	___wmul@multiplier+1,w
 10288  0619  0420               	iorwf	___wmul@multiplier,w
 10289  061A  1D03               	skipz
 10290  061B  2E0E               	goto	l32366
 10291  061C  0825               	movf	___wmul@product+1,w
 10292  061D  00A1               	movwf	?___wmul+1
 10293  061E  0824               	movf	___wmul@product,w
 10294  061F  00A0               	movwf	?___wmul
 10295  0620  0008               	return
 10296  0621                     __end_of___wmul:	
 10297                           
 10298                           	psect	intentry
 10299  0004                     __pintentry:	
 10300 ;; =============== function _LcdDisplayNum ends ============
 10301                           
 10302                           
 10303 ;; *************** function _highISR *****************
 10304 ;; Defined at:
 10305 ;;		line 83 in file "F:\work\WYP\NBIoT\Main.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;  rx              1    6[COMMON] unsigned char 
 10310 ;; Return value:  Size  Location     Type
 10311 ;;		None               void
 10312 ;; Registers used:
 10313 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 1E/0
 10317 ;;		Unchanged: FFFE0/0
 10318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10319 ;;      Params:         0       0       0       0       0       0       0       0
 10320 ;;      Locals:         1       0       0       0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0
 10322 ;;      Totals:         1       0       0       0       0       0       0       0
 10323 ;;Total ram usage:        1 bytes
 10324 ;; Hardware stack levels used:    1
 10325 ;; Hardware stack levels required when called:    2
 10326 ;; This function calls:
 10327 ;;		_ATCommand_ProcRx
 10328 ;; This function is called by:
 10329 ;;		Interrupt level 1
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332  0004                     _highISR:	
 10333                           
 10334                           ; Regs used in _highISR: [allreg]
 10335  0004  3180               	pagesel	$
 10336                           
 10337                           ;Main.c: 84: unsigned char rx;
 10338                           ;Main.c: 85: if(RCIE&&RCIF)
 10339  0005  0021               	movlb	1	; select bank1
 10340  0006  1E91               	btfss	17,5
 10341  0007  2818               	goto	i1l30486
 10342  0008  0020               	movlb	0	; select bank0
 10343  0009  1E91               	btfss	17,5
 10344  000A  2818               	goto	i1l30486
 10345                           
 10346                           ;Main.c: 86: {
 10347                           ;Main.c: 87: RCIF=0;
 10348  000B  1291               	bcf	17,5
 10349                           
 10350                           ;Main.c: 88: if(OERR==1)
 10351  000C  0023               	movlb	3	; select bank3
 10352  000D  1C9D               	btfss	29,1
 10353  000E  2812               	goto	i1l30482
 10354                           
 10355                           ;Main.c: 89: {
 10356                           ;Main.c: 90: CREN=0;
 10357  000F  121D               	bcf	29,4
 10358                           
 10359                           ;Main.c: 91: OERR=0;
 10360  0010  109D               	bcf	29,1
 10361                           
 10362                           ;Main.c: 92: CREN=1;
 10363  0011  161D               	bsf	29,4
 10364  0012                     i1l30482:	
 10365                           
 10366                           ;Main.c: 93: }
 10367                           ;Main.c: 94: rx=RCREG;
 10368  0012  0819               	movf	25,w	;volatile
 10369  0013  00F6               	movwf	highISR@rx
 10370                           
 10371                           ;Main.c: 95: ATCommand_ProcRx(rx);
 10372  0014  0876               	movf	highISR@rx,w
 10373  0015  3184  24F2  3180   	fcall	_ATCommand_ProcRx
 10374  0018                     i1l30486:	
 10375                           
 10376                           ;Main.c: 96: }
 10377                           ;Main.c: 97: if(TMR1IF&& TMR1IE)
 10378  0018  0020               	movlb	0	; select bank0
 10379  0019  1C11               	btfss	17,0
 10380  001A  0009               	retfie
 10381  001B  0021               	movlb	1	; select bank1
 10382  001C  1C11               	btfss	17,0
 10383  001D  0009               	retfie
 10384  001E  0064               	clrwdt	;#
 10385                           
 10386                           ;Main.c: 100: TMR1IF=0;
 10387  001F  0020               	movlb	0	; select bank0
 10388  0020  1011               	bcf	17,0
 10389                           
 10390                           ;Main.c: 101: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
 10391  0021  303C               	movlw	60
 10392  0022  0097               	movwf	23	;volatile
 10393  0023  30B0               	movlw	176
 10394  0024  0096               	movwf	22	;volatile
 10395                           
 10396                           ;Main.c: 102: SystemTick++;
 10397  0025  0ADC               	incf	_SystemTick,f
 10398  0026  1903               	skipnz
 10399  0027  0ADD               	incf	_SystemTick+1,f
 10400  0028  0009               	retfie
 10401  0029                     __end_of_highISR:	
 10402                           
 10403                           	psect	text2025
 10404  04F2                     __ptext2025:	
 10405 ;; =============== function _highISR ends ============
 10406                           
 10407                           
 10408 ;; *************** function _ATCommand_ProcRx *****************
 10409 ;; Defined at:
 10410 ;;		line 27 in file "F:\work\WYP\NBIoT\ATCommand.c"
 10411 ;; Parameters:    Size  Location     Type
 10412 ;;  rx              1    wreg     unsigned char 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  rx              1    5[COMMON] unsigned char 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;		None               void
 10417 ;; Registers used:
 10418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 1F/3
 10421 ;;		On exit  : 1F/3
 10422 ;;		Unchanged: FFFE0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10424 ;;      Params:         0       0       0       0       0       0       0       0
 10425 ;;      Locals:         1       0       0       0       0       0       0       0
 10426 ;;      Temps:          3       0       0       0       0       0       0       0
 10427 ;;      Totals:         4       0       0       0       0       0       0       0
 10428 ;;Total ram usage:        4 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    1
 10431 ;; This function calls:
 10432 ;;		_isgraph
 10433 ;; This function is called by:
 10434 ;;		_highISR
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437  04F2                     _ATCommand_ProcRx:	
 10438                           
 10439                           ; Regs used in _ATCommand_ProcRx: [wreg+fsr1l-status,0+pclath+cstack]
 10440                           ;ATCommand_ProcRx@rx stored from wreg
 10441  04F2  00F5               	movwf	ATCommand_ProcRx@rx
 10442                           
 10443                           ;ATCommand.c: 28: if(ATCommand_Flags.bRx)
 10444  04F3  18FA               	btfsc	_ATCommand_Flags,1
 10445  04F4  0008               	return
 10446                           
 10447                           ;ATCommand.c: 30: if(ATCommand_Clear!='\0')
 10448  04F5  0879               	movf	_ATCommand_Clear,w
 10449  04F6  1903               	btfsc	3,2
 10450  04F7  2CFF               	goto	i1l15025
 10451                           
 10452                           ;ATCommand.c: 31: {
 10453                           ;ATCommand.c: 32: if(rx==ATCommand_Clear)
 10454  04F8  0875               	movf	ATCommand_ProcRx@rx,w
 10455  04F9  0679               	xorwf	_ATCommand_Clear,w
 10456  04FA  1D03               	skipz
 10457  04FB  2CFF               	goto	i1l15025
 10458  04FC                     i1l30502:	
 10459                           
 10460                           ;ATCommand.c: 33: {
 10461                           ;ATCommand.c: 34: ATCommand_RxCount=0;
 10462  04FC  01FB               	clrf	_ATCommand_RxCount
 10463  04FD                     i1l30504:	
 10464                           
 10465                           ;ATCommand.c: 35: ATCommand_RxList[ATCommand_RxCount]='\0';
 10466  04FD  258F               	fcall	PL2	;call to abstracted procedure
 10467  04FE  0008               	return
 10468  04FF                     i1l15025:	
 10469                           
 10470                           ;ATCommand.c: 37: }
 10471                           ;ATCommand.c: 38: }
 10472                           ;ATCommand.c: 39: if(ATCommand_Flags.bChar)
 10473  04FF  1C7A               	btfss	_ATCommand_Flags,0
 10474  0500  2D0C               	goto	i1l30522
 10475                           
 10476                           ;ATCommand.c: 40: {
 10477                           ;ATCommand.c: 41: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10478  0501  0875               	movf	ATCommand_ProcRx@rx,w
 10479                           
 10480                           ;ATCommand.c: 42: if(ATCommand_RxCount>=100)
 10481  0502  2526  3184         	fcall	PL3	;call to abstracted procedure
 10482  0504  1C03               	skipc
 10483  0505  2D08               	goto	i1l30516
 10484                           
 10485                           ;ATCommand.c: 43: {
 10486                           ;ATCommand.c: 44: ATCommand_RxCount=0;
 10487  0506  01FB               	clrf	_ATCommand_RxCount
 10488                           
 10489                           ;ATCommand.c: 45: }
 10490  0507  2D09               	goto	i1l30518
 10491  0508                     i1l30516:	
 10492                           
 10493                           ;ATCommand.c: 46: else
 10494                           ;ATCommand.c: 47: {
 10495                           ;ATCommand.c: 48: ATCommand_RxList[ATCommand_RxCount]='\0';
 10496  0508  258F               	fcall	PL2	;call to abstracted procedure
 10497  0509                     i1l30518:	
 10498                           
 10499                           ;ATCommand.c: 49: }
 10500                           ;ATCommand.c: 50: if(!ATCommand_Flags.bWaitData)
 10501  0509  1D7A               	btfss	_ATCommand_Flags,2
 10502                           
 10503                           ;ATCommand.c: 51: {
 10504                           ;ATCommand.c: 52: ;;
 10505                           ;ATCommand.c: 53: ATCommand_RxCount=0;
 10506  050A  01FB               	clrf	_ATCommand_RxCount
 10507  050B  0008               	return
 10508  050C                     i1l30522:	
 10509                           
 10510                           ;ATCommand.c: 56: else
 10511                           ;ATCommand.c: 57: {
 10512                           ;ATCommand.c: 58: if(isgraph(rx)==1)
 10513  050C  0875               	movf	ATCommand_ProcRx@rx,w
 10514  050D  2518  3184         	fcall	_isgraph
 10515  050F  1C03               	btfss	3,0
 10516  0510  0008               	return
 10517                           
 10518                           ;ATCommand.c: 59: {
 10519                           ;ATCommand.c: 60: ATCommand_Flags.bChar=1;
 10520  0511  147A               	bsf	_ATCommand_Flags,0
 10521                           
 10522                           ;ATCommand.c: 61: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10523  0512  0875               	movf	ATCommand_ProcRx@rx,w
 10524                           
 10525                           ;ATCommand.c: 62: if(ATCommand_RxCount>=100)
 10526  0513  2526  3184         	fcall	PL3	;call to abstracted procedure
 10527  0515  1803               	btfsc	3,0
 10528  0516  2CFC               	goto	i1l30502
 10529  0517  2CFD               	goto	i1l30504
 10530  0518                     __end_of_ATCommand_ProcRx:	
 10531  0518                     __ptext2026:	
 10532 ;; =============== function _ATCommand_ProcRx ends ============
 10533                           
 10534                           
 10535 ;; *************** function _isgraph *****************
 10536 ;; Defined at:
 10537 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isgraph.c"
 10538 ;; Parameters:    Size  Location     Type
 10539 ;;  c               1    wreg     unsigned char 
 10540 ;; Auto vars:     Size  Location     Type
 10541 ;;  c               1    1[COMMON] unsigned char 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;		None               void
 10544 ;; Registers used:
 10545 ;;		wreg, status,2, status,0
 10546 ;; Tracked objects:
 10547 ;;		On entry : 1F/3
 10548 ;;		On exit  : 1F/3
 10549 ;;		Unchanged: FFFE0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10551 ;;      Params:         0       0       0       0       0       0       0       0
 10552 ;;      Locals:         2       0       0       0       0       0       0       0
 10553 ;;      Temps:          0       0       0       0       0       0       0       0
 10554 ;;      Totals:         2       0       0       0       0       0       0       0
 10555 ;;Total ram usage:        2 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; This function calls:
 10558 ;;		Nothing
 10559 ;; This function is called by:
 10560 ;;		_ATCommand_ProcRx
 10561 ;; This function uses a non-reentrant model
 10562 ;;
 10563  0518                     _isgraph:	
 10564                           
 10565                           ; Regs used in _isgraph: [wreg+status,2+status,0]
 10566                           ;isgraph@c stored from wreg
 10567  0518  00F1               	movwf	isgraph@c
 10568  0519  01F0               	clrf	_isgraph$31768
 10569  051A  307F               	movlw	127
 10570  051B  0271               	subwf	isgraph@c,w
 10571  051C  1803               	skipnc
 10572  051D  2D24               	goto	i1l30614
 10573  051E  3021               	movlw	33
 10574  051F  0271               	subwf	isgraph@c,w
 10575  0520  1C03               	skipc
 10576  0521  2D24               	goto	i1l30614
 10577  0522  01F0               	clrf	_isgraph$31768
 10578  0523  0AF0               	incf	_isgraph$31768,f
 10579  0524                     i1l30614:	
 10580  0524  0C70               	rrf	_isgraph$31768,w
 10581  0525  0008               	return
 10582  0526                     __end_of_isgraph:	
 10583  0526                     PL3:	
 10584  0526  00F2               	movwf	??_ATCommand_ProcRx
 10585  0527  087B               	movf	_ATCommand_RxCount,w
 10586  0528  3E8C               	addlw	140
 10587  0529  00F3               	movwf	??_ATCommand_ProcRx+1
 10588  052A  3021               	movlw	33
 10589  052B  1803               	skipnc
 10590  052C  3022               	movlw	34
 10591  052D  00F4               	movwf	??_ATCommand_ProcRx+2
 10592  052E  0873               	movf	??_ATCommand_ProcRx+1,w
 10593  052F  0086               	movwf	6
 10594  0530  0874               	movf	??_ATCommand_ProcRx+2,w
 10595  0531  0087               	movwf	7
 10596  0532  0872               	movf	??_ATCommand_ProcRx,w
 10597  0533  0081               	movwf	1
 10598  0534  0AFB               	incf	_ATCommand_RxCount,f
 10599  0535  3064               	movlw	100
 10600  0536  027B               	subwf	_ATCommand_RxCount,w
 10601  0537  0008               	return
 10602  0538                     __ptext1973:	
 10603 ;; =============== function _OneWire_Command ends ============
 10604                           
 10605                           
 10606 ;; *************** function _ATCommand_WaitData *****************
 10607 ;; Defined at:
 10608 ;;		line 125 in file "F:\work\WYP\NBIoT\ATCommand.c"
 10609 ;; Parameters:    Size  Location     Type
 10610 ;;		None
 10611 ;; Auto vars:     Size  Location     Type
 10612 ;;  strx            2   20[BANK0 ] PTR unsigned char 
 10613 ;;		 -> ATCommand_RxList(100), RAM(128), 
 10614 ;;  res             1   19[BANK0 ] unsigned char 
 10615 ;; Return value:  Size  Location     Type
 10616 ;;                  1    wreg      unsigned char 
 10617 ;; Registers used:
 10618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10619 ;; Tracked objects:
 10620 ;;		On entry : 1F/0
 10621 ;;		On exit  : 1F/0
 10622 ;;		Unchanged: FFFE0/0
 10623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10624 ;;      Params:         0       0       0       0       0       0       0       0
 10625 ;;      Locals:         0       3       0       0       0       0       0       0
 10626 ;;      Temps:          0       2       0       0       0       0       0       0
 10627 ;;      Totals:         0       5       0       0       0       0       0       0
 10628 ;;Total ram usage:        5 bytes
 10629 ;; Hardware stack levels used:    1
 10630 ;; Hardware stack levels required when called:    5
 10631 ;; This function calls:
 10632 ;;		_strstr
 10633 ;;		_strcpy
 10634 ;; This function is called by:
 10635 ;;		_InteractServer
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638  0538                     _ATCommand_WaitData:	
 10639                           
 10640                           ;ATCommand.c: 126: unsigned char res=0;
 10641                           
 10642                           ; Regs used in _ATCommand_WaitData: [wreg-status,0+pclath+cstack]
 10643  0538  01B3               	clrf	ATCommand_WaitData@res
 10644                           
 10645                           ;ATCommand.c: 128: res=ATACK_Null;
 10646  0539  01B3               	clrf	ATCommand_WaitData@res
 10647                           
 10648                           ;ATCommand.c: 129: ATCommand_Flags.bRx=0;
 10649  053A  10FA               	bcf	_ATCommand_Flags,1
 10650                           
 10651                           ;ATCommand.c: 130: ATCommand_Flags.bChar=0;
 10652  053B  107A               	bcf	_ATCommand_Flags,0
 10653                           
 10654                           ;ATCommand.c: 131: ATCommand_WaitACKTick=SystemTick;
 10655  053C  085D               	movf	_SystemTick+1,w
 10656  053D  00D3               	movwf	_ATCommand_WaitACKTick+1
 10657  053E  085C               	movf	_SystemTick,w
 10658  053F  00D2               	movwf	_ATCommand_WaitACKTick
 10659                           
 10660                           ;ATCommand.c: 132: ATCommand_RxCount=0;
 10661  0540  01FB               	clrf	_ATCommand_RxCount
 10662                           
 10663                           ;ATCommand.c: 133: ATCommand_Flags.bWaitData=1;
 10664  0541  157A               	bsf	_ATCommand_Flags,2
 10665                           
 10666                           ;ATCommand.c: 134: ATCommand_RxList[ATCommand_RxCount]='\0';
 10667  0542  258F               	fcall	PL2	;call to abstracted procedure
 10668  0543                     l32874:	
 10669                           
 10670                           ;ATCommand.c: 136: {
 10671                           ;ATCommand.c: 137: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
 10672  0543  308C               	movlw	140
 10673  0544  00AD               	movwf	?_strstr
 10674  0545  3021               	movlw	33
 10675  0546  00AE               	movwf	?_strstr+1
 10676  0547  30C4               	movlw	_ATCommand_OkString& (0+255)
 10677  0548  00AF               	movwf	?_strstr+2
 10678  0549  01B0               	clrf	?_strstr+3
 10679  054A  318A  22E9  3184   	fcall	_strstr
 10680  054D  082E               	movf	?_strstr+1,w
 10681  054E  00B5               	movwf	ATCommand_WaitData@strx+1
 10682  054F  082D               	movf	?_strstr,w
 10683  0550  00B4               	movwf	ATCommand_WaitData@strx
 10684                           
 10685                           ;ATCommand.c: 138: if(strx!=0)
 10686  0551  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10687  0552  1903               	skipnz
 10688  0553  2D57               	goto	l32882
 10689                           
 10690                           ;ATCommand.c: 139: {
 10691                           ;ATCommand.c: 140: res=ATACK_OK;
 10692  0554  01B3               	clrf	ATCommand_WaitData@res
 10693  0555  0AB3               	incf	ATCommand_WaitData@res,f
 10694  0556  2D6A               	goto	l32888
 10695  0557                     l32882:	
 10696                           ;ATCommand.c: 142: break;
 10697                           
 10698                           ;ATCommand.c: 141: ATCommand_Flags.bRx=1;
 10699                           
 10700                           
 10701                           ;ATCommand.c: 144: else
 10702                           ;ATCommand.c: 145: {
 10703                           ;ATCommand.c: 146: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
 10704  0557  308C               	movlw	140
 10705  0558  00AD               	movwf	?_strstr
 10706  0559  3021               	movlw	33
 10707  055A  00AE               	movwf	?_strstr+1
 10708  055B  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10709  055C  00AF               	movwf	?_strstr+2
 10710  055D  01B0               	clrf	?_strstr+3
 10711  055E  318A  22E9  3184   	fcall	_strstr
 10712  0561  082E               	movf	?_strstr+1,w
 10713  0562  00B5               	movwf	ATCommand_WaitData@strx+1
 10714  0563  082D               	movf	?_strstr,w
 10715  0564  00B4               	movwf	ATCommand_WaitData@strx
 10716                           
 10717                           ;ATCommand.c: 147: if(strx!=0)
 10718  0565  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10719  0566  1903               	skipnz
 10720  0567  2D6C               	goto	l32890
 10721                           
 10722                           ;ATCommand.c: 148: {
 10723                           ;ATCommand.c: 149: res=ATACK_Err;
 10724  0568  3002               	movlw	2
 10725  0569  00B3               	movwf	ATCommand_WaitData@res
 10726  056A                     l32888:	
 10727                           
 10728                           ;ATCommand.c: 150: ATCommand_Flags.bRx=1;
 10729  056A  14FA               	bsf	_ATCommand_Flags,1
 10730                           
 10731                           ;ATCommand.c: 151: break;
 10732  056B  2D79               	goto	l15052
 10733  056C                     l32890:	
 10734                           
 10735                           ;ATCommand.c: 152: }
 10736                           ;ATCommand.c: 153: }
 10737                           ;ATCommand.c: 154: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
 10738  056C  0852               	movf	_ATCommand_WaitACKTick,w
 10739  056D  025C               	subwf	_SystemTick,w
 10740  056E  00B1               	movwf	??_ATCommand_WaitData
 10741  056F  0853               	movf	_ATCommand_WaitACKTick+1,w
 10742  0570  3B5D               	subwfb	_SystemTick+1,w
 10743  0571  00B2               	movwf	??_ATCommand_WaitData+1
 10744  0572  0255               	subwf	_ATCommand_WaitACKTimes+1,w
 10745  0573  1D03               	skipz
 10746  0574  2D77               	goto	u7935
 10747  0575  0831               	movf	??_ATCommand_WaitData,w
 10748  0576  0254               	subwf	_ATCommand_WaitACKTimes,w
 10749  0577                     u7935:	
 10750  0577  1803               	skipnc
 10751  0578  2D43               	goto	l32874
 10752  0579                     l15052:	
 10753                           
 10754                           ;ATCommand.c: 156: }
 10755                           ;ATCommand.c: 157: ATCommand_Flags.bWaitData=0;
 10756  0579  117A               	bcf	_ATCommand_Flags,2
 10757                           
 10758                           ;ATCommand.c: 158: strcpy(ATCommand_OkString,"OK");
 10759  057A  303F               	movlw	low (STR_31| (0+32768))
 10760  057B  00A0               	movwf	?_strcpy
 10761  057C  3091               	movlw	high (STR_31| (0+32768))
 10762  057D  00A1               	movwf	?_strcpy+1
 10763  057E  30C4               	movlw	_ATCommand_OkString& (0+255)
 10764  057F  318D  25F9  3184   	fcall	_strcpy
 10765                           
 10766                           ;ATCommand.c: 159: strcpy(ATCommand_ErrString,"ERROR");
 10767  0582  3026               	movlw	low (STR_20| (0+32768))
 10768  0583  00A0               	movwf	?_strcpy
 10769  0584  3091               	movlw	high (STR_20| (0+32768))
 10770  0585  00A1               	movwf	?_strcpy+1
 10771  0586  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10772  0587  318D  25F9         	fcall	_strcpy
 10773                           
 10774                           ;ATCommand.c: 160: ATCommand_Clear='\0';
 10775  0589  01F9               	clrf	_ATCommand_Clear
 10776                           
 10777                           ;ATCommand.c: 162: ATCommand_WaitACKTimes=50;
 10778  058A  3032               	movlw	50
 10779  058B  00D4               	movwf	_ATCommand_WaitACKTimes
 10780  058C  01D5               	clrf	_ATCommand_WaitACKTimes+1
 10781                           
 10782                           ;ATCommand.c: 163: return res;
 10783  058D  0833               	movf	ATCommand_WaitData@res,w
 10784  058E  0008               	return
 10785  058F                     __end_of_ATCommand_WaitData:	
 10786  058F                     PL2:	
 10787  058F  087B               	movf	_ATCommand_RxCount,w
 10788  0590  3E8C               	addlw	140
 10789  0591  0086               	movwf	6
 10790  0592  3021               	movlw	33
 10791  0593  1803               	skipnc
 10792  0594  3022               	movlw	34
 10793  0595  0087               	movwf	7
 10794  0596  0181               	clrf	1
 10795  0597  0008               	return
 10796                           
 10797                           	psect	text2027
 10798  0000                     __ptext2027:	
 10799 ;; =============== function _isgraph ends ============
 10800                           
 10801  007E                     btemp	set	126	;btemp
 10802  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Thu Apr 18 18:45:43 2019

              ___bmul@product 0021                            _RD 0CA8                            _WA 3C94  
                          _WR 0CA9           ___wmul@multiplicand 0022                           _GIE 005F  
                         _RB1 0069                           _RB2 006A                           _RB7 006F  
                         _CSQ 0061                           _RD6 007E                           _PR2 001B  
     __end_of_TCN75_SetConfig 0FEB             DS18X20_ReadMeas@i 002B              SimI2C_SendByte@i 0022  
            SimI2C_SendByte@t 0021                           wreg 0009         ATCommand_WaitData@res 0033  
                 ?_TCN75_Init 0070                          l2110 0371                          l2102 0365  
                        l2201 03FE                          l2121 0386                          l2113 037A  
                        l2105 036E                          l2210 0406                          l2202 03FA  
                        l2130 038E                          l2122 0382                          l2114 0376  
                        l2106 036A                          l2050 0316                          l2301 02FC  
                        l2214 040D                          l2206 0401                          l2150 03AD  
                        l2142 03A1                          l2134 0395                          l2126 0389  
                        l2118 037D                          l2070 0335                          l2062 0329  
                        l2054 031D                          l2046 0311                          l2310 0305  
                        l2231 02A7                          l2304 02FF                          l2240 02B0  
                        l2209 040A                          l2161 03C2                          l2153 03B6  
                        l2145 03AA                          l2137 039E                          l2129 0392  
                        l2081 034A                          l2073 033E                          l2065 0332  
                        l2057 0326                          l2049 031A                          l2313 0308  
                        l2225 02A1                          l2218 0412                          l2170 03CA  
                        l2162 03BE                          l2154 03B2                          l2146 03A6  
                        l2138 039A                          l2090 0352                          l2082 0346  
                        l2074 033A                          l2066 032E                          l2058 0322  
                        l2234 02AA                          l2322 0000                          l2307 0302  
                        l2243 02B3                          l2316 030B                          l2260 02CA  
                        l2252 02BC                          l2228 02A4                          l2237 02AD  
                        l2333 0EA9                          l2190 03E9                          l2182 03DD  
                        l2174 03D1                          l2166 03C5                          l2158 03B9  
                        l2094 0359                          l2086 034D                          l2078 0341  
                        l2246 02B6                          l2326 0EA1                          l2342 041B  
                        l2263 02CD                          l2272 02D6                          l2336 0000  
                        l2193 03F2                          l2185 03E6                          l2177 03DA  
                        l2169 03CE                          l2097 0362                          l2089 0356  
                        l2281 02DF                          l2257 02C7                          l2249 02B9  
                        l2329 0EA5                          l2345 0000                          l2194 03EE  
                        l2186 03E2                          l2178 03D6                          l2098 035E  
                        l2266 02D0                          l2275 02D9                          l2339 0417  
                        l2348 0000                          l2292 02F3                          l2284 02E2  
                        l2269 02D3                          l2198 03F5                          l2286 02E4  
                        l2278 02DC                          l2295 02F6                          l2289 02F0  
                        l2298 02F9                          l4413 0000                          l4421 00FE  
                        l4424 0108                          l4409 0000                          l4417 00F9  
                        l4429 0000                          l6502 0885                          l6525 090E  
                        l6526 08E8                          l6539 0000                          l8630 0000  
                        l8703 0C21                          l8633 0E34                          l8642 0E3E  
                        l8660 0E66                          l8636 0E38                          l8646 0E44  
                        l8663 0E69                          l8639 0E3B                          l8736 0000  
                        l8657 0E62                          l8649 0E48                          l8666 0E6C  
                        l8684 0B6E                          l8677 094B                          STR_1 1066  
                        STR_2 1022                          STR_3 10BB                          STR_4 1046  
                        STR_5 108E                          STR_6 10E7                          STR_7 1131  
                        STR_8 112C                          STR_9 108E                          _CREN 0CEC  
                        u4025 021E                          u4085 0098                          u4335 0FAA  
                        _PEIE 005E                          _SEG3 3CC3                          _SEG5 3CC5  
                        _SEG6 3CC6                          u7115 0E87                          _RCIE 048D  
                        _RCIF 008D                          u7075 0E24                          u9007 0AE3  
                        u9017 01C2                          _OERR 0CE9                          u9027 01CB  
                        u8235 0B6B                          u4964 0083                          u9037 01D6  
                        u4965 0082                          u4984 00CD                          u7545 0EB3  
                        u4985 00CC                          u8265 0BAF                          u8445 0D10  
                        u7935 0577                          u7875 0AB3                          u8895 0896  
                        u8967 0865                          u8977 0251                          u8987 00E2  
                        u8997 0077                          _WERR 3C8D                          _TRMT 0CF1  
                        _WREN 0CAA                ??_eeprom_write 0021                 _SimI2C_RecAck 0497  
                        _atoi 0598                          _main 0849                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               ?_SimI2C_NoAck 0070                          start 0029                 ??_SimI2C_Init 0020  
               ?_SimI2C_Start 0070                 ??_SimI2C_Stop 0020             ___bmul@multiplier 0022  
      ATCommand_WaitData@strx 0034               __end_of_InitMCU 019B                  InitGPRS@strx 003C  
               ?_InitVariable 0070         __end_of_LcdDisplayAll 030E         __end_of_LcdDisplayNum 0417  
                  _GetRomData 01F5               __end_of_PowerON 1000           __end_of_DisplayInit 015D  
                       l15020 0000                         l21254 0000                         l21263 0000  
                       l10839 0282                         l21272 0000                         l15040 0AB5  
                       l31050 0000                         l31052 0000                         l31044 0000  
                       l15052 0579                         l32110 030E                         l31054 0000  
                       l31070 0000                         l31062 0000                         l15038 0A81  
                       l15047 0000                         l32200 0000                         l30600 0215  
                       l31056 0087                         l31072 0000                         l15057 0000  
                       l32202 0000                         l32210 0000                         l30602 0229  
                       l31090 0000                         l31082 00DF                         l31074 0000  
                       l33010 0000                         l32204 0000                         l32220 0000  
                       l32212 0000                         l31084 0000                         l31076 0000  
                       l31068 00C8                         l33020 0000                         l33004 09A5  
                       l33100 0000                         l32206 0000                         l32230 0000  
                       l32222 0000                         l32214 0000                         l23326 0DD4  
                       l30630 0000                         l30622 0000                         l31086 0000  
                       l31078 0000                         l33030 0000                         l33022 0000  
                       l33110 0B48                         l32160 0000                         l32240 0000  
                       l32232 0000                         l32224 0000                         l32216 0000  
                       l32208 0000                         l32320 0000                         l32304 0D97  
                       l30640 0000                         l30632 00AC                         l30624 00A3  
                       l32400 0000                         l31088 0000                         l33040 0000  
                       l33032 09AE                         l33200 0C4C                         l33120 0B56  
                       l33104 0000                         l23329 0000                         l23345 0D6C  
                       l32170 0000                         l32162 0000                         l32250 0000  
                       l32242 0000                         l32234 0000                         l32226 0000  
                       l32218 0000                         l32314 0DA6                         l32330 0000  
                       l30642 0000                         l30634 0000                         l30626 0000  
                       l30618 0000                         l32402 0E2F                         l30810 0000  
                       l30802 0000                         l23338 0DDC                         l33034 09E8  
                       l33018 09CC                         l33202 0000                         l33130 0000  
                       l33122 0000                         l33114 0000                         l33106 0000  
                       l32180 0000                         l32172 0000                         l32164 0000  
                       l32156 0000                         l32260 0000                         l32252 0000  
                       l32244 0000                         l32236 0000                         l32228 0000  
                       l30636 0000                         l30628 0000                         l30644 0092  
                       l32420 0000                         l30804 0000                         l32500 0000  
                       l23356 0000                         l33044 0000                         l33028 09A8  
                       l33220 0000                         l33212 0C66                         l33204 0000  
                       l33300 0CE9                         l33124 0000                         l12949 0000  
                       l32190 0000                         l32182 0000                         l32174 0000  
                       l32166 0000                         l32158 0000                         l32262 0000  
                       l32254 0000                         l32246 0000                         l32238 0000  
                       l32270 0000                         l32326 0DB9                         l30590 0000  
                       l30646 00B8                         l30638 0000                         l32334 022B  
                       l32350 0DEF                         l32414 0E81                         l32422 0E91  
                       l32406 0000                         l32430 0000                         l30814 0FB7  
                       l30806 0FA7                         l32502 0000                         l33046 0000  
                       l33054 0A23                         l33062 09ED                         l33302 0CEA  
                       l33222 0000                         l33214 0000                         l33206 0000  
                       l33134 0B8C                         l33150 0BB2                         l32192 0000  
                       l32184 0000                         l32176 0000                         l32168 0000  
                       l32256 0000                         l32248 0000                         l32280 0000  
                       l30592 0DFB                         l32344 060A                         l32336 0000  
                       l30664 0000                         l30672 0000                         l32440 0000  
                       l32432 0F76                         l30816 0000                         l30808 0000  
                       l32504 0000                         l12896 0AD5                         l33080 0A45  
                       l33072 0A34                         l33056 0000                         l33064 0A2A  
                       l33048 0000                         l33240 0000                         l33216 0000  
                       l33160 0000                         l33144 0B9A                         l33128 0000  
                       l33400 0000                         l32194 0000                         l32186 0000  
                       l32178 0000                         l32258 0000                         l32274 0000  
                       l32266 0000                         l25402 0000                         l30594 0000  
                       l32338 0000                         l30666 0F05                         l30682 0F4E  
                       l30690 0000                         l32370 0614                         l32418 0E8D  
                       l32442 0F83                         l32426 0000                         l32450 0000  
                       l32506 0000                         l32522 0000                         l32514 01F6  
                       l30930 0000                         l32602 0B16                         l32610 0000  
                       l33082 0000                         l33090 0A36                         l33330 0000  
                       l33314 0CFB                         l33250 0000                         l33242 0000  
                       l33170 0000                         l33146 0000                         l33138 0000  
                       l33402 0000                         l12899 0000                         l32196 0000  
                       l32188 0000                         l32276 0000                         l32268 0000  
                       l32292 0D87                         l32284 0000                         l25412 0000  
                       l30684 0F20                         l30692 0000                         l32356 0000  
                       l32348 0000                         l32372 0000                         l32364 0000  
                       l32380 0000                         l32444 0000                         l32436 0000  
                       l32428 0000                         l32460 0000                         l32524 0000  
                       l32516 0000                         l32508 0000                         l32540 0000  
                       l30940 0000                         l30932 0000                         l32620 0000  
                       l32612 05A0                         l32700 0000                         l33092 0A5D  
                       l33340 0000                         l33332 0000                         l33324 0D1A  
                       l33316 0000                         l33308 0000                         l33252 0000  
                       l33236 0C83                         l33228 0C7C                         l33164 0000  
                       l33156 0BBC                         l33148 0000                         l33412 0000  
                       l33500 0000                         l32198 0000                         l32278 0000  
                       l32286 0000                         l30598 0000                         l30686 0F55  
                       l30678 0F3F                         l32358 0000                         l32374 0000  
                       l32366 060E                         l32390 0E1C                         l32382 0000  
                       l32446 0F86                         l32462 02E6                         l32454 0000  
                       l32470 0000                         l32518 0000                         l32550 0000  
                       l30942 0000                         l30934 0000                         l30950 01B6  
                       l32606 0B21                         l32614 0598                         l32702 01EC  
                       l32710 0000                         l33342 0000                         l33334 0000  
                       l33318 0000                         l33238 0000                         l33262 0C7E  
                       l33190 0C47                         l33182 0C38                         l33166 0BC6  
                       l33158 0000                         l33174 0C1B                         l33350 0B27  
                       l33422 0000                         l33414 0000                         l33406 093F  
                       l33502 0000                         l33510 0000                         l32392 0000  
                       l32456 02C0                         l32472 0000                         l32480 0000  
                       l32536 0000                         l32552 0000                         l30952 01E1  
                       l30936 0000                         l32560 0000                         l32640 05F9  
                       l32632 05C1                         l32624 05B9                         l32616 05A4  
                       l32704 0000                         l32712 0000                         l32800 0000  
                       l33088 0000                         l33352 0D4B                         l33336 0000  
                       l33272 0CB9                         l33256 0000                         l33248 0C9D  
                       l33264 0CB3                         l33176 0000                         l33168 0BD0  
                       l33328 0D1D                         l33424 0000                         l33408 0948  
                       l33432 0000                         l33504 0E75                         l33520 0273  
                       l33600 0000                         l25409 00B1                         l32298 0000  
                       l32466 0000                         l32458 0000                         l32474 0000  
                       l32490 0000                         l32482 0000                         l32546 023A  
                       l32538 0000                         l32554 0000                         l30946 01DE  
                       l30938 0000                         l32570 0000                         l32562 0000  
                       l32634 05EA                         l32626 05E6                         l32706 0000  
                       l32730 0000                         l32810 0000                         l32802 0000  
                       l33338 0000                         l33274 0000                         l33258 0000  
                       l33178 0000                         l33098 0000                         l33362 08F1  
                       l33426 0000                         l33450 0107                         l33442 0102  
                       l33434 0000                         l33522 0276                         l33514 0000  
                       l33506 0000                         l33610 0000                         l33602 0000  
                       l32396 0000                         l32468 0000                         l32492 0000  
                       l32484 0000                         l32476 0E96                         l32548 0000  
                       l32556 0000                         l32564 0000                         l32572 0000  
                       l32636 0000                         l32644 0000                         l32660 0000  
                       l32652 0000                         l32708 0000                         l32724 0000  
                       l32716 0000                         l32804 0000                         l32900 0000  
                       l33348 0000                         l33292 0000                         l33284 0CD3  
                       l33276 0000                         l33364 08F4                         l33356 0000  
                       l33428 0000                         l33460 0000                         l33452 0111  
                       l33444 0000                         l33436 0000                         l33532 0000  
                       l33524 0000                         l33516 0000                         l33620 0000  
                       l33612 0000                         l33540 0000                         l32398 0E2B  
                       l32494 0000                         l32486 0000                         l32558 0000  
                       l32590 0D68                         l32582 0000                         l32574 0000  
                       l32654 0000                         l32646 0000                         l32662 0000  
                       l32718 0000                         l32734 0FBE                         l32750 0000  
                       l32742 0000                         l32822 0AA6                         l32806 0000  
                       l33294 0000                         l33286 0000                         l33278 0000  
                       l33374 0907                         l33366 0000                         l33390 0000  
                       l33470 0000                         l33462 0000                         l33438 0000  
                       l33526 0000                         l33534 0288                         l33622 08DB  
                       l33550 0000                         l33542 0000                         l32488 0000  
                       l32496 0EE3                         l32584 0000                         l32664 0000  
                       l32672 0000                         l32736 0FE6                         l32744 0000  
                       l32840 0000                         l32832 0AB9                         l32824 0AA8  
                       l32816 0A94                         l32808 0000                         l32912 0000  
                       l32904 0000                         l33288 0000                         l33376 090A  
                       l33392 0000                         l33464 0000                         l33456 0000  
                       l33472 0122                         l33536 0000                         l33528 0000  
                       l33624 0000                         l33616 0000                         l33608 08C2  
                       l33560 0000                         l33552 0000                         l33544 0000  
                       l32498 0000                         l32586 0000                         l32578 0D58  
                       l32594 0000                         l32658 0000                         l32666 0000  
                       l32682 0000                         l32674 0000                         l32690 0000  
                       l32738 0000                         l32770 0000                         l32762 0000  
                       l32842 0000                         l32834 0000                         l32818 0000  
                       l32850 0000                         l33298 0CB4                         l33378 0000  
                       l33394 0000                         l33474 0000                         l33466 0000  
                       l33458 0000                         l33490 0000                         l33482 0E4B  
                       l33538 0000                         l33626 08DE                         l33570 0874  
                       l33554 0000                         l33546 0000                         l32596 0AEA  
                       l32668 0000                         l32684 0000                         l32692 0000  
                       l32780 0000                         l32772 0000                         l32764 0000  
                       l32756 0000                         l32748 0000                         l32844 0000  
                       l32828 0000                         l32836 0A68                         l32852 0000  
                       l32860 0000                         l32916 0000                         l32940 0000  
                       l33388 092C                         l33396 0000                         l33476 0000  
                       l33468 0000                         l33492 0E4F                         l33580 0000  
                       l33564 0000                         l33556 085E                         l33548 0000  
                       l27510 0DBC                         l19174 0000                         l32598 0000  
                       l32686 0000                         l32694 0000                         l32774 0000  
                       l32846 0000                         l32838 0AC0                         l32790 0000  
                       l32870 0000                         l32862 0000                         l32950 0000  
                       l32926 0000                         l33398 0000                         l33494 0000  
                       l33486 0000                         l33478 0000                         l33590 0000  
                       l33582 0000                         l33566 0000                         l27512 0000  
                       l19192 0065                         l32696 0000                         l32776 0444  
                       l32784 0000                         l32792 0000                         l32872 0000  
                       l32864 0000                         l33496 0000                         l33488 0000  
                       l33592 0000                         l33584 0000                         l33576 088A  
                       l33568 0000                         l32778 0472                         l32786 0000  
                       l32794 0000                         l32858 0000                         l32890 056C  
                       l32882 0557                         l32874 0543                         l32866 0000  
                       l32946 0043                         l32970 0000                         l33498 0E59  
                       l33594 0000                         l33586 0000                         l27531 0000  
                       l19195 0000                         l27532 0EE6                         l32788 0000  
                       l32884 0000                         l32876 0000                         l32868 0000  
                       l32948 0000                         l32964 005A                         l32980 097E  
                       l32972 0000                         l19189 0000                         l27606 0000  
                       l32798 0000                         l32894 0000                         l32974 0000  
                       l33598 08B9                         l27623 0F7B                         l27616 0000  
                       l27632 0000                         l27472 0000                         l32896 0000  
                       l32888 056A                         l27481 0000                         l27626 0000  
                       l27490 0488                         l32898 0000                         l32994 0000  
                       l32986 098A                         l27491 0000                         l27475 0000  
                       l27484 0000                         l32996 098C                         l27469 0000  
                       l27558 0000                         l27590 0000                         l27478 0000  
                       l27494 04BD                         l32998 099F                         l27487 0479  
                       l27569 0000                         l27489 0486                         l27497 0000  
                       l27596 0000                         l27925 0F58                         l27934 0000  
                       ?_atoi 0026                         ?_main 0070               __end_of___lbdiv 0F88  
                       STR_10 10F9                         STR_11 1131                         STR_12 112C  
                       STR_20 1126                         STR_21 1142                         STR_13 107D  
                       STR_22 113B                         STR_30 10D2                         STR_14 10AE  
                       STR_31 113F                         STR_23 111A                         STR_15 109E  
                       STR_32 1126                         STR_24 1102                         STR_16 10F0  
                       STR_33 1142                         STR_17 1131                         STR_25 10DD  
                       STR_18 112C                         STR_34 113F                         STR_26 1136  
                       STR_35 1126                         STR_19 1113                         STR_27 110B  
                       STR_36 113F                         STR_28 1120                         STR_37 1126  
                       STR_29 10C7               __end_of___lbmod 0FBB                         _CARRY 0018  
                       _ICCID 00A0                         _LCDEN 3C8F                         _T1CON 0018  
                       _T2CON 001C                         _LATB1 0869                         _LATA3 0863  
                       _LATA4 0864                         _LATD5 087D                         _LATD6 087E  
                       _LATD7 087F                         _LCDRL 0795                         _LCDPS 0792  
             __end_of___lwdiv 0E34                         _SEG11 3CCB                         _SEG21 3CD5  
                       _SEG22 3CD6                         _SEG23 3CD7                         _SEG16 3CD0  
             __end_of___lwmod 0E96                         _RCREG 0199                         _RCSTA 019D  
                       _TMR1H 0017                         _TMR1L 0016                         _SPBRG 019B  
                  _TListIndex 0064               _OneWire_Command 00BA                         _WPUB7 106F  
              _LcdDisplay_CSQ 0F88                         _TXREG 019A                         _TXSTA 019E  
              _LcdDisplay_Err 0417                         _TList 0120               __end_of_highISR 0029  
             __end_of_isdigit 060C             OneWire_ReadByte@b 0021             OneWire_ReadByte@i 0023  
             __end_of_isgraph 0526                         atoi@a 002D                         atoi@s 0026  
                       main@i 004D  __size_of_Uart1_PutString_Hex 0010               InteractServer@i 0045  
             InteractServer@j 0043               InteractServer@k 0044                ?_SimI2C_RecAck 0070  
             InteractServer@t 0040              __end_of_CallSend 0970              __end_of_CallProc 0E76  
               Uart1_PutHex@b 0022                 Uart1_PutHex@c 0021                ??_SimI2C_NoAck 0020  
                       status 0003                         wtemp0 007E               __end_of_strncmp 0F58  
             ___lbdiv@divisor 0020                ??_SimI2C_Start 0020        __size_of_TCN75_ReadReg 0036  
             ___lbdiv@counter 0022                    _SimI2C_Ack 04D5                   InitSystem@x 002D  
                __end_of_atoi 05FE                  __end_of_main 08E3                ??_InitVariable 0028  
            __end_of_InitGPRS 0A63           __size_of_TCN75_Init 0001                    _InitSystem 00EF  
     __size_of_GetVerify_CRC8 002C           __end_of_SimI2C_Init 0232                 InitGPRS@retry 003E  
         __end_of_SimI2C_Stop 04F2                 ??_SaveRomData 0027                        ??_atoi 0028  
                      ??_main 004A        __end_of_LcdDisplay_CSQ 0FA3           GetVerify_CRC8@Count 0020  
      __end_of_LcdDisplay_Err 0437           GetVerify_CRC8@pBuff 0023              ?_TCN75_SetConfig 0070  
            __end_of_TestProc 0296                        _ADCON1 009E                        _EEADRL 0191  
                      _EEDATA 0193                        _EECON1 0195                        _EECON2 0196  
              _ATCommand_Init 019B                _TxErrDataIndex 0068                        _ANSELA 018C  
                      _ANSELB 018D                        _ANSELD 018F                        _ANSELE 0190  
                      _LCDCON 0791                        _LCDSE0 0798                        _LCDCST 0794  
                      _LCDSE1 0799                        _LCDSE2 079A        __size_of_OneWire_Reset 0031  
                      _LCDREF 0793        OneWire_Command@command 0024             ?_DS18X20_ReadMeas 0070  
          __size_of_ReadTData 004A                        _TMR1IE 0488                        _TMR1IF 0088  
                      _TMR2IE 0489                        _TMR2IF 0089                        _TMR1ON 00C0  
                      _TMR2ON 00E2                        _TRISB1 0469                        _TRISA3 0463  
                      _TRISB2 046A                        _TRISA4 0464                        _TRISB7 046F  
                      _TRISD4 047C                        _TRISC6 0476                        _TRISD5 047D  
                      _TRISC7 0477                        _TRISD6 047E                        _TRISD7 047F  
          ??_DS18X20_ReadMeas 002A   __size_of_ATCommand_WaitData 0057                     ??_InitMCU 0020  
                      _DpyNum 0069              _OneWire_ReadByte 0062          __size_of_eeprom_read 0017  
                      _gFlags 0065                   _DisplayInit 0130                     ??_PowerON 0024  
                      _nWPUEN 04AF                        ___bmul 0DED         __end_of_GetVerify_Sum 022B  
                      ___wmul 060C             ?_ATCommand_ProcRx 0070                     ??___lbdiv 0021  
                   ??___lbmod 0021               _SimI2C_ReadByte 04B5                     ??___lwdiv 0024  
                   ??___lwmod 0024       __end_of_OneWire_Command 00C6                   ?_GetRomData 0070  
          ??_ATCommand_ProcRx 0072               _SimI2C_SendByte 0476          __end_of_eeprom_write 0F01  
                   ??_highISR 0076               ?_LcdDisplay_CSQ 0070                        _strchr 0F58  
                      clrloop 0622                        _strcpy 0DF9                        _strlen 0F01  
                      _strstr 0AE9               ?_LcdDisplay_Err 0070                 _TCN75_ReadReg 0440  
         SimI2C_SendByte@data 0020                     ??_isdigit 0020                     ??_isgraph 0070  
      __end_of_ATCommand_Init 01B2           __end_of_SaveRomData 024B                Uart1_PutChar@c 0020  
              GetVerify_Sum@i 0026               ??_SimI2C_RecAck 0020         InteractServer@i_10580 003A  
       InteractServer@i_10575 0038         InteractServer@j_10587 003C                     ??_strncmp 002C  
            ___lbdiv@dividend 0021    __end_of_LcdDisplay_CurTemp 0EE5                 ?_Uart1_PutHex 0070  
        _ATCommand_RetryTimes 0060    Uart1_PutString_Hex@pString 0023               ___lbmod@divisor 0020  
             ___lbmod@counter 0023               eeprom_read@addr 0022         TCN75_ReadReg@ErrTimes 0024  
       TCN75_ReadReg@RegPoint 0023            ATCommand_ProcRx@rx 0075                   _SimI2C_Init 022B  
                 ?_SimI2C_Ack 0070           ___bmul@multiplicand 0020                   _SimI2C_Stop 04E8  
              __pcstackCOMMON 0070            MakeTxTemperature@T 0020            MakeTxTemperature@x 0022  
                __pidataBANK0 0000                   ?_InitSystem 0070                 _OneWire_Reset 01B2  
               _isdigit$31765 0020               _MeasurementTick 0058              ___lbdiv@quotient 0023  
           __end_of_ReadTData 092D                ?_TCN75_ReadReg 0070          __end_of_SimI2C_NoAck 04E8  
                   ?_CallSend 0070                     ?_CallProc 0070          __end_of_SimI2C_Start 04B5  
                  _SystemTick 005C             eeprom_write@value 0020               ?_ATCommand_Init 0070  
                ??_TCN75_Init 0020                ??_Uart1_PutHex 0021          __end_of_InitVariable 01F5  
          OneWire_Reset@Retry 0021       __size_of_InteractServer 0229                    __pbssBANK0 004E  
                  __pbssBANK1 00A0                    __pbssBANK2 0120                     ?_InitGPRS 0070  
    __size_of_Uart1_PutString 0011           __size_of_GetRomData 001D        __size_of_Uart1_PutChar 000A  
     __end_of_SimI2C_ReadByte 04D5                    __pmaintext 0849       __end_of_SimI2C_SendByte 0497  
                   ?_TestProc 0070                       ?___bmul 0020                ?_OneWire_Reset 0070  
                     ?___wmul 0020                _GetVerify_CRC8 008E                    __pintentry 0004  
          __end_of_TCN75_Init 01E4              ?_OneWire_Command 0070           _Uart1_PutString_Hex 0D6C  
                  __ptext2000 0E96                    __ptext2001 0F88                    __ptext2010 0F20  
                  __ptext2002 0296                    __ptext2011 0F01                    __ptext2003 0FA3  
                  __ptext2020 0EE5                    __ptext2012 05FE                    __ptext2004 0F70  
                  __ptext2021 015D                    __ptext2013 022B                    __ptext2005 0E76  
                  __ptext2022 0130                    __ptext2014 008E                    __ptext2006 0E0F  
                  __ptext2023 030E                    __ptext2015 0212                    __ptext2007 060C  
                  __ptext2016 0DF9                    __ptext2008 0DED                    __ptext2025 04F2  
                  __ptext2017 0DBB                    __ptext2009 0F58                    __ptext2026 0518  
                  __ptext2018 0DD2                    __ptext2027 0000                    __ptext2019 0D7C  
             _ATCommand_Clear 0079                    __ptext1970 0033                    __ptext1971 002C  
                  __ptext1963 024B                    __ptext1980 04E8                    __ptext1972 00BA  
                  __ptext1964 0E34                    __ptext1981 04E1                    __ptext1973 0538  
                  __ptext1965 00EF                    __ptext1990 0AE9                    __ptext1982 04D5  
                  __ptext1974 0D6C                    __ptext1966 092D                    __ptext1991 0D4D  
                  __ptext1983 04B5                    __ptext1975 0A63                    __ptext1967 08E3  
                  __ptext1992 0DDC                    __ptext1984 0497                    __ptext1976 0FF0  
                  __ptext1968 0B24                    __ptext1993 0AD5                    __ptext1985 0476  
                  __ptext1977 0440                    __ptext1969 0970                    __ptext1994 01E3  
                  __ptext1986 04AB                    __ptext1978 0FBB                    __ptext1995 01B2  
                  __ptext1987 00C6                    __ptext1979 01E4                    __ptext1996 019B  
                  __ptext1988 0062                    __ptext1997 0232                    __ptext1989 0598  
                  __ptext1998 01F5                    __ptext1999 0417               _ATCommand_Flags 007A  
                 _SaveRomData 0232                       ?_strchr 0020                       ?_strcpy 0020  
                     ?_strlen 0020                       ?_strstr 002D                    ??_CallSend 0046  
                  ??_CallProc 0047                       i1l15025 04FF                       i1l30500 0000  
                     i1l30510 0000                       i1l30502 04FC                       i1l30512 0000  
                     i1l30504 04FD                       i1l30530 0000                       i1l30522 050C  
                     i1l30516 0508                       i1l30614 0524                       i1l30606 0000  
                     i1l30526 0000                       i1l30518 0509                       i1l30608 0000  
                     i1l30528 0000                       i1l30482 0012                       i1l30474 0000  
                     i1l30492 0000                       i1l30484 0000                       i1l30494 0000  
                     i1l30486 0018                       i1l30496 0000                       i1l27563 0000  
           _DS18X20_ToDecicel 1012           __size_of_SimI2C_Ack 000C                    __stringtab 1000  
        ?_Uart1_PutString_Hex 0023                    ??_InitGPRS 0039           __size_of_InitSystem 0041  
               _isgraph$31768 0070                       _CurTemp 0056                       _InitMCU 015D  
                     _SegCode 1001             _ATCommand_SendCmd 0A63        __end_of_GetVerify_CRC8 00BA  
                     _PowerON 0FF0                    ??_TestProc 0048             _ATCommand_RxCount 007B  
                     _RunTick 0077         __size_of_eeprom_write 001C             _DS18X20_StartMeas 002C  
             __size_of___bmul 000C                       ___lbdiv 0F70             _MakeTxTemperature 0D7C  
                     ___lbmod 0FA3            ?_ATCommand_SendCmd 0031               __size_of___wmul 0015  
                     ___lwdiv 0E0F                       ___lwmod 0E76                     _LCDDATA10 07AA  
                   _LCDDATA11 07AB               ??_TCN75_ReadReg 0023            ?_DS18X20_StartMeas 0070  
          ?_MakeTxTemperature 0020         _ATCommand_WaitACKTick 0052                       _highISR 0004  
             __size_of_strchr 0018               __size_of_strcpy 0016               __size_of_strlen 001F  
               _Uart1_PutChar 0DD2           ??_ATCommand_SendCmd 0033               __size_of_strstr 003B  
                     _isdigit 05FE           ??_DS18X20_StartMeas 0025                       _isgraph 0518  
    __end_of_OneWire_ReadByte 008E           ??_MakeTxTemperature 0022                     _SEG11COM0 3D0B  
                   _SEG11COM1 3D23                     _SEG11COM2 3D3B                     _SEG11COM3 3D53  
                   _SEG21COM0 3D15                     _SEG21COM1 3D2D                     _SEG21COM2 3D45  
                   _SEG21COM3 3D5D                     _SEG22COM0 3D16                     _SEG22COM1 3D2E  
                   _SEG22COM2 3D46                     _SEG22COM3 3D5E                     _SEG23COM0 3D17  
                   _SEG23COM1 3D2F                     _SEG23COM2 3D47                     _SEG23COM3 3D5F  
                   _SEG16COM0 3D10                     _SEG16COM1 3D28                     _SEG16COM2 3D40  
                   _SEG16COM3 3D58         ??_Uart1_PutString_Hex 0025                       _strncmp 0F20  
       TCN75_SetConfig@bRight 0024          end_of_initialization 0847               GetVerify_CRC8@i 0026  
      __size_of_LcdDisplayAll 0078        __size_of_LcdDisplayNum 0109                  _eeprom_write 0EE5  
           InteractServer@res 0037     __end_of_ATCommand_SendCmd 0AD5              ?_SimI2C_ReadByte 0070  
           _OneWire_WriteByte 00C6     __end_of_DS18X20_StartMeas 0033             ??_Uart1_PutString 0023  
             ??_OneWire_Reset 0020     __end_of_MakeTxTemperature 0DBB                  ?_DisplayInit 0070  
             ?_GetVerify_CRC8 0020              ?_SimI2C_SendByte 0070            ?_OneWire_WriteByte 0070  
            ??_LcdDisplay_CSQ 0025              ??_LcdDisplay_Err 0025         __size_of_SimI2C_NoAck 0007  
                __pstringtext 1000          __end_of_Uart1_PutHex 0D6C                  ??_GetRomData 0027  
   __size_of_DS18X20_ReadMeas 002F         __size_of_SimI2C_Start 000A                       strlen@s 0020  
         ??_OneWire_WriteByte 0020                ?_Uart1_PutChar 0070            OneWire_WriteByte@i 0023  
       __size_of_InitVariable 0011              ___lbmod@dividend 0022                 ?___delay_20ms 0020  
   __size_of_ATCommand_ProcRx 0026                _InteractServer 0B24                     InitGPRS@i 003B  
  __end_of_ATCommand_WaitData 058F      __size_of_TCN75_SetConfig 0030                   ___lbmod@rem 0024  
          __end_of_GetRomData 0212     __end_of_OneWire_WriteByte 00EF                 ??_eeprom_read 0020  
                _SimI2C_NoAck 04E1                  ?_SimI2C_Init 0070                  ??_SimI2C_Ack 0020  
                _SimI2C_Start 04AB                  ?_SimI2C_Stop 0070            _LcdDisplay_CurTemp 0E96  
                ??_InitSystem 002D                  SaveRomData@i 0027                __end_of___bmul 0DF9  
                _InitVariable 01E4                __end_of___wmul 0621                 _LcdDisplayAll 0296  
               _LcdDisplayNum 030E           ?_LcdDisplay_CurTemp 0070              ??_ATCommand_Init 0026  
              __end_of_strchr 0F70                __end_of_strcpy 0E0F                __end_of_strlen 0F20  
              __end_of_strstr 0B24                ??___delay_20ms 0022           start_initialization 080F  
                   _ReadTData 08E3             __size_of_CallSend 0043             __size_of_CallProc 0042  
      __end_of_InteractServer 0D4D            __end_of_SimI2C_Ack 04E1        __size_of_GetVerify_Sum 0019  
         _ATCommand_ErrString 00B5            GetVerify_CRC8@data 0025         __end_of_SimI2C_RecAck 04AB  
          __end_of_InitSystem 0130          ??_LcdDisplay_CurTemp 0025             __size_of_InitGPRS 00F3  
  GetVerify_CRC8@feedback_bit 0028    __size_of_ATCommand_SendCmd 0072    __size_of_DS18X20_StartMeas 0007  
                   _RomParams 0066    __size_of_MakeTxTemperature 003F          _TCN75_RegReadResualt 005E  
                    ??___bmul 0021                      ??___wmul 0024           __end_of_eeprom_read 0DD2  
                _TCN75_Config 0063                ?_LcdDisplayAll 0070                   __pdataBANK0 0069  
              ?_LcdDisplayNum 0070           _NeedMeasurementTick 005A             __size_of_TestProc 004B  
             ??_Uart1_PutChar 0020                  ?_SaveRomData 0070                      ??_strchr 0024  
                    ??_strcpy 0022                      ??_strlen 0022                      ??_strstr 0031  
                 __pbssBIGRAM 218C                   __pbssCOMMON 0077                    ?_ReadTData 0070  
               __pcstackBANK0 0020               ?_InteractServer 0070                OneWire_Reset@r 0022  
            eeprom_write@addr 0021    __size_of_OneWire_WriteByte 0029                      ?_InitMCU 0070  
       __size_of_Uart1_PutHex 001F              ___lwdiv@dividend 0022             ??_TCN75_SetConfig 0023  
                    ?_PowerON 0070                   CallSend@ret 0046                      ?___lbdiv 0020  
                    ?___lbmod 0020                 _GetVerify_Sum 0212                      ?___lwdiv 0020  
        __size_of_DisplayInit 002D                      ?___lwmod 0020              _DS18X20_ReadMeas 0033  
                    ?_highISR 0070                ReadTData@retry 002C                      ?_isdigit 0070  
                    ?_isgraph 0070      __size_of_OneWire_Command 000C             ?_OneWire_ReadByte 0070  
            _ATCommand_RxList 218C              _ATCommand_ProcRx 04F2              ___lwdiv@quotient 0025  
                    _LCDDATA0 07A0                      _LCDDATA1 07A1                      _LCDDATA2 07A2  
                    _LCDDATA3 07A3                      _LCDDATA4 07A4                      _LCDDATA5 07A5  
                    _LCDDATA6 07A6                      _LCDDATA7 07A7                      _LCDDATA8 07A8  
                    _LCDDATA9 07A9            ??_OneWire_ReadByte 0020                      ?_strncmp 0026  
             _Uart1_PutString 0DDC                  _Uart1_PutHex 0D4D                 CallProc@retry 0047  
              ___wmul@product 0024              ??_GetVerify_CRC8 0022                      _SEG3COM0 3D03  
                    _SEG3COM1 3D1B                      _SEG3COM2 3D33                      _SEG3COM3 3D4B  
                    _SEG5COM0 3D05                      _SEG5COM1 3D1D                      _SEG5COM2 3D35  
                    _SEG5COM3 3D4D                      _SEG6COM0 3D06                      _SEG6COM1 3D1E  
                    _SEG6COM2 3D36                      _SEG6COM3 3D4E         OneWire_ReadByte@value 0022  
                 _eeprom_read 0DBB                LcdDisplayAll@x 0020          __end_of___delay_20ms 0AE9  
                   highISR@rx 0076               ??_LcdDisplayAll 0020                ?_GetVerify_Sum 0020  
             ??_LcdDisplayNum 0020          __size_of_SimI2C_Init 0007          __size_of_SimI2C_Stop 000A  
              SimI2C_RecAck@t 0020       TCN75_SetConfig@ErrTimes 0023         __end_of_TCN75_ReadReg 0476  
           ___wmul@multiplier 0020                      _CallSend 092D                      _CallProc 0E34  
 __end_of_Uart1_PutString_Hex 0D7C            _DS18X20_Scratchpad 00D3                   ??_ReadTData 002C  
          GetVerify_Sum@Count 0020            GetVerify_Sum@pBuff 0024                      _InitGPRS 0970  
                    _ErrState 0062       DS18X20_ReadMeas@bVerify 002A        Uart1_PutString@pString 0021  
           GetVerify_CRC8@crc 0029            _ATCommand_OkString 00C4              __size_of_InitMCU 003E  
                    _TestProc 024B         __end_of_OneWire_Reset 01E3            _ATCommand_WaitData 0538  
            __size_of_PowerON 0010              __size_of___lbdiv 0018              __size_of___lbmod 0018  
               _TxTemperature 004E      __size_of_SimI2C_ReadByte 0020              __size_of___lwdiv 0025  
            __size_of___lwmod 0020           TCN75_ReadReg@bRight 0025           InteractServer@txLen 003E  
         InteractServer@retry 0036           ?_ATCommand_WaitData 0070      __size_of_SimI2C_SendByte 0021  
            __size_of_highISR 0025       __end_of_Uart1_PutString 0DED          __size_of_SaveRomData 0019  
   GetVerify_CRC8@bit_counter 0024              __size_of_isdigit 000E              __size_of_isgraph 000E  
             ___lwdiv@divisor 0020        _ATCommand_WaitACKTimes 0054               ___lwdiv@counter 0024  
            __size_of_strncmp 0038                    strcpy@from 0020             ??_OneWire_Command 0024  
               __size_of_atoi 0066                 __size_of_main 009A          ??_ATCommand_WaitData 0031  
                  strncmp@len 002A          LcdDisplay_CurTemp@t1 0027          LcdDisplay_CurTemp@t2 0028  
                    clear_ram 0621               ??_GetVerify_Sum 0022                ___delay_20ms@x 0020  
                    atoi@sign 002C                      main@addr 004C        ATCommand_SendCmd@retry 0035  
                 GetRomData@i 0027              ??_InteractServer 0036       __size_of_LcdDisplay_CSQ 001B  
     __size_of_LcdDisplay_Err 0020                    _TCN75_Init 01E3                      isdigit@c 0021  
          InteractServer@addr 0042               _TCN75_SetConfig 0FBB                      isgraph@c 0071  
    __end_of_DS18X20_ReadMeas 0062                      intlevel1 0000              LcdDisplay_CSQ@t1 0025  
            LcdDisplay_CSQ@t2 0026                     strchr@chr 0022              ___lwmod@dividend 0022  
       __size_of___delay_20ms 0014                     strchr@ptr 0020   __size_of_LcdDisplay_CurTemp 004F  
       OneWire_WriteByte@temp 0022                     strncmp@s1 0026                     strncmp@s2 0028  
    __end_of_ATCommand_ProcRx 0518           SimI2C_ReadByte@data 0020         ATCommand_SendCmd@strx 0036  
            GetVerify_Sum@sum 0025        __size_of_SimI2C_RecAck 0014         __end_of_Uart1_PutChar 0DDC  
        Uart1_PutString_Hex@c 0025          OneWire_WriteByte@val 0021               ___lwmod@divisor 0020  
            ?_Uart1_PutString 0021                      strcpy@cp 0025                      strlen@cp 0024  
                    strcpy@to 0024               ___lwmod@counter 0024             ??_SimI2C_ReadByte 0020  
                ___delay_20ms 0AD5          ATCommand_SendCmd@cmd 0031                      strstr@s1 002D  
                    strstr@s2 002F          ATCommand_SendCmd@res 0038             ??_SimI2C_SendByte 0020  
     __size_of_ATCommand_Init 0017                 ?_eeprom_write 0020                  ?_eeprom_read 0070  
            SimI2C_ReadByte@i 0021              Uart1_PutString@c 0023     __size_of_OneWire_ReadByte 002C  
               ??_DisplayInit 0020  
