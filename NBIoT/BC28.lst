

HI-TECH Software PIC PRO Macro Assembler V9.71a build 6446 
                                                                                               Wed Jan 02 15:14:10 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 6446
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	text2085,local,class=CODE,delta=2
    16                           	psect	text2094,local,class=CODE,delta=2
    17                           	psect	text2099,local,class=CODE,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text2148,local,class=CODE,delta=2
    20                           	psect	text2150,local,class=CODE,delta=2
    21                           	psect	pa_nodes,global,class=CODE,delta=2
    22                           	dabs	1,0x320,16
    23                           	dabs	1,0x2A0,80
    24                           	dabs	1,0x26C,4
    25                           	dabs	1,0x7E,2
    26  000A                     	;_ATCommand_RxList
    27                           
    28                           	psect	idataBANK0
    29  0000                     __pidataBANK0:	
    30                           
    31                           	psect	stringtext
    32  1000                     __pstringtext:	
    33  1000                     __stringtab:	
    34  1000  3400               	retlw	0
    35  1001                     _SegCode:	
    36  1001  343F               	retlw	63
    37  1002  3406               	retlw	6
    38  1003  345B               	retlw	91
    39  1004  344F               	retlw	79
    40  1005  3466               	retlw	102
    41  1006  346D               	retlw	109
    42  1007  347D               	retlw	125
    43  1008  3407               	retlw	7
    44  1009  347F               	retlw	127
    45  100A  346F               	retlw	111
    46  100B  3477               	retlw	119
    47  100C  347C               	retlw	124
    48  100D  3439               	retlw	57
    49  100E  345E               	retlw	94
    50  100F  3479               	retlw	121
    51  1010  3471               	retlw	113
    52  1011  3450               	retlw	80
    53  1012                     _DS18X20_ToDecicel:	
    54  1012  3400               	retlw	0
    55  1013  3401               	retlw	1
    56  1014  3401               	retlw	1
    57  1015  3402               	retlw	2
    58  1016  3403               	retlw	3
    59  1017  3403               	retlw	3
    60  1018  3404               	retlw	4
    61  1019  3404               	retlw	4
    62  101A  3405               	retlw	5
    63  101B  3406               	retlw	6
    64  101C  3406               	retlw	6
    65  101D  3407               	retlw	7
    66  101E  3408               	retlw	8
    67  101F  3408               	retlw	8
    68  1020  3409               	retlw	9
    69  1021  3409               	retlw	9
    70  001B                     _PR2	set	27
    71  0018                     _T1CON	set	24
    72  001C                     _T2CON	set	28
    73  0017                     _TMR1H	set	23
    74  0016                     _TMR1L	set	22
    75  0018                     _CARRY	set	24
    76  005F                     _GIE	set	95
    77  005E                     _PEIE	set	94
    78  0069                     _RB1	set	105
    79  006A                     _RB2	set	106
    80  006F                     _RB7	set	111
    81  008D                     _RCIF	set	141
    82  007C                     _RD4	set	124
    83  007E                     _RD6	set	126
    84  0088                     _TMR1IF	set	136
    85  00C0                     _TMR1ON	set	192
    86  0089                     _TMR2IF	set	137
    87  00E2                     _TMR2ON	set	226
    88  009E                     _ADCON1	set	158
    89  048D                     _RCIE	set	1165
    90  0488                     _TMR1IE	set	1160
    91  0489                     _TMR2IE	set	1161
    92  0463                     _TRISA3	set	1123
    93  0464                     _TRISA4	set	1124
    94  0469                     _TRISB1	set	1129
    95  046A                     _TRISB2	set	1130
    96  046F                     _TRISB7	set	1135
    97  0476                     _TRISC6	set	1142
    98  0477                     _TRISC7	set	1143
    99  047C                     _TRISD4	set	1148
   100  047D                     _TRISD5	set	1149
   101  047E                     _TRISD6	set	1150
   102  047F                     _TRISD7	set	1151
   103  04AF                     _nWPUEN	set	1199
   104  0863                     _LATA3	set	2147
   105  0864                     _LATA4	set	2148
   106  0869                     _LATB1	set	2153
   107  087D                     _LATD5	set	2173
   108  087E                     _LATD6	set	2174
   109  087F                     _LATD7	set	2175
   110  018C                     _ANSELA	set	396
   111  018D                     _ANSELB	set	397
   112  018F                     _ANSELD	set	399
   113  0190                     _ANSELE	set	400
   114  0191                     _EEADRL	set	401
   115  0195                     _EECON1	set	405
   116  0196                     _EECON2	set	406
   117  0193                     _EEDATA	set	403
   118  0199                     _RCREG	set	409
   119  019D                     _RCSTA	set	413
   120  019B                     _SPBRG	set	411
   121  019A                     _TXREG	set	410
   122  019E                     _TXSTA	set	414
   123  0CEC                     _CREN	set	3308
   124  0CE9                     _OERR	set	3305
   125  0CA8                     _RD	set	3240
   126  0CF1                     _TRMT	set	3313
   127  0CA9                     _WR	set	3241
   128  0CAA                     _WREN	set	3242
   129  106F                     _WPUB7	set	4207
   130  0791                     _LCDCON	set	1937
   131  0794                     _LCDCST	set	1940
   132  07A0                     _LCDDATA0	set	1952
   133  07A1                     _LCDDATA1	set	1953
   134  07AA                     _LCDDATA10	set	1962
   135  07AB                     _LCDDATA11	set	1963
   136  07A2                     _LCDDATA2	set	1954
   137  07A3                     _LCDDATA3	set	1955
   138  07A4                     _LCDDATA4	set	1956
   139  07A5                     _LCDDATA5	set	1957
   140  07A6                     _LCDDATA6	set	1958
   141  07A7                     _LCDDATA7	set	1959
   142  07A8                     _LCDDATA8	set	1960
   143  07A9                     _LCDDATA9	set	1961
   144  0792                     _LCDPS	set	1938
   145  0793                     _LCDREF	set	1939
   146  0795                     _LCDRL	set	1941
   147  0798                     _LCDSE0	set	1944
   148  0799                     _LCDSE1	set	1945
   149  079A                     _LCDSE2	set	1946
   150  3C8F                     _LCDEN	set	15503
   151  3CCB                     _SEG11	set	15563
   152  3D0B                     _SEG11COM0	set	15627
   153  3D23                     _SEG11COM1	set	15651
   154  3D3B                     _SEG11COM2	set	15675
   155  3D53                     _SEG11COM3	set	15699
   156  3CD0                     _SEG16	set	15568
   157  3D10                     _SEG16COM0	set	15632
   158  3D28                     _SEG16COM1	set	15656
   159  3D40                     _SEG16COM2	set	15680
   160  3D58                     _SEG16COM3	set	15704
   161  3CD5                     _SEG21	set	15573
   162  3D15                     _SEG21COM0	set	15637
   163  3D2D                     _SEG21COM1	set	15661
   164  3D45                     _SEG21COM2	set	15685
   165  3D5D                     _SEG21COM3	set	15709
   166  3CD6                     _SEG22	set	15574
   167  3D16                     _SEG22COM0	set	15638
   168  3D2E                     _SEG22COM1	set	15662
   169  3D46                     _SEG22COM2	set	15686
   170  3D5E                     _SEG22COM3	set	15710
   171  3CD7                     _SEG23	set	15575
   172  3D17                     _SEG23COM0	set	15639
   173  3D2F                     _SEG23COM1	set	15663
   174  3D47                     _SEG23COM2	set	15687
   175  3D5F                     _SEG23COM3	set	15711
   176  3CC3                     _SEG3	set	15555
   177  3D03                     _SEG3COM0	set	15619
   178  3D1B                     _SEG3COM1	set	15643
   179  3D33                     _SEG3COM2	set	15667
   180  3D4B                     _SEG3COM3	set	15691
   181  3CC5                     _SEG5	set	15557
   182  3D05                     _SEG5COM0	set	15621
   183  3D1D                     _SEG5COM1	set	15645
   184  3D35                     _SEG5COM2	set	15669
   185  3D4D                     _SEG5COM3	set	15693
   186  3CC6                     _SEG6	set	15558
   187  3D06                     _SEG6COM0	set	15622
   188  3D1E                     _SEG6COM1	set	15646
   189  3D36                     _SEG6COM2	set	15670
   190  3D4E                     _SEG6COM3	set	15694
   191  3C94                     _WA	set	15508
   192  3C8D                     _WERR	set	15501
   193  1022                     STR_2:	
   194  1022  3441               	retlw	65	;'A'
   195  1023  3454               	retlw	84	;'T'
   196  1024  342B               	retlw	43	;'+'
   197  1025  344E               	retlw	78	;'N'
   198  1026  3453               	retlw	83	;'S'
   199  1027  344F               	retlw	79	;'O'
   200  1028  3443               	retlw	67	;'C'
   201  1029  344F               	retlw	79	;'O'
   202  102A  343D               	retlw	61	;'='
   203  102B  3431               	retlw	49	;'1'
   204  102C  342C               	retlw	44	;','
   205  102D  3422               	retlw	34	;'"'
   206  102E  3477               	retlw	119	;'w'
   207  102F  3477               	retlw	119	;'w'
   208  1030  3477               	retlw	119	;'w'
   209  1031  342E               	retlw	46	;'.'
   210  1032  3477               	retlw	119	;'w'
   211  1033  346C               	retlw	108	;'l'
   212  1034  3477               	retlw	119	;'w'
   213  1035  3464               	retlw	100	;'d'
   214  1036  346A               	retlw	106	;'j'
   215  1037  3463               	retlw	99	;'c'
   216  1038  3479               	retlw	121	;'y'
   217  1039  342E               	retlw	46	;'.'
   218  103A  3463               	retlw	99	;'c'
   219  103B  346F               	retlw	111	;'o'
   220  103C  346D               	retlw	109	;'m'
   221  103D  3422               	retlw	34	;'"'
   222  103E  342C               	retlw	44	;','
   223  103F  3431               	retlw	49	;'1'
   224  1040  3432               	retlw	50	;'2'
   225  1041  3431               	retlw	49	;'1'
   226  1042  3432               	retlw	50	;'2'
   227  1043  3439               	retlw	57	;'9'
   228  1044  3400               	retlw	0
   229  1045  3400               	retlw	0
   230  1046                     STR_1:	
   231  1046  3441               	retlw	65	;'A'
   232  1047  3454               	retlw	84	;'T'
   233  1048  342B               	retlw	43	;'+'
   234  1049  344E               	retlw	78	;'N'
   235  104A  3453               	retlw	83	;'S'
   236  104B  344F               	retlw	79	;'O'
   237  104C  3443               	retlw	67	;'C'
   238  104D  3452               	retlw	82	;'R'
   239  104E  343D               	retlw	61	;'='
   240  104F  3453               	retlw	83	;'S'
   241  1050  3454               	retlw	84	;'T'
   242  1051  3452               	retlw	82	;'R'
   243  1052  3445               	retlw	69	;'E'
   244  1053  3441               	retlw	65	;'A'
   245  1054  344D               	retlw	77	;'M'
   246  1055  342C               	retlw	44	;','
   247  1056  3436               	retlw	54	;'6'
   248  1057  342C               	retlw	44	;','
   249  1058  3430               	retlw	48	;'0'
   250  1059  342C               	retlw	44	;','
   251  105A  3431               	retlw	49	;'1'
   252  105B  3400               	retlw	0
   253  105C  3400               	retlw	0
   254  105D                     STR_11:	
   255  105D  3441               	retlw	65	;'A'
   256  105E  3454               	retlw	84	;'T'
   257  105F  342B               	retlw	43	;'+'
   258  1060  344E               	retlw	78	;'N'
   259  1061  3453               	retlw	83	;'S'
   260  1062  344F               	retlw	79	;'O'
   261  1063  3453               	retlw	83	;'S'
   262  1064  3444               	retlw	68	;'D'
   263  1065  343D               	retlw	61	;'='
   264  1066  3431               	retlw	49	;'1'
   265  1067  342C               	retlw	44	;','
   266  1068  3436               	retlw	54	;'6'
   267  1069  3438               	retlw	56	;'8'
   268  106A  3437               	retlw	55	;'7'
   269  106B  342C               	retlw	44	;','
   270  106C  3400               	retlw	0
   271  106D  3400               	retlw	0
   272  106E                     STR_3:	
   273  106E  3441               	retlw	65	;'A'
   274  106F  3454               	retlw	84	;'T'
   275  1070  342B               	retlw	43	;'+'
   276  1071  344E               	retlw	78	;'N'
   277  1072  3453               	retlw	83	;'S'
   278  1073  344F               	retlw	79	;'O'
   279  1074  3453               	retlw	83	;'S'
   280  1075  3444               	retlw	68	;'D'
   281  1076  343D               	retlw	61	;'='
   282  1077  3431               	retlw	49	;'1'
   283  1078  342C               	retlw	44	;','
   284  1079  3433               	retlw	51	;'3'
   285  107A  3432               	retlw	50	;'2'
   286  107B  342C               	retlw	44	;','
   287  107C  3400               	retlw	0
   288  107D  3400               	retlw	0
   289  107E                     STR_13:	
   290  107E  3441               	retlw	65	;'A'
   291  107F  3454               	retlw	84	;'T'
   292  1080  342B               	retlw	43	;'+'
   293  1081  344E               	retlw	78	;'N'
   294  1082  3453               	retlw	83	;'S'
   295  1083  344F               	retlw	79	;'O'
   296  1084  3453               	retlw	83	;'S'
   297  1085  3444               	retlw	68	;'D'
   298  1086  343D               	retlw	61	;'='
   299  1087  3431               	retlw	49	;'1'
   300  1088  342C               	retlw	44	;','
   301  1089  3438               	retlw	56	;'8'
   302  108A  3437               	retlw	55	;'7'
   303  108B  342C               	retlw	44	;','
   304  108C  3400               	retlw	0
   305  108D  3400               	retlw	0
   306  108E                     STR_12:	
   307  108E  3441               	retlw	65	;'A'
   308  108F  3454               	retlw	84	;'T'
   309  1090  342B               	retlw	43	;'+'
   310  1091  344E               	retlw	78	;'N'
   311  1092  3453               	retlw	83	;'S'
   312  1093  344F               	retlw	79	;'O'
   313  1094  3453               	retlw	83	;'S'
   314  1095  3444               	retlw	68	;'D'
   315  1096  343D               	retlw	61	;'='
   316  1097  3431               	retlw	49	;'1'
   317  1098  342C               	retlw	44	;','
   318  1099  3400               	retlw	0
   319  109A  3400               	retlw	0
   320  109B                     STR_27:	
   321  109B  3441               	retlw	65	;'A'
   322  109C  3454               	retlw	84	;'T'
   323  109D  342B               	retlw	43	;'+'
   324  109E  3443               	retlw	67	;'C'
   325  109F  3445               	retlw	69	;'E'
   326  10A0  3452               	retlw	82	;'R'
   327  10A1  3445               	retlw	69	;'E'
   328  10A2  3447               	retlw	71	;'G'
   329  10A3  343F               	retlw	63	;'?'
   330  10A4  3400               	retlw	0
   331  10A5  3400               	retlw	0
   332  10A6                     STR_28:	
   333  10A6  342B               	retlw	43	;'+'
   334  10A7  3443               	retlw	67	;'C'
   335  10A8  3445               	retlw	69	;'E'
   336  10A9  3452               	retlw	82	;'R'
   337  10AA  3445               	retlw	69	;'E'
   338  10AB  3447               	retlw	71	;'G'
   339  10AC  343A               	retlw	58	;':'
   340  10AD  3430               	retlw	48	;'0'
   341  10AE  342C               	retlw	44	;','
   342  10AF  3431               	retlw	49	;'1'
   343  10B0  3400               	retlw	0
   344  10B1                     STR_23:	
   345  10B1  3441               	retlw	65	;'A'
   346  10B2  3454               	retlw	84	;'T'
   347  10B3  342B               	retlw	43	;'+'
   348  10B4  344E               	retlw	78	;'N'
   349  10B5  3443               	retlw	67	;'C'
   350  10B6  3443               	retlw	67	;'C'
   351  10B7  3449               	retlw	73	;'I'
   352  10B8  3444               	retlw	68	;'D'
   353  10B9  3400               	retlw	0
   354  10BA  3400               	retlw	0
   355  10BB                     STR_4:	
   356  10BB  3440               	retlw	64	;'@'
   357  10BC  3423               	retlw	35	;'#'
   358  10BD  3470               	retlw	112	;'p'
   359  10BE  3474               	retlw	116	;'t'
   360  10BF  3423               	retlw	35	;'#'
   361  10C0  3431               	retlw	49	;'1'
   362  10C1  3423               	retlw	35	;'#'
   363  10C2  3400               	retlw	0
   364  10C3  3400               	retlw	0
   365  10C4                     STR_14:	
   366  10C4  3440               	retlw	64	;'@'
   367  10C5  3423               	retlw	35	;'#'
   368  10C6  3470               	retlw	112	;'p'
   369  10C7  3474               	retlw	116	;'t'
   370  10C8  3423               	retlw	35	;'#'
   371  10C9  3432               	retlw	50	;'2'
   372  10CA  3423               	retlw	35	;'#'
   373  10CB  3400               	retlw	0
   374  10CC  3400               	retlw	0
   375  10CD                     STR_8:	
   376  10CD  3440               	retlw	64	;'@'
   377  10CE  3423               	retlw	35	;'#'
   378  10CF  3470               	retlw	112	;'p'
   379  10D0  3474               	retlw	116	;'t'
   380  10D1  3423               	retlw	35	;'#'
   381  10D2  3433               	retlw	51	;'3'
   382  10D3  3423               	retlw	35	;'#'
   383  10D4  3400               	retlw	0
   384  10D5  3400               	retlw	0
   385  10D6                     STR_22:	
   386  10D6  3441               	retlw	65	;'A'
   387  10D7  3454               	retlw	84	;'T'
   388  10D8  342B               	retlw	43	;'+'
   389  10D9  3443               	retlw	67	;'C'
   390  10DA  3449               	retlw	73	;'I'
   391  10DB  344D               	retlw	77	;'M'
   392  10DC  3449               	retlw	73	;'I'
   393  10DD  3400               	retlw	0
   394  10DE  3400               	retlw	0
   395  10DF                     STR_25:	
   396  10DF  3441               	retlw	65	;'A'
   397  10E0  3454               	retlw	84	;'T'
   398  10E1  342B               	retlw	43	;'+'
   399  10E2  3443               	retlw	67	;'C'
   400  10E3  3453               	retlw	83	;'S'
   401  10E4  3451               	retlw	81	;'Q'
   402  10E5  3400               	retlw	0
   403  10E6  3400               	retlw	0
   404  10E7                     STR_17:	
   405  10E7  344E               	retlw	78	;'N'
   406  10E8  3453               	retlw	83	;'S'
   407  10E9  344F               	retlw	79	;'O'
   408  10EA  3443               	retlw	67	;'C'
   409  10EB  344C               	retlw	76	;'L'
   410  10EC  3449               	retlw	73	;'I'
   411  10ED  3400               	retlw	0
   412  10EE                     STR_21:	
   413  10EE  3441               	retlw	65	;'A'
   414  10EF  3454               	retlw	84	;'T'
   415  10F0  3445               	retlw	69	;'E'
   416  10F1  3431               	retlw	49	;'1'
   417  10F2  3400               	retlw	0
   418  10F3  3400               	retlw	0
   419  10F4                     STR_26:	
   420  10F4  342B               	retlw	43	;'+'
   421  10F5  3443               	retlw	67	;'C'
   422  10F6  3453               	retlw	83	;'S'
   423  10F7  3451               	retlw	81	;'Q'
   424  10F8  343A               	retlw	58	;':'
   425  10F9  3400               	retlw	0
   426  10FA                     STR_18:	
   427  10FA  3445               	retlw	69	;'E'
   428  10FB  3452               	retlw	82	;'R'
   429  10FC  3452               	retlw	82	;'R'
   430  10FD  344F               	retlw	79	;'O'
   431  10FE  3452               	retlw	82	;'R'
   432  10FF  3400               	retlw	0
   433  1100                     STR_6:	
   434  1100  3431               	retlw	49	;'1'
   435  1101  3430               	retlw	48	;'0'
   436  1102  3423               	retlw	35	;'#'
   437  1103  3400               	retlw	0
   438  1104  3400               	retlw	0
   439  1105                     STR_5:	
   440  1105  3436               	retlw	54	;'6'
   441  1106  3430               	retlw	48	;'0'
   442  1107  3423               	retlw	35	;'#'
   443  1108  3400               	retlw	0
   444  1109  3400               	retlw	0
   445  110A                     STR_24:	
   446  110A  3438               	retlw	56	;'8'
   447  110B  3439               	retlw	57	;'9'
   448  110C  3438               	retlw	56	;'8'
   449  110D  3436               	retlw	54	;'6'
   450  110E  3400               	retlw	0
   451  110F                     STR_20:	
   452  110F  3441               	retlw	65	;'A'
   453  1110  3454               	retlw	84	;'T'
   454  1111  3400               	retlw	0
   455  1112  3400               	retlw	0
   456  1113                     STR_32:	
   457  1113  344F               	retlw	79	;'O'
   458  1114  344B               	retlw	75	;'K'
   459  1115  3400               	retlw	0
   460  1116                     STR_19:	
   461  1116  340D               	retlw	13
   462  1117  3400               	retlw	0
   463  1118  3400               	retlw	0
   464  1116                     
   465                           	psect	cinit
   466  080A                     start_initialization:	
   467  218C                     	;BIGRAM
   468                           
   469                           ; Clear objects allocated to BIGRAM
   470  080A  308C               	movlw	140
   471  080B  0084               	movwf	4
   472  080C  3021               	movlw	33
   473  080D  0085               	movwf	5
   474  080E  3064               	movlw	100
   475  080F  00FE               	movwf	126
   476  0810  3000               	movlw	0
   477  0811  01FF               	clrf	127
   478  0812  3186  26C9  3188   	fcall	clear_ram
   479                           
   480                           ; Clear objects allocated to COMMON
   481  0815  01F7               	clrf	__pbssCOMMON& (0+127)
   482  0816  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   483  0817  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   484                           
   485                           ; Clear objects allocated to BANK0
   486  0818  304D               	movlw	low __pbssBANK0
   487  0819  0084               	movwf	4
   488  081A  3000               	movlw	high __pbssBANK0
   489  081B  0085               	movwf	5
   490  081C  301D               	movlw	29
   491  081D  00FE               	movwf	126
   492  081E  3000               	movlw	0
   493  081F  00FF               	movwf	127
   494  0820  3186  26C9  3188   	fcall	clear_ram
   495                           
   496                           ; Clear objects allocated to BANK1
   497  0823  30A0               	movlw	low __pbssBANK1
   498  0824  0084               	movwf	4
   499  0825  3000               	movlw	high __pbssBANK1
   500  0826  0085               	movwf	5
   501  0827  303C               	movlw	60
   502  0828  00FE               	movwf	126
   503  0829  3000               	movlw	0
   504  082A  00FF               	movwf	127
   505  082B  3186  26C9  3188   	fcall	clear_ram
   506                           
   507                           ; Clear objects allocated to BANK2
   508  082E  3020               	movlw	low __pbssBANK2
   509  082F  0084               	movwf	4
   510  0830  3001               	movlw	high __pbssBANK2
   511  0831  0085               	movwf	5
   512  0832  3018               	movlw	24
   513  0833  00FE               	movwf	126
   514  0834  3000               	movlw	0
   515  0835  00FF               	movwf	127
   516  0836  3186  26C9  3188   	fcall	clear_ram
   517                           
   518                           ;initializer for _DpyNum
   519  0839  3040               	movlw	64
   520  083A  00EA               	movwf	__pdataBANK0& (0+127)
   521  083B  00EB               	movwf	(__pdataBANK0+1)& (0+127)
   522  083C  00EC               	movwf	(__pdataBANK0+2)& (0+127)
   523  083D  00ED               	movwf	(__pdataBANK0+3)& (0+127)
   524  083E  00EE               	movwf	(__pdataBANK0+4)& (0+127)
   525  083F  00EF               	movwf	(__pdataBANK0+5)& (0+127)
   526  0840                     end_of_initialization:	
   527                           ;End of C runtime variable initialization code
   528                           
   529  0840  0020               	movlb	0
   530  0841  2842               	ljmp	_main	;jump to C main() function
   531  0842                     __pmaintext:	
   532 ;;Data sizes: Strings 247, constant 33, data 6, bss 116, persistent 0 stack 0
   533 ;;Auto spaces:   Size  Autos    Used
   534 ;; COMMON          14      7      10
   535 ;; BANK0           80     45      80
   536 ;; BANK1           80      0      60
   537 ;; BANK2           80      0      24
   538 ;; BANK3           80      0       0
   539 ;; BANK4           76      0       0
   540 ;; BANK5            0      0       0
   541 ;; BANK6            0      0       0
   542 ;;
   543 ;; Pointer list with targets:
   544 ;; ?_strchr	PTR unsigned char  size(2) Largest target is 128
   545 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   546 ;;
   547 ;; ?_strncmp	int  size(1) Largest target is 0
   548 ;;
   549 ;; ?_strlen	unsigned int  size(2) Largest target is 15
   550 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   551 ;;		 -> ATCommand_OkString(BANK1[15]), 
   552 ;;
   553 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   554 ;;
   555 ;; ?_atoi	int  size(1) Largest target is 0
   556 ;;
   557 ;; ?_strstr	PTR unsigned char  size(2) Largest target is 128
   558 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   559 ;;
   560 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 15
   561 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   562 ;;
   563 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   564 ;;
   565 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   566 ;;
   567 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
   568 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   569 ;;		 -> ATCommand_OkString(BANK1[15]), 
   570 ;;
   571 ;; strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
   572 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   573 ;;
   574 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 15
   575 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   576 ;;		 -> ATCommand_OkString(BANK1[15]), 
   577 ;;
   578 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 15
   579 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   580 ;;		 -> ATCommand_OkString(BANK1[15]), 
   581 ;;
   582 ;; strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
   583 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   584 ;;
   585 ;; sp__strchr	PTR unsigned char  size(2) Largest target is 128
   586 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   587 ;;
   588 ;; strstr@s2	PTR const unsigned char  size(2) Largest target is 15
   589 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   590 ;;		 -> ATCommand_OkString(BANK1[15]), 
   591 ;;
   592 ;; strstr@s1	PTR const unsigned char  size(2) Largest target is 128
   593 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   594 ;;
   595 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 7
   596 ;;		 -> STR_38(CODE[6]), STR_37(CODE[3]), STR_36(CODE[6]), STR_35(CODE[3]), 
   597 ;;		 -> STR_33(CODE[6]), STR_32(CODE[3]), STR_18(CODE[6]), STR_17(CODE[7]), 
   598 ;;
   599 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 15
   600 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   601 ;;
   602 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 15
   603 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   604 ;;
   605 ;; atoi@s	PTR const unsigned char  size(2) Largest target is 128
   606 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   607 ;;
   608 ;; GetVerify_CRC8@pBuff	PTR unsigned char  size(1) Largest target is 9
   609 ;;		 -> DS18X20_Scratchpad(BANK1[9]), 
   610 ;;
   611 ;; GetVerify_Sum@pBuff	PTR unsigned char  size(1) Largest target is 2
   612 ;;		 -> RomParams(BANK0[2]), 
   613 ;;
   614 ;; Uart1_PutString_Hex@pString	PTR const unsigned char  size(2) Largest target is 21
   615 ;;		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[9]), STR_10(CODE[5]), 
   616 ;;		 -> STR_9(CODE[5]), STR_8(CODE[9]), STR_6(CODE[5]), STR_5(CODE[5]), 
   617 ;;		 -> ICCID(BANK1[21]), STR_4(CODE[9]), 
   618 ;;
   619 ;; Uart1_PutString@pString	PTR const unsigned char  size(2) Largest target is 36
   620 ;;		 -> STR_34(CODE[3]), STR_31(CODE[36]), STR_30(CODE[23]), STR_29(CODE[4]), 
   621 ;;		 -> STR_27(CODE[11]), STR_25(CODE[8]), STR_23(CODE[10]), STR_22(CODE[9]), 
   622 ;;		 -> STR_21(CODE[6]), STR_20(CODE[4]), STR_19(CODE[3]), STR_13(CODE[16]), 
   623 ;;		 -> STR_12(CODE[13]), STR_11(CODE[17]), STR_7(CODE[16]), STR_3(CODE[16]), 
   624 ;;		 -> STR_2(CODE[36]), STR_1(CODE[23]), 
   625 ;;
   626 ;; ATCommand_WaitData@strx	PTR unsigned char  size(2) Largest target is 128
   627 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   628 ;;
   629 ;; ATCommand_SendCmd@cmd	PTR const unsigned char  size(2) Largest target is 36
   630 ;;		 -> STR_31(CODE[36]), STR_30(CODE[23]), STR_29(CODE[4]), STR_27(CODE[11]), 
   631 ;;		 -> STR_25(CODE[8]), STR_23(CODE[10]), STR_22(CODE[9]), STR_21(CODE[6]), 
   632 ;;		 -> STR_20(CODE[4]), STR_2(CODE[36]), STR_1(CODE[23]), 
   633 ;;
   634 ;; ATCommand_SendCmd@strx	PTR unsigned char  size(2) Largest target is 128
   635 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   636 ;;
   637 ;; CallTestSend@strx	PTR unsigned char  size(1) Largest target is 128
   638 ;;		 -> RAM(NULL[128]), 
   639 ;;
   640 ;; sp__strstr	PTR unsigned char  size(2) Largest target is 128
   641 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   642 ;;
   643 ;; InitGPRS@strx	PTR unsigned char  size(2) Largest target is 128
   644 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   645 ;;
   646 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 15
   647 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   648 ;;
   649 ;; CallSend@strx	PTR unsigned char  size(1) Largest target is 128
   650 ;;		 -> RAM(NULL[128]), 
   651 ;;
   652 ;;
   653 ;; Critical Paths under _main in COMMON
   654 ;;
   655 ;;   None.
   656 ;;
   657 ;; Critical Paths under _highISR in COMMON
   658 ;;
   659 ;;   _highISR->_ATCommand_ProcRx
   660 ;;   _ATCommand_ProcRx->_isgraph
   661 ;;
   662 ;; Critical Paths under _main in BANK0
   663 ;;
   664 ;;   _main->_TestProc
   665 ;;   _TestProc->_CallTestProc
   666 ;;   _CallProc->_CallSend
   667 ;;   _InitSystem->_ReadTData
   668 ;;   _CallTestSend->_InteractServer
   669 ;;   _CallSend->_InteractServer
   670 ;;   _ReadTData->_DS18X20_ReadMeas
   671 ;;   _InteractServer->_ATCommand_WaitData
   672 ;;   _InitGPRS->_ATCommand_SendCmd
   673 ;;   _PowerON->_ATCommand_SendCmd
   674 ;;   _DS18X20_ReadMeas->_GetVerify_CRC8
   675 ;;   _DS18X20_StartMeas->_OneWire_Command
   676 ;;   _OneWire_Command->_OneWire_WriteByte
   677 ;;   _ATCommand_WaitData->_strstr
   678 ;;   _Uart1_PutString_Hex->_Uart1_PutHex
   679 ;;   _ATCommand_SendCmd->_strstr
   680 ;;   _PowerDown->___delay_20ms
   681 ;;   _TCN75_ReadReg->_SimI2C_SendByte
   682 ;;   _TCN75_SetConfig->_SimI2C_SendByte
   683 ;;   _InitVariable->_GetRomData
   684 ;;   _InitVariable->_SaveRomData
   685 ;;   _atoi->___wmul
   686 ;;   _strstr->_strncmp
   687 ;;   _Uart1_PutHex->_Uart1_PutChar
   688 ;;   _Uart1_PutString->_Uart1_PutChar
   689 ;;   _ATCommand_Init->_strcpy
   690 ;;   _SaveRomData->_GetVerify_Sum
   691 ;;   _GetRomData->_GetVerify_Sum
   692 ;;   _LcdDisplay_Err->___lbmod
   693 ;;   _LcdDisplay_CurTemp->___lbmod
   694 ;;   _LcdDisplay_CSQ->___lbmod
   695 ;;   _strncmp->_strlen
   696 ;;
   697 ;; Critical Paths under _highISR in BANK0
   698 ;;
   699 ;;   None.
   700 ;;
   701 ;; Critical Paths under _main in BANK1
   702 ;;
   703 ;;   None.
   704 ;;
   705 ;; Critical Paths under _highISR in BANK1
   706 ;;
   707 ;;   None.
   708 ;;
   709 ;; Critical Paths under _main in BANK2
   710 ;;
   711 ;;   None.
   712 ;;
   713 ;; Critical Paths under _highISR in BANK2
   714 ;;
   715 ;;   None.
   716 ;;
   717 ;; Critical Paths under _main in BANK3
   718 ;;
   719 ;;   None.
   720 ;;
   721 ;; Critical Paths under _highISR in BANK3
   722 ;;
   723 ;;   None.
   724 ;;
   725 ;; Critical Paths under _main in BANK4
   726 ;;
   727 ;;   None.
   728 ;;
   729 ;; Critical Paths under _highISR in BANK4
   730 ;;
   731 ;;   None.
   732 ;;
   733 ;; Critical Paths under _main in BANK5
   734 ;;
   735 ;;   None.
   736 ;;
   737 ;; Critical Paths under _highISR in BANK5
   738 ;;
   739 ;;   None.
   740 ;;
   741 ;; Critical Paths under _main in BANK6
   742 ;;
   743 ;;   None.
   744 ;;
   745 ;; Critical Paths under _highISR in BANK6
   746 ;;
   747 ;;   None.
   748 ;;
   749 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   750 ;;
   751 ;;
   752 ;;Call Graph Tables:
   753 ;;
   754 ;; ---------------------------------------------------------------------------------
   755 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   756 ;; ---------------------------------------------------------------------------------
   757 ;; (0) _main                                                 4     4      0   31276
   758 ;;                                             41 BANK0      4     4      0
   759 ;;                         _InitSystem
   760 ;;                       ___delay_20ms
   761 ;;                           _TestProc
   762 ;;                          _ReadTData
   763 ;;                           _CallProc
   764 ;;                             ___bmul
   765 ;;                       _eeprom_write
   766 ;; ---------------------------------------------------------------------------------
   767 ;; (1) _TestProc                                             2     2      0   13967
   768 ;;                                             39 BANK0      2     2      0
   769 ;;                      _LcdDisplayAll
   770 ;;                       ___delay_20ms
   771 ;;                          _ReadTData
   772 ;;                     _LcdDisplay_Err
   773 ;;                       _CallTestProc
   774 ;; ---------------------------------------------------------------------------------
   775 ;; (2) _CallTestProc                                         1     1      0   11148
   776 ;;                                             38 BANK0      1     1      0
   777 ;;                            _PowerON
   778 ;;                       _CallTestSend
   779 ;;                          _PowerDown
   780 ;;                 _LcdDisplay_CurTemp
   781 ;;                       ___delay_20ms
   782 ;;                     _LcdDisplay_Err
   783 ;; ---------------------------------------------------------------------------------
   784 ;; (1) _CallProc                                             1     1      0   11216
   785 ;;                                             39 BANK0      1     1      0
   786 ;;                            _PowerON
   787 ;;                           _CallSend
   788 ;;                          _PowerDown
   789 ;;                 _LcdDisplay_CurTemp
   790 ;;                       ___delay_20ms
   791 ;;                     _LcdDisplay_Err
   792 ;; ---------------------------------------------------------------------------------
   793 ;; (1) _InitSystem                                           1     1      0    3402
   794 ;;                                             13 BANK0      1     1      0
   795 ;;                            _InitMCU
   796 ;;                       _InitVariable
   797 ;;                        _DisplayInit
   798 ;;                     _ATCommand_Init
   799 ;;                      _OneWire_Reset
   800 ;;                         _TCN75_Init
   801 ;;                    _TCN75_SetConfig
   802 ;;                       ___delay_20ms
   803 ;;                          _ReadTData
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (3) _CallTestSend                                         2     2      0    8914
   806 ;;                           _InitGPRS
   807 ;;                  _ATCommand_SendCmd
   808 ;;                       ___delay_20ms
   809 ;;                     _InteractServer
   810 ;; ---------------------------------------------------------------------------------
   811 ;; (2) _CallSend                                             3     3      0    8982
   812 ;;                                             38 BANK0      1     1      0
   813 ;;                           _InitGPRS
   814 ;;                       ___delay_20ms
   815 ;;                  _ATCommand_SendCmd
   816 ;;                     _InteractServer
   817 ;; ---------------------------------------------------------------------------------
   818 ;; (1) _ReadTData                                            1     1      0    2304
   819 ;;                                             12 BANK0      1     1      0
   820 ;;                  _DS18X20_StartMeas
   821 ;;                       ___delay_20ms
   822 ;;                   _DS18X20_ReadMeas
   823 ;;                    _TCN75_SetConfig
   824 ;;                      _TCN75_ReadReg
   825 ;;                 _LcdDisplay_CurTemp
   826 ;; ---------------------------------------------------------------------------------
   827 ;; (3) _InteractServer                                      16    16      0    4730
   828 ;;                                             22 BANK0     16    16      0
   829 ;;                    _Uart1_PutString
   830 ;;                _Uart1_PutString_Hex
   831 ;;                       _Uart1_PutHex
   832 ;;                  _MakeTxTemperature
   833 ;;                            ___lwdiv
   834 ;;                            ___lwmod
   835 ;;                             ___bmul
   836 ;;                        _eeprom_read
   837 ;;                             _strcpy
   838 ;;                 _ATCommand_WaitData
   839 ;;                       ___delay_20ms
   840 ;; ---------------------------------------------------------------------------------
   841 ;; (3) _InitGPRS                                             6     6      0    3162
   842 ;;                                             25 BANK0      6     6      0
   843 ;;                       ___delay_20ms
   844 ;;                  _ATCommand_SendCmd
   845 ;;                             _strstr
   846 ;;                               _atoi
   847 ;;                     _LcdDisplay_CSQ
   848 ;; ---------------------------------------------------------------------------------
   849 ;; (2) _PowerON                                              1     1      0    1149
   850 ;;                                             25 BANK0      1     1      0
   851 ;;                       ___delay_20ms
   852 ;;                          _PowerDown
   853 ;;                  _ATCommand_SendCmd
   854 ;; ---------------------------------------------------------------------------------
   855 ;; (2) _DS18X20_ReadMeas                                     2     2      0     763
   856 ;;                                             10 BANK0      2     2      0
   857 ;;                      _OneWire_Reset
   858 ;;                    _OneWire_Command
   859 ;;                   _OneWire_ReadByte
   860 ;;                     _GetVerify_CRC8
   861 ;; ---------------------------------------------------------------------------------
   862 ;; (2) _DS18X20_StartMeas                                    0     0      0     285
   863 ;;                      _OneWire_Reset
   864 ;;                    _OneWire_Command
   865 ;; ---------------------------------------------------------------------------------
   866 ;; (3) _OneWire_Command                                      1     1      0     215
   867 ;;                                              4 BANK0      1     1      0
   868 ;;                      _OneWire_Reset
   869 ;;                  _OneWire_WriteByte
   870 ;; ---------------------------------------------------------------------------------
   871 ;; (4) _ATCommand_WaitData                                   5     5      0     749
   872 ;;                                             17 BANK0      5     5      0
   873 ;;                             _strstr
   874 ;;                             _strcpy
   875 ;; ---------------------------------------------------------------------------------
   876 ;; (4) _Uart1_PutString_Hex                                  3     1      2     337
   877 ;;                                              3 BANK0      3     1      2
   878 ;;                       _Uart1_PutHex
   879 ;; ---------------------------------------------------------------------------------
   880 ;; (3) _ATCommand_SendCmd                                    8     6      2    1000
   881 ;;                                             17 BANK0      8     6      2
   882 ;;                    _Uart1_PutString
   883 ;;                             _strstr
   884 ;;                       ___delay_20ms
   885 ;;                             _strcpy
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (2) _PowerDown                                            1     1      0      90
   888 ;;                                              4 BANK0      1     1      0
   889 ;;                       ___delay_20ms
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (2) _TCN75_ReadReg                                        3     3      0     383
   892 ;;                                              3 BANK0      3     3      0
   893 ;;                       _SimI2C_Start
   894 ;;                    _SimI2C_SendByte
   895 ;;                      _SimI2C_RecAck
   896 ;;                    _SimI2C_ReadByte
   897 ;;                         _SimI2C_Ack
   898 ;;                       _SimI2C_NoAck
   899 ;;                        _SimI2C_Stop
   900 ;; ---------------------------------------------------------------------------------
   901 ;; (2) _TCN75_SetConfig                                      2     2      0     244
   902 ;;                                              3 BANK0      2     2      0
   903 ;;                       _SimI2C_Start
   904 ;;                    _SimI2C_SendByte
   905 ;;                      _SimI2C_RecAck
   906 ;;                        _SimI2C_Stop
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (2) _InitVariable                                         0     0      0     621
   909 ;;                         _GetRomData
   910 ;;                        _SaveRomData
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (3) _SimI2C_Stop                                          0     0      0       0
   913 ;; ---------------------------------------------------------------------------------
   914 ;; (3) _SimI2C_NoAck                                         0     0      0       0
   915 ;; ---------------------------------------------------------------------------------
   916 ;; (3) _SimI2C_Ack                                           0     0      0       0
   917 ;; ---------------------------------------------------------------------------------
   918 ;; (3) _SimI2C_ReadByte                                      2     2      0     108
   919 ;;                                              0 BANK0      2     2      0
   920 ;; ---------------------------------------------------------------------------------
   921 ;; (3) _SimI2C_RecAck                                        1     1      0      34
   922 ;;                                              0 BANK0      1     1      0
   923 ;; ---------------------------------------------------------------------------------
   924 ;; (3) _SimI2C_SendByte                                      3     3      0     139
   925 ;;                                              0 BANK0      3     3      0
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (3) _SimI2C_Start                                         0     0      0       0
   928 ;; ---------------------------------------------------------------------------------
   929 ;; (4) _OneWire_WriteByte                                    4     4      0     114
   930 ;;                                              0 BANK0      4     4      0
   931 ;; ---------------------------------------------------------------------------------
   932 ;; (3) _OneWire_ReadByte                                     4     4      0     115
   933 ;;                                              0 BANK0      4     4      0
   934 ;; ---------------------------------------------------------------------------------
   935 ;; (4) _atoi                                                 9     7      2     569
   936 ;;                                              6 BANK0      9     7      2
   937 ;;                             ___wmul
   938 ;;                            _isdigit
   939 ;; ---------------------------------------------------------------------------------
   940 ;; (5) _strstr                                               4     0      4     562
   941 ;;                                             13 BANK0      4     0      4
   942 ;;                             _strlen
   943 ;;                            _strncmp
   944 ;;                             _strchr
   945 ;; ---------------------------------------------------------------------------------
   946 ;; (4) _Uart1_PutHex                                         2     2      0     238
   947 ;;                                              1 BANK0      2     2      0
   948 ;;                      _Uart1_PutChar
   949 ;; ---------------------------------------------------------------------------------
   950 ;; (4) _Uart1_PutString                                      3     1      2     130
   951 ;;                                              1 BANK0      3     1      2
   952 ;;                      _Uart1_PutChar
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (2) ___delay_20ms                                         4     2      2      22
   955 ;;                                              0 BANK0      4     2      2
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (2) _TCN75_Init                                           0     0      0       0
   958 ;;                        _SimI2C_Init
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (4) _OneWire_Reset                                        3     3      0      70
   961 ;;                                              0 BANK0      3     3      0
   962 ;; ---------------------------------------------------------------------------------
   963 ;; (2) _ATCommand_Init                                       0     0      0      73
   964 ;;                             _strcpy
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (3) _SaveRomData                                          1     1      0     312
   967 ;;                                              7 BANK0      1     1      0
   968 ;;                      _GetVerify_Sum
   969 ;;                       _eeprom_write
   970 ;; ---------------------------------------------------------------------------------
   971 ;; (3) _GetRomData                                           1     1      0     309
   972 ;;                                              7 BANK0      1     1      0
   973 ;;                        _eeprom_read
   974 ;;                      _GetVerify_Sum
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (2) _LcdDisplay_Err                                       0     0      0     400
   977 ;;                            ___lbdiv
   978 ;;                            ___lbmod
   979 ;;                      _LcdDisplayNum
   980 ;; ---------------------------------------------------------------------------------
   981 ;; (2) _LcdDisplay_CurTemp                                   4     4      0     536
   982 ;;                                              5 BANK0      4     4      0
   983 ;;                            ___lbdiv
   984 ;;                            ___lbmod
   985 ;;                      _LcdDisplayNum
   986 ;; ---------------------------------------------------------------------------------
   987 ;; (4) _LcdDisplay_CSQ                                       2     2      0     468
   988 ;;                                              5 BANK0      2     2      0
   989 ;;                            ___lbdiv
   990 ;;                            ___lbmod
   991 ;;                      _LcdDisplayNum
   992 ;; ---------------------------------------------------------------------------------
   993 ;; (2) _LcdDisplayAll                                        1     1      0      93
   994 ;;                                              0 BANK0      1     1      0
   995 ;;                      _LcdDisplayNum
   996 ;; ---------------------------------------------------------------------------------
   997 ;; (3) ___lbmod                                              5     4      1     159
   998 ;;                                              0 BANK0      5     4      1
   999 ;; ---------------------------------------------------------------------------------
  1000 ;; (3) ___lbdiv                                              4     3      1     241
  1001 ;;                                              0 BANK0      4     3      1
  1002 ;; ---------------------------------------------------------------------------------
  1003 ;; (4) ___lwmod                                              5     1      4     232
  1004 ;;                                              0 BANK0      5     1      4
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (4) ___lwdiv                                              7     3      4     241
  1007 ;;                                              0 BANK0      7     3      4
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (5) ___wmul                                               6     2      4     136
  1010 ;;                                              0 BANK0      6     2      4
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (1) ___bmul                                               3     2      1     136
  1013 ;;                                              0 BANK0      3     2      1
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (6) _strchr                                               6     2      4      88
  1016 ;;                                              0 BANK0      6     2      4
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (6) _strncmp                                              7     1      6     134
  1019 ;;                                              6 BANK0      7     1      6
  1020 ;;                             _strlen (ARG)
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (6) _strlen                                               6     4      2      89
  1023 ;;                                              0 BANK0      6     4      2
  1024 ;; ---------------------------------------------------------------------------------
  1025 ;; (5) _isdigit                                              2     2      0      99
  1026 ;;                                              0 BANK0      2     2      0
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (5) _Uart1_PutChar                                        1     1      0      31
  1029 ;;                                              0 BANK0      1     1      0
  1030 ;; ---------------------------------------------------------------------------------
  1031 ;; (3) _SimI2C_Init                                          0     0      0       0
  1032 ;; ---------------------------------------------------------------------------------
  1033 ;; (3) _GetVerify_CRC8                                      10     8      2     233
  1034 ;;                                              0 BANK0     10     8      2
  1035 ;; ---------------------------------------------------------------------------------
  1036 ;; (4) _GetVerify_Sum                                        7     5      2     120
  1037 ;;                                              0 BANK0      7     5      2
  1038 ;; ---------------------------------------------------------------------------------
  1039 ;; (5) _strcpy                                               6     4      2      73
  1040 ;;                                              0 BANK0      6     4      2
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (4) _eeprom_read                                          3     3      0      22
  1043 ;;                                              0 BANK0      3     3      0
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; (4) _MakeTxTemperature                                    3     1      2     556
  1046 ;;                                              0 BANK0      3     1      2
  1047 ;; ---------------------------------------------------------------------------------
  1048 ;; (1) _eeprom_write                                         2     1      1      62
  1049 ;;                                              0 BANK0      2     1      1
  1050 ;; ---------------------------------------------------------------------------------
  1051 ;; (2) _InitMCU                                              0     0      0       0
  1052 ;; ---------------------------------------------------------------------------------
  1053 ;; (2) _DisplayInit                                          0     0      0       0
  1054 ;; ---------------------------------------------------------------------------------
  1055 ;; (3) _LcdDisplayNum                                        0     0      0       0
  1056 ;; ---------------------------------------------------------------------------------
  1057 ;; Estimated maximum stack depth 6
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1060 ;; ---------------------------------------------------------------------------------
  1061 ;; (8) _highISR                                              1     1      0     179
  1062 ;;                                              6 COMMON     1     1      0
  1063 ;;                   _ATCommand_ProcRx
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (9) _ATCommand_ProcRx                                     4     4      0     156
  1066 ;;                                              2 COMMON     4     4      0
  1067 ;;                            _isgraph
  1068 ;; ---------------------------------------------------------------------------------
  1069 ;; (10) _isgraph                                             2     2      0      68
  1070 ;;                                              0 COMMON     2     2      0
  1071 ;; ---------------------------------------------------------------------------------
  1072 ;; Estimated maximum stack depth 10
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; Call Graph Graphs:
  1075 ;; _main (ROOT)
  1076 ;;   _InitSystem
  1077 ;;     _InitMCU
  1078 ;;     _InitVariable
  1079 ;;       _GetRomData
  1080 ;;         _eeprom_read
  1081 ;;         _GetVerify_Sum
  1082 ;;       _SaveRomData
  1083 ;;         _GetVerify_Sum
  1084 ;;         _eeprom_write
  1085 ;;     _DisplayInit
  1086 ;;     _ATCommand_Init
  1087 ;;       _strcpy
  1088 ;;     _OneWire_Reset
  1089 ;;     _TCN75_Init
  1090 ;;       _SimI2C_Init
  1091 ;;     _TCN75_SetConfig
  1092 ;;       _SimI2C_Start
  1093 ;;       _SimI2C_SendByte
  1094 ;;       _SimI2C_RecAck
  1095 ;;       _SimI2C_Stop
  1096 ;;     ___delay_20ms
  1097 ;;     _ReadTData
  1098 ;;       _DS18X20_StartMeas
  1099 ;;         _OneWire_Reset
  1100 ;;         _OneWire_Command
  1101 ;;           _OneWire_Reset
  1102 ;;           _OneWire_WriteByte
  1103 ;;       ___delay_20ms
  1104 ;;       _DS18X20_ReadMeas
  1105 ;;         _OneWire_Reset
  1106 ;;         _OneWire_Command
  1107 ;;           _OneWire_Reset
  1108 ;;           _OneWire_WriteByte
  1109 ;;         _OneWire_ReadByte
  1110 ;;         _GetVerify_CRC8
  1111 ;;       _TCN75_SetConfig
  1112 ;;         _SimI2C_Start
  1113 ;;         _SimI2C_SendByte
  1114 ;;         _SimI2C_RecAck
  1115 ;;         _SimI2C_Stop
  1116 ;;       _TCN75_ReadReg
  1117 ;;         _SimI2C_Start
  1118 ;;         _SimI2C_SendByte
  1119 ;;         _SimI2C_RecAck
  1120 ;;         _SimI2C_ReadByte
  1121 ;;         _SimI2C_Ack
  1122 ;;         _SimI2C_NoAck
  1123 ;;         _SimI2C_Stop
  1124 ;;       _LcdDisplay_CurTemp
  1125 ;;         ___lbdiv
  1126 ;;         ___lbmod
  1127 ;;         _LcdDisplayNum
  1128 ;;   ___delay_20ms
  1129 ;;   _TestProc
  1130 ;;     _LcdDisplayAll
  1131 ;;       _LcdDisplayNum
  1132 ;;     ___delay_20ms
  1133 ;;     _ReadTData
  1134 ;;       _DS18X20_StartMeas
  1135 ;;         _OneWire_Reset
  1136 ;;         _OneWire_Command
  1137 ;;           _OneWire_Reset
  1138 ;;           _OneWire_WriteByte
  1139 ;;       ___delay_20ms
  1140 ;;       _DS18X20_ReadMeas
  1141 ;;         _OneWire_Reset
  1142 ;;         _OneWire_Command
  1143 ;;           _OneWire_Reset
  1144 ;;           _OneWire_WriteByte
  1145 ;;         _OneWire_ReadByte
  1146 ;;         _GetVerify_CRC8
  1147 ;;       _TCN75_SetConfig
  1148 ;;         _SimI2C_Start
  1149 ;;         _SimI2C_SendByte
  1150 ;;         _SimI2C_RecAck
  1151 ;;         _SimI2C_Stop
  1152 ;;       _TCN75_ReadReg
  1153 ;;         _SimI2C_Start
  1154 ;;         _SimI2C_SendByte
  1155 ;;         _SimI2C_RecAck
  1156 ;;         _SimI2C_ReadByte
  1157 ;;         _SimI2C_Ack
  1158 ;;         _SimI2C_NoAck
  1159 ;;         _SimI2C_Stop
  1160 ;;       _LcdDisplay_CurTemp
  1161 ;;         ___lbdiv
  1162 ;;         ___lbmod
  1163 ;;         _LcdDisplayNum
  1164 ;;     _LcdDisplay_Err
  1165 ;;       ___lbdiv
  1166 ;;       ___lbmod
  1167 ;;       _LcdDisplayNum
  1168 ;;     _CallTestProc
  1169 ;;       _PowerON
  1170 ;;         ___delay_20ms
  1171 ;;         _PowerDown
  1172 ;;           ___delay_20ms
  1173 ;;         _ATCommand_SendCmd
  1174 ;;           _Uart1_PutString
  1175 ;;             _Uart1_PutChar
  1176 ;;           _strstr
  1177 ;;             _strlen
  1178 ;;             _strncmp
  1179 ;;               _strlen (ARG)
  1180 ;;             _strchr
  1181 ;;           ___delay_20ms
  1182 ;;           _strcpy
  1183 ;;       _CallTestSend
  1184 ;;         _InitGPRS
  1185 ;;           ___delay_20ms
  1186 ;;           _ATCommand_SendCmd
  1187 ;;             _Uart1_PutString
  1188 ;;               _Uart1_PutChar
  1189 ;;             _strstr
  1190 ;;               _strlen
  1191 ;;               _strncmp
  1192 ;;                 _strlen (ARG)
  1193 ;;               _strchr
  1194 ;;             ___delay_20ms
  1195 ;;             _strcpy
  1196 ;;           _strstr
  1197 ;;             _strlen
  1198 ;;             _strncmp
  1199 ;;               _strlen (ARG)
  1200 ;;             _strchr
  1201 ;;           _atoi
  1202 ;;             ___wmul
  1203 ;;             _isdigit
  1204 ;;           _LcdDisplay_CSQ
  1205 ;;             ___lbdiv
  1206 ;;             ___lbmod
  1207 ;;             _LcdDisplayNum
  1208 ;;         _ATCommand_SendCmd
  1209 ;;           _Uart1_PutString
  1210 ;;             _Uart1_PutChar
  1211 ;;           _strstr
  1212 ;;             _strlen
  1213 ;;             _strncmp
  1214 ;;               _strlen (ARG)
  1215 ;;             _strchr
  1216 ;;           ___delay_20ms
  1217 ;;           _strcpy
  1218 ;;         ___delay_20ms
  1219 ;;         _InteractServer
  1220 ;;           _Uart1_PutString
  1221 ;;             _Uart1_PutChar
  1222 ;;           _Uart1_PutString_Hex
  1223 ;;             _Uart1_PutHex
  1224 ;;               _Uart1_PutChar
  1225 ;;           _Uart1_PutHex
  1226 ;;             _Uart1_PutChar
  1227 ;;           _MakeTxTemperature
  1228 ;;           ___lwdiv
  1229 ;;           ___lwmod
  1230 ;;           ___bmul
  1231 ;;           _eeprom_read
  1232 ;;           _strcpy
  1233 ;;           _ATCommand_WaitData
  1234 ;;             _strstr
  1235 ;;               _strlen
  1236 ;;               _strncmp
  1237 ;;                 _strlen (ARG)
  1238 ;;               _strchr
  1239 ;;             _strcpy
  1240 ;;           ___delay_20ms
  1241 ;;       _PowerDown
  1242 ;;         ___delay_20ms
  1243 ;;       _LcdDisplay_CurTemp
  1244 ;;         ___lbdiv
  1245 ;;         ___lbmod
  1246 ;;         _LcdDisplayNum
  1247 ;;       ___delay_20ms
  1248 ;;       _LcdDisplay_Err
  1249 ;;         ___lbdiv
  1250 ;;         ___lbmod
  1251 ;;         _LcdDisplayNum
  1252 ;;   _ReadTData
  1253 ;;     _DS18X20_StartMeas
  1254 ;;       _OneWire_Reset
  1255 ;;       _OneWire_Command
  1256 ;;         _OneWire_Reset
  1257 ;;         _OneWire_WriteByte
  1258 ;;     ___delay_20ms
  1259 ;;     _DS18X20_ReadMeas
  1260 ;;       _OneWire_Reset
  1261 ;;       _OneWire_Command
  1262 ;;         _OneWire_Reset
  1263 ;;         _OneWire_WriteByte
  1264 ;;       _OneWire_ReadByte
  1265 ;;       _GetVerify_CRC8
  1266 ;;     _TCN75_SetConfig
  1267 ;;       _SimI2C_Start
  1268 ;;       _SimI2C_SendByte
  1269 ;;       _SimI2C_RecAck
  1270 ;;       _SimI2C_Stop
  1271 ;;     _TCN75_ReadReg
  1272 ;;       _SimI2C_Start
  1273 ;;       _SimI2C_SendByte
  1274 ;;       _SimI2C_RecAck
  1275 ;;       _SimI2C_ReadByte
  1276 ;;       _SimI2C_Ack
  1277 ;;       _SimI2C_NoAck
  1278 ;;       _SimI2C_Stop
  1279 ;;     _LcdDisplay_CurTemp
  1280 ;;       ___lbdiv
  1281 ;;       ___lbmod
  1282 ;;       _LcdDisplayNum
  1283 ;;   _CallProc
  1284 ;;     _PowerON
  1285 ;;       ___delay_20ms
  1286 ;;       _PowerDown
  1287 ;;         ___delay_20ms
  1288 ;;       _ATCommand_SendCmd
  1289 ;;         _Uart1_PutString
  1290 ;;           _Uart1_PutChar
  1291 ;;         _strstr
  1292 ;;           _strlen
  1293 ;;           _strncmp
  1294 ;;             _strlen (ARG)
  1295 ;;           _strchr
  1296 ;;         ___delay_20ms
  1297 ;;         _strcpy
  1298 ;;     _CallSend
  1299 ;;       _InitGPRS
  1300 ;;         ___delay_20ms
  1301 ;;         _ATCommand_SendCmd
  1302 ;;           _Uart1_PutString
  1303 ;;             _Uart1_PutChar
  1304 ;;           _strstr
  1305 ;;             _strlen
  1306 ;;             _strncmp
  1307 ;;               _strlen (ARG)
  1308 ;;             _strchr
  1309 ;;           ___delay_20ms
  1310 ;;           _strcpy
  1311 ;;         _strstr
  1312 ;;           _strlen
  1313 ;;           _strncmp
  1314 ;;             _strlen (ARG)
  1315 ;;           _strchr
  1316 ;;         _atoi
  1317 ;;           ___wmul
  1318 ;;           _isdigit
  1319 ;;         _LcdDisplay_CSQ
  1320 ;;           ___lbdiv
  1321 ;;           ___lbmod
  1322 ;;           _LcdDisplayNum
  1323 ;;       ___delay_20ms
  1324 ;;       _ATCommand_SendCmd
  1325 ;;         _Uart1_PutString
  1326 ;;           _Uart1_PutChar
  1327 ;;         _strstr
  1328 ;;           _strlen
  1329 ;;           _strncmp
  1330 ;;             _strlen (ARG)
  1331 ;;           _strchr
  1332 ;;         ___delay_20ms
  1333 ;;         _strcpy
  1334 ;;       _InteractServer
  1335 ;;         _Uart1_PutString
  1336 ;;           _Uart1_PutChar
  1337 ;;         _Uart1_PutString_Hex
  1338 ;;           _Uart1_PutHex
  1339 ;;             _Uart1_PutChar
  1340 ;;         _Uart1_PutHex
  1341 ;;           _Uart1_PutChar
  1342 ;;         _MakeTxTemperature
  1343 ;;         ___lwdiv
  1344 ;;         ___lwmod
  1345 ;;         ___bmul
  1346 ;;         _eeprom_read
  1347 ;;         _strcpy
  1348 ;;         _ATCommand_WaitData
  1349 ;;           _strstr
  1350 ;;             _strlen
  1351 ;;             _strncmp
  1352 ;;               _strlen (ARG)
  1353 ;;             _strchr
  1354 ;;           _strcpy
  1355 ;;         ___delay_20ms
  1356 ;;     _PowerDown
  1357 ;;       ___delay_20ms
  1358 ;;     _LcdDisplay_CurTemp
  1359 ;;       ___lbdiv
  1360 ;;       ___lbmod
  1361 ;;       _LcdDisplayNum
  1362 ;;     ___delay_20ms
  1363 ;;     _LcdDisplay_Err
  1364 ;;       ___lbdiv
  1365 ;;       ___lbmod
  1366 ;;       _LcdDisplayNum
  1367 ;;   ___bmul
  1368 ;;   _eeprom_write
  1369 ;;
  1370 ;; _highISR (ROOT)
  1371 ;;   _ATCommand_ProcRx
  1372 ;;     _isgraph
  1373 ;;
  1374 ;; Address spaces:
  1375 ;;Name               Size   Autos  Total    Cost      Usage
  1376 ;;BIGRAM             1F0      0       0       0        0.0%
  1377 ;;EEDATA             100      0       0       0        0.0%
  1378 ;;NULL                 0      0       0       0        0.0%
  1379 ;;CODE                 0      0       0       0        0.0%
  1380 ;;BITCOMMON            E      0       0       1        0.0%
  1381 ;;BITSFR0              0      0       0       1        0.0%
  1382 ;;SFR0                 0      0       0       1        0.0%
  1383 ;;COMMON               E      7       A       2       71.4%
  1384 ;;BITSFR1              0      0       0       2        0.0%
  1385 ;;SFR1                 0      0       0       2        0.0%
  1386 ;;BITSFR2              0      0       0       3        0.0%
  1387 ;;SFR2                 0      0       0       3        0.0%
  1388 ;;STACK                0      0       D       3        0.0%
  1389 ;;BITSFR3              0      0       0       4        0.0%
  1390 ;;SFR3                 0      0       0       4        0.0%
  1391 ;;ABS                  0      0      AE       4        0.0%
  1392 ;;BITBANK0            50      0       0       5        0.0%
  1393 ;;BITSFR4              0      0       0       5        0.0%
  1394 ;;SFR4                 0      0       0       5        0.0%
  1395 ;;BANK0               50     2D      50       6      100.0%
  1396 ;;BITSFR5              0      0       0       6        0.0%
  1397 ;;SFR5                 0      0       0       6        0.0%
  1398 ;;BITBANK1            50      0       0       7        0.0%
  1399 ;;BITSFR6              0      0       0       7        0.0%
  1400 ;;SFR6                 0      0       0       7        0.0%
  1401 ;;BANK1               50      0      3C       8       75.0%
  1402 ;;BITSFR7              0      0       0       8        0.0%
  1403 ;;SFR7                 0      0       0       8        0.0%
  1404 ;;BITBANK2            50      0       0       9        0.0%
  1405 ;;BITSFR8              0      0       0       9        0.0%
  1406 ;;SFR8                 0      0       0       9        0.0%
  1407 ;;BANK2               50      0      18      10       30.0%
  1408 ;;BITSFR9              0      0       0      10        0.0%
  1409 ;;SFR9                 0      0       0      10        0.0%
  1410 ;;BITBANK3            50      0       0      11        0.0%
  1411 ;;BITSFR10             0      0       0      11        0.0%
  1412 ;;SFR10                0      0       0      11        0.0%
  1413 ;;BANK3               50      0       0      12        0.0%
  1414 ;;BITSFR11             0      0       0      12        0.0%
  1415 ;;SFR11                0      0       0      12        0.0%
  1416 ;;BITBANK4            50      0       0      13        0.0%
  1417 ;;BITSFR12             0      0       0      13        0.0%
  1418 ;;SFR12                0      0       0      13        0.0%
  1419 ;;BANK4               4C      0       0      14        0.0%
  1420 ;;BITSFR13             0      0       0      14        0.0%
  1421 ;;SFR13                0      0       0      14        0.0%
  1422 ;;BITBANK5            50      0       0      15        0.0%
  1423 ;;BITSFR14             0      0       0      15        0.0%
  1424 ;;SFR14                0      0       0      15        0.0%
  1425 ;;BITSFR15             0      0       0      16        0.0%
  1426 ;;SFR15                0      0       0      16        0.0%
  1427 ;;BANK5                0      0       0      16        0.0%
  1428 ;;BITBANK6            10      0       0      17        0.0%
  1429 ;;BITSFR16             0      0       0      17        0.0%
  1430 ;;SFR16                0      0       0      17        0.0%
  1431 ;;BITSFR17             0      0       0      18        0.0%
  1432 ;;SFR17                0      0       0      18        0.0%
  1433 ;;BANK6                0      0       0      18        0.0%
  1434 ;;BITSFR18             0      0       0      19        0.0%
  1435 ;;SFR18                0      0       0      19        0.0%
  1436 ;;DATA                 0      0      BB      19        0.0%
  1437 ;;BITSFR19             0      0       0      20        0.0%
  1438 ;;SFR19                0      0       0      20        0.0%
  1439 ;;BITSFR20             0      0       0      21        0.0%
  1440 ;;SFR20                0      0       0      21        0.0%
  1441 ;;BITSFR21             0      0       0      22        0.0%
  1442 ;;SFR21                0      0       0      22        0.0%
  1443 ;;BITSFR22             0      0       0      23        0.0%
  1444 ;;SFR22                0      0       0      23        0.0%
  1445 ;;BITSFR23             0      0       0      24        0.0%
  1446 ;;SFR23                0      0       0      24        0.0%
  1447 ;;BITSFR24             0      0       0      25        0.0%
  1448 ;;SFR24                0      0       0      25        0.0%
  1449 ;;BITSFR25             0      0       0      26        0.0%
  1450 ;;SFR25                0      0       0      26        0.0%
  1451 ;;BITSFR26             0      0       0      27        0.0%
  1452 ;;SFR26                0      0       0      27        0.0%
  1453 ;;BITSFR27             0      0       0      28        0.0%
  1454 ;;SFR27                0      0       0      28        0.0%
  1455 ;;BITSFR28             0      0       0      29        0.0%
  1456 ;;SFR28                0      0       0      29        0.0%
  1457 ;;BITSFR29             0      0       0      30        0.0%
  1458 ;;SFR29                0      0       0      30        0.0%
  1459 ;;BITSFR30             0      0       0      31        0.0%
  1460 ;;SFR30                0      0       0      31        0.0%
  1461 ;;BITSFR31             0      0       0      32        0.0%
  1462 ;;SFR31                0      0       0      32        0.0%
  1463                           
  1464                           
  1465 ;; *************** function _main *****************
  1466 ;; Defined at:
  1467 ;;		line 12 in file "F:\work\WYP\NBIoT\Main.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;		None
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  i               1   44[BANK0 ] unsigned char 
  1472 ;;  addr            1   43[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;		None               void
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : 17F/0
  1479 ;;		On exit  : 1F/F
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1482 ;;      Params:         0       0       0       0       0       0       0       0
  1483 ;;      Locals:         0       2       0       0       0       0       0       0
  1484 ;;      Temps:          0       2       0       0       0       0       0       0
  1485 ;;      Totals:         0       4       0       0       0       0       0       0
  1486 ;;Total ram usage:        4 bytes
  1487 ;; Hardware stack levels required when called:   10
  1488 ;; This function calls:
  1489 ;;		_InitSystem
  1490 ;;		___delay_20ms
  1491 ;;		_TestProc
  1492 ;;		_ReadTData
  1493 ;;		_CallProc
  1494 ;;		___bmul
  1495 ;;		_eeprom_write
  1496 ;; This function is called by:
  1497 ;;		Startup code after reset
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500  0842                     _main:	
  1501                           
  1502                           ;Main.c: 13: unsigned char addr,i;
  1503                           ;Main.c: 14: InitSystem();
  1504                           
  1505                           ; Regs used in _main: [wreg-btemp+0+pclath+cstack]
  1506  0842  3184  2417  3188   	fcall	_InitSystem
  1507                           
  1508                           ;Main.c: 15: __delay_20ms(250);
  1509  0845  30FA               	movlw	250
  1510  0846  00A0               	movwf	?___delay_20ms
  1511  0847  01A1               	clrf	?___delay_20ms+1
  1512  0848  2336               	fcall	___delay_20ms
  1513                           
  1514                           ;Main.c: 16: gFlags.bFirst=1;
  1515  0849  1566               	bsf	_gFlags,2
  1516                           
  1517                           ;Main.c: 17: TestProc();
  1518  084A  3180  207E  3188   	fcall	_TestProc
  1519                           
  1520                           ;Main.c: 18: ReadTData();
  1521  084D  20DD               	fcall	_ReadTData
  1522                           
  1523                           ;Main.c: 19: CallProc();
  1524  084E  3180  202C  3188   	fcall	_CallProc
  1525                           
  1526                           ;Main.c: 20: gFlags.bFirst=0;
  1527  0851  0020               	movlb	0	; select bank0
  1528  0852  1166               	bcf	_gFlags,2
  1529                           
  1530                           ;Main.c: 21: MeasurementTick=SystemTick;
  1531  0853  085E               	movf	_SystemTick+1,w
  1532  0854  00D8               	movwf	_MeasurementTick+1
  1533  0855  085D               	movf	_SystemTick,w
  1534  0856  00D7               	movwf	_MeasurementTick
  1535  0857                     l34086:	
  1536                           
  1537                           ;Main.c: 23: {
  1538                           ;Main.c: 24: if(RB2==0)
  1539  0857  0020               	movlb	0	; select bank0
  1540  0858  190D               	btfsc	13,2
  1541  0859  286D               	goto	l34100
  1542                           
  1543                           ;Main.c: 25: {
  1544                           ;Main.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1545  085A  301A               	movlw	26
  1546  085B  00CA               	movwf	??_main+1
  1547  085C  30F8               	movlw	248
  1548  085D  00C9               	movwf	??_main
  1549  085E                     u9897:	
  1550  085E  0BC9               	decfsz	??_main,f
  1551  085F  285E               	goto	u9897
  1552  0860  0BCA               	decfsz	??_main+1,f
  1553  0861  285E               	goto	u9897
  1554  0862  0064               	clrwdt
  1555                           
  1556                           ;Main.c: 27: if(RB2==0)
  1557  0863  0020               	movlb	0	; select bank0
  1558  0864  190D               	btfsc	13,2
  1559  0865  286D               	goto	l34100
  1560                           
  1561                           ;Main.c: 28: {
  1562                           ;Main.c: 29: gFlags.bNotify=1;
  1563  0866  1466               	bsf	_gFlags,0
  1564                           
  1565                           ;Main.c: 30: ReadTData();
  1566  0867  20DD               	fcall	_ReadTData
  1567                           
  1568                           ;Main.c: 31: CallProc();
  1569  0868  3180  202C  3188   	fcall	_CallProc
  1570                           
  1571                           ;Main.c: 32: gFlags.bNotify=0;
  1572  086B  0020               	movlb	0	; select bank0
  1573  086C  1066               	bcf	_gFlags,0
  1574  086D                     l34100:	
  1575                           
  1576                           ;Main.c: 33: }
  1577                           ;Main.c: 34: }
  1578                           ;Main.c: 35: if((SystemTick-RunTick)>20)
  1579  086D  085B               	movf	_RunTick,w
  1580  086E  025D               	subwf	_SystemTick,w
  1581  086F  00C9               	movwf	??_main
  1582  0870  085C               	movf	_RunTick+1,w
  1583  0871  3B5E               	subwfb	_SystemTick+1,w
  1584  0872  00CA               	movwf	??_main+1
  1585  0873  3000               	movlw	0
  1586  0874  024A               	subwf	??_main+1,w
  1587  0875  3015               	movlw	21
  1588  0876  1903               	skipnz
  1589  0877  0249               	subwf	??_main,w
  1590  0878  1C03               	skipc
  1591  0879  2883               	goto	l34106
  1592                           
  1593                           ;Main.c: 36: {
  1594                           ;Main.c: 37: RunTick=SystemTick;
  1595  087A  085E               	movf	_SystemTick+1,w
  1596  087B  00DC               	movwf	_RunTick+1
  1597  087C  085D               	movf	_SystemTick,w
  1598  087D  00DB               	movwf	_RunTick
  1599  087E                     l6504:	
  1600                           ;Main.c: 39: while(WA==0);
  1601                           
  1602  087E  002F               	movlb	15	; select bank15
  1603  087F  1E12               	btfss	18,4
  1604  0880  287E               	goto	l6504
  1605                           
  1606                           ;Main.c: 40: SEG21COM3=!SEG21COM3;
  1607  0881  3020               	movlw	32
  1608  0882  06AB               	xorwf	43,f
  1609  0883                     l34106:	
  1610                           
  1611                           ;Main.c: 42: }
  1612                           ;Main.c: 43: if((SystemTick-MeasurementTick)>NeedMeasurementTick)
  1613  0883  0020               	movlb	0	; select bank0
  1614  0884  0857               	movf	_MeasurementTick,w
  1615  0885  025D               	subwf	_SystemTick,w
  1616  0886  00C9               	movwf	??_main
  1617  0887  0858               	movf	_MeasurementTick+1,w
  1618  0888  3B5E               	subwfb	_SystemTick+1,w
  1619  0889  00CA               	movwf	??_main+1
  1620  088A  025A               	subwf	_NeedMeasurementTick+1,w
  1621  088B  1D03               	skipz
  1622  088C  288F               	goto	u9825
  1623  088D  0849               	movf	??_main,w
  1624  088E  0259               	subwf	_NeedMeasurementTick,w
  1625  088F                     u9825:	
  1626  088F  1803               	skipnc
  1627  0890  28D8               	goto	l34156
  1628                           
  1629                           ;Main.c: 44: {
  1630                           ;Main.c: 45: MeasurementTick=SystemTick;
  1631  0891  085E               	movf	_SystemTick+1,w
  1632  0892  00D8               	movwf	_MeasurementTick+1
  1633  0893  085D               	movf	_SystemTick,w
  1634  0894  00D7               	movwf	_MeasurementTick
  1635                           
  1636                           ;Main.c: 46: ReadTData();
  1637  0895  20DD  3188         	fcall	_ReadTData
  1638                           
  1639                           ;Main.c: 47: TList.T[TListIndex++]=CurTemp;
  1640  0897  0020               	movlb	0	; select bank0
  1641  0898  3565               	lslf	_TListIndex,w
  1642  0899  3E20               	addlw	_TList& (0+255)
  1643  089A  0086               	movwf	6
  1644  089B  3001               	movlw	1	; select bank2/3
  1645  089C  0087               	movwf	7
  1646  089D  0855               	movf	_CurTemp,w
  1647  089E  3FC0               	movwi [0]fsr1
  1648  089F  0856               	movf	_CurTemp+1,w
  1649  08A0  3FC1               	movwi [1]fsr1
  1650  08A1  0AE5               	incf	_TListIndex,f
  1651                           
  1652                           ;Main.c: 48: if(TListIndex>=12)
  1653  08A2  300C               	movlw	12
  1654  08A3  0265               	subwf	_TListIndex,w
  1655  08A4  1C03               	skipc
  1656  08A5  28D8               	goto	l34156
  1657                           
  1658                           ;Main.c: 49: {
  1659                           ;Main.c: 50: CallProc();
  1660  08A6  3180  202C  3188   	fcall	_CallProc
  1661                           
  1662                           ;Main.c: 51: TListIndex=0;
  1663  08A9  0020               	movlb	0	; select bank0
  1664  08AA  01E5               	clrf	_TListIndex
  1665                           
  1666                           ;Main.c: 52: if(ErrState!=NoErr)
  1667  08AB  0863               	movf	_ErrState,w
  1668  08AC  1903               	btfsc	3,2
  1669  08AD  28D5               	goto	l34152
  1670                           
  1671                           ;Main.c: 53: {
  1672                           ;Main.c: 54: if(TxErrDataIndex==0xff)
  1673  08AE  0869               	movf	_TxErrDataIndex,w
  1674  08AF  3AFF               	xorlw	255
  1675  08B0  1D03               	skipz
  1676  08B1  28B3               	goto	l34128
  1677                           
  1678                           ;Main.c: 55: TxErrDataIndex=0;
  1679  08B2  01E9               	clrf	_TxErrDataIndex
  1680  08B3                     l34128:	
  1681                           
  1682                           ;Main.c: 56: addr=TxErrDataIndex*12;
  1683  08B3  300C               	movlw	12
  1684  08B4  00A0               	movwf	?___bmul
  1685  08B5  0869               	movf	_TxErrDataIndex,w
  1686  08B6  276F               	fcall	___bmul
  1687  08B7  00CB               	movwf	main@addr
  1688                           
  1689                           ;Main.c: 57: addr+=16;
  1690  08B8  3010               	movlw	16
  1691  08B9  07CB               	addwf	main@addr,f
  1692                           
  1693                           ;Main.c: 58: for(i=0;i<24;i++)
  1694  08BA  01CC               	clrf	main@i
  1695  08BB                     l34138:	
  1696                           
  1697                           ;Main.c: 59: {
  1698                           ;Main.c: 60: eeprom_write(addr+i,TList.All[i]);
  1699  08BB  084C               	movf	main@i,w
  1700  08BC  3E20               	addlw	_TList& (0+255)
  1701  08BD  0086               	movwf	6
  1702  08BE  3001               	movlw	1	; select bank2/3
  1703  08BF  0087               	movwf	7
  1704  08C0  0801               	movf	1,w
  1705  08C1  00A0               	movwf	?_eeprom_write
  1706  08C2  084B               	movf	main@addr,w
  1707  08C3  074C               	addwf	main@i,w
  1708  08C4  3185  2573  3188   	fcall	_eeprom_write
  1709  08C7  0020               	movlb	0	; select bank0
  1710  08C8  0ACC               	incf	main@i,f
  1711  08C9  3018               	movlw	24
  1712  08CA  024C               	subwf	main@i,w
  1713  08CB  1C03               	skipc
  1714  08CC  28BB               	goto	l34138
  1715                           
  1716                           ;Main.c: 61: }
  1717                           ;Main.c: 62: TxErrDataIndex++;
  1718  08CD  0AE9               	incf	_TxErrDataIndex,f
  1719                           
  1720                           ;Main.c: 63: if(TxErrDataIndex>=10)
  1721  08CE  300A               	movlw	10
  1722  08CF  0269               	subwf	_TxErrDataIndex,w
  1723  08D0  1C03               	skipc
  1724  08D1  28D8               	goto	l34156
  1725                           
  1726                           ;Main.c: 64: {
  1727                           ;Main.c: 65: gFlags.bErrFull=1;
  1728  08D2  15E6               	bsf	_gFlags,3
  1729                           
  1730                           ;Main.c: 66: TxErrDataIndex=0;
  1731  08D3  01E9               	clrf	_TxErrDataIndex
  1732  08D4  28D8               	goto	l34156
  1733  08D5                     l34152:	
  1734                           
  1735                           ;Main.c: 69: else
  1736                           ;Main.c: 70: {
  1737                           ;Main.c: 71: TxErrDataIndex=0xff;
  1738  08D5  30FF               	movlw	255
  1739  08D6  00E9               	movwf	_TxErrDataIndex
  1740                           
  1741                           ;Main.c: 72: gFlags.bErrFull=0;
  1742  08D7  11E6               	bcf	_gFlags,3
  1743  08D8                     l34156:	
  1744                           
  1745                           ;Main.c: 73: }
  1746                           ;Main.c: 74: }
  1747                           ;Main.c: 75: }
  1748                           ;Main.c: 76: if(WERR==1)
  1749  08D8  002F               	movlb	15	; select bank15
  1750  08D9  1E91               	btfss	17,5
  1751  08DA  2857               	goto	l34086
  1752                           
  1753                           ;Main.c: 77: {
  1754                           ;Main.c: 78: WERR=0;
  1755  08DB  1291               	bcf	17,5
  1756  08DC  2857               	goto	l34086
  1757  08DD                     __end_of_main:	
  1758  08DD                     __ptext2089:	
  1759 ;; =============== function _CallSend ends ============
  1760                           
  1761                           
  1762 ;; *************** function _ReadTData *****************
  1763 ;; Defined at:
  1764 ;;		line 106 in file "F:\work\WYP\NBIoT\Main.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;		None
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  retry           1   12[BANK0 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 10/0
  1775 ;;		On exit  : 1F/F
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1778 ;;      Params:         0       0       0       0       0       0       0       0
  1779 ;;      Locals:         0       1       0       0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0
  1781 ;;      Totals:         0       1       0       0       0       0       0       0
  1782 ;;Total ram usage:        1 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    6
  1785 ;; This function calls:
  1786 ;;		_DS18X20_StartMeas
  1787 ;;		___delay_20ms
  1788 ;;		_DS18X20_ReadMeas
  1789 ;;		_TCN75_SetConfig
  1790 ;;		_TCN75_ReadReg
  1791 ;;		_LcdDisplay_CurTemp
  1792 ;; This function is called by:
  1793 ;;		_InitSystem
  1794 ;;		_main
  1795 ;;		_TestProc
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798  08DD                     _ReadTData:	
  1799                           
  1800                           ;Main.c: 107: unsigned char retry;
  1801                           ;Main.c: 108: if(gFlags.b18B20)
  1802                           
  1803                           ; Regs used in _ReadTData: [wreg-status,0+pclath+cstack]
  1804  08DD  0020               	movlb	0	; select bank0
  1805  08DE  1CE6               	btfss	_gFlags,1
  1806  08DF  2908               	goto	l6527
  1807                           
  1808                           ;Main.c: 109: {
  1809                           ;Main.c: 110: retry=5;
  1810  08E0  3005               	movlw	5
  1811  08E1  00AC               	movwf	ReadTData@retry
  1812  08E2                     l6528:	
  1813                           ;Main.c: 111: while(retry!=0)
  1814                           
  1815  08E2  08AC               	movf	ReadTData@retry,f
  1816  08E3  1903               	btfsc	3,2
  1817  08E4  2901               	goto	l33824
  1818                           
  1819                           ;Main.c: 112: {
  1820                           ;Main.c: 113: if(DS18X20_StartMeas()!=0x00)
  1821  08E5  3183  2354  3188   	fcall	_DS18X20_StartMeas
  1822  08E8  3A00               	xorlw	0
  1823  08E9  1903               	skipnz
  1824  08EA  28EE               	goto	l33814
  1825  08EB                     l33812:	
  1826                           
  1827                           ;Main.c: 114: {
  1828                           ;Main.c: 115: retry--;
  1829  08EB  0020               	movlb	0	; select bank0
  1830  08EC  03AC               	decf	ReadTData@retry,f
  1831                           
  1832                           ;Main.c: 116: }
  1833  08ED  28E2               	goto	l6528
  1834  08EE                     l33814:	
  1835                           
  1836                           ;Main.c: 117: else
  1837                           ;Main.c: 118: {
  1838                           ;Main.c: 119: __delay_20ms(50);
  1839  08EE  3032               	movlw	50
  1840  08EF  00A0               	movwf	?___delay_20ms
  1841  08F0  01A1               	clrf	?___delay_20ms+1
  1842  08F1  2336               	fcall	___delay_20ms
  1843                           
  1844                           ;Main.c: 120: if(DS18X20_ReadMeas(1)==0x00)
  1845  08F2  3001               	movlw	1
  1846  08F3  3183  235B  3188   	fcall	_DS18X20_ReadMeas
  1847  08F6  3800               	iorlw	0
  1848  08F7  1D03               	skipz
  1849  08F8  28EB               	goto	l33812
  1850                           
  1851                           ;Main.c: 121: {
  1852                           ;Main.c: 122: CurTemp.u8L=DS18X20_Scratchpad[0];
  1853  08F9  0021               	movlb	1	; select bank1
  1854  08FA  0853               	movf	_DS18X20_Scratchpad^(0+128),w
  1855  08FB  0020               	movlb	0	; select bank0
  1856  08FC  00D5               	movwf	_CurTemp
  1857                           
  1858                           ;Main.c: 123: CurTemp.u8H=DS18X20_Scratchpad[1];
  1859  08FD  0021               	movlb	1	; select bank1
  1860  08FE  0854               	movf	(_DS18X20_Scratchpad^(0+128)+1),w
  1861  08FF  0020               	movlb	0	; select bank0
  1862  0900  00D6               	movwf	_CurTemp+1
  1863  0901                     l33824:	
  1864                           ;Main.c: 124: break;
  1865                           
  1866                           
  1867                           ;Main.c: 129: }
  1868                           ;Main.c: 130: }
  1869                           ;Main.c: 131: }
  1870                           ;Main.c: 132: if(retry==0)
  1871  0901  08AC               	movf	ReadTData@retry,f
  1872  0902  1D03               	skipz
  1873  0903  2927               	goto	l33838
  1874  0904                     l33826:	
  1875                           
  1876                           ;Main.c: 133: CurTemp.u16=0xf000;
  1877  0904  01D5               	clrf	_CurTemp
  1878  0905  30F0               	movlw	240
  1879  0906  00D6               	movwf	_CurTemp+1
  1880  0907  2927               	goto	l33838
  1881  0908                     l6527:	
  1882                           
  1883                           ;Main.c: 135: else
  1884                           ;Main.c: 136: {
  1885                           ;Main.c: 137: TCN75_Config.OneShot=1;
  1886  0908  17E4               	bsf	_TCN75_Config,7
  1887                           
  1888                           ;Main.c: 138: if(TCN75_SetConfig()==1)
  1889  0909  3185  258F  3188   	fcall	_TCN75_SetConfig
  1890  090C  3A01               	xorlw	1
  1891  090D  1D03               	skipz
  1892  090E  2904               	goto	l33826
  1893                           
  1894                           ;Main.c: 139: {
  1895                           ;Main.c: 140: __delay_20ms(25);
  1896  090F  3019               	movlw	25
  1897  0910  00A0               	movwf	?___delay_20ms
  1898  0911  01A1               	clrf	?___delay_20ms+1
  1899  0912  2336               	fcall	___delay_20ms
  1900                           
  1901                           ;Main.c: 141: if(TCN75_ReadReg(TCN75_TEMP)==1)
  1902  0913  3000               	movlw	0
  1903  0914  3185  25B7  3188   	fcall	_TCN75_ReadReg
  1904  0917  3A01               	xorlw	1
  1905  0918  1D03               	skipz
  1906  0919  2904               	goto	l33826
  1907                           
  1908                           ;Main.c: 142: {
  1909                           ;Main.c: 143: CurTemp.u16=TCN75_RegReadResualt.u16>>4;
  1910  091A  0860               	movf	_TCN75_RegReadResualt+1,w
  1911  091B  00D6               	movwf	_CurTemp+1
  1912  091C  085F               	movf	_TCN75_RegReadResualt,w
  1913  091D  00D5               	movwf	_CurTemp
  1914  091E  0ED5               	swapf	_CurTemp,f
  1915  091F  0ED6               	swapf	_CurTemp+1,f
  1916  0920  300F               	movlw	15
  1917  0921  05D5               	andwf	_CurTemp,f
  1918  0922  0856               	movf	_CurTemp+1,w
  1919  0923  39F0               	andlw	240
  1920  0924  04D5               	iorwf	_CurTemp,f
  1921  0925  300F               	movlw	15
  1922  0926  05D6               	andwf	_CurTemp+1,f
  1923  0927                     l33838:	
  1924                           ;Main.c: 144: }
  1925                           
  1926                           
  1927                           ;Main.c: 153: }
  1928                           ;Main.c: 154: }
  1929                           ;Main.c: 156: LcdDisplay_CurTemp();
  1930  0927  3182  2AD2         	ljmp	l32860
  1931  0929                     __end_of_ReadTData:	
  1932  0929                     __ptext2096:	
  1933 ;; =============== function _OneWire_Command ends ============
  1934                           
  1935                           
  1936 ;; *************** function _ATCommand_WaitData *****************
  1937 ;; Defined at:
  1938 ;;		line 125 in file "F:\work\WYP\NBIoT\ATCommand.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;  strx            2   20[BANK0 ] PTR unsigned char 
  1943 ;;		 -> ATCommand_RxList(100), RAM(128), 
  1944 ;;  res             1   19[BANK0 ] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      unsigned char 
  1947 ;; Registers used:
  1948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 1F/0
  1951 ;;		On exit  : 1F/0
  1952 ;;		Unchanged: FFFE0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1954 ;;      Params:         0       0       0       0       0       0       0       0
  1955 ;;      Locals:         0       3       0       0       0       0       0       0
  1956 ;;      Temps:          0       2       0       0       0       0       0       0
  1957 ;;      Totals:         0       5       0       0       0       0       0       0
  1958 ;;Total ram usage:        5 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    5
  1961 ;; This function calls:
  1962 ;;		_strstr
  1963 ;;		_strcpy
  1964 ;; This function is called by:
  1965 ;;		_InteractServer
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968  0929                     _ATCommand_WaitData:	
  1969                           
  1970                           ;ATCommand.c: 126: unsigned char res=0;
  1971                           
  1972                           ; Regs used in _ATCommand_WaitData: [wreg-status,0+pclath+cstack]
  1973  0929  01B3               	clrf	ATCommand_WaitData@res
  1974                           
  1975                           ;ATCommand.c: 128: res=ATACK_Null;
  1976  092A  01B3               	clrf	ATCommand_WaitData@res
  1977                           
  1978                           ;ATCommand.c: 129: ATCommand_Flags.bRx=0;
  1979                           
  1980                           ;ATCommand.c: 130: ATCommand_Flags.bChar=0;
  1981                           
  1982                           ;ATCommand.c: 131: ATCommand_WaitACKTick=SystemTick;
  1983                           
  1984                           ;ATCommand.c: 132: ATCommand_RxCount=0;
  1985                           
  1986                           ;ATCommand.c: 133: ATCommand_Flags.bWaitData=1;
  1987  092B  27D2  3188         	fcall	PL4	;call to abstracted procedure
  1988                           
  1989                           ;ATCommand.c: 134: ATCommand_RxList[ATCommand_RxCount]='\0';
  1990  092D  27C9  3188         	fcall	PL2	;call to abstracted procedure
  1991  092F                     l33288:	
  1992                           
  1993                           ;ATCommand.c: 136: {
  1994                           ;ATCommand.c: 137: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  1995  092F  308C               	movlw	140
  1996  0930  00AD               	movwf	?_strstr
  1997  0931  3021               	movlw	33
  1998  0932  00AE               	movwf	?_strstr+1
  1999  0933  30C4               	movlw	_ATCommand_OkString& (0+255)
  2000  0934  00AF               	movwf	?_strstr+2
  2001  0935  01B0               	clrf	?_strstr+3
  2002  0936  234A  3188         	fcall	_strstr
  2003  0938  082E               	movf	?_strstr+1,w
  2004  0939  00B5               	movwf	ATCommand_WaitData@strx+1
  2005  093A  082D               	movf	?_strstr,w
  2006  093B  00B4               	movwf	ATCommand_WaitData@strx
  2007                           
  2008                           ;ATCommand.c: 138: if(strx!=0)
  2009  093C  0435               	iorwf	ATCommand_WaitData@strx+1,w
  2010  093D  1903               	skipnz
  2011  093E  2942               	goto	l33296
  2012                           
  2013                           ;ATCommand.c: 139: {
  2014                           ;ATCommand.c: 140: res=ATACK_OK;
  2015  093F  01B3               	clrf	ATCommand_WaitData@res
  2016  0940  0AB3               	incf	ATCommand_WaitData@res,f
  2017  0941  2954               	goto	l33302
  2018  0942                     l33296:	
  2019                           ;ATCommand.c: 142: break;
  2020                           
  2021                           ;ATCommand.c: 141: ATCommand_Flags.bRx=1;
  2022                           
  2023                           
  2024                           ;ATCommand.c: 144: else
  2025                           ;ATCommand.c: 145: {
  2026                           ;ATCommand.c: 146: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2027  0942  308C               	movlw	140
  2028  0943  00AD               	movwf	?_strstr
  2029  0944  3021               	movlw	33
  2030  0945  00AE               	movwf	?_strstr+1
  2031  0946  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2032  0947  00AF               	movwf	?_strstr+2
  2033  0948  01B0               	clrf	?_strstr+3
  2034  0949  234A  3188         	fcall	_strstr
  2035  094B  082E               	movf	?_strstr+1,w
  2036  094C  00B5               	movwf	ATCommand_WaitData@strx+1
  2037  094D  082D               	movf	?_strstr,w
  2038  094E  00B4               	movwf	ATCommand_WaitData@strx
  2039                           
  2040                           ;ATCommand.c: 147: if(strx!=0)
  2041  094F  0435               	iorwf	ATCommand_WaitData@strx+1,w
  2042  0950  1903               	skipnz
  2043  0951  2956               	goto	l33304
  2044                           
  2045                           ;ATCommand.c: 148: {
  2046                           ;ATCommand.c: 149: res=ATACK_Err;
  2047  0952  3002               	movlw	2
  2048  0953  00B3               	movwf	ATCommand_WaitData@res
  2049  0954                     l33302:	
  2050                           
  2051                           ;ATCommand.c: 150: ATCommand_Flags.bRx=1;
  2052  0954  14F8               	bsf	_ATCommand_Flags,1
  2053                           
  2054                           ;ATCommand.c: 151: break;
  2055  0955  2963               	goto	l15144
  2056  0956                     l33304:	
  2057                           
  2058                           ;ATCommand.c: 152: }
  2059                           ;ATCommand.c: 153: }
  2060                           ;ATCommand.c: 154: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2061  0956  0851               	movf	_ATCommand_WaitACKTick,w
  2062  0957  025D               	subwf	_SystemTick,w
  2063  0958  00B1               	movwf	??_ATCommand_WaitData
  2064  0959  0852               	movf	_ATCommand_WaitACKTick+1,w
  2065  095A  3B5E               	subwfb	_SystemTick+1,w
  2066  095B  00B2               	movwf	??_ATCommand_WaitData+1
  2067  095C  0254               	subwf	_ATCommand_WaitACKTimes+1,w
  2068  095D  1D03               	skipz
  2069  095E  2961               	goto	u8595
  2070  095F  0831               	movf	??_ATCommand_WaitData,w
  2071  0960  0253               	subwf	_ATCommand_WaitACKTimes,w
  2072  0961                     u8595:	
  2073  0961  1803               	skipnc
  2074  0962  292F               	goto	l33288
  2075  0963                     l15144:	
  2076                           
  2077                           ;ATCommand.c: 156: }
  2078                           ;ATCommand.c: 157: ATCommand_Flags.bWaitData=0;
  2079  0963  1178               	bcf	_ATCommand_Flags,2
  2080                           
  2081                           ;ATCommand.c: 158: strcpy(ATCommand_OkString,"OK");
  2082  0964  3013               	movlw	low (STR_32| (0+32768))
  2083  0965  00A0               	movwf	?_strcpy
  2084  0966  3091               	movlw	high (STR_32| (0+32768))
  2085  0967  00A1               	movwf	?_strcpy+1
  2086  0968  30C4               	movlw	_ATCommand_OkString& (0+255)
  2087  0969  2385  3188         	fcall	_strcpy
  2088                           
  2089                           ;ATCommand.c: 159: strcpy(ATCommand_ErrString,"ERROR");
  2090  096B  30FA               	movlw	low (STR_18| (0+32768))
  2091  096C  00A0               	movwf	?_strcpy
  2092  096D  3090               	movlw	high (STR_18| (0+32768))
  2093  096E  00A1               	movwf	?_strcpy+1
  2094  096F  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2095  0970  2385               	fcall	_strcpy
  2096                           
  2097                           ;ATCommand.c: 160: ATCommand_Clear='\0';
  2098  0971  01F7               	clrf	_ATCommand_Clear
  2099                           
  2100                           ;ATCommand.c: 162: ATCommand_WaitACKTimes=50;
  2101  0972  3032               	movlw	50
  2102  0973  00D3               	movwf	_ATCommand_WaitACKTimes
  2103  0974  01D4               	clrf	_ATCommand_WaitACKTimes+1
  2104                           
  2105                           ;ATCommand.c: 163: return res;
  2106  0975  0833               	movf	ATCommand_WaitData@res,w
  2107  0976  0008               	return
  2108  0977                     __end_of_ATCommand_WaitData:	
  2109  0977                     __ptext2087:	
  2110 ;; =============== function _InitSystem ends ============
  2111                           
  2112                           
  2113 ;; *************** function _CallTestSend *****************
  2114 ;; Defined at:
  2115 ;;		line 125 in file "F:\work\WYP\NBIoT\TestProc.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;		None
  2118 ;; Auto vars:     Size  Location     Type
  2119 ;;  strx            1    0        PTR unsigned char 
  2120 ;;		 -> RAM(128), 
  2121 ;;  ret             1    0        unsigned char 
  2122 ;; Return value:  Size  Location     Type
  2123 ;;		None               void
  2124 ;; Registers used:
  2125 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 1D/0
  2128 ;;		On exit  : 1F/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2131 ;;      Params:         0       0       0       0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    7
  2138 ;; This function calls:
  2139 ;;		_InitGPRS
  2140 ;;		_ATCommand_SendCmd
  2141 ;;		___delay_20ms
  2142 ;;		_InteractServer
  2143 ;; This function is called by:
  2144 ;;		_CallTestProc
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147  0977                     _CallTestSend:	
  2148                           
  2149                           ;TestProc.c: 128: InitGPRS();
  2150                           
  2151                           ; Regs used in _CallTestSend: [wreg-btemp+0+pclath+cstack]
  2152  0977  21D4  3188         	fcall	_InitGPRS
  2153                           
  2154                           ;TestProc.c: 129: if(ErrState!=NoErr)
  2155  0979  0863               	movf	_ErrState,w
  2156  097A  1D03               	skipz
  2157  097B  0008               	return
  2158                           
  2159                           ;TestProc.c: 131: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  2160  097C  3046               	movlw	low (STR_1| (0+32768))
  2161  097D  00B1               	movwf	?_ATCommand_SendCmd
  2162  097E  3090               	movlw	high (STR_1| (0+32768))
  2163  097F  00B2               	movwf	?_ATCommand_SendCmd+1
  2164  0980  22CA  3188         	fcall	_ATCommand_SendCmd
  2165  0982  3A01               	xorlw	1
  2166  0983  1903               	skipnz
  2167  0984  2988               	goto	l10936
  2168  0985                     l33896:	
  2169                           
  2170                           ;TestProc.c: 132: {
  2171                           ;TestProc.c: 133: ErrState=MissAT_NSOCR;
  2172  0985  3023               	movlw	35
  2173  0986  00E3               	movwf	_ErrState
  2174  0987  0008               	return
  2175  0988                     l10936:	
  2176                           
  2177                           ;TestProc.c: 135: }
  2178                           ;TestProc.c: 136: ATCommand_RetryTimes=1;
  2179                           
  2180                           ;TestProc.c: 137: ATCommand_WaitACKTimes=600;
  2181                           
  2182                           ;TestProc.c: 138: if(ATCommand_SendCmd("AT+NSOCO=1,\"www.wlwdjcy.com\",12129\0")!=ATACK_
      +                          OK)
  2183  0988  27DB  3188         	fcall	PL6	;call to abstracted procedure
  2184  098A  22CA  3188         	fcall	_ATCommand_SendCmd
  2185  098C  3A01               	xorlw	1
  2186  098D  1D03               	btfss	3,2
  2187  098E  2985               	goto	l33896
  2188                           
  2189                           ;TestProc.c: 142: }
  2190                           ;TestProc.c: 144: __delay_20ms(50);
  2191  098F  3032               	movlw	50
  2192  0990  00A0               	movwf	?___delay_20ms
  2193  0991  01A1               	clrf	?___delay_20ms+1
  2194  0992  2336  3188         	fcall	___delay_20ms
  2195                           
  2196                           ;TestProc.c: 146: ret=InteractServer();
  2197  0994  2CB2               	ljmp	l33552
  2198  0995                     __end_of_CallTestSend:	
  2199  0995                     __ptext2088:	
  2200 ;; =============== function _CallTestSend ends ============
  2201                           
  2202                           
  2203 ;; *************** function _CallSend *****************
  2204 ;; Defined at:
  2205 ;;		line 82 in file "F:\work\WYP\NBIoT\Function.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;		None
  2208 ;; Auto vars:     Size  Location     Type
  2209 ;;  ret             1   38[BANK0 ] unsigned char 
  2210 ;;  strx            1    0        PTR unsigned char 
  2211 ;;		 -> RAM(128), 
  2212 ;;  i               1    0        unsigned char 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;		None               void
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 1D/0
  2219 ;;		On exit  : 1F/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2222 ;;      Params:         0       0       0       0       0       0       0       0
  2223 ;;      Locals:         0       1       0       0       0       0       0       0
  2224 ;;      Temps:          0       0       0       0       0       0       0       0
  2225 ;;      Totals:         0       1       0       0       0       0       0       0
  2226 ;;Total ram usage:        1 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:    7
  2229 ;; This function calls:
  2230 ;;		_InitGPRS
  2231 ;;		___delay_20ms
  2232 ;;		_ATCommand_SendCmd
  2233 ;;		_InteractServer
  2234 ;; This function is called by:
  2235 ;;		_CallProc
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238  0995                     _CallSend:	
  2239                           
  2240                           ;Function.c: 85: ErrState=NoErr;
  2241                           
  2242                           ; Regs used in _CallSend: [wreg-btemp+0+pclath+cstack]
  2243  0995  0020               	movlb	0	; select bank0
  2244  0996  01E3               	clrf	_ErrState
  2245                           
  2246                           ;Function.c: 86: InitGPRS();
  2247  0997  21D4  3188         	fcall	_InitGPRS
  2248                           
  2249                           ;Function.c: 87: if(ErrState!=NoErr)
  2250  0999  0863               	movf	_ErrState,w
  2251  099A  1903               	btfsc	3,2
  2252  099B  29A8               	goto	l33856
  2253                           
  2254                           ;Function.c: 88: {
  2255                           ;Function.c: 89: __delay_20ms(3000);
  2256  099C  30B8               	movlw	184
  2257  099D  00A0               	movwf	?___delay_20ms
  2258  099E  300B               	movlw	11
  2259  099F  00A1               	movwf	?___delay_20ms+1
  2260  09A0  2336  3188         	fcall	___delay_20ms
  2261                           
  2262                           ;Function.c: 90: ErrState=NoErr;
  2263  09A2  01E3               	clrf	_ErrState
  2264                           
  2265                           ;Function.c: 91: InitGPRS();
  2266  09A3  21D4  3188         	fcall	_InitGPRS
  2267                           
  2268                           ;Function.c: 92: if(ErrState!=NoErr)
  2269  09A5  0863               	movf	_ErrState,w
  2270  09A6  1D03               	skipz
  2271  09A7  0008               	return
  2272  09A8                     l33856:	
  2273                           
  2274                           ;Function.c: 94: }
  2275                           ;Function.c: 98: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  2276  09A8  3046               	movlw	low (STR_1| (0+32768))
  2277  09A9  00B1               	movwf	?_ATCommand_SendCmd
  2278  09AA  3090               	movlw	high (STR_1| (0+32768))
  2279  09AB  00B2               	movwf	?_ATCommand_SendCmd+1
  2280  09AC  22CA  3188         	fcall	_ATCommand_SendCmd
  2281  09AE  3A01               	xorlw	1
  2282  09AF  1903               	skipnz
  2283  09B0  29B4               	goto	l8680
  2284  09B1                     l33858:	
  2285                           
  2286                           ;Function.c: 99: {
  2287                           ;Function.c: 100: ErrState=MissAT_NSOCR;
  2288  09B1  3023               	movlw	35
  2289  09B2  00E3               	movwf	_ErrState
  2290  09B3  0008               	return
  2291  09B4                     l8680:	
  2292                           
  2293                           ;Function.c: 102: }
  2294                           ;Function.c: 103: ATCommand_RetryTimes=1;
  2295                           
  2296                           ;Function.c: 104: ATCommand_WaitACKTimes=600;
  2297                           
  2298                           ;Function.c: 105: if(ATCommand_SendCmd("AT+NSOCO=1,\"www.wlwdjcy.com\",12129\0")!=ATACK_
      +                          OK)
  2299  09B4  27DB  3188         	fcall	PL6	;call to abstracted procedure
  2300  09B6  22CA  3188         	fcall	_ATCommand_SendCmd
  2301  09B8  3A01               	xorlw	1
  2302  09B9  1D03               	btfss	3,2
  2303  09BA  29B1               	goto	l33858
  2304                           
  2305                           ;Function.c: 109: }
  2306                           ;Function.c: 111: __delay_20ms(50);
  2307  09BB  3032               	movlw	50
  2308  09BC  00A0               	movwf	?___delay_20ms
  2309  09BD  01A1               	clrf	?___delay_20ms+1
  2310  09BE  2336  3188         	fcall	___delay_20ms
  2311                           
  2312                           ;Function.c: 113: ret=InteractServer();
  2313  09C0  24B2  3188         	fcall	_InteractServer
  2314  09C2  00C6               	movwf	CallSend@ret
  2315                           
  2316                           ;Function.c: 114: if(ret!=ATACK_OK)
  2317  09C3  0346               	decf	CallSend@ret,w
  2318  09C4  1903               	skipnz
  2319  09C5  0008               	return
  2320                           
  2321                           ;Function.c: 115: {
  2322                           ;Function.c: 116: if(ErrState==MissAT_ServerClose)
  2323  09C6  0863               	movf	_ErrState,w
  2324  09C7  3A22               	xorlw	34
  2325  09C8  1D03               	skipz
  2326  09C9  29CC               	goto	l33880
  2327  09CA                     l33878:	
  2328                           
  2329                           ;Function.c: 117: {
  2330                           ;Function.c: 118: gFlags.bRetry=1;
  2331  09CA  1666               	bsf	_gFlags,4
  2332                           
  2333                           ;Function.c: 119: return;
  2334  09CB  0008               	return
  2335  09CC                     l33880:	
  2336                           
  2337                           ;Function.c: 120: }
  2338                           ;Function.c: 121: ErrState=NoErr;
  2339  09CC  01E3               	clrf	_ErrState
  2340                           
  2341                           ;Function.c: 122: ret=InteractServer();
  2342  09CD  24B2  3188         	fcall	_InteractServer
  2343  09CF  00C6               	movwf	CallSend@ret
  2344                           
  2345                           ;Function.c: 123: if(ret!=ATACK_OK)
  2346  09D0  0346               	decf	CallSend@ret,w
  2347  09D1  1903               	skipnz
  2348  09D2  0008               	return
  2349  09D3  29CA               	goto	l33878
  2350  09D4                     __end_of_CallSend:	
  2351  09D4                     __ptext2091:	
  2352 ;; =============== function _InteractServer ends ============
  2353                           
  2354                           
  2355 ;; *************** function _InitGPRS *****************
  2356 ;; Defined at:
  2357 ;;		line 425 in file "F:\work\WYP\NBIoT\Function.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;  strx            2   28[BANK0 ] PTR unsigned char 
  2362 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2363 ;;  retry           1   30[BANK0 ] unsigned char 
  2364 ;;  i               1   27[BANK0 ] unsigned char 
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 1D/0
  2371 ;;		On exit  : 1F/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2374 ;;      Params:         0       0       0       0       0       0       0       0
  2375 ;;      Locals:         0       4       0       0       0       0       0       0
  2376 ;;      Temps:          0       2       0       0       0       0       0       0
  2377 ;;      Totals:         0       6       0       0       0       0       0       0
  2378 ;;Total ram usage:        6 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    6
  2381 ;; This function calls:
  2382 ;;		___delay_20ms
  2383 ;;		_ATCommand_SendCmd
  2384 ;;		_strstr
  2385 ;;		_atoi
  2386 ;;		_LcdDisplay_CSQ
  2387 ;; This function is called by:
  2388 ;;		_CallSend
  2389 ;;		_CallTestSend
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392  09D4                     _InitGPRS:	
  2393                           
  2394                           ;Function.c: 428: __delay_20ms(150);
  2395                           
  2396                           ; Regs used in _InitGPRS: [wreg-status,0+pclath+cstack]
  2397  09D4  3096               	movlw	150
  2398  09D5  0020               	movlb	0	; select bank0
  2399  09D6  00A0               	movwf	?___delay_20ms
  2400  09D7  01A1               	clrf	?___delay_20ms+1
  2401  09D8  2336  3188         	fcall	___delay_20ms
  2402                           
  2403                           ;Function.c: 429: if(ATCommand_SendCmd("AT\0")!=ATACK_OK)
  2404  09DA  300F               	movlw	low (STR_20| (0+32768))
  2405  09DB  00B1               	movwf	?_ATCommand_SendCmd
  2406  09DC  3091               	movlw	high (STR_20| (0+32768))
  2407  09DD  00B2               	movwf	?_ATCommand_SendCmd+1
  2408  09DE  22CA  3188         	fcall	_ATCommand_SendCmd
  2409  09E0  3A01               	xorlw	1
  2410  09E1  1903               	skipnz
  2411  09E2  29E6               	goto	l33432
  2412                           
  2413                           ;Function.c: 430: {
  2414                           ;Function.c: 431: ErrState=MissAT;
  2415  09E3  3003               	movlw	3
  2416  09E4  00E3               	movwf	_ErrState
  2417  09E5  0008               	return
  2418  09E6                     l33432:	
  2419                           
  2420                           ;Function.c: 433: }
  2421                           ;Function.c: 435: if(ATCommand_SendCmd("ATE1\0")!=ATACK_OK)
  2422  09E6  30EE               	movlw	low (STR_21| (0+32768))
  2423  09E7  00B1               	movwf	?_ATCommand_SendCmd
  2424  09E8  3090               	movlw	high (STR_21| (0+32768))
  2425  09E9  00B2               	movwf	?_ATCommand_SendCmd+1
  2426  09EA  22CA  3188         	fcall	_ATCommand_SendCmd
  2427  09EC  3A01               	xorlw	1
  2428  09ED  1903               	skipnz
  2429  09EE  29F2               	goto	l33438
  2430                           
  2431                           ;Function.c: 436: {
  2432                           ;Function.c: 437: ErrState=MissAT_ATE1;
  2433  09EF  300C               	movlw	12
  2434  09F0  00E3               	movwf	_ErrState
  2435  09F1  0008               	return
  2436  09F2                     l33438:	
  2437                           
  2438                           ;Function.c: 439: }
  2439                           ;Function.c: 445: retry=10;
  2440  09F2  300A               	movlw	10
  2441  09F3  00BE               	movwf	InitGPRS@retry
  2442  09F4                     l33448:	
  2443                           ;Function.c: 446: while(retry!=0)
  2444                           
  2445  09F4  08BE               	movf	InitGPRS@retry,f
  2446  09F5  1903               	btfsc	3,2
  2447  09F6  2A07               	goto	l33450
  2448                           
  2449                           ;Function.c: 447: {
  2450                           ;Function.c: 448: if(ATCommand_SendCmd("AT+CIMI\0")==ATACK_OK)
  2451  09F7  30D6               	movlw	low (STR_22| (0+32768))
  2452  09F8  00B1               	movwf	?_ATCommand_SendCmd
  2453  09F9  3090               	movlw	high (STR_22| (0+32768))
  2454  09FA  00B2               	movwf	?_ATCommand_SendCmd+1
  2455  09FB  22CA  3188         	fcall	_ATCommand_SendCmd
  2456  09FD  3A01               	xorlw	1
  2457  09FE  1903               	btfsc	3,2
  2458  09FF  2A07               	goto	l33450
  2459                           
  2460                           ;Function.c: 451: }
  2461                           ;Function.c: 452: __delay_20ms(150);
  2462  0A00  3096               	movlw	150
  2463  0A01  00A0               	movwf	?___delay_20ms
  2464  0A02  01A1               	clrf	?___delay_20ms+1
  2465  0A03  2336  3188         	fcall	___delay_20ms
  2466                           
  2467                           ;Function.c: 453: retry--;
  2468  0A05  03BE               	decf	InitGPRS@retry,f
  2469  0A06  29F4               	goto	l33448
  2470  0A07                     l33450:	
  2471                           
  2472                           ;Function.c: 454: }
  2473                           ;Function.c: 455: if(retry==0)
  2474  0A07  08BE               	movf	InitGPRS@retry,f
  2475  0A08  1D03               	skipz
  2476  0A09  2A0D               	goto	l33456
  2477                           
  2478                           ;Function.c: 456: {
  2479                           ;Function.c: 457: ErrState=MissSimCard;
  2480  0A0A  3004               	movlw	4
  2481  0A0B  00E3               	movwf	_ErrState
  2482  0A0C  0008               	return
  2483  0A0D                     l33456:	
  2484                           
  2485                           ;Function.c: 459: }
  2486                           ;Function.c: 460: retry=10;
  2487  0A0D  300A               	movlw	10
  2488  0A0E  00BE               	movwf	InitGPRS@retry
  2489                           
  2490                           ;Function.c: 461: while(retry!=0)
  2491  0A0F  2A16               	goto	l33484
  2492  0A10                     l33480:	
  2493                           ;Function.c: 474: break;
  2494                           
  2495                           
  2496                           ;Function.c: 476: else
  2497                           ;Function.c: 477: {
  2498                           ;Function.c: 478: retry--;
  2499  0A10  03BE               	decf	InitGPRS@retry,f
  2500                           
  2501                           ;Function.c: 479: __delay_20ms(150);
  2502  0A11  3096               	movlw	150
  2503  0A12  00A0               	movwf	?___delay_20ms
  2504  0A13  01A1               	clrf	?___delay_20ms+1
  2505  0A14  2336  3188         	fcall	___delay_20ms
  2506  0A16                     l33484:	
  2507  0A16  08BE               	movf	InitGPRS@retry,f
  2508  0A17  1903               	btfsc	3,2
  2509  0A18  2A50               	goto	l33486
  2510                           
  2511                           ;Function.c: 462: {
  2512                           ;Function.c: 464: if(ATCommand_SendCmd("AT+NCCID\0")==ATACK_OK)
  2513  0A19  30B1               	movlw	low (STR_23| (0+32768))
  2514  0A1A  00B1               	movwf	?_ATCommand_SendCmd
  2515  0A1B  3090               	movlw	high (STR_23| (0+32768))
  2516  0A1C  00B2               	movwf	?_ATCommand_SendCmd+1
  2517  0A1D  22CA  3188         	fcall	_ATCommand_SendCmd
  2518  0A1F  3A01               	xorlw	1
  2519  0A20  1D03               	skipz
  2520  0A21  2A16               	goto	l33484
  2521                           
  2522                           ;Function.c: 465: {
  2523                           ;Function.c: 466: strx=strstr((const char*)ATCommand_RxList,"8986");
  2524  0A22  308C               	movlw	140
  2525  0A23  00AD               	movwf	?_strstr
  2526  0A24  3021               	movlw	33
  2527  0A25  00AE               	movwf	?_strstr+1
  2528  0A26  300A               	movlw	low (STR_24| (0+32768))
  2529  0A27  00AF               	movwf	?_strstr+2
  2530  0A28  3091               	movlw	high (STR_24| (0+32768))
  2531  0A29  00B0               	movwf	?_strstr+3
  2532  0A2A  234A  3188         	fcall	_strstr
  2533  0A2C  082E               	movf	?_strstr+1,w
  2534  0A2D  00BD               	movwf	InitGPRS@strx+1
  2535  0A2E  082D               	movf	?_strstr,w
  2536  0A2F  00BC               	movwf	InitGPRS@strx
  2537                           
  2538                           ;Function.c: 467: if(strx!=0)
  2539  0A30  043D               	iorwf	InitGPRS@strx+1,w
  2540  0A31  1903               	skipnz
  2541  0A32  2A10               	goto	l33480
  2542                           
  2543                           ;Function.c: 468: {
  2544                           ;Function.c: 469: for(i=0;i<15;i++)
  2545  0A33  01BB               	clrf	InitGPRS@i
  2546  0A34                     l33470:	
  2547                           
  2548                           ;Function.c: 470: {
  2549                           ;Function.c: 471: ICCID[i]=strx[i+5];
  2550  0A34  083B               	movf	InitGPRS@i,w
  2551  0A35  3EA0               	addlw	_ICCID& (0+255)
  2552  0A36  0086               	movwf	6
  2553  0A37  0187               	clrf	7
  2554  0A38  083B               	movf	InitGPRS@i,w
  2555  0A39  073C               	addwf	InitGPRS@strx,w
  2556  0A3A  00B9               	movwf	??_InitGPRS
  2557  0A3B  083D               	movf	InitGPRS@strx+1,w
  2558  0A3C  1803               	skipnc
  2559  0A3D  0A89               	incf	9,f
  2560  0A3E  1BBB               	btfsc	InitGPRS@i,7
  2561  0A3F  0389               	decf	9,f
  2562  0A40  00BA               	movwf	??_InitGPRS+1
  2563  0A41  0839               	movf	??_InitGPRS,w
  2564  0A42  3E05               	addlw	5
  2565  0A43  0084               	movwf	4
  2566  0A44  3000               	movlw	0
  2567  0A45  3D3A               	addwfc	??_InitGPRS+1,w
  2568  0A46  0085               	movwf	5
  2569  0A47  0800               	movf	0,w
  2570  0A48  0081               	movwf	1
  2571  0A49  0ABB               	incf	InitGPRS@i,f
  2572  0A4A  300F               	movlw	15
  2573  0A4B  023B               	subwf	InitGPRS@i,w
  2574  0A4C  1C03               	skipc
  2575  0A4D  2A34               	goto	l33470
  2576                           
  2577                           ;Function.c: 472: }
  2578                           ;Function.c: 473: ICCID[15]='\0';
  2579  0A4E  0021               	movlb	1	; select bank1
  2580  0A4F  01AF               	clrf	(_ICCID^(0+128)+15)
  2581  0A50                     l33486:	
  2582                           
  2583                           ;Function.c: 480: }
  2584                           ;Function.c: 481: }
  2585                           ;Function.c: 483: }
  2586                           ;Function.c: 501: retry=100;
  2587  0A50  3064               	movlw	100
  2588  0A51  0020               	movlb	0	; select bank0
  2589  0A52  00BE               	movwf	InitGPRS@retry
  2590                           
  2591                           ;Function.c: 502: CSQ=0xff;
  2592  0A53  30FF               	movlw	255
  2593  0A54  00E2               	movwf	_CSQ
  2594  0A55                     l33514:	
  2595                           ;Function.c: 503: while(retry!=0)
  2596                           
  2597  0A55  08BE               	movf	InitGPRS@retry,f
  2598  0A56  1903               	btfsc	3,2
  2599  0A57  2A91               	goto	l33516
  2600                           
  2601                           ;Function.c: 504: {
  2602                           ;Function.c: 505: if(ATCommand_SendCmd("AT+CSQ\0")==ATACK_OK)
  2603  0A58  30DF               	movlw	low (STR_25| (0+32768))
  2604  0A59  00B1               	movwf	?_ATCommand_SendCmd
  2605  0A5A  3090               	movlw	high (STR_25| (0+32768))
  2606  0A5B  00B2               	movwf	?_ATCommand_SendCmd+1
  2607  0A5C  22CA  3188         	fcall	_ATCommand_SendCmd
  2608  0A5E  3A01               	xorlw	1
  2609  0A5F  1D03               	skipz
  2610  0A60  2A55               	goto	l33514
  2611                           
  2612                           ;Function.c: 506: {
  2613                           ;Function.c: 507: strx=strstr((const char*)ATCommand_RxList,"+CSQ:");
  2614  0A61  308C               	movlw	140
  2615  0A62  00AD               	movwf	?_strstr
  2616  0A63  3021               	movlw	33
  2617  0A64  00AE               	movwf	?_strstr+1
  2618  0A65  30F4               	movlw	low (STR_26| (0+32768))
  2619  0A66  00AF               	movwf	?_strstr+2
  2620  0A67  3090               	movlw	high (STR_26| (0+32768))
  2621  0A68  00B0               	movwf	?_strstr+3
  2622  0A69  234A  3188         	fcall	_strstr
  2623  0A6B  082E               	movf	?_strstr+1,w
  2624  0A6C  00BD               	movwf	InitGPRS@strx+1
  2625  0A6D  082D               	movf	?_strstr,w
  2626  0A6E  00BC               	movwf	InitGPRS@strx
  2627                           
  2628                           ;Function.c: 508: if(strx!=0)
  2629  0A6F  043D               	iorwf	InitGPRS@strx+1,w
  2630  0A70  1903               	skipnz
  2631  0A71  2A8A               	goto	l33506
  2632                           
  2633                           ;Function.c: 509: {
  2634                           ;Function.c: 510: CSQ=atoi(strx+5);
  2635  0A72  083C               	movf	InitGPRS@strx,w
  2636  0A73  3E05               	addlw	5
  2637  0A74  00B9               	movwf	??_InitGPRS
  2638  0A75  3000               	movlw	0
  2639  0A76  3D3D               	addwfc	InitGPRS@strx+1,w
  2640  0A77  00BA               	movwf	??_InitGPRS+1
  2641  0A78  0839               	movf	??_InitGPRS,w
  2642  0A79  00A6               	movwf	?_atoi
  2643  0A7A  083A               	movf	??_InitGPRS+1,w
  2644  0A7B  00A7               	movwf	?_atoi+1
  2645  0A7C  243E  3188         	fcall	_atoi
  2646  0A7E  0826               	movf	?_atoi,w
  2647  0A7F  00E2               	movwf	_CSQ
  2648                           
  2649                           ;Function.c: 512: LcdDisplay_CSQ();
  2650  0A80  240A  3188         	fcall	_LcdDisplay_CSQ
  2651                           
  2652                           ;Function.c: 514: if(CSQ!=0 && CSQ!=99)
  2653  0A82  0020               	movlb	0	; select bank0
  2654  0A83  0862               	movf	_CSQ,w
  2655  0A84  1903               	btfsc	3,2
  2656  0A85  2A8A               	goto	l33506
  2657  0A86  0862               	movf	_CSQ,w
  2658  0A87  3A63               	xorlw	99
  2659  0A88  1D03               	btfss	3,2
  2660  0A89  2A91               	goto	l33516
  2661  0A8A                     l33506:	
  2662                           
  2663                           ;Function.c: 516: else
  2664                           ;Function.c: 517: {
  2665                           ;Function.c: 518: retry--;
  2666  0A8A  03BE               	decf	InitGPRS@retry,f
  2667                           
  2668                           ;Function.c: 519: __delay_20ms(150);
  2669  0A8B  3096               	movlw	150
  2670  0A8C  00A0               	movwf	?___delay_20ms
  2671  0A8D  01A1               	clrf	?___delay_20ms+1
  2672  0A8E  2336  3188         	fcall	___delay_20ms
  2673  0A90  2A55               	goto	l33514
  2674  0A91                     l33516:	
  2675                           
  2676                           ;Function.c: 526: }
  2677                           ;Function.c: 527: }
  2678                           ;Function.c: 528: }
  2679                           ;Function.c: 529: if(retry==0 && CSQ!=0xff)
  2680  0A91  08BE               	movf	InitGPRS@retry,f
  2681  0A92  1D03               	skipz
  2682  0A93  2A9B               	goto	l33524
  2683  0A94  0862               	movf	_CSQ,w
  2684  0A95  3AFF               	xorlw	255
  2685  0A96  1903               	skipnz
  2686  0A97  2A9B               	goto	l33524
  2687                           
  2688                           ;Function.c: 530: {
  2689                           ;Function.c: 531: ErrState=MissAT_CSQ;
  2690  0A98  300F               	movlw	15
  2691  0A99  00E3               	movwf	_ErrState
  2692  0A9A  0008               	return
  2693  0A9B                     l33524:	
  2694                           
  2695                           ;Function.c: 533: }
  2696                           ;Function.c: 556: retry=20;
  2697  0A9B  3014               	movlw	20
  2698  0A9C  00BE               	movwf	InitGPRS@retry
  2699  0A9D                     l33542:	
  2700                           ;Function.c: 557: while(retry!=0)
  2701                           
  2702  0A9D  08BE               	movf	InitGPRS@retry,f
  2703  0A9E  1903               	btfsc	3,2
  2704  0A9F  2AC4               	goto	l33544
  2705                           
  2706                           ;Function.c: 558: {
  2707                           ;Function.c: 559: if(ATCommand_SendCmd("AT+CEREG?\0")!=ATACK_OK)
  2708  0AA0  309B               	movlw	low (STR_27| (0+32768))
  2709  0AA1  00B1               	movwf	?_ATCommand_SendCmd
  2710  0AA2  3090               	movlw	high (STR_27| (0+32768))
  2711  0AA3  00B2               	movwf	?_ATCommand_SendCmd+1
  2712  0AA4  22CA  3188         	fcall	_ATCommand_SendCmd
  2713  0AA6  3A01               	xorlw	1
  2714  0AA7  1903               	skipnz
  2715  0AA8  2AAC               	goto	l33532
  2716                           
  2717                           ;Function.c: 560: {
  2718                           ;Function.c: 561: ErrState=MissAT_COPS;
  2719  0AA9  3010               	movlw	16
  2720  0AAA  00E3               	movwf	_ErrState
  2721  0AAB  0008               	return
  2722  0AAC                     l33532:	
  2723                           
  2724                           ;Function.c: 563: }
  2725                           ;Function.c: 564: strx=strstr((const char*)ATCommand_RxList,"+CEREG:0,1");
  2726  0AAC  308C               	movlw	140
  2727  0AAD  00AD               	movwf	?_strstr
  2728  0AAE  3021               	movlw	33
  2729  0AAF  00AE               	movwf	?_strstr+1
  2730  0AB0  30A6               	movlw	low (STR_28| (0+32768))
  2731  0AB1  00AF               	movwf	?_strstr+2
  2732  0AB2  3090               	movlw	high (STR_28| (0+32768))
  2733  0AB3  00B0               	movwf	?_strstr+3
  2734  0AB4  234A  3188         	fcall	_strstr
  2735  0AB6  082E               	movf	?_strstr+1,w
  2736  0AB7  00BD               	movwf	InitGPRS@strx+1
  2737  0AB8  082D               	movf	?_strstr,w
  2738  0AB9  00BC               	movwf	InitGPRS@strx
  2739                           
  2740                           ;Function.c: 565: if(strx!=0)
  2741  0ABA  043D               	iorwf	InitGPRS@strx+1,w
  2742  0ABB  1D03               	btfss	3,2
  2743  0ABC  2AC4               	goto	l33544
  2744                           
  2745                           ;Function.c: 568: }
  2746                           ;Function.c: 574: __delay_20ms(150);
  2747  0ABD  3096               	movlw	150
  2748  0ABE  00A0               	movwf	?___delay_20ms
  2749  0ABF  01A1               	clrf	?___delay_20ms+1
  2750  0AC0  2336  3188         	fcall	___delay_20ms
  2751                           
  2752                           ;Function.c: 575: retry--;
  2753  0AC2  03BE               	decf	InitGPRS@retry,f
  2754  0AC3  2A9D               	goto	l33542
  2755  0AC4                     l33544:	
  2756                           
  2757                           ;Function.c: 576: }
  2758                           ;Function.c: 577: if(retry==0)
  2759  0AC4  08BE               	movf	InitGPRS@retry,f
  2760  0AC5  1D03               	skipz
  2761  0AC6  0008               	return
  2762                           
  2763                           ;Function.c: 578: {
  2764                           ;Function.c: 579: ErrState=MissNet;
  2765  0AC7  3005               	movlw	5
  2766  0AC8  00E3               	movwf	_ErrState
  2767  0AC9  0008               	return
  2768  0ACA                     __end_of_InitGPRS:	
  2769  0ACA                     __ptext2098:	
  2770 ;; =============== function _Uart1_PutString_Hex ends ============
  2771                           
  2772                           
  2773 ;; *************** function _ATCommand_SendCmd *****************
  2774 ;; Defined at:
  2775 ;;		line 71 in file "F:\work\WYP\NBIoT\ATCommand.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  cmd             2   17[BANK0 ] PTR const unsigned char 
  2778 ;;		 -> STR_31(36), STR_30(23), STR_29(4), STR_27(11), 
  2779 ;;		 -> STR_25(8), STR_23(10), STR_22(9), STR_21(6), 
  2780 ;;		 -> STR_20(4), STR_2(36), STR_1(23), 
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;  strx            2   22[BANK0 ] PTR unsigned char 
  2783 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2784 ;;  res             1   24[BANK0 ] unsigned char 
  2785 ;;  retry           1   21[BANK0 ] unsigned char 
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  1    wreg      unsigned char 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 1F/0
  2792 ;;		On exit  : 1F/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2795 ;;      Params:         0       2       0       0       0       0       0       0
  2796 ;;      Locals:         0       4       0       0       0       0       0       0
  2797 ;;      Temps:          0       2       0       0       0       0       0       0
  2798 ;;      Totals:         0       8       0       0       0       0       0       0
  2799 ;;Total ram usage:        8 bytes
  2800 ;; Hardware stack levels used:    1
  2801 ;; Hardware stack levels required when called:    5
  2802 ;; This function calls:
  2803 ;;		_Uart1_PutString
  2804 ;;		_strstr
  2805 ;;		___delay_20ms
  2806 ;;		_strcpy
  2807 ;; This function is called by:
  2808 ;;		_CallSend
  2809 ;;		_InitGPRS
  2810 ;;		_PowerON
  2811 ;;		_CallTestSend
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814  0ACA                     _ATCommand_SendCmd:	
  2815                           
  2816                           ;ATCommand.c: 73: unsigned char retry;
  2817                           ;ATCommand.c: 74: char *strx=0;
  2818                           
  2819                           ; Regs used in _ATCommand_SendCmd: [wreg-status,0+pclath+cstack]
  2820  0ACA  01B6               	clrf	ATCommand_SendCmd@strx
  2821  0ACB  01B7               	clrf	ATCommand_SendCmd@strx+1
  2822                           
  2823                           ;ATCommand.c: 76: retry=ATCommand_RetryTimes;
  2824  0ACC  0861               	movf	_ATCommand_RetryTimes,w
  2825  0ACD  00B5               	movwf	ATCommand_SendCmd@retry
  2826                           
  2827                           ;ATCommand.c: 77: res=ATACK_Null;
  2828  0ACE  01B8               	clrf	ATCommand_SendCmd@res
  2829  0ACF                     l33250:	
  2830                           ;ATCommand.c: 78: while(retry!=0)
  2831                           
  2832  0ACF  08B5               	movf	ATCommand_SendCmd@retry,f
  2833  0AD0  1903               	btfsc	3,2
  2834  0AD1  2B21               	goto	l33252
  2835                           
  2836                           ;ATCommand.c: 79: {
  2837                           ;ATCommand.c: 80: Uart1_PutString(cmd);
  2838  0AD2  0832               	movf	ATCommand_SendCmd@cmd+1,w
  2839  0AD3  00A2               	movwf	?_Uart1_PutString+1
  2840  0AD4  0831               	movf	ATCommand_SendCmd@cmd,w
  2841  0AD5  00A1               	movwf	?_Uart1_PutString
  2842  0AD6  275E  3188         	fcall	_Uart1_PutString
  2843                           
  2844                           ;ATCommand.c: 81: Uart1_PutString("\r\0");
  2845  0AD8  3016               	movlw	low (STR_19| (0+32768))
  2846  0AD9  00A1               	movwf	?_Uart1_PutString
  2847  0ADA  3091               	movlw	high (STR_19| (0+32768))
  2848  0ADB  00A2               	movwf	?_Uart1_PutString+1
  2849  0ADC  275E  3188         	fcall	_Uart1_PutString
  2850                           
  2851                           ;ATCommand.c: 82: ATCommand_Flags.bRx=0;
  2852                           
  2853                           ;ATCommand.c: 83: ATCommand_Flags.bChar=0;
  2854                           
  2855                           ;ATCommand.c: 84: ATCommand_WaitACKTick=SystemTick;
  2856                           
  2857                           ;ATCommand.c: 85: ATCommand_RxCount=0;
  2858                           
  2859                           ;ATCommand.c: 86: ATCommand_Flags.bWaitData=1;
  2860  0ADE  27D2  3188         	fcall	PL4	;call to abstracted procedure
  2861                           
  2862                           ;ATCommand.c: 87: ATCommand_RxList[ATCommand_RxCount]='\0';
  2863  0AE0  27C9  3188         	fcall	PL2	;call to abstracted procedure
  2864  0AE2                     l15130:	
  2865                           ;ATCommand.c: 88: while(1)
  2866                           
  2867                           
  2868                           ;ATCommand.c: 89: {
  2869                           ;ATCommand.c: 90: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  2870  0AE2  308C               	movlw	140
  2871  0AE3  00AD               	movwf	?_strstr
  2872  0AE4  3021               	movlw	33
  2873  0AE5  00AE               	movwf	?_strstr+1
  2874  0AE6  30C4               	movlw	_ATCommand_OkString& (0+255)
  2875  0AE7  00AF               	movwf	?_strstr+2
  2876  0AE8  01B0               	clrf	?_strstr+3
  2877  0AE9  234A  3188         	fcall	_strstr
  2878  0AEB  082E               	movf	?_strstr+1,w
  2879  0AEC  00B7               	movwf	ATCommand_SendCmd@strx+1
  2880  0AED  082D               	movf	?_strstr,w
  2881  0AEE  00B6               	movwf	ATCommand_SendCmd@strx
  2882                           
  2883                           ;ATCommand.c: 91: if(strx!=0)
  2884  0AEF  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2885  0AF0  1903               	skipnz
  2886  0AF1  2AF5               	goto	l33230
  2887                           
  2888                           ;ATCommand.c: 92: {
  2889                           ;ATCommand.c: 93: res=ATACK_OK;
  2890  0AF2  01B8               	clrf	ATCommand_SendCmd@res
  2891  0AF3  0AB8               	incf	ATCommand_SendCmd@res,f
  2892  0AF4  2B07               	goto	l33236
  2893  0AF5                     l33230:	
  2894                           ;ATCommand.c: 95: break;
  2895                           
  2896                           ;ATCommand.c: 94: ATCommand_Flags.bRx=1;
  2897                           
  2898                           
  2899                           ;ATCommand.c: 97: else
  2900                           ;ATCommand.c: 98: {
  2901                           ;ATCommand.c: 99: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2902  0AF5  308C               	movlw	140
  2903  0AF6  00AD               	movwf	?_strstr
  2904  0AF7  3021               	movlw	33
  2905  0AF8  00AE               	movwf	?_strstr+1
  2906  0AF9  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2907  0AFA  00AF               	movwf	?_strstr+2
  2908  0AFB  01B0               	clrf	?_strstr+3
  2909  0AFC  234A  3188         	fcall	_strstr
  2910  0AFE  082E               	movf	?_strstr+1,w
  2911  0AFF  00B7               	movwf	ATCommand_SendCmd@strx+1
  2912  0B00  082D               	movf	?_strstr,w
  2913  0B01  00B6               	movwf	ATCommand_SendCmd@strx
  2914                           
  2915                           ;ATCommand.c: 100: if(strx!=0)
  2916  0B02  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2917  0B03  1903               	skipnz
  2918  0B04  2B09               	goto	l33238
  2919                           
  2920                           ;ATCommand.c: 101: {
  2921                           ;ATCommand.c: 102: res=ATACK_Err;
  2922  0B05  3002               	movlw	2
  2923  0B06  00B8               	movwf	ATCommand_SendCmd@res
  2924  0B07                     l33236:	
  2925                           
  2926                           ;ATCommand.c: 103: ATCommand_Flags.bRx=1;
  2927  0B07  14F8               	bsf	_ATCommand_Flags,1
  2928                           
  2929                           ;ATCommand.c: 104: break;
  2930  0B08  2B16               	goto	l15132
  2931  0B09                     l33238:	
  2932                           
  2933                           ;ATCommand.c: 105: }
  2934                           ;ATCommand.c: 106: }
  2935                           ;ATCommand.c: 107: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2936  0B09  0851               	movf	_ATCommand_WaitACKTick,w
  2937  0B0A  025D               	subwf	_SystemTick,w
  2938  0B0B  00B3               	movwf	??_ATCommand_SendCmd
  2939  0B0C  0852               	movf	_ATCommand_WaitACKTick+1,w
  2940  0B0D  3B5E               	subwfb	_SystemTick+1,w
  2941  0B0E  00B4               	movwf	??_ATCommand_SendCmd+1
  2942  0B0F  0254               	subwf	_ATCommand_WaitACKTimes+1,w
  2943  0B10  1D03               	skipz
  2944  0B11  2B14               	goto	u8535
  2945  0B12  0833               	movf	??_ATCommand_SendCmd,w
  2946  0B13  0253               	subwf	_ATCommand_WaitACKTimes,w
  2947  0B14                     u8535:	
  2948  0B14  1803               	skipnc
  2949  0B15  2AE2               	goto	l15130
  2950  0B16                     l15132:	
  2951                           
  2952                           ;ATCommand.c: 109: }
  2953                           ;ATCommand.c: 110: ATCommand_Flags.bWaitData=0;
  2954  0B16  1178               	bcf	_ATCommand_Flags,2
  2955                           
  2956                           ;ATCommand.c: 111: if(res==ATACK_OK)
  2957  0B17  0B38               	decfsz	ATCommand_SendCmd@res,w
  2958  0B18  2B1A               	goto	l33246
  2959  0B19  2B21               	goto	l33252
  2960  0B1A                     l33246:	
  2961                           
  2962                           ;ATCommand.c: 113: __delay_20ms(100);;
  2963  0B1A  3064               	movlw	100
  2964  0B1B  00A0               	movwf	?___delay_20ms
  2965  0B1C  01A1               	clrf	?___delay_20ms+1
  2966  0B1D  2336  3188         	fcall	___delay_20ms
  2967                           
  2968                           ;ATCommand.c: 114: retry--;
  2969  0B1F  03B5               	decf	ATCommand_SendCmd@retry,f
  2970  0B20  2ACF               	goto	l33250
  2971  0B21                     l33252:	
  2972                           
  2973                           ;ATCommand.c: 115: }
  2974                           ;ATCommand.c: 116: strcpy(ATCommand_OkString,"OK");
  2975  0B21  3013               	movlw	low (STR_32| (0+32768))
  2976  0B22  00A0               	movwf	?_strcpy
  2977  0B23  3091               	movlw	high (STR_32| (0+32768))
  2978  0B24  00A1               	movwf	?_strcpy+1
  2979  0B25  30C4               	movlw	_ATCommand_OkString& (0+255)
  2980  0B26  2385  3188         	fcall	_strcpy
  2981                           
  2982                           ;ATCommand.c: 117: strcpy(ATCommand_ErrString,"ERROR");
  2983  0B28  30FA               	movlw	low (STR_18| (0+32768))
  2984  0B29  00A0               	movwf	?_strcpy
  2985  0B2A  3090               	movlw	high (STR_18| (0+32768))
  2986  0B2B  00A1               	movwf	?_strcpy+1
  2987  0B2C  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2988  0B2D  2385               	fcall	_strcpy
  2989                           
  2990                           ;ATCommand.c: 118: ATCommand_Clear='\0';
  2991  0B2E  01F7               	clrf	_ATCommand_Clear
  2992                           
  2993                           ;ATCommand.c: 120: ATCommand_RetryTimes=3;
  2994  0B2F  3003               	movlw	3
  2995  0B30  00E1               	movwf	_ATCommand_RetryTimes
  2996                           
  2997                           ;ATCommand.c: 121: ATCommand_WaitACKTimes=50;
  2998  0B31  3032               	movlw	50
  2999  0B32  00D3               	movwf	_ATCommand_WaitACKTimes
  3000  0B33  01D4               	clrf	_ATCommand_WaitACKTimes+1
  3001                           
  3002                           ;ATCommand.c: 122: return res;
  3003  0B34  0838               	movf	ATCommand_SendCmd@res,w
  3004  0B35  0008               	return
  3005  0B36                     __end_of_ATCommand_SendCmd:	
  3006  0B36                     __ptext2116:	
  3007 ;; =============== function _Uart1_PutString ends ============
  3008                           
  3009                           
  3010 ;; *************** function ___delay_20ms *****************
  3011 ;; Defined at:
  3012 ;;		line 8 in file "F:\work\WYP\NBIoT\afx.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;  x               2    0[BANK0 ] unsigned int 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;		None
  3017 ;; Return value:  Size  Location     Type
  3018 ;;		None               void
  3019 ;; Registers used:
  3020 ;;		wreg
  3021 ;; Tracked objects:
  3022 ;;		On entry : 1F/0
  3023 ;;		On exit  : 1F/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3026 ;;      Params:         0       2       0       0       0       0       0       0
  3027 ;;      Locals:         0       0       0       0       0       0       0       0
  3028 ;;      Temps:          0       2       0       0       0       0       0       0
  3029 ;;      Totals:         0       4       0       0       0       0       0       0
  3030 ;;Total ram usage:        4 bytes
  3031 ;; Hardware stack levels used:    1
  3032 ;; Hardware stack levels required when called:    3
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_InitSystem
  3037 ;;		_main
  3038 ;;		_ReadTData
  3039 ;;		_CallProc
  3040 ;;		_CallSend
  3041 ;;		_InteractServer
  3042 ;;		_InitGPRS
  3043 ;;		_PowerDown
  3044 ;;		_PowerON
  3045 ;;		_TestProc
  3046 ;;		_CallTestProc
  3047 ;;		_CallTestSend
  3048 ;;		_ATCommand_SendCmd
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051  0B36                     ___delay_20ms:	
  3052  0B36                     l12988:	
  3053                           ;afx.c: 9: while(x--)
  3054                           
  3055                           ; Regs used in ___delay_20ms: [wreg]
  3056                           
  3057  0B36  3001               	movlw	1
  3058  0B37  0020               	movlb	0	; select bank0
  3059  0B38  02A0               	subwf	___delay_20ms@x,f
  3060  0B39  3000               	movlw	0
  3061  0B3A  3BA1               	subwfb	___delay_20ms@x+1,f
  3062  0B3B  0A20               	incf	___delay_20ms@x,w
  3063  0B3C  1903               	skipnz
  3064  0B3D  0A21               	incf	___delay_20ms@x+1,w
  3065  0B3E  1903               	btfsc	3,2
  3066  0B3F  0008               	return
  3067                           
  3068                           ;afx.c: 10: {
  3069                           ;afx.c: 11: _delay((unsigned long)((20)*(4000000/4000.0)));
  3070  0B40  301A               	movlw	26
  3071  0B41  00A3               	movwf	??___delay_20ms+1
  3072  0B42  30F8               	movlw	248
  3073  0B43  00A2               	movwf	??___delay_20ms
  3074  0B44                     u9937:	
  3075  0B44  0BA2               	decfsz	??___delay_20ms,f
  3076  0B45  2B44               	goto	u9937
  3077  0B46  0BA3               	decfsz	??___delay_20ms+1,f
  3078  0B47  2B44               	goto	u9937
  3079  0B48  0064               	clrwdt
  3080  0B49  2B36               	goto	l12988
  3081  0B4A                     __end_of___delay_20ms:	
  3082  0B4A                     __ptext2113:	
  3083 ;; =============== function _atoi ends ============
  3084                           
  3085                           
  3086 ;; *************** function _strstr *****************
  3087 ;; Defined at:
  3088 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strstr.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  s1              2   13[BANK0 ] PTR const unsigned char 
  3091 ;;		 -> ATCommand_RxList(100), RAM(128), 
  3092 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
  3093 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  3094 ;;		 -> ATCommand_OkString(15), 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  2    wreg      PTR unsigned char 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 1F/0
  3103 ;;		On exit  : 1F/0
  3104 ;;		Unchanged: FFFE0/0
  3105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3106 ;;      Params:         0       4       0       0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0
  3109 ;;      Totals:         0       4       0       0       0       0       0       0
  3110 ;;Total ram usage:        4 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    4
  3113 ;; This function calls:
  3114 ;;		_strlen
  3115 ;;		_strncmp
  3116 ;;		_strchr
  3117 ;; This function is called by:
  3118 ;;		_InitGPRS
  3119 ;;		_ATCommand_SendCmd
  3120 ;;		_ATCommand_WaitData
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123  0B4A                     _strstr:	
  3124                           
  3125                           ; Regs used in _strstr: [wreg-status,0+pclath+cstack]
  3126  0B4A  2B77               	goto	l32986
  3127  0B4B                     l32980:	
  3128  0B4B  082E               	movf	strstr@s1+1,w
  3129  0B4C  00A7               	movwf	?_strncmp+1
  3130  0B4D  082D               	movf	strstr@s1,w
  3131  0B4E  00A6               	movwf	?_strncmp
  3132  0B4F  0830               	movf	strstr@s2+1,w
  3133  0B50  00A9               	movwf	?_strncmp+3
  3134  0B51  082F               	movf	strstr@s2,w
  3135  0B52  00A8               	movwf	?_strncmp+2
  3136  0B53  0830               	movf	strstr@s2+1,w
  3137  0B54  00A1               	movwf	?_strlen+1
  3138  0B55  082F               	movf	strstr@s2,w
  3139  0B56  00A0               	movwf	?_strlen
  3140  0B57  239B  3188         	fcall	_strlen
  3141  0B59  0821               	movf	?_strlen+1,w
  3142  0B5A  00AB               	movwf	?_strncmp+5
  3143  0B5B  0820               	movf	?_strlen,w
  3144  0B5C  00AA               	movwf	?_strncmp+4
  3145  0B5D  23BA  3188         	fcall	_strncmp
  3146  0B5F  0827               	movf	?_strncmp+1,w
  3147  0B60  0426               	iorwf	?_strncmp,w
  3148  0B61  1903               	btfsc	3,2
  3149  0B62  0008               	return
  3150  0B63  082E               	movf	strstr@s1+1,w
  3151  0B64  00A1               	movwf	?_strchr+1
  3152  0B65  082D               	movf	strstr@s1,w
  3153  0B66  00A0               	movwf	?_strchr
  3154  0B67  0AA0               	incf	?_strchr,f
  3155  0B68  1903               	skipnz
  3156  0B69  0AA1               	incf	?_strchr+1,f
  3157  0B6A  082F               	movf	strstr@s2,w
  3158  0B6B  0084               	movwf	4
  3159  0B6C  0830               	movf	strstr@s2+1,w
  3160  0B6D  0085               	movwf	5
  3161  0B6E  0800               	movf	0,w	;code access
  3162  0B6F  00A2               	movwf	?_strchr+2
  3163  0B70  01A3               	clrf	?_strchr+3
  3164  0B71  23F2  3188         	fcall	_strchr
  3165  0B73  0821               	movf	?_strchr+1,w
  3166  0B74  00AE               	movwf	strstr@s1+1
  3167  0B75  0820               	movf	?_strchr,w
  3168  0B76  00AD               	movwf	strstr@s1
  3169  0B77                     l32986:	
  3170  0B77  082E               	movf	strstr@s1+1,w
  3171  0B78  042D               	iorwf	strstr@s1,w
  3172  0B79  1903               	skipnz
  3173  0B7A  2B82               	goto	l32990
  3174  0B7B  082D               	movf	strstr@s1,w
  3175  0B7C  0086               	movwf	6
  3176  0B7D  082E               	movf	strstr@s1+1,w
  3177  0B7E  0087               	movwf	7
  3178  0B7F  0881               	movf	1,f
  3179  0B80  1D03               	skipz
  3180  0B81  2B4B               	goto	l32980
  3181  0B82                     l32990:	
  3182  0B82  01AD               	clrf	?_strstr
  3183  0B83  01AE               	clrf	?_strstr+1
  3184  0B84  0008               	return
  3185  0B85                     __end_of_strstr:	
  3186  0B85                     __ptext2140:	
  3187 ;; =============== function _GetVerify_Sum ends ============
  3188                           
  3189                           
  3190 ;; *************** function _strcpy *****************
  3191 ;; Defined at:
  3192 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strcpy.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;  to              1    wreg     PTR unsigned char 
  3195 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  3196 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  3197 ;;		 -> STR_38(6), STR_37(3), STR_36(6), STR_35(3), 
  3198 ;;		 -> STR_33(6), STR_32(3), STR_18(6), STR_17(7), 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  to              1    4[BANK0 ] PTR unsigned char 
  3201 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  3202 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  3203 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      PTR unsigned char 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3208 ;; Tracked objects:
  3209 ;;		On entry : 1F/0
  3210 ;;		On exit  : 1F/0
  3211 ;;		Unchanged: FFFE0/0
  3212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3213 ;;      Params:         0       2       0       0       0       0       0       0
  3214 ;;      Locals:         0       2       0       0       0       0       0       0
  3215 ;;      Temps:          0       2       0       0       0       0       0       0
  3216 ;;      Totals:         0       6       0       0       0       0       0       0
  3217 ;;Total ram usage:        6 bytes
  3218 ;; Hardware stack levels used:    1
  3219 ;; Hardware stack levels required when called:    3
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_InteractServer
  3224 ;;		_ATCommand_Init
  3225 ;;		_ATCommand_SendCmd
  3226 ;;		_ATCommand_WaitData
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229  0B85                     _strcpy:	
  3230                           
  3231                           ; Regs used in _strcpy: [wreg-status,0+pclath]
  3232                           ;strcpy@to stored from wreg
  3233  0B85  00A4               	movwf	strcpy@to
  3234  0B86  00A5               	movwf	strcpy@cp
  3235  0B87                     l30826:	
  3236  0B87  0825               	movf	strcpy@cp,w
  3237  0B88  0086               	movwf	6
  3238  0B89  0187               	clrf	7
  3239  0B8A  0AA5               	incf	strcpy@cp,f
  3240  0B8B  0821               	movf	strcpy@from+1,w
  3241  0B8C  00A3               	movwf	??_strcpy+1
  3242  0B8D  0820               	movf	strcpy@from,w
  3243  0B8E  00A2               	movwf	??_strcpy
  3244  0B8F  0AA0               	incf	strcpy@from,f
  3245  0B90  1903               	skipnz
  3246  0B91  0AA1               	incf	strcpy@from+1,f
  3247  0B92  0084               	movwf	4
  3248  0B93  0823               	movf	??_strcpy+1,w
  3249  0B94  0085               	movwf	5
  3250  0B95  0800               	movf	0,w	;code access
  3251  0B96  3FC0               	movwi [0]fsr1
  3252  0B97  0889               	movf	9,f
  3253  0B98  1903               	btfsc	3,2
  3254  0B99  0008               	return
  3255  0B9A  2B87               	goto	l30826
  3256  0B9B                     __end_of_strcpy:	
  3257  0B9B                     __ptext2134:	
  3258 ;; =============== function _strncmp ends ============
  3259                           
  3260                           
  3261 ;; *************** function _strlen *****************
  3262 ;; Defined at:
  3263 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strlen.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  3266 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  3267 ;;		 -> ATCommand_OkString(15), 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  3270 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  3271 ;;		 -> ATCommand_OkString(15), 
  3272 ;; Return value:  Size  Location     Type
  3273 ;;                  2    0[BANK0 ] unsigned int 
  3274 ;; Registers used:
  3275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3276 ;; Tracked objects:
  3277 ;;		On entry : 1F/0
  3278 ;;		On exit  : 1F/0
  3279 ;;		Unchanged: FFFE0/0
  3280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3281 ;;      Params:         0       2       0       0       0       0       0       0
  3282 ;;      Locals:         0       2       0       0       0       0       0       0
  3283 ;;      Temps:          0       2       0       0       0       0       0       0
  3284 ;;      Totals:         0       6       0       0       0       0       0       0
  3285 ;;Total ram usage:        6 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    3
  3288 ;; This function calls:
  3289 ;;		Nothing
  3290 ;; This function is called by:
  3291 ;;		_strstr
  3292 ;; This function uses a non-reentrant model
  3293 ;;
  3294  0B9B                     _strlen:	
  3295                           
  3296                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  3297  0B9B  0821               	movf	strlen@s+1,w
  3298  0B9C  00A5               	movwf	strlen@cp+1
  3299  0B9D  0820               	movf	strlen@s,w
  3300  0B9E  00A4               	movwf	strlen@cp
  3301  0B9F                     l30904:	
  3302  0B9F  0825               	movf	strlen@cp+1,w
  3303  0BA0  00A3               	movwf	??_strlen+1
  3304  0BA1  0824               	movf	strlen@cp,w
  3305  0BA2  00A2               	movwf	??_strlen
  3306  0BA3  0AA4               	incf	strlen@cp,f
  3307  0BA4  1903               	skipnz
  3308  0BA5  0AA5               	incf	strlen@cp+1,f
  3309  0BA6  0084               	movwf	4
  3310  0BA7  0823               	movf	??_strlen+1,w
  3311  0BA8  0085               	movwf	5
  3312  0BA9  0800               	movf	0,w	;code access
  3313  0BAA  3800               	iorlw	0
  3314  0BAB  1D03               	skipz
  3315  0BAC  2B9F               	goto	l30904
  3316  0BAD  0820               	movf	strlen@s,w
  3317  0BAE  0224               	subwf	strlen@cp,w
  3318  0BAF  00A2               	movwf	??_strlen
  3319  0BB0  0821               	movf	strlen@s+1,w
  3320  0BB1  3B25               	subwfb	strlen@cp+1,w
  3321  0BB2  00A3               	movwf	??_strlen+1
  3322  0BB3  0822               	movf	??_strlen,w
  3323  0BB4  3EFF               	addlw	255
  3324  0BB5  00A0               	movwf	?_strlen
  3325  0BB6  30FF               	movlw	255
  3326  0BB7  3D23               	addwfc	??_strlen+1,w
  3327  0BB8  00A1               	movwf	?_strlen+1
  3328  0BB9  0008               	return
  3329  0BBA                     __end_of_strlen:	
  3330  0BBA                     __ptext2133:	
  3331 ;; =============== function _strchr ends ============
  3332                           
  3333                           
  3334 ;; *************** function _strncmp *****************
  3335 ;; Defined at:
  3336 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strncmp.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  3339 ;;		 -> ATCommand_RxList(100), RAM(128), 
  3340 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  3341 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  3342 ;;		 -> ATCommand_OkString(15), 
  3343 ;;  len             2   10[BANK0 ] unsigned int 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  2    6[BANK0 ] int 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  3350 ;; Tracked objects:
  3351 ;;		On entry : 1F/0
  3352 ;;		On exit  : 1F/0
  3353 ;;		Unchanged: FFFE0/0
  3354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3355 ;;      Params:         0       6       0       0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0
  3357 ;;      Temps:          0       1       0       0       0       0       0       0
  3358 ;;      Totals:         0       7       0       0       0       0       0       0
  3359 ;;Total ram usage:        7 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_strstr
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368  0BBA                     _strncmp:	
  3369  0BBA                     l30922:	
  3370                           ; Regs used in _strncmp: [wreg-status,0+pclath]
  3371                           
  3372  0BBA  3001               	movlw	1
  3373  0BBB  02AA               	subwf	strncmp@len,f
  3374  0BBC  3000               	movlw	0
  3375  0BBD  3BAB               	subwfb	strncmp@len+1,f
  3376  0BBE  0A2A               	incf	strncmp@len,w
  3377  0BBF  1903               	skipnz
  3378  0BC0  0A2B               	incf	strncmp@len+1,w
  3379  0BC1  1903               	btfsc	3,2
  3380  0BC2  2BEF               	goto	l30924
  3381  0BC3  0826               	movf	strncmp@s1,w
  3382  0BC4  0086               	movwf	6
  3383  0BC5  0827               	movf	strncmp@s1+1,w
  3384  0BC6  0087               	movwf	7
  3385  0BC7  0801               	movf	1,w
  3386  0BC8  3A00               	xorlw	0
  3387  0BC9  1903               	skipnz
  3388  0BCA  2BD9               	goto	l30916
  3389  0BCB  0828               	movf	strncmp@s2,w
  3390  0BCC  0084               	movwf	4
  3391  0BCD  0829               	movf	strncmp@s2+1,w
  3392  0BCE  0085               	movwf	5
  3393  0BCF  0800               	movf	0,w	;code access
  3394  0BD0  00AC               	movwf	??_strncmp
  3395  0BD1  0826               	movf	strncmp@s1,w
  3396  0BD2  0086               	movwf	6
  3397  0BD3  0827               	movf	strncmp@s1+1,w
  3398  0BD4  0087               	movwf	7
  3399  0BD5  0801               	movf	1,w
  3400  0BD6  062C               	xorwf	??_strncmp,w
  3401  0BD7  1903               	skipnz
  3402  0BD8  2BE8               	goto	l30920
  3403  0BD9                     l30916:	
  3404  0BD9  0826               	movf	strncmp@s1,w
  3405  0BDA  0086               	movwf	6
  3406  0BDB  0827               	movf	strncmp@s1+1,w
  3407  0BDC  0087               	movwf	7
  3408  0BDD  0828               	movf	strncmp@s2,w
  3409  0BDE  0084               	movwf	4
  3410  0BDF  0829               	movf	strncmp@s2+1,w
  3411  0BE0  0085               	movwf	5
  3412  0BE1  0800               	movf	0,w	;code access
  3413  0BE2  0201               	subwf	1,w
  3414  0BE3  00A6               	movwf	?_strncmp
  3415  0BE4  01A7               	clrf	?_strncmp+1
  3416  0BE5  1C03               	skipc
  3417  0BE6  03A7               	decf	?_strncmp+1,f
  3418  0BE7  0008               	return
  3419  0BE8                     l30920:	
  3420  0BE8  0AA6               	incf	strncmp@s1,f
  3421  0BE9  1903               	skipnz
  3422  0BEA  0AA7               	incf	strncmp@s1+1,f
  3423  0BEB  0AA8               	incf	strncmp@s2,f
  3424  0BEC  1903               	skipnz
  3425  0BED  0AA9               	incf	strncmp@s2+1,f
  3426  0BEE  2BBA               	goto	l30922
  3427  0BEF                     l30924:	
  3428  0BEF  01A6               	clrf	?_strncmp
  3429  0BF0  01A7               	clrf	?_strncmp+1
  3430  0BF1  0008               	return
  3431  0BF2                     __end_of_strncmp:	
  3432  0BF2                     __ptext2132:	
  3433 ;; =============== function ___bmul ends ============
  3434                           
  3435                           
  3436 ;; *************** function _strchr *****************
  3437 ;; Defined at:
  3438 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strchr.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  3441 ;;		 -> ATCommand_RxList(100), RAM(128), 
  3442 ;;  chr             2    2[BANK0 ] int 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  2    wreg      PTR unsigned char 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 1F/0
  3451 ;;		On exit  : 1F/0
  3452 ;;		Unchanged: FFFE0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3454 ;;      Params:         0       4       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       2       0       0       0       0       0       0
  3457 ;;      Totals:         0       6       0       0       0       0       0       0
  3458 ;;Total ram usage:        6 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    3
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_strstr
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467  0BF2                     _strchr:	
  3468  0BF2                     l28017:	
  3469                           ; Regs used in _strchr: [wreg+fsr1l-status,0]
  3470                           
  3471  0BF2  0820               	movf	strchr@ptr,w
  3472  0BF3  0086               	movwf	6
  3473  0BF4  0821               	movf	strchr@ptr+1,w
  3474  0BF5  0087               	movwf	7
  3475  0BF6  0801               	movf	1,w
  3476  0BF7  0622               	xorwf	strchr@chr,w
  3477  0BF8  1903               	btfsc	3,2
  3478  0BF9  0008               	return
  3479  0BFA  0821               	movf	strchr@ptr+1,w
  3480  0BFB  00A5               	movwf	??_strchr+1
  3481  0BFC  0820               	movf	strchr@ptr,w
  3482  0BFD  00A4               	movwf	??_strchr
  3483  0BFE  0AA0               	incf	strchr@ptr,f
  3484  0BFF  1903               	skipnz
  3485  0C00  0AA1               	incf	strchr@ptr+1,f
  3486  0C01  0086               	movwf	6
  3487  0C02  0825               	movf	??_strchr+1,w
  3488  0C03  0087               	movwf	7
  3489  0C04  0881               	movf	1,f
  3490  0C05  1D03               	skipz
  3491  0C06  2BF2               	goto	l28017
  3492  0C07  01A0               	clrf	?_strchr
  3493  0C08  01A1               	clrf	?_strchr+1
  3494  0C09  0008               	return
  3495  0C0A                     __end_of_strchr:	
  3496  0C0A                     __ptext2124:	
  3497 ;; =============== function _LcdDisplay_CurTemp ends ============
  3498                           
  3499                           
  3500 ;; *************** function _LcdDisplay_CSQ *****************
  3501 ;; Defined at:
  3502 ;;		line 327 in file "F:\work\WYP\NBIoT\Display.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  t2              1    6[BANK0 ] unsigned char 
  3507 ;;  t1              1    5[BANK0 ] unsigned char 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;		None               void
  3510 ;; Registers used:
  3511 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 1F/0
  3514 ;;		On exit  : 1F/F
  3515 ;;		Unchanged: FFFE0/0
  3516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3517 ;;      Params:         0       0       0       0       0       0       0       0
  3518 ;;      Locals:         0       2       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0
  3520 ;;      Totals:         0       2       0       0       0       0       0       0
  3521 ;;Total ram usage:        2 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; Hardware stack levels required when called:    4
  3524 ;; This function calls:
  3525 ;;		___lbdiv
  3526 ;;		___lbmod
  3527 ;;		_LcdDisplayNum
  3528 ;; This function is called by:
  3529 ;;		_InitGPRS
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532  0C0A                     _LcdDisplay_CSQ:	
  3533                           
  3534                           ;Display.c: 328: unsigned char t1,t2;
  3535                           ;Display.c: 332: t1=CSQ/10;
  3536                           
  3537                           ; Regs used in _LcdDisplay_CSQ: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3538  0C0A  300A               	movlw	10
  3539  0C0B  00A0               	movwf	?___lbdiv
  3540  0C0C  0862               	movf	_CSQ,w
  3541  0C0D  2426               	fcall	___lbdiv
  3542  0C0E  00A5               	movwf	LcdDisplay_CSQ@t1
  3543                           
  3544                           ;Display.c: 333: t2=CSQ%10;
  3545  0C0F  300A               	movlw	10
  3546  0C10  00A0               	movwf	?___lbmod
  3547  0C11  0862               	movf	_CSQ,w
  3548  0C12  3182  2269  3188   	fcall	___lbmod
  3549  0C15  00A6               	movwf	LcdDisplay_CSQ@t2
  3550                           
  3551                           ;Display.c: 334: DpyNum[0]=0x01 | 0x02 | 0x10 | 0x20 | 0x40;
  3552  0C16  3073               	movlw	115
  3553  0C17  00EA               	movwf	_DpyNum
  3554                           
  3555                           ;Display.c: 335: DpyNum[1]=SegCode[t1];
  3556  0C18  0825               	movf	LcdDisplay_CSQ@t1,w
  3557  0C19  3183  234B         	fcall	PL5	;call to abstracted procedure
  3558                           
  3559                           ;Display.c: 336: DpyNum[2]=SegCode[t2];
  3560  0C1B  0826               	movf	LcdDisplay_CSQ@t2,w
  3561  0C1C  3E01               	addlw	low (_SegCode| (0+32768))
  3562  0C1D  0084               	movwf	4
  3563  0C1E  3090               	movlw	high (_SegCode| (0+32768))
  3564  0C1F  1803               	skipnc
  3565  0C20  3E01               	addlw	1
  3566  0C21  0085               	movwf	5
  3567  0C22  0800               	movf	0,w	;code access
  3568  0C23  00EC               	movwf	_DpyNum+2
  3569                           
  3570                           ;Display.c: 337: LcdDisplayNum();
  3571  0C24  3181  2940         	ljmp	l32494
  3572  0C26                     __end_of_LcdDisplay_CSQ:	
  3573  0C26                     __ptext2127:	
  3574 ;; =============== function ___lbmod ends ============
  3575                           
  3576                           
  3577 ;; *************** function ___lbdiv *****************
  3578 ;; Defined at:
  3579 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbdiv.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;  dividend        1    wreg     unsigned char 
  3582 ;;  divisor         1    0[BANK0 ] unsigned char 
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;  dividend        1    1[BANK0 ] unsigned char 
  3585 ;;  quotient        1    3[BANK0 ] unsigned char 
  3586 ;;  counter         1    2[BANK0 ] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;                  1    wreg      unsigned char 
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 1F/0
  3593 ;;		On exit  : 1F/0
  3594 ;;		Unchanged: FFFE0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3596 ;;      Params:         0       1       0       0       0       0       0       0
  3597 ;;      Locals:         0       3       0       0       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0       0       0       0
  3599 ;;      Totals:         0       4       0       0       0       0       0       0
  3600 ;;Total ram usage:        4 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    3
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_LcdDisplay_CSQ
  3607 ;;		_LcdDisplay_CurTemp
  3608 ;;		_LcdDisplay_Err
  3609 ;; This function uses a non-reentrant model
  3610 ;;
  3611  0C26                     ___lbdiv:	
  3612                           
  3613                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  3614                           ;___lbdiv@dividend stored from wreg
  3615  0C26  00A1               	movwf	___lbdiv@dividend
  3616  0C27  01A3               	clrf	___lbdiv@quotient
  3617  0C28  0820               	movf	___lbdiv@divisor,w
  3618  0C29  1903               	btfsc	3,2
  3619  0C2A  2C3C               	goto	l32830
  3620  0C2B  01A2               	clrf	___lbdiv@counter
  3621  0C2C                     l32816:	
  3622  0C2C  0AA2               	incf	___lbdiv@counter,f
  3623  0C2D  1BA0               	btfsc	___lbdiv@divisor,7
  3624  0C2E  2C31               	goto	l27715
  3625  0C2F  35A0               	lslf	___lbdiv@divisor,f
  3626  0C30  2C2C               	goto	l32816
  3627  0C31                     l27715:	
  3628  0C31  35A3               	lslf	___lbdiv@quotient,f
  3629  0C32  0820               	movf	___lbdiv@divisor,w
  3630  0C33  0221               	subwf	___lbdiv@dividend,w
  3631  0C34  1C03               	skipc
  3632  0C35  2C39               	goto	l32826
  3633  0C36  0820               	movf	___lbdiv@divisor,w
  3634  0C37  02A1               	subwf	___lbdiv@dividend,f
  3635  0C38  1423               	bsf	___lbdiv@quotient,0
  3636  0C39                     l32826:	
  3637  0C39  36A0               	lsrf	___lbdiv@divisor,f
  3638  0C3A  0BA2               	decfsz	___lbdiv@counter,f
  3639  0C3B  2C31               	goto	l27715
  3640  0C3C                     l32830:	
  3641  0C3C  0823               	movf	___lbdiv@quotient,w
  3642  0C3D  0008               	return
  3643  0C3E                     __end_of___lbdiv:	
  3644  0C3E                     __ptext2112:	
  3645 ;; =============== function _OneWire_ReadByte ends ============
  3646                           
  3647                           
  3648 ;; *************** function _atoi *****************
  3649 ;; Defined at:
  3650 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\atoi.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  3653 ;;		 -> ATCommand_RxList(100), RAM(128), 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  a               2   13[BANK0 ] int 
  3656 ;;  sign            1   12[BANK0 ] unsigned char 
  3657 ;; Return value:  Size  Location     Type
  3658 ;;                  2    6[BANK0 ] int 
  3659 ;; Registers used:
  3660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3661 ;; Tracked objects:
  3662 ;;		On entry : 1F/0
  3663 ;;		On exit  : 1F/0
  3664 ;;		Unchanged: FFFE0/0
  3665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3666 ;;      Params:         0       2       0       0       0       0       0       0
  3667 ;;      Locals:         0       3       0       0       0       0       0       0
  3668 ;;      Temps:          0       4       0       0       0       0       0       0
  3669 ;;      Totals:         0       9       0       0       0       0       0       0
  3670 ;;Total ram usage:        9 bytes
  3671 ;; Hardware stack levels used:    1
  3672 ;; Hardware stack levels required when called:    4
  3673 ;; This function calls:
  3674 ;;		___wmul
  3675 ;;		_isdigit
  3676 ;; This function is called by:
  3677 ;;		_InitGPRS
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680  0C3E                     _atoi:	
  3681  0C3E                     l32998:	
  3682                           ; Regs used in _atoi: [wreg+fsr1l-status,0+pclath+cstack]
  3683                           
  3684  0C3E  0826               	movf	atoi@s,w
  3685  0C3F  0086               	movwf	6
  3686  0C40  0827               	movf	atoi@s+1,w
  3687  0C41  0087               	movwf	7
  3688  0C42  0801               	movf	1,w
  3689  0C43  3A20               	xorlw	32
  3690  0C44  1D03               	btfss	3,2
  3691  0C45  2C4A               	goto	l33000
  3692  0C46                     l32996:	
  3693  0C46  0AA6               	incf	atoi@s,f
  3694  0C47  1903               	skipnz
  3695  0C48  0AA7               	incf	atoi@s+1,f
  3696  0C49  2C3E               	goto	l32998
  3697  0C4A                     l33000:	
  3698  0C4A  0826               	movf	atoi@s,w
  3699  0C4B  0086               	movwf	6
  3700  0C4C  0827               	movf	atoi@s+1,w
  3701  0C4D  0087               	movwf	7
  3702  0C4E  0801               	movf	1,w
  3703  0C4F  3A09               	xorlw	9
  3704  0C50  1903               	skipnz
  3705  0C51  2C46               	goto	l32996
  3706  0C52  01AD               	clrf	atoi@a
  3707  0C53  01AE               	clrf	atoi@a+1
  3708  0C54  01AC               	clrf	atoi@sign
  3709  0C55  0826               	movf	atoi@s,w
  3710  0C56  0086               	movwf	6
  3711  0C57  0827               	movf	atoi@s+1,w
  3712  0C58  0087               	movwf	7
  3713  0C59  0801               	movf	1,w
  3714  0C5A  3A2D               	xorlw	45
  3715  0C5B  1D03               	skipz
  3716  0C5C  2C5F               	goto	l33008
  3717  0C5D  0AAC               	incf	atoi@sign,f
  3718  0C5E  2C8C               	goto	l33010
  3719  0C5F                     l33008:	
  3720  0C5F  0826               	movf	atoi@s,w
  3721  0C60  0086               	movwf	6
  3722  0C61  0827               	movf	atoi@s+1,w
  3723  0C62  0087               	movwf	7
  3724  0C63  0801               	movf	1,w
  3725  0C64  3A2B               	xorlw	43
  3726  0C65  1903               	btfsc	3,2
  3727  0C66  2C8C               	goto	l33010
  3728  0C67                     l33016:	
  3729  0C67  0826               	movf	atoi@s,w
  3730  0C68  0086               	movwf	6
  3731  0C69  0827               	movf	atoi@s+1,w
  3732  0C6A  0087               	movwf	7
  3733  0C6B  0801               	movf	1,w
  3734  0C6C  24A4  3188         	fcall	_isdigit
  3735  0C6E  1C03               	btfss	3,0
  3736  0C6F  2C90               	goto	l33018
  3737  0C70  0826               	movf	atoi@s,w
  3738  0C71  0086               	movwf	6
  3739  0C72  0827               	movf	atoi@s+1,w
  3740  0C73  0087               	movwf	7
  3741  0C74  0801               	movf	1,w
  3742  0C75  00A8               	movwf	??_atoi
  3743  0C76  01A9               	clrf	??_atoi+1
  3744  0C77  082E               	movf	atoi@a+1,w
  3745  0C78  00A1               	movwf	?___wmul+1
  3746  0C79  082D               	movf	atoi@a,w
  3747  0C7A  00A0               	movwf	?___wmul
  3748  0C7B  300A               	movlw	10
  3749  0C7C  00A2               	movwf	?___wmul+2
  3750  0C7D  01A3               	clrf	?___wmul+3
  3751  0C7E  27EB  3188         	fcall	___wmul
  3752  0C80  0828               	movf	??_atoi,w
  3753  0C81  0720               	addwf	?___wmul,w
  3754  0C82  00AA               	movwf	??_atoi+2
  3755  0C83  0829               	movf	??_atoi+1,w
  3756  0C84  3D21               	addwfc	?___wmul+1,w
  3757  0C85  00AB               	movwf	??_atoi+3
  3758  0C86  082A               	movf	??_atoi+2,w
  3759  0C87  3ED0               	addlw	208
  3760  0C88  00AD               	movwf	atoi@a
  3761  0C89  30FF               	movlw	255
  3762  0C8A  3D2B               	addwfc	??_atoi+3,w
  3763  0C8B  00AE               	movwf	atoi@a+1
  3764  0C8C                     l33010:	
  3765  0C8C  0AA6               	incf	atoi@s,f
  3766  0C8D  1903               	skipnz
  3767  0C8E  0AA7               	incf	atoi@s+1,f
  3768  0C8F  2C67               	goto	l33016
  3769  0C90                     l33018:	
  3770  0C90  082C               	movf	atoi@sign,w
  3771  0C91  1903               	btfsc	3,2
  3772  0C92  2C9F               	goto	l33024
  3773  0C93  092D               	comf	atoi@a,w
  3774  0C94  00A8               	movwf	??_atoi
  3775  0C95  092E               	comf	atoi@a+1,w
  3776  0C96  00A9               	movwf	??_atoi+1
  3777  0C97  0AA8               	incf	??_atoi,f
  3778  0C98  1903               	skipnz
  3779  0C99  0AA9               	incf	??_atoi+1,f
  3780  0C9A  0828               	movf	??_atoi,w
  3781  0C9B  00A6               	movwf	?_atoi
  3782  0C9C  0829               	movf	??_atoi+1,w
  3783  0C9D  00A7               	movwf	?_atoi+1
  3784  0C9E  0008               	return
  3785  0C9F                     l33024:	
  3786  0C9F  082E               	movf	atoi@a+1,w
  3787  0CA0  00A7               	movwf	?_atoi+1
  3788  0CA1  082D               	movf	atoi@a,w
  3789  0CA2  00A6               	movwf	?_atoi
  3790  0CA3  0008               	return
  3791  0CA4                     __end_of_atoi:	
  3792  0CA4                     __ptext2135:	
  3793 ;; =============== function _strlen ends ============
  3794                           
  3795                           
  3796 ;; *************** function _isdigit *****************
  3797 ;; Defined at:
  3798 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isdigit.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  c               1    wreg     unsigned char 
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;  c               1    1[BANK0 ] unsigned char 
  3803 ;; Return value:  Size  Location     Type
  3804 ;;		None               void
  3805 ;; Registers used:
  3806 ;;		wreg, status,2, status,0
  3807 ;; Tracked objects:
  3808 ;;		On entry : 1F/0
  3809 ;;		On exit  : 1F/0
  3810 ;;		Unchanged: FFFE0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3812 ;;      Params:         0       0       0       0       0       0       0       0
  3813 ;;      Locals:         0       2       0       0       0       0       0       0
  3814 ;;      Temps:          0       0       0       0       0       0       0       0
  3815 ;;      Totals:         0       2       0       0       0       0       0       0
  3816 ;;Total ram usage:        2 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    3
  3819 ;; This function calls:
  3820 ;;		Nothing
  3821 ;; This function is called by:
  3822 ;;		_atoi
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825  0CA4                     _isdigit:	
  3826                           
  3827                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3828                           ;isdigit@c stored from wreg
  3829  0CA4  00A1               	movwf	isdigit@c
  3830  0CA5  01A0               	clrf	_isdigit$31795
  3831  0CA6  303A               	movlw	58
  3832  0CA7  0221               	subwf	isdigit@c,w
  3833  0CA8  1803               	skipnc
  3834  0CA9  2CB0               	goto	l32728
  3835  0CAA  3030               	movlw	48
  3836  0CAB  0221               	subwf	isdigit@c,w
  3837  0CAC  1C03               	skipc
  3838  0CAD  2CB0               	goto	l32728
  3839  0CAE  01A0               	clrf	_isdigit$31795
  3840  0CAF  0AA0               	incf	_isdigit$31795,f
  3841  0CB0                     l32728:	
  3842  0CB0  0C20               	rrf	_isdigit$31795,w
  3843  0CB1  0008               	return
  3844  0CB2                     __end_of_isdigit:	
  3845  0CB2                     __ptext2090:	
  3846 ;; =============== function _ReadTData ends ============
  3847                           
  3848                           
  3849 ;; *************** function _InteractServer *****************
  3850 ;; Defined at:
  3851 ;;		line 175 in file "F:\work\WYP\NBIoT\Function.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  j               2   28[BANK0 ] int 
  3856 ;;  i               2   26[BANK0 ] int 
  3857 ;;  i               2   24[BANK0 ] int 
  3858 ;;  t               2   32[BANK0 ] struct .
  3859 ;;  txLen           2   30[BANK0 ] unsigned int 
  3860 ;;  i               1   37[BANK0 ] unsigned char 
  3861 ;;  k               1   36[BANK0 ] unsigned char 
  3862 ;;  j               1   35[BANK0 ] unsigned char 
  3863 ;;  addr            1   34[BANK0 ] unsigned char 
  3864 ;;  res             1   23[BANK0 ] unsigned char 
  3865 ;;  retry           1   22[BANK0 ] unsigned char 
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      unsigned char 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 1F/0
  3872 ;;		On exit  : 1F/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3875 ;;      Params:         0       0       0       0       0       0       0       0
  3876 ;;      Locals:         0      16       0       0       0       0       0       0
  3877 ;;      Temps:          0       0       0       0       0       0       0       0
  3878 ;;      Totals:         0      16       0       0       0       0       0       0
  3879 ;;Total ram usage:       16 bytes
  3880 ;; Hardware stack levels used:    1
  3881 ;; Hardware stack levels required when called:    6
  3882 ;; This function calls:
  3883 ;;		_Uart1_PutString
  3884 ;;		_Uart1_PutString_Hex
  3885 ;;		_Uart1_PutHex
  3886 ;;		_MakeTxTemperature
  3887 ;;		___lwdiv
  3888 ;;		___lwmod
  3889 ;;		___bmul
  3890 ;;		_eeprom_read
  3891 ;;		_strcpy
  3892 ;;		_ATCommand_WaitData
  3893 ;;		___delay_20ms
  3894 ;; This function is called by:
  3895 ;;		_CallSend
  3896 ;;		_CallTestSend
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899  0CB2                     _InteractServer:	
  3900  0CB2                     l33552:	
  3901                           ; Regs used in _InteractServer: [wreg-btemp+0+pclath+cstack]
  3902                           
  3903                           
  3904                           ;Function.c: 177: unsigned char retry,i,j,k,addr;
  3905                           ;Function.c: 178: uint t;
  3906                           ;Function.c: 179: unsigned int txLen;
  3907                           ;Function.c: 180: retry=1;
  3908  0CB2  01B6               	clrf	InteractServer@retry
  3909  0CB3  0AB6               	incf	InteractServer@retry,f
  3910                           
  3911                           ;Function.c: 181: res=ATACK_Null;
  3912  0CB4  01B7               	clrf	InteractServer@res
  3913  0CB5                     l33800:	
  3914                           ;Function.c: 182: while(retry!=0)
  3915                           
  3916  0CB5  08B6               	movf	InteractServer@retry,f
  3917  0CB6  1903               	btfsc	3,2
  3918  0CB7  2ED7               	goto	l33802
  3919                           
  3920                           ;Function.c: 183: {
  3921                           ;Function.c: 184: if(gFlags.bFirst)
  3922  0CB8  1D66               	btfss	_gFlags,2
  3923  0CB9  2CFC               	goto	l8689
  3924                           
  3925                           ;Function.c: 185: {
  3926                           ;Function.c: 186: Uart1_PutString("AT+NSOSD=1,32,\0");
  3927  0CBA  306E               	movlw	low (STR_3| (0+32768))
  3928  0CBB  00A1               	movwf	?_Uart1_PutString
  3929  0CBC  3090               	movlw	high (STR_3| (0+32768))
  3930  0CBD  00A2               	movwf	?_Uart1_PutString+1
  3931  0CBE  275E  3188         	fcall	_Uart1_PutString
  3932                           
  3933                           ;Function.c: 187: Uart1_PutString_Hex("@#pt#1#\0");
  3934  0CC0  30BB               	movlw	low (STR_4| (0+32768))
  3935  0CC1  00A3               	movwf	?_Uart1_PutString_Hex
  3936  0CC2  3090               	movlw	high (STR_4| (0+32768))
  3937  0CC3  00A4               	movwf	?_Uart1_PutString_Hex+1
  3938  0CC4  26F8  3188         	fcall	_Uart1_PutString_Hex
  3939                           
  3940                           ;Function.c: 188: Uart1_PutString_Hex(ICCID);
  3941  0CC6  30A0               	movlw	_ICCID& (0+255)
  3942  0CC7  00A3               	movwf	?_Uart1_PutString_Hex
  3943  0CC8  01A4               	clrf	?_Uart1_PutString_Hex+1
  3944  0CC9  26F8  3188         	fcall	_Uart1_PutString_Hex
  3945                           
  3946                           ;Function.c: 189: Uart1_PutHex('#');
  3947  0CCB  3023               	movlw	35
  3948  0CCC  26D9  3188         	fcall	_Uart1_PutHex
  3949                           
  3950                           ;Function.c: 190: if(RomParams.bWinter==0)
  3951  0CCE  0020               	movlb	0	; select bank0
  3952  0CCF  08E8               	movf	_RomParams+1,f
  3953  0CD0  1D03               	skipz
  3954  0CD1  2CD6               	goto	l33562
  3955                           
  3956                           ;Function.c: 191: {
  3957                           ;Function.c: 192: Uart1_PutString_Hex("60#\0");
  3958  0CD2  3005               	movlw	low (STR_5| (0+32768))
  3959  0CD3  00A3               	movwf	?_Uart1_PutString_Hex
  3960  0CD4  3091               	movlw	high (STR_5| (0+32768))
  3961  0CD5  2CD9               	goto	L1
  3962  0CD6                     l33562:	
  3963                           ;Function.c: 193: }
  3964                           
  3965                           
  3966                           ;Function.c: 194: else
  3967                           ;Function.c: 195: {
  3968                           ;Function.c: 196: Uart1_PutString_Hex("10#\0");
  3969  0CD6  3000               	movlw	low (STR_6| (0+32768))
  3970  0CD7  00A3               	movwf	?_Uart1_PutString_Hex
  3971  0CD8  3091               	movlw	high (STR_6| (0+32768))
  3972  0CD9                     L1:	
  3973  0CD9  00A4               	movwf	?_Uart1_PutString_Hex+1
  3974  0CDA  26F8  3188         	fcall	_Uart1_PutString_Hex
  3975                           
  3976                           ;Function.c: 197: }
  3977                           ;Function.c: 198: MakeTxTemperature(CurTemp);
  3978  0CDC  0856               	movf	_CurTemp+1,w
  3979  0CDD  00A1               	movwf	?_MakeTxTemperature+1
  3980  0CDE  0855               	movf	_CurTemp,w
  3981  0CDF  00A0               	movwf	?_MakeTxTemperature
  3982  0CE0  2708  3188         	fcall	_MakeTxTemperature
  3983                           
  3984                           ;Function.c: 199: for(int i=0;i<4;i++)
  3985  0CE2  01B8               	clrf	InteractServer@i_10574
  3986  0CE3  01B9               	clrf	InteractServer@i_10574+1
  3987  0CE4                     l33572:	
  3988                           
  3989                           ;Function.c: 200: {
  3990                           ;Function.c: 201: Uart1_PutHex(TxTemperature[i]);
  3991  0CE4  0020               	movlb	0	; select bank0
  3992  0CE5  0838               	movf	InteractServer@i_10574,w
  3993  0CE6  3E4D               	addlw	_TxTemperature& (0+255)
  3994  0CE7  0086               	movwf	6
  3995  0CE8  0187               	clrf	7
  3996  0CE9  0801               	movf	1,w
  3997  0CEA  26D9  3188         	fcall	_Uart1_PutHex
  3998  0CEC  0020               	movlb	0	; select bank0
  3999  0CED  0AB8               	incf	InteractServer@i_10574,f
  4000  0CEE  1903               	skipnz
  4001  0CEF  0AB9               	incf	InteractServer@i_10574+1,f
  4002  0CF0  0839               	movf	InteractServer@i_10574+1,w
  4003  0CF1  3A80               	xorlw	128
  4004  0CF2  00FE               	movwf	126
  4005  0CF3  3080               	movlw	128
  4006  0CF4  027E               	subwf	126,w
  4007  0CF5  1D03               	skipz
  4008  0CF6  2CF9               	goto	u8915
  4009  0CF7  3004               	movlw	4
  4010  0CF8  0238               	subwf	InteractServer@i_10574,w
  4011  0CF9                     u8915:	
  4012  0CF9  1803               	btfsc	3,0
  4013  0CFA  2EAB               	goto	l33780
  4014  0CFB  2CE4               	goto	l33572
  4015  0CFC                     l8689:	
  4016                           
  4017                           ;Function.c: 204: else if(gFlags.bNotify)
  4018  0CFC  1C66               	btfss	_gFlags,0
  4019  0CFD  2D40               	goto	l33602
  4020                           
  4021                           ;Function.c: 205: {
  4022                           ;Function.c: 206: Uart1_PutString("AT+NSOSD=1,32,\0");
  4023  0CFE  306E               	movlw	low (STR_3| (0+32768))
  4024  0CFF  00A1               	movwf	?_Uart1_PutString
  4025  0D00  3090               	movlw	high (STR_3| (0+32768))
  4026  0D01  00A2               	movwf	?_Uart1_PutString+1
  4027  0D02  275E  3188         	fcall	_Uart1_PutString
  4028                           
  4029                           ;Function.c: 207: Uart1_PutString_Hex("@#pt#3#\0");
  4030  0D04  30CD               	movlw	low (STR_8| (0+32768))
  4031  0D05  00A3               	movwf	?_Uart1_PutString_Hex
  4032  0D06  3090               	movlw	high (STR_8| (0+32768))
  4033  0D07  00A4               	movwf	?_Uart1_PutString_Hex+1
  4034  0D08  26F8  3188         	fcall	_Uart1_PutString_Hex
  4035                           
  4036                           ;Function.c: 208: Uart1_PutString_Hex(ICCID);
  4037  0D0A  30A0               	movlw	_ICCID& (0+255)
  4038  0D0B  00A3               	movwf	?_Uart1_PutString_Hex
  4039  0D0C  01A4               	clrf	?_Uart1_PutString_Hex+1
  4040  0D0D  26F8  3188         	fcall	_Uart1_PutString_Hex
  4041                           
  4042                           ;Function.c: 209: Uart1_PutHex('#');
  4043  0D0F  3023               	movlw	35
  4044  0D10  26D9  3188         	fcall	_Uart1_PutHex
  4045                           
  4046                           ;Function.c: 210: if(RomParams.bWinter==0)
  4047  0D12  0020               	movlb	0	; select bank0
  4048  0D13  08E8               	movf	_RomParams+1,f
  4049  0D14  1D03               	skipz
  4050  0D15  2D1A               	goto	l33586
  4051                           
  4052                           ;Function.c: 211: {
  4053                           ;Function.c: 212: Uart1_PutString_Hex("60#\0");
  4054  0D16  3005               	movlw	low (STR_5| (0+32768))
  4055  0D17  00A3               	movwf	?_Uart1_PutString_Hex
  4056  0D18  3091               	movlw	high (STR_5| (0+32768))
  4057  0D19  2D1D               	goto	L2
  4058  0D1A                     l33586:	
  4059                           ;Function.c: 213: }
  4060                           
  4061                           
  4062                           ;Function.c: 214: else
  4063                           ;Function.c: 215: {
  4064                           ;Function.c: 216: Uart1_PutString_Hex("10#\0");
  4065  0D1A  3000               	movlw	low (STR_6| (0+32768))
  4066  0D1B  00A3               	movwf	?_Uart1_PutString_Hex
  4067  0D1C  3091               	movlw	high (STR_6| (0+32768))
  4068  0D1D                     L2:	
  4069  0D1D  00A4               	movwf	?_Uart1_PutString_Hex+1
  4070  0D1E  26F8  3188         	fcall	_Uart1_PutString_Hex
  4071                           
  4072                           ;Function.c: 217: }
  4073                           ;Function.c: 218: MakeTxTemperature(CurTemp);
  4074  0D20  0856               	movf	_CurTemp+1,w
  4075  0D21  00A1               	movwf	?_MakeTxTemperature+1
  4076  0D22  0855               	movf	_CurTemp,w
  4077  0D23  00A0               	movwf	?_MakeTxTemperature
  4078  0D24  2708  3188         	fcall	_MakeTxTemperature
  4079                           
  4080                           ;Function.c: 219: for(int i=0;i<4;i++)
  4081  0D26  01BA               	clrf	InteractServer@i_10579
  4082  0D27  01BB               	clrf	InteractServer@i_10579+1
  4083  0D28                     l33596:	
  4084                           
  4085                           ;Function.c: 220: {
  4086                           ;Function.c: 221: Uart1_PutHex(TxTemperature[i]);
  4087  0D28  0020               	movlb	0	; select bank0
  4088  0D29  083A               	movf	InteractServer@i_10579,w
  4089  0D2A  3E4D               	addlw	_TxTemperature& (0+255)
  4090  0D2B  0086               	movwf	6
  4091  0D2C  0187               	clrf	7
  4092  0D2D  0801               	movf	1,w
  4093  0D2E  26D9  3188         	fcall	_Uart1_PutHex
  4094  0D30  0020               	movlb	0	; select bank0
  4095  0D31  0ABA               	incf	InteractServer@i_10579,f
  4096  0D32  1903               	skipnz
  4097  0D33  0ABB               	incf	InteractServer@i_10579+1,f
  4098  0D34  083B               	movf	InteractServer@i_10579+1,w
  4099  0D35  3A80               	xorlw	128
  4100  0D36  00FE               	movwf	126
  4101  0D37  3080               	movlw	128
  4102  0D38  027E               	subwf	126,w
  4103  0D39  1D03               	skipz
  4104  0D3A  2D3D               	goto	u8945
  4105  0D3B  3004               	movlw	4
  4106  0D3C  023A               	subwf	InteractServer@i_10579,w
  4107  0D3D                     u8945:	
  4108  0D3D  1803               	btfsc	3,0
  4109  0D3E  2EAB               	goto	l33780
  4110  0D3F  2D28               	goto	l33596
  4111  0D40                     l33602:	
  4112                           
  4113                           ;Function.c: 224: else
  4114                           ;Function.c: 225: {
  4115                           ;Function.c: 226: if(TxErrDataIndex!=0xff)
  4116  0D40  0869               	movf	_TxErrDataIndex,w
  4117  0D41  3AFF               	xorlw	255
  4118  0D42  1903               	skipnz
  4119  0D43  2DA5               	goto	l33624
  4120                           
  4121                           ;Function.c: 227: {
  4122                           ;Function.c: 228: if(gFlags.bErrFull)
  4123  0D44  1DE6               	btfss	_gFlags,3
  4124  0D45  2D4A               	goto	l33608
  4125                           
  4126                           ;Function.c: 229: {
  4127                           ;Function.c: 230: Uart1_PutString("AT+NSOSD=1,687,\0");
  4128  0D46  305D               	movlw	low (STR_11| (0+32768))
  4129  0D47  00A1               	movwf	?_Uart1_PutString
  4130  0D48  3090               	movlw	high (STR_11| (0+32768))
  4131  0D49  2DA8               	goto	L3
  4132  0D4A                     l33608:	
  4133                           ;Function.c: 231: }
  4134                           
  4135                           
  4136                           ;Function.c: 232: else
  4137                           ;Function.c: 233: {
  4138                           ;Function.c: 234: Uart1_PutString("AT+NSOSD=1,\0");
  4139  0D4A  308E               	movlw	low (STR_12| (0+32768))
  4140  0D4B  00A1               	movwf	?_Uart1_PutString
  4141  0D4C  3090               	movlw	high (STR_12| (0+32768))
  4142  0D4D  00A2               	movwf	?_Uart1_PutString+1
  4143  0D4E  275E  3188         	fcall	_Uart1_PutString
  4144                           
  4145                           ;Function.c: 235: txLen=28;
  4146  0D50  301C               	movlw	28
  4147  0D51  00BE               	movwf	InteractServer@txLen
  4148  0D52  01BF               	clrf	InteractServer@txLen+1
  4149                           
  4150                           ;Function.c: 236: for(i=0;i<TxErrDataIndex;i++)
  4151  0D53  01C5               	clrf	InteractServer@i
  4152  0D54                     l33618:	
  4153  0D54  0869               	movf	_TxErrDataIndex,w
  4154  0D55  0245               	subwf	InteractServer@i,w
  4155  0D56  1803               	btfsc	3,0
  4156  0D57  2D5E               	goto	l33620
  4157                           
  4158                           ;Function.c: 237: {
  4159                           ;Function.c: 238: txLen+=60;
  4160  0D58  303C               	movlw	60
  4161  0D59  07BE               	addwf	InteractServer@txLen,f
  4162  0D5A  1803               	skipnc
  4163  0D5B  0ABF               	incf	InteractServer@txLen+1,f
  4164  0D5C  0AC5               	incf	InteractServer@i,f
  4165  0D5D  2D54               	goto	l33618
  4166  0D5E                     l33620:	
  4167                           
  4168                           ;Function.c: 241: if(txLen/100!=0)
  4169  0D5E  3064               	movlw	100
  4170  0D5F  00A0               	movwf	?___lwdiv
  4171  0D60  01A1               	clrf	?___lwdiv+1
  4172  0D61  083F               	movf	InteractServer@txLen+1,w
  4173  0D62  00A3               	movwf	?___lwdiv+3
  4174  0D63  083E               	movf	InteractServer@txLen,w
  4175  0D64  00A2               	movwf	?___lwdiv+2
  4176  0D65  277B  3188         	fcall	___lwdiv
  4177  0D67  0821               	movf	?___lwdiv+1,w
  4178  0D68  0420               	iorwf	?___lwdiv,w
  4179                           
  4180                           ;Function.c: 242: Uart1_PutHex('0'+txLen/100);
  4181  0D69  3064               	movlw	100
  4182  0D6A  1903               	skipnz
  4183  0D6B  2D79               	goto	L5
  4184  0D6C  00A0               	movwf	?___lwdiv
  4185  0D6D  01A1               	clrf	?___lwdiv+1
  4186  0D6E  083F               	movf	InteractServer@txLen+1,w
  4187  0D6F  00A3               	movwf	?___lwdiv+3
  4188  0D70  083E               	movf	InteractServer@txLen,w
  4189  0D71  00A2               	movwf	?___lwdiv+2
  4190  0D72  277B  3188         	fcall	___lwdiv
  4191  0D74  0820               	movf	?___lwdiv,w
  4192  0D75  3E30               	addlw	48
  4193  0D76  26D9  3188         	fcall	_Uart1_PutHex
  4194                           
  4195                           ;Function.c: 243: txLen=txLen%100;
  4196  0D78  3064               	movlw	100
  4197  0D79                     L5:	
  4198  0D79  0020               	movlb	0	; select bank0
  4199  0D7A  00A0               	movwf	?___lwmod
  4200  0D7B  01A1               	clrf	?___lwmod+1
  4201  0D7C  083F               	movf	InteractServer@txLen+1,w
  4202  0D7D  00A3               	movwf	?___lwmod+3
  4203  0D7E  083E               	movf	InteractServer@txLen,w
  4204  0D7F  00A2               	movwf	?___lwmod+2
  4205  0D80  27A9  3188         	fcall	___lwmod
  4206  0D82  0821               	movf	?___lwmod+1,w
  4207  0D83  00BF               	movwf	InteractServer@txLen+1
  4208  0D84  0820               	movf	?___lwmod,w
  4209  0D85  00BE               	movwf	InteractServer@txLen
  4210                           
  4211                           ;Function.c: 244: Uart1_PutHex('0'+txLen/10);
  4212  0D86  300A               	movlw	10
  4213  0D87  00A0               	movwf	?___lwdiv
  4214  0D88  01A1               	clrf	?___lwdiv+1
  4215  0D89  083F               	movf	InteractServer@txLen+1,w
  4216  0D8A  00A3               	movwf	?___lwdiv+3
  4217  0D8B  083E               	movf	InteractServer@txLen,w
  4218  0D8C  00A2               	movwf	?___lwdiv+2
  4219  0D8D  277B  3188         	fcall	___lwdiv
  4220  0D8F  0820               	movf	?___lwdiv,w
  4221  0D90  3E30               	addlw	48
  4222  0D91  26D9  3188         	fcall	_Uart1_PutHex
  4223                           
  4224                           ;Function.c: 245: Uart1_PutHex('0'+txLen%10);
  4225  0D93  300A               	movlw	10
  4226  0D94  0020               	movlb	0	; select bank0
  4227  0D95  00A0               	movwf	?___lwmod
  4228  0D96  01A1               	clrf	?___lwmod+1
  4229  0D97  083F               	movf	InteractServer@txLen+1,w
  4230  0D98  00A3               	movwf	?___lwmod+3
  4231  0D99  083E               	movf	InteractServer@txLen,w
  4232  0D9A  00A2               	movwf	?___lwmod+2
  4233  0D9B  27A9  3188         	fcall	___lwmod
  4234  0D9D  0820               	movf	?___lwmod,w
  4235  0D9E  3E30               	addlw	48
  4236  0D9F  26D9  3188         	fcall	_Uart1_PutHex
  4237                           
  4238                           ;Function.c: 246: Uart1_PutHex(',');
  4239  0DA1  302C               	movlw	44
  4240  0DA2  26D9  3188         	fcall	_Uart1_PutHex
  4241  0DA4  2DAB               	goto	l8708
  4242  0DA5                     l33624:	
  4243                           
  4244                           ;Function.c: 249: else
  4245                           ;Function.c: 250: {
  4246                           ;Function.c: 251: Uart1_PutString("AT+NSOSD=1,87,\0");
  4247  0DA5  307E               	movlw	low (STR_13| (0+32768))
  4248  0DA6  00A1               	movwf	?_Uart1_PutString
  4249  0DA7  3090               	movlw	high (STR_13| (0+32768))
  4250  0DA8                     L3:	
  4251  0DA8  00A2               	movwf	?_Uart1_PutString+1
  4252  0DA9  275E  3188         	fcall	_Uart1_PutString
  4253  0DAB                     l8708:	
  4254                           
  4255                           ;Function.c: 252: }
  4256                           ;Function.c: 253: Uart1_PutString_Hex("@#pt#2#\0");
  4257  0DAB  30C4               	movlw	low (STR_14| (0+32768))
  4258  0DAC  0020               	movlb	0	; select bank0
  4259  0DAD  00A3               	movwf	?_Uart1_PutString_Hex
  4260  0DAE  3090               	movlw	high (STR_14| (0+32768))
  4261  0DAF  00A4               	movwf	?_Uart1_PutString_Hex+1
  4262  0DB0  26F8  3188         	fcall	_Uart1_PutString_Hex
  4263                           
  4264                           ;Function.c: 254: Uart1_PutString_Hex(ICCID);
  4265  0DB2  30A0               	movlw	_ICCID& (0+255)
  4266  0DB3  00A3               	movwf	?_Uart1_PutString_Hex
  4267  0DB4  01A4               	clrf	?_Uart1_PutString_Hex+1
  4268  0DB5  26F8  3188         	fcall	_Uart1_PutString_Hex
  4269                           
  4270                           ;Function.c: 255: Uart1_PutHex('#');
  4271  0DB7  3023               	movlw	35
  4272  0DB8  26D9  3188         	fcall	_Uart1_PutHex
  4273                           
  4274                           ;Function.c: 256: if(RomParams.bWinter==0)
  4275  0DBA  0020               	movlb	0	; select bank0
  4276  0DBB  08E8               	movf	_RomParams+1,f
  4277  0DBC  1D03               	skipz
  4278  0DBD  2DC2               	goto	l33632
  4279                           
  4280                           ;Function.c: 257: {
  4281                           ;Function.c: 258: Uart1_PutString_Hex("60#\0");
  4282  0DBE  3005               	movlw	low (STR_5| (0+32768))
  4283  0DBF  00A3               	movwf	?_Uart1_PutString_Hex
  4284  0DC0  3091               	movlw	high (STR_5| (0+32768))
  4285  0DC1  2DC5               	goto	L4
  4286  0DC2                     l33632:	
  4287                           ;Function.c: 259: }
  4288                           
  4289                           
  4290                           ;Function.c: 260: else
  4291                           ;Function.c: 261: {
  4292                           ;Function.c: 262: Uart1_PutString_Hex("10#\0");
  4293  0DC2  3000               	movlw	low (STR_6| (0+32768))
  4294  0DC3  00A3               	movwf	?_Uart1_PutString_Hex
  4295  0DC4  3091               	movlw	high (STR_6| (0+32768))
  4296  0DC5                     L4:	
  4297  0DC5  00A4               	movwf	?_Uart1_PutString_Hex+1
  4298  0DC6  26F8  3188         	fcall	_Uart1_PutString_Hex
  4299                           
  4300                           ;Function.c: 263: }
  4301                           ;Function.c: 264: if(TxErrDataIndex!=0xff)
  4302  0DC8  0869               	movf	_TxErrDataIndex,w
  4303  0DC9  3AFF               	xorlw	255
  4304  0DCA  1903               	skipnz
  4305  0DCB  2E73               	goto	l33750
  4306                           
  4307                           ;Function.c: 265: {
  4308                           ;Function.c: 266: if(gFlags.bErrFull)
  4309  0DCC  1DE6               	btfss	_gFlags,3
  4310  0DCD  2E3D               	goto	l33714
  4311                           
  4312                           ;Function.c: 267: {
  4313                           ;Function.c: 268: for(i=(TxErrDataIndex-1);i<10;i--)
  4314  0DCE  0869               	movf	_TxErrDataIndex,w
  4315  0DCF  3EFF               	addlw	255
  4316  0DD0  00C5               	movwf	InteractServer@i
  4317  0DD1                     l33640:	
  4318  0DD1  300A               	movlw	10
  4319  0DD2  0245               	subwf	InteractServer@i,w
  4320  0DD3  1803               	btfsc	3,0
  4321  0DD4  2E06               	goto	l33678
  4322                           
  4323                           ;Function.c: 269: {
  4324                           ;Function.c: 270: for(j=0;j<12;j++)
  4325  0DD5  01C3               	clrf	InteractServer@j
  4326  0DD6                     l33650:	
  4327                           
  4328                           ;Function.c: 271: {
  4329                           ;Function.c: 272: addr=(i)*12;
  4330  0DD6  300C               	movlw	12
  4331  0DD7  00A0               	movwf	?___bmul
  4332  0DD8  0845               	movf	InteractServer@i,w
  4333  0DD9  276F  3188         	fcall	___bmul
  4334  0DDB  00C2               	movwf	InteractServer@addr
  4335                           
  4336                           ;Function.c: 273: addr+=16;
  4337  0DDC  3010               	movlw	16
  4338  0DDD  07C2               	addwf	InteractServer@addr,f
  4339                           
  4340                           ;Function.c: 274: addr+=(j<<1);
  4341  0DDE  3543               	lslf	InteractServer@j,w
  4342  0DDF  07C2               	addwf	InteractServer@addr,f
  4343                           
  4344                           ;Function.c: 275: t.u8s[0]=eeprom_read(addr);
  4345  0DE0  0842               	movf	InteractServer@addr,w
  4346  0DE1  2747  3188         	fcall	_eeprom_read
  4347  0DE3  0020               	movlb	0	; select bank0
  4348  0DE4  00C0               	movwf	InteractServer@t
  4349                           
  4350                           ;Function.c: 276: t.u8s[1]=eeprom_read(addr+1);
  4351  0DE5  0A42               	incf	InteractServer@addr,w
  4352  0DE6  2747  3188         	fcall	_eeprom_read
  4353  0DE8  0020               	movlb	0	; select bank0
  4354  0DE9  00C1               	movwf	InteractServer@t+1
  4355                           
  4356                           ;Function.c: 277: MakeTxTemperature(t);
  4357  0DEA  00A1               	movwf	?_MakeTxTemperature+1
  4358  0DEB  0840               	movf	InteractServer@t,w
  4359  0DEC  00A0               	movwf	?_MakeTxTemperature
  4360  0DED  2708  3188         	fcall	_MakeTxTemperature
  4361                           
  4362                           ;Function.c: 278: for(k=0;k<4;k++)
  4363  0DEF  01C4               	clrf	InteractServer@k
  4364  0DF0                     l33662:	
  4365                           
  4366                           ;Function.c: 279: {
  4367                           ;Function.c: 280: Uart1_PutHex(TxTemperature[k]);
  4368  0DF0  0844               	movf	InteractServer@k,w
  4369  0DF1  3E4D               	addlw	_TxTemperature& (0+255)
  4370  0DF2  0086               	movwf	6
  4371  0DF3  0187               	clrf	7
  4372  0DF4  0801               	movf	1,w
  4373  0DF5  26D9  3188         	fcall	_Uart1_PutHex
  4374  0DF7  0020               	movlb	0	; select bank0
  4375  0DF8  0AC4               	incf	InteractServer@k,f
  4376  0DF9  3004               	movlw	4
  4377  0DFA  0244               	subwf	InteractServer@k,w
  4378  0DFB  1C03               	skipc
  4379  0DFC  2DF0               	goto	l33662
  4380                           
  4381                           ;Function.c: 281: }
  4382                           ;Function.c: 282: Uart1_PutHex('|');
  4383  0DFD  307C               	movlw	124
  4384  0DFE  26D9  3188         	fcall	_Uart1_PutHex
  4385  0E00  27E6  3188         	fcall	PL7	;call to abstracted procedure
  4386  0E02  1C03               	skipc
  4387  0E03  2DD6               	goto	l33650
  4388  0E04  03C5               	decf	InteractServer@i,f
  4389  0E05  2DD1               	goto	l33640
  4390  0E06                     l33678:	
  4391                           
  4392                           ;Function.c: 283: }
  4393                           ;Function.c: 284: }
  4394                           ;Function.c: 285: for(i=9;i>TxErrDataIndex;i--)
  4395  0E06  3009               	movlw	9
  4396  0E07  00C5               	movwf	InteractServer@i
  4397  0E08                     l33712:	
  4398  0E08  0845               	movf	InteractServer@i,w
  4399  0E09  0269               	subwf	_TxErrDataIndex,w
  4400  0E0A  1803               	btfsc	3,0
  4401  0E0B  2E73               	goto	l33750
  4402                           
  4403                           ;Function.c: 286: {
  4404                           ;Function.c: 287: for(j=0;j<12;j++)
  4405  0E0C  01C3               	clrf	InteractServer@j
  4406  0E0D                     l33686:	
  4407                           
  4408                           ;Function.c: 288: {
  4409                           ;Function.c: 289: addr=(i)*12;
  4410  0E0D  300C               	movlw	12
  4411  0E0E  00A0               	movwf	?___bmul
  4412  0E0F  0845               	movf	InteractServer@i,w
  4413  0E10  276F  3188         	fcall	___bmul
  4414  0E12  00C2               	movwf	InteractServer@addr
  4415                           
  4416                           ;Function.c: 290: addr+=16;
  4417  0E13  3010               	movlw	16
  4418  0E14  07C2               	addwf	InteractServer@addr,f
  4419                           
  4420                           ;Function.c: 291: addr+=(j<<1);
  4421  0E15  3543               	lslf	InteractServer@j,w
  4422  0E16  07C2               	addwf	InteractServer@addr,f
  4423                           
  4424                           ;Function.c: 292: t.u8s[0]=eeprom_read(addr);
  4425  0E17  0842               	movf	InteractServer@addr,w
  4426  0E18  2747  3188         	fcall	_eeprom_read
  4427  0E1A  0020               	movlb	0	; select bank0
  4428  0E1B  00C0               	movwf	InteractServer@t
  4429                           
  4430                           ;Function.c: 293: t.u8s[1]=eeprom_read(addr+1);
  4431  0E1C  0A42               	incf	InteractServer@addr,w
  4432  0E1D  2747  3188         	fcall	_eeprom_read
  4433  0E1F  0020               	movlb	0	; select bank0
  4434  0E20  00C1               	movwf	InteractServer@t+1
  4435                           
  4436                           ;Function.c: 294: MakeTxTemperature(t);
  4437  0E21  00A1               	movwf	?_MakeTxTemperature+1
  4438  0E22  0840               	movf	InteractServer@t,w
  4439  0E23  00A0               	movwf	?_MakeTxTemperature
  4440  0E24  2708  3188         	fcall	_MakeTxTemperature
  4441                           
  4442                           ;Function.c: 295: for(k=0;k<4;k++)
  4443  0E26  01C4               	clrf	InteractServer@k
  4444  0E27                     l33698:	
  4445                           
  4446                           ;Function.c: 296: {
  4447                           ;Function.c: 297: Uart1_PutHex(TxTemperature[k]);
  4448  0E27  0844               	movf	InteractServer@k,w
  4449  0E28  3E4D               	addlw	_TxTemperature& (0+255)
  4450  0E29  0086               	movwf	6
  4451  0E2A  0187               	clrf	7
  4452  0E2B  0801               	movf	1,w
  4453  0E2C  26D9  3188         	fcall	_Uart1_PutHex
  4454  0E2E  0020               	movlb	0	; select bank0
  4455  0E2F  0AC4               	incf	InteractServer@k,f
  4456  0E30  3004               	movlw	4
  4457  0E31  0244               	subwf	InteractServer@k,w
  4458  0E32  1C03               	skipc
  4459  0E33  2E27               	goto	l33698
  4460                           
  4461                           ;Function.c: 298: }
  4462                           ;Function.c: 299: Uart1_PutHex('|');
  4463  0E34  307C               	movlw	124
  4464  0E35  26D9  3188         	fcall	_Uart1_PutHex
  4465  0E37  27E6  3188         	fcall	PL7	;call to abstracted procedure
  4466  0E39  1C03               	skipc
  4467  0E3A  2E0D               	goto	l33686
  4468  0E3B  03C5               	decf	InteractServer@i,f
  4469  0E3C  2E08               	goto	l33712
  4470  0E3D                     l33714:	
  4471                           
  4472                           ;Function.c: 303: else
  4473                           ;Function.c: 304: {
  4474                           ;Function.c: 305: for(i=0;i<TxErrDataIndex;i++)
  4475  0E3D  01C5               	clrf	InteractServer@i
  4476  0E3E                     l33748:	
  4477  0E3E  0869               	movf	_TxErrDataIndex,w
  4478  0E3F  0245               	subwf	InteractServer@i,w
  4479  0E40  1803               	btfsc	3,0
  4480  0E41  2E73               	goto	l33750
  4481                           
  4482                           ;Function.c: 306: {
  4483                           ;Function.c: 307: for(j=0;j<12;j++)
  4484  0E42  01C3               	clrf	InteractServer@j
  4485  0E43                     l33722:	
  4486                           
  4487                           ;Function.c: 308: {
  4488                           ;Function.c: 309: addr=i*12;
  4489  0E43  300C               	movlw	12
  4490  0E44  00A0               	movwf	?___bmul
  4491  0E45  0845               	movf	InteractServer@i,w
  4492  0E46  276F  3188         	fcall	___bmul
  4493  0E48  00C2               	movwf	InteractServer@addr
  4494                           
  4495                           ;Function.c: 310: addr+=16;
  4496  0E49  3010               	movlw	16
  4497  0E4A  07C2               	addwf	InteractServer@addr,f
  4498                           
  4499                           ;Function.c: 311: addr+=(j<<1);
  4500  0E4B  3543               	lslf	InteractServer@j,w
  4501  0E4C  07C2               	addwf	InteractServer@addr,f
  4502                           
  4503                           ;Function.c: 312: t.u8s[0]=eeprom_read(addr);
  4504  0E4D  0842               	movf	InteractServer@addr,w
  4505  0E4E  2747  3188         	fcall	_eeprom_read
  4506  0E50  0020               	movlb	0	; select bank0
  4507  0E51  00C0               	movwf	InteractServer@t
  4508                           
  4509                           ;Function.c: 313: t.u8s[1]=eeprom_read(addr+1);
  4510  0E52  0A42               	incf	InteractServer@addr,w
  4511  0E53  2747  3188         	fcall	_eeprom_read
  4512  0E55  0020               	movlb	0	; select bank0
  4513  0E56  00C1               	movwf	InteractServer@t+1
  4514                           
  4515                           ;Function.c: 314: MakeTxTemperature(t);
  4516  0E57  00A1               	movwf	?_MakeTxTemperature+1
  4517  0E58  0840               	movf	InteractServer@t,w
  4518  0E59  00A0               	movwf	?_MakeTxTemperature
  4519  0E5A  2708  3188         	fcall	_MakeTxTemperature
  4520                           
  4521                           ;Function.c: 315: for(k=0;k<4;k++)
  4522  0E5C  01C4               	clrf	InteractServer@k
  4523  0E5D                     l33734:	
  4524                           
  4525                           ;Function.c: 316: {
  4526                           ;Function.c: 317: Uart1_PutHex(TxTemperature[k]);
  4527  0E5D  0844               	movf	InteractServer@k,w
  4528  0E5E  3E4D               	addlw	_TxTemperature& (0+255)
  4529  0E5F  0086               	movwf	6
  4530  0E60  0187               	clrf	7
  4531  0E61  0801               	movf	1,w
  4532  0E62  26D9  3188         	fcall	_Uart1_PutHex
  4533  0E64  0020               	movlb	0	; select bank0
  4534  0E65  0AC4               	incf	InteractServer@k,f
  4535  0E66  3004               	movlw	4
  4536  0E67  0244               	subwf	InteractServer@k,w
  4537  0E68  1C03               	skipc
  4538  0E69  2E5D               	goto	l33734
  4539                           
  4540                           ;Function.c: 318: }
  4541                           ;Function.c: 319: Uart1_PutHex('|');
  4542  0E6A  307C               	movlw	124
  4543  0E6B  26D9  3188         	fcall	_Uart1_PutHex
  4544  0E6D  27E6  3188         	fcall	PL7	;call to abstracted procedure
  4545  0E6F  1C03               	skipc
  4546  0E70  2E43               	goto	l33722
  4547  0E71  0AC5               	incf	InteractServer@i,f
  4548  0E72  2E3E               	goto	l33748
  4549  0E73                     l33750:	
  4550                           
  4551                           ;Function.c: 320: }
  4552                           ;Function.c: 321: }
  4553                           ;Function.c: 322: }
  4554                           ;Function.c: 323: }
  4555                           ;Function.c: 324: for(i=0;i<12;i++)
  4556  0E73  01C5               	clrf	InteractServer@i
  4557  0E74                     l33752:	
  4558  0E74  300C               	movlw	12
  4559  0E75  0245               	subwf	InteractServer@i,w
  4560  0E76  1803               	btfsc	3,0
  4561  0E77  2EAB               	goto	l33780
  4562                           
  4563                           ;Function.c: 325: {
  4564                           ;Function.c: 326: txLen+=59;
  4565  0E78  303B               	movlw	59
  4566  0E79  07BE               	addwf	InteractServer@txLen,f
  4567  0E7A  1803               	skipnc
  4568  0E7B  0ABF               	incf	InteractServer@txLen+1,f
  4569                           
  4570                           ;Function.c: 327: MakeTxTemperature(TList.T[i]);
  4571  0E7C  3545               	lslf	InteractServer@i,w
  4572  0E7D  3E20               	addlw	_TList& (0+255)
  4573  0E7E  0086               	movwf	6
  4574  0E7F  3001               	movlw	1	; select bank2/3
  4575  0E80  0087               	movwf	7
  4576  0E81  3F40               	moviw [0]fsr1
  4577  0E82  00A0               	movwf	?_MakeTxTemperature
  4578  0E83  3F41               	moviw [1]fsr1
  4579  0E84  00A1               	movwf	?_MakeTxTemperature+1
  4580  0E85  2708  3188         	fcall	_MakeTxTemperature
  4581                           
  4582                           ;Function.c: 328: for(int j=0;j<4;j++)
  4583  0E87  01BC               	clrf	InteractServer@j_10586
  4584  0E88  01BD               	clrf	InteractServer@j_10586+1
  4585  0E89                     l33766:	
  4586                           
  4587                           ;Function.c: 329: {
  4588                           ;Function.c: 330: Uart1_PutHex(TxTemperature[j]);
  4589  0E89  0020               	movlb	0	; select bank0
  4590  0E8A  083C               	movf	InteractServer@j_10586,w
  4591  0E8B  3E4D               	addlw	_TxTemperature& (0+255)
  4592  0E8C  0086               	movwf	6
  4593  0E8D  0187               	clrf	7
  4594  0E8E  0801               	movf	1,w
  4595  0E8F  26D9  3188         	fcall	_Uart1_PutHex
  4596  0E91  0020               	movlb	0	; select bank0
  4597  0E92  0ABC               	incf	InteractServer@j_10586,f
  4598  0E93  1903               	skipnz
  4599  0E94  0ABD               	incf	InteractServer@j_10586+1,f
  4600  0E95  083D               	movf	InteractServer@j_10586+1,w
  4601  0E96  3A80               	xorlw	128
  4602  0E97  00FE               	movwf	126
  4603  0E98  3080               	movlw	128
  4604  0E99  027E               	subwf	126,w
  4605  0E9A  1D03               	skipz
  4606  0E9B  2E9E               	goto	u9125
  4607  0E9C  3004               	movlw	4
  4608  0E9D  023C               	subwf	InteractServer@j_10586,w
  4609  0E9E                     u9125:	
  4610  0E9E  1C03               	skipc
  4611  0E9F  2E89               	goto	l33766
  4612                           
  4613                           ;Function.c: 331: }
  4614                           ;Function.c: 332: if(i!=(12-1))
  4615  0EA0  0020               	movlb	0	; select bank0
  4616  0EA1  0845               	movf	InteractServer@i,w
  4617  0EA2  3A0B               	xorlw	11
  4618  0EA3  1903               	skipnz
  4619  0EA4  2EA8               	goto	l33776
  4620                           
  4621                           ;Function.c: 333: {
  4622                           ;Function.c: 334: Uart1_PutHex('|');
  4623  0EA5  307C               	movlw	124
  4624  0EA6  26D9  3188         	fcall	_Uart1_PutHex
  4625  0EA8                     l33776:	
  4626  0EA8  0020               	movlb	0	; select bank0
  4627  0EA9  0AC5               	incf	InteractServer@i,f
  4628  0EAA  2E74               	goto	l33752
  4629  0EAB                     l33780:	
  4630                           
  4631                           ;Function.c: 335: }
  4632                           ;Function.c: 336: }
  4633                           ;Function.c: 337: }
  4634                           ;Function.c: 338: Uart1_PutHex('#');
  4635  0EAB  3023               	movlw	35
  4636  0EAC  26D9  3188         	fcall	_Uart1_PutHex
  4637                           
  4638                           ;Function.c: 339: Uart1_PutHex('@');
  4639  0EAE  3040               	movlw	64
  4640  0EAF  26D9  3188         	fcall	_Uart1_PutHex
  4641                           
  4642                           ;Function.c: 340: ATCommand_WaitACKTimes=400;
  4643  0EB1  3090               	movlw	144
  4644  0EB2  0020               	movlb	0	; select bank0
  4645  0EB3  00D3               	movwf	_ATCommand_WaitACKTimes
  4646  0EB4  3001               	movlw	1
  4647  0EB5  00D4               	movwf	_ATCommand_WaitACKTimes+1
  4648                           
  4649                           ;Function.c: 341: strcpy(ATCommand_OkString,"NSOCLI");
  4650  0EB6  30E7               	movlw	low (STR_17| (0+32768))
  4651  0EB7  00A0               	movwf	?_strcpy
  4652  0EB8  3090               	movlw	high (STR_17| (0+32768))
  4653  0EB9  00A1               	movwf	?_strcpy+1
  4654  0EBA  30C4               	movlw	_ATCommand_OkString& (0+255)
  4655  0EBB  2385  3188         	fcall	_strcpy
  4656                           
  4657                           ;Function.c: 342: strcpy(ATCommand_ErrString,"ERROR");
  4658  0EBD  30FA               	movlw	low (STR_18| (0+32768))
  4659  0EBE  00A0               	movwf	?_strcpy
  4660  0EBF  3090               	movlw	high (STR_18| (0+32768))
  4661  0EC0  00A1               	movwf	?_strcpy+1
  4662  0EC1  30B5               	movlw	_ATCommand_ErrString& (0+255)
  4663  0EC2  2385  3188         	fcall	_strcpy
  4664                           
  4665                           ;Function.c: 343: Uart1_PutString("\r\0");
  4666  0EC4  3016               	movlw	low (STR_19| (0+32768))
  4667  0EC5  00A1               	movwf	?_Uart1_PutString
  4668  0EC6  3091               	movlw	high (STR_19| (0+32768))
  4669  0EC7  00A2               	movwf	?_Uart1_PutString+1
  4670  0EC8  275E  3188         	fcall	_Uart1_PutString
  4671                           
  4672                           ;Function.c: 345: res=ATCommand_WaitData();
  4673  0ECA  2129  3188         	fcall	_ATCommand_WaitData
  4674  0ECC  00B7               	movwf	InteractServer@res
  4675                           
  4676                           ;Function.c: 350: if(res!=ATACK_Null)
  4677  0ECD  0837               	movf	InteractServer@res,w
  4678  0ECE  1D03               	skipz
  4679  0ECF  2ED7               	goto	l33802
  4680                           
  4681                           ;Function.c: 352: __delay_20ms(100);;
  4682  0ED0  3064               	movlw	100
  4683  0ED1  00A0               	movwf	?___delay_20ms
  4684  0ED2  01A1               	clrf	?___delay_20ms+1
  4685  0ED3  2336  3188         	fcall	___delay_20ms
  4686                           
  4687                           ;Function.c: 353: retry--;
  4688  0ED5  03B6               	decf	InteractServer@retry,f
  4689  0ED6  2CB5               	goto	l33800
  4690  0ED7                     l33802:	
  4691                           
  4692                           ;Function.c: 354: }
  4693                           ;Function.c: 369: return res;
  4694  0ED7  0837               	movf	InteractServer@res,w
  4695  0ED8  0008               	return
  4696  0ED9                     __end_of_InteractServer:	
  4697  0ED9                     __ptext2114:	
  4698 ;; =============== function _strstr ends ============
  4699                           
  4700                           
  4701 ;; *************** function _Uart1_PutHex *****************
  4702 ;; Defined at:
  4703 ;;		line 88 in file "F:\work\WYP\NBIoT\Uart.c"
  4704 ;; Parameters:    Size  Location     Type
  4705 ;;  c               1    wreg     unsigned char 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  c               1    1[BANK0 ] unsigned char 
  4708 ;;  b               1    2[BANK0 ] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;		None               void
  4711 ;; Registers used:
  4712 ;;		wreg, status,2, status,0, pclath, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 1F/3
  4716 ;;		Unchanged: FFFE0/0
  4717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4718 ;;      Params:         0       0       0       0       0       0       0       0
  4719 ;;      Locals:         0       2       0       0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0
  4721 ;;      Totals:         0       2       0       0       0       0       0       0
  4722 ;;Total ram usage:        2 bytes
  4723 ;; Hardware stack levels used:    1
  4724 ;; Hardware stack levels required when called:    4
  4725 ;; This function calls:
  4726 ;;		_Uart1_PutChar
  4727 ;; This function is called by:
  4728 ;;		_InteractServer
  4729 ;;		_Uart1_PutString_Hex
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732  0ED9                     _Uart1_PutHex:	
  4733                           
  4734                           ; Regs used in _Uart1_PutHex: [wreg+status,2+status,0+pclath+cstack]
  4735                           ;Uart1_PutHex@c stored from wreg
  4736  0ED9  0020               	movlb	0	; select bank0
  4737  0EDA  00A1               	movwf	Uart1_PutHex@c
  4738                           
  4739                           ;Uart.c: 89: unsigned char b;
  4740                           ;Uart.c: 90: b=(c>>4);
  4741  0EDB  0E21               	swapf	Uart1_PutHex@c,w
  4742  0EDC  390F               	andlw	15
  4743  0EDD  00A2               	movwf	Uart1_PutHex@b
  4744                           
  4745                           ;Uart.c: 91: if (b>9)
  4746  0EDE  300A               	movlw	10
  4747  0EDF  0222               	subwf	Uart1_PutHex@b,w
  4748  0EE0  1C03               	skipc
  4749  0EE1  2EE4               	goto	l32962
  4750                           
  4751                           ;Uart.c: 92: b += 'A'-10;
  4752  0EE2  3037               	movlw	55
  4753  0EE3  2EE5               	goto	L7
  4754  0EE4                     l32962:	
  4755                           
  4756                           ;Uart.c: 93: else
  4757                           ;Uart.c: 94: b += '0';
  4758  0EE4  3030               	movlw	48
  4759  0EE5                     L7:	
  4760  0EE5  07A2               	addwf	Uart1_PutHex@b,f
  4761                           
  4762                           ;Uart.c: 95: Uart1_PutChar(b);
  4763  0EE6  0822               	movf	Uart1_PutHex@b,w
  4764  0EE7  27A0  3188         	fcall	_Uart1_PutChar
  4765                           
  4766                           ;Uart.c: 96: b=(c&0x0F);
  4767  0EE9  0020               	movlb	0	; select bank0
  4768  0EEA  0821               	movf	Uart1_PutHex@c,w
  4769  0EEB  00A2               	movwf	Uart1_PutHex@b
  4770  0EEC  300F               	movlw	15
  4771  0EED  05A2               	andwf	Uart1_PutHex@b,f
  4772                           
  4773                           ;Uart.c: 97: if (b>9)
  4774  0EEE  300A               	movlw	10
  4775  0EEF  0222               	subwf	Uart1_PutHex@b,w
  4776  0EF0  1C03               	skipc
  4777  0EF1  2EF4               	goto	l32974
  4778                           
  4779                           ;Uart.c: 98: b += 'A'-10;
  4780  0EF2  3037               	movlw	55
  4781  0EF3  2EF5               	goto	L8
  4782  0EF4                     l32974:	
  4783                           
  4784                           ;Uart.c: 99: else
  4785                           ;Uart.c: 100: b += '0';
  4786  0EF4  3030               	movlw	48
  4787  0EF5                     L8:	
  4788  0EF5  07A2               	addwf	Uart1_PutHex@b,f
  4789                           
  4790                           ;Uart.c: 101: Uart1_PutChar(b);
  4791  0EF6  0822               	movf	Uart1_PutHex@b,w
  4792  0EF7  2FA0               	ljmp	_Uart1_PutChar
  4793  0EF8                     __end_of_Uart1_PutHex:	
  4794  0EF8                     __ptext2097:	
  4795 ;; =============== function _ATCommand_WaitData ends ============
  4796                           
  4797                           
  4798 ;; *************** function _Uart1_PutString_Hex *****************
  4799 ;; Defined at:
  4800 ;;		line 75 in file "F:\work\WYP\NBIoT\Uart.c"
  4801 ;; Parameters:    Size  Location     Type
  4802 ;;  pString         2    3[BANK0 ] PTR const unsigned char 
  4803 ;;		 -> STR_16(5), STR_15(5), STR_14(9), STR_10(5), 
  4804 ;;		 -> STR_9(5), STR_8(9), STR_6(5), STR_5(5), 
  4805 ;;		 -> ICCID(21), STR_4(9), 
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;  c               1    5[BANK0 ] unsigned char 
  4808 ;; Return value:  Size  Location     Type
  4809 ;;		None               void
  4810 ;; Registers used:
  4811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 1F/0
  4814 ;;		On exit  : 1F/0
  4815 ;;		Unchanged: FFFE0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4817 ;;      Params:         0       2       0       0       0       0       0       0
  4818 ;;      Locals:         0       1       0       0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0
  4820 ;;      Totals:         0       3       0       0       0       0       0       0
  4821 ;;Total ram usage:        3 bytes
  4822 ;; Hardware stack levels used:    1
  4823 ;; Hardware stack levels required when called:    5
  4824 ;; This function calls:
  4825 ;;		_Uart1_PutHex
  4826 ;; This function is called by:
  4827 ;;		_InteractServer
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830  0EF8                     _Uart1_PutString_Hex:	
  4831  0EF8                     l23437:	
  4832                           ; Regs used in _Uart1_PutString_Hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4833                           ;Uart.c: 76: char c;
  4834                           ;Uart.c: 77: while(1)
  4835                           
  4836                           
  4837                           ;Uart.c: 78: {
  4838                           ;Uart.c: 79: c=*pString;
  4839  0EF8  0823               	movf	Uart1_PutString_Hex@pString,w
  4840  0EF9  0084               	movwf	4
  4841  0EFA  0824               	movf	Uart1_PutString_Hex@pString+1,w
  4842  0EFB  0085               	movwf	5
  4843  0EFC  0800               	movf	0,w	;code access
  4844  0EFD  00A5               	movwf	Uart1_PutString_Hex@c
  4845                           
  4846                           ;Uart.c: 80: if(c=='\0')
  4847  0EFE  08A5               	movf	Uart1_PutString_Hex@c,f
  4848  0EFF  1903               	btfsc	3,2
  4849  0F00  0008               	return
  4850                           
  4851                           ;Uart.c: 82: Uart1_PutHex(c);
  4852  0F01  26D9  3188         	fcall	_Uart1_PutHex
  4853                           
  4854                           ;Uart.c: 83: pString++;
  4855  0F03  0020               	movlb	0	; select bank0
  4856  0F04  0AA3               	incf	Uart1_PutString_Hex@pString,f
  4857  0F05  1903               	skipnz
  4858  0F06  0AA4               	incf	Uart1_PutString_Hex@pString+1,f
  4859  0F07  2EF8               	goto	l23437
  4860  0F08                     __end_of_Uart1_PutString_Hex:	
  4861  0F08                     __ptext2142:	
  4862 ;; =============== function _eeprom_read ends ============
  4863                           
  4864                           
  4865 ;; *************** function _MakeTxTemperature *****************
  4866 ;; Defined at:
  4867 ;;		line 372 in file "F:\work\WYP\NBIoT\Function.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;  T               2    0[BANK0 ] struct .
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  x               1    2[BANK0 ] unsigned char 
  4872 ;; Return value:  Size  Location     Type
  4873 ;;		None               void
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 1F/0
  4878 ;;		On exit  : 1F/0
  4879 ;;		Unchanged: FFFE0/0
  4880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4881 ;;      Params:         0       2       0       0       0       0       0       0
  4882 ;;      Locals:         0       1       0       0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0
  4884 ;;      Totals:         0       3       0       0       0       0       0       0
  4885 ;;Total ram usage:        3 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    3
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_InteractServer
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894  0F08                     _MakeTxTemperature:	
  4895                           
  4896                           ;Function.c: 373: unsigned char x;
  4897                           ;Function.c: 374: x=(T.u8H>>4);
  4898                           
  4899                           ; Regs used in _MakeTxTemperature: [wreg+status,2+status,0]
  4900  0F08  0E21               	swapf	MakeTxTemperature@T+1,w
  4901  0F09  390F               	andlw	15
  4902  0F0A  00A2               	movwf	MakeTxTemperature@x
  4903                           
  4904                           ;Function.c: 375: if(x>9)
  4905  0F0B  300A               	movlw	10
  4906  0F0C  0222               	subwf	MakeTxTemperature@x,w
  4907  0F0D  1C03               	skipc
  4908  0F0E  2F13               	goto	l32676
  4909                           
  4910                           ;Function.c: 376: {
  4911                           ;Function.c: 377: x=x-10;
  4912  0F0F  30F6               	movlw	246
  4913  0F10  07A2               	addwf	MakeTxTemperature@x,f
  4914                           
  4915                           ;Function.c: 378: x=x+0x41;
  4916  0F11  3041               	movlw	65
  4917  0F12  2F14               	goto	L12
  4918  0F13                     l32676:	
  4919                           ;Function.c: 380: }
  4920                           
  4921                           
  4922                           ;Function.c: 381: else
  4923                           ;Function.c: 382: {
  4924                           ;Function.c: 383: x=x+'0';
  4925  0F13  3030               	movlw	48
  4926  0F14                     L12:	
  4927  0F14  07A2               	addwf	MakeTxTemperature@x,f
  4928                           
  4929                           ;Function.c: 379: TxTemperature[0]=x;
  4930  0F15  0822               	movf	MakeTxTemperature@x,w
  4931  0F16  00CD               	movwf	_TxTemperature
  4932                           
  4933                           ;Function.c: 385: }
  4934                           ;Function.c: 386: x=(T.u8H&0x0F);
  4935  0F17  0821               	movf	MakeTxTemperature@T+1,w
  4936  0F18  00A2               	movwf	MakeTxTemperature@x
  4937  0F19  300F               	movlw	15
  4938  0F1A  05A2               	andwf	MakeTxTemperature@x,f
  4939                           
  4940                           ;Function.c: 387: if(x>9)
  4941  0F1B  300A               	movlw	10
  4942  0F1C  0222               	subwf	MakeTxTemperature@x,w
  4943  0F1D  1C03               	skipc
  4944  0F1E  2F23               	goto	l32688
  4945                           
  4946                           ;Function.c: 388: {
  4947                           ;Function.c: 389: x=x-10;
  4948  0F1F  30F6               	movlw	246
  4949  0F20  07A2               	addwf	MakeTxTemperature@x,f
  4950                           
  4951                           ;Function.c: 390: x=x+0x41;
  4952  0F21  3041               	movlw	65
  4953  0F22  2F24               	goto	L13
  4954  0F23                     l32688:	
  4955                           ;Function.c: 392: }
  4956                           
  4957                           
  4958                           ;Function.c: 393: else
  4959                           ;Function.c: 394: {
  4960                           ;Function.c: 395: x=x+'0';
  4961  0F23  3030               	movlw	48
  4962  0F24                     L13:	
  4963  0F24  07A2               	addwf	MakeTxTemperature@x,f
  4964                           
  4965                           ;Function.c: 391: TxTemperature[1]=x;
  4966  0F25  0822               	movf	MakeTxTemperature@x,w
  4967  0F26  00CE               	movwf	_TxTemperature+1
  4968                           
  4969                           ;Function.c: 397: }
  4970                           ;Function.c: 398: x=(T.u8L>>4);
  4971  0F27  0E20               	swapf	MakeTxTemperature@T,w
  4972  0F28  390F               	andlw	15
  4973  0F29  00A2               	movwf	MakeTxTemperature@x
  4974                           
  4975                           ;Function.c: 399: if(x>9)
  4976  0F2A  300A               	movlw	10
  4977  0F2B  0222               	subwf	MakeTxTemperature@x,w
  4978  0F2C  1C03               	skipc
  4979  0F2D  2F32               	goto	l32698
  4980                           
  4981                           ;Function.c: 400: {
  4982                           ;Function.c: 401: x=x-10;
  4983  0F2E  30F6               	movlw	246
  4984  0F2F  07A2               	addwf	MakeTxTemperature@x,f
  4985                           
  4986                           ;Function.c: 402: x=x+0x41;
  4987  0F30  3041               	movlw	65
  4988  0F31  2F33               	goto	L14
  4989  0F32                     l32698:	
  4990                           ;Function.c: 404: }
  4991                           
  4992                           
  4993                           ;Function.c: 405: else
  4994                           ;Function.c: 406: {
  4995                           ;Function.c: 407: x=x+'0';
  4996  0F32  3030               	movlw	48
  4997  0F33                     L14:	
  4998  0F33  07A2               	addwf	MakeTxTemperature@x,f
  4999                           
  5000                           ;Function.c: 403: TxTemperature[2]=x;
  5001  0F34  0822               	movf	MakeTxTemperature@x,w
  5002  0F35  00CF               	movwf	_TxTemperature+2
  5003                           
  5004                           ;Function.c: 409: }
  5005                           ;Function.c: 410: x=(T.u8L&0x0F);
  5006  0F36  0820               	movf	MakeTxTemperature@T,w
  5007  0F37  00A2               	movwf	MakeTxTemperature@x
  5008  0F38  300F               	movlw	15
  5009  0F39  05A2               	andwf	MakeTxTemperature@x,f
  5010                           
  5011                           ;Function.c: 411: if(x>9)
  5012  0F3A  300A               	movlw	10
  5013  0F3B  0222               	subwf	MakeTxTemperature@x,w
  5014  0F3C  1C03               	skipc
  5015  0F3D  2F45               	goto	l32710
  5016                           
  5017                           ;Function.c: 412: {
  5018                           ;Function.c: 413: x=x-10;
  5019  0F3E  30F6               	movlw	246
  5020  0F3F  07A2               	addwf	MakeTxTemperature@x,f
  5021                           
  5022                           ;Function.c: 414: x=x+0x41;
  5023  0F40  3041               	movlw	65
  5024  0F41                     L11:	
  5025  0F41  07A2               	addwf	MakeTxTemperature@x,f
  5026                           
  5027                           ;Function.c: 415: TxTemperature[3]=x;
  5028  0F42  0822               	movf	MakeTxTemperature@x,w
  5029  0F43  00D0               	movwf	_TxTemperature+3
  5030                           
  5031                           ;Function.c: 416: }
  5032  0F44  0008               	return
  5033  0F45                     l32710:	
  5034                           
  5035                           ;Function.c: 417: else
  5036                           ;Function.c: 418: {
  5037                           ;Function.c: 419: x=x+'0';
  5038  0F45  3030               	movlw	48
  5039  0F46  2F41               	goto	L11
  5040  0F47                     __end_of_MakeTxTemperature:	
  5041  0F47                     __ptext2141:	
  5042 ;; =============== function _strcpy ends ============
  5043                           
  5044                           
  5045 ;; *************** function _eeprom_read *****************
  5046 ;; Defined at:
  5047 ;;		line 8 in file "eeread.c"
  5048 ;; Parameters:    Size  Location     Type
  5049 ;;  addr            1    wreg     unsigned char 
  5050 ;; Auto vars:     Size  Location     Type
  5051 ;;  addr            1    2[BANK0 ] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  1    wreg      unsigned char 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 1F/0
  5058 ;;		On exit  : 1F/3
  5059 ;;		Unchanged: FFFE0/0
  5060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5061 ;;      Params:         0       0       0       0       0       0       0       0
  5062 ;;      Locals:         0       1       0       0       0       0       0       0
  5063 ;;      Temps:          0       2       0       0       0       0       0       0
  5064 ;;      Totals:         0       3       0       0       0       0       0       0
  5065 ;;Total ram usage:        3 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; Hardware stack levels required when called:    3
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_InteractServer
  5072 ;;		_GetRomData
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075  0F47                     _eeprom_read:	
  5076                           
  5077                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5078                           ;eeprom_read@addr stored from wreg
  5079  0F47  00A2               	movwf	eeprom_read@addr
  5080  0F48                     l27602:	
  5081  0F48  0064               	clrwdt	;#
  5082  0F49  0023               	movlb	3	; select bank3
  5083  0F4A  1895               	btfsc	21,1
  5084  0F4B  2F48               	goto	l27602
  5085  0F4C  0020               	movlb	0	; select bank0
  5086  0F4D  0822               	movf	eeprom_read@addr,w
  5087  0F4E  0023               	movlb	3	; select bank3
  5088  0F4F  0091               	movwf	17	;volatile
  5089  0F50  303F               	movlw	63
  5090  0F51  0595               	andwf	21,f	;volatile
  5091  0F52  1415               	bsf	21,0
  5092  0F53  1003               	clrc
  5093  0F54  1815               	btfsc	21,0
  5094  0F55  1403               	setc
  5095  0F56  3000               	movlw	0
  5096  0F57  3D09               	addwfc	9,w
  5097  0F58  0020               	movlb	0	; select bank0
  5098  0F59  00A0               	movwf	??_eeprom_read
  5099  0F5A  01A1               	clrf	??_eeprom_read+1
  5100  0F5B  0023               	movlb	3	; select bank3
  5101  0F5C  0813               	movf	19,w	;volatile
  5102  0F5D  0008               	return
  5103  0F5E                     __end_of_eeprom_read:	
  5104  0F5E                     __ptext2115:	
  5105 ;; =============== function _Uart1_PutHex ends ============
  5106                           
  5107                           
  5108 ;; *************** function _Uart1_PutString *****************
  5109 ;; Defined at:
  5110 ;;		line 63 in file "F:\work\WYP\NBIoT\Uart.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;  pString         2    1[BANK0 ] PTR const unsigned char 
  5113 ;;		 -> STR_34(3), STR_31(36), STR_30(23), STR_29(4), 
  5114 ;;		 -> STR_27(11), STR_25(8), STR_23(10), STR_22(9), 
  5115 ;;		 -> STR_21(6), STR_20(4), STR_19(3), STR_13(16), 
  5116 ;;		 -> STR_12(13), STR_11(17), STR_7(16), STR_3(16), 
  5117 ;;		 -> STR_2(36), STR_1(23), 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  c               1    3[BANK0 ] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 1F/0
  5126 ;;		On exit  : 1F/0
  5127 ;;		Unchanged: FFFE0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5129 ;;      Params:         0       2       0       0       0       0       0       0
  5130 ;;      Locals:         0       1       0       0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0
  5132 ;;      Totals:         0       3       0       0       0       0       0       0
  5133 ;;Total ram usage:        3 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    4
  5136 ;; This function calls:
  5137 ;;		_Uart1_PutChar
  5138 ;; This function is called by:
  5139 ;;		_InteractServer
  5140 ;;		_ATCommand_SendCmd
  5141 ;; This function uses a non-reentrant model
  5142 ;;
  5143  0F5E                     _Uart1_PutString:	
  5144  0F5E                     l23430:	
  5145                           ; Regs used in _Uart1_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5146                           ;Uart.c: 64: char c;
  5147                           ;Uart.c: 65: while(1)
  5148                           
  5149                           
  5150                           ;Uart.c: 66: {
  5151                           ;Uart.c: 67: c=*pString;
  5152  0F5E  0821               	movf	Uart1_PutString@pString,w
  5153  0F5F  0084               	movwf	4
  5154  0F60  0822               	movf	Uart1_PutString@pString+1,w
  5155  0F61  0085               	movwf	5
  5156  0F62  0800               	movf	0,w	;code access
  5157  0F63  00A3               	movwf	Uart1_PutString@c
  5158                           
  5159                           ;Uart.c: 68: if(c=='\0')
  5160  0F64  08A3               	movf	Uart1_PutString@c,f
  5161  0F65  1903               	btfsc	3,2
  5162  0F66  0008               	return
  5163                           
  5164                           ;Uart.c: 70: Uart1_PutChar(c);
  5165  0F67  0823               	movf	Uart1_PutString@c,w
  5166  0F68  27A0  3188         	fcall	_Uart1_PutChar
  5167                           
  5168                           ;Uart.c: 71: pString++;
  5169  0F6A  0020               	movlb	0	; select bank0
  5170  0F6B  0AA1               	incf	Uart1_PutString@pString,f
  5171  0F6C  1903               	skipnz
  5172  0F6D  0AA2               	incf	Uart1_PutString@pString+1,f
  5173  0F6E  2F5E               	goto	l23430
  5174  0F6F                     __end_of_Uart1_PutString:	
  5175  0F6F                     __ptext2131:	
  5176 ;; =============== function ___wmul ends ============
  5177                           
  5178                           
  5179 ;; *************** function ___bmul *****************
  5180 ;; Defined at:
  5181 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\bmul.c"
  5182 ;; Parameters:    Size  Location     Type
  5183 ;;  multiplier      1    wreg     unsigned char 
  5184 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;  multiplier      1    2[BANK0 ] unsigned char 
  5187 ;;  product         1    1[BANK0 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 1F/0
  5194 ;;		On exit  : 1F/0
  5195 ;;		Unchanged: FFFE0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5197 ;;      Params:         0       1       0       0       0       0       0       0
  5198 ;;      Locals:         0       2       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       3       0       0       0       0       0       0
  5201 ;;Total ram usage:        3 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    3
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_main
  5208 ;;		_InteractServer
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211  0F6F                     ___bmul:	
  5212                           
  5213                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5214                           ;___bmul@multiplier stored from wreg
  5215  0F6F  00A2               	movwf	___bmul@multiplier
  5216  0F70  01A1               	clrf	___bmul@product
  5217  0F71                     l32734:	
  5218  0F71  0820               	movf	___bmul@multiplicand,w
  5219  0F72  1822               	btfsc	___bmul@multiplier,0
  5220  0F73  07A1               	addwf	___bmul@product,f
  5221  0F74  35A0               	lslf	___bmul@multiplicand,f
  5222  0F75  36A2               	lsrf	___bmul@multiplier,f
  5223  0F76  08A2               	movf	___bmul@multiplier,f
  5224  0F77  1D03               	skipz
  5225  0F78  2F71               	goto	l32734
  5226  0F79  0821               	movf	___bmul@product,w
  5227  0F7A  0008               	return
  5228  0F7B                     __end_of___bmul:	
  5229  0F7B                     __ptext2129:	
  5230 ;; =============== function ___lwmod ends ============
  5231                           
  5232                           
  5233 ;; *************** function ___lwdiv *****************
  5234 ;; Defined at:
  5235 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  divisor         2    0[BANK0 ] unsigned int 
  5238 ;;  dividend        2    2[BANK0 ] unsigned int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  quotient        2    5[BANK0 ] unsigned int 
  5241 ;;  counter         1    4[BANK0 ] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  2    0[BANK0 ] unsigned int 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 1F/0
  5248 ;;		On exit  : 1F/0
  5249 ;;		Unchanged: FFFE0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5251 ;;      Params:         0       4       0       0       0       0       0       0
  5252 ;;      Locals:         0       3       0       0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0
  5254 ;;      Totals:         0       7       0       0       0       0       0       0
  5255 ;;Total ram usage:        7 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    3
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_InteractServer
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264  0F7B                     ___lwdiv:	
  5265                           
  5266                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5267  0F7B  01A5               	clrf	___lwdiv@quotient
  5268  0F7C  01A6               	clrf	___lwdiv@quotient+1
  5269  0F7D  0821               	movf	___lwdiv@divisor+1,w
  5270  0F7E  0420               	iorwf	___lwdiv@divisor,w
  5271  0F7F  1903               	skipnz
  5272  0F80  2F9B               	goto	l32786
  5273  0F81  01A4               	clrf	___lwdiv@counter
  5274  0F82                     L10:	
  5275  0F82  0AA4               	incf	___lwdiv@counter,f
  5276  0F83  1BA1               	btfsc	___lwdiv@divisor+1,7
  5277  0F84  2F88               	goto	l32774
  5278  0F85  35A0               	lslf	___lwdiv@divisor,f
  5279  0F86  0DA1               	rlf	___lwdiv@divisor+1,f
  5280  0F87  2F82               	goto	L10
  5281  0F88                     l32774:	
  5282  0F88  35A5               	lslf	___lwdiv@quotient,f
  5283  0F89  0DA6               	rlf	___lwdiv@quotient+1,f
  5284  0F8A  0821               	movf	___lwdiv@divisor+1,w
  5285  0F8B  0223               	subwf	___lwdiv@dividend+1,w
  5286  0F8C  1D03               	skipz
  5287  0F8D  2F90               	goto	u7695
  5288  0F8E  0820               	movf	___lwdiv@divisor,w
  5289  0F8F  0222               	subwf	___lwdiv@dividend,w
  5290  0F90                     u7695:	
  5291  0F90  1C03               	skipc
  5292  0F91  2F97               	goto	l32782
  5293  0F92  0820               	movf	___lwdiv@divisor,w
  5294  0F93  02A2               	subwf	___lwdiv@dividend,f
  5295  0F94  0821               	movf	___lwdiv@divisor+1,w
  5296  0F95  3BA3               	subwfb	___lwdiv@dividend+1,f
  5297  0F96  1425               	bsf	___lwdiv@quotient,0
  5298  0F97                     l32782:	
  5299  0F97  36A1               	lsrf	___lwdiv@divisor+1,f
  5300  0F98  0CA0               	rrf	___lwdiv@divisor,f
  5301  0F99  0BA4               	decfsz	___lwdiv@counter,f
  5302  0F9A  2F88               	goto	l32774
  5303  0F9B                     l32786:	
  5304  0F9B  0826               	movf	___lwdiv@quotient+1,w
  5305  0F9C  00A1               	movwf	?___lwdiv+1
  5306  0F9D  0825               	movf	___lwdiv@quotient,w
  5307  0F9E  00A0               	movwf	?___lwdiv
  5308  0F9F  0008               	return
  5309  0FA0                     __end_of___lwdiv:	
  5310  0FA0                     __ptext2136:	
  5311 ;; =============== function _isdigit ends ============
  5312                           
  5313                           
  5314 ;; *************** function _Uart1_PutChar *****************
  5315 ;; Defined at:
  5316 ;;		line 47 in file "F:\work\WYP\NBIoT\Uart.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  c               1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  c               1    0[BANK0 ] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;		None               void
  5323 ;; Registers used:
  5324 ;;		wreg
  5325 ;; Tracked objects:
  5326 ;;		On entry : 1F/0
  5327 ;;		On exit  : 1F/3
  5328 ;;		Unchanged: FFFE0/0
  5329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5330 ;;      Params:         0       0       0       0       0       0       0       0
  5331 ;;      Locals:         0       1       0       0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0
  5333 ;;      Totals:         0       1       0       0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    3
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_Uart1_PutString
  5341 ;;		_Uart1_PutHex
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344  0FA0                     _Uart1_PutChar:	
  5345                           
  5346                           ; Regs used in _Uart1_PutChar: [wreg]
  5347                           ;Uart1_PutChar@c stored from wreg
  5348  0FA0  00A0               	movwf	Uart1_PutChar@c
  5349  0FA1                     l23418:	
  5350                           ;Uart.c: 48: while(TRMT==0);
  5351                           
  5352  0FA1  0023               	movlb	3	; select bank3
  5353  0FA2  1C9E               	btfss	30,1
  5354  0FA3  2FA1               	goto	l23418
  5355                           
  5356                           ;Uart.c: 52: TXREG=c;
  5357  0FA4  0020               	movlb	0	; select bank0
  5358  0FA5  0820               	movf	Uart1_PutChar@c,w
  5359  0FA6  0023               	movlb	3	; select bank3
  5360  0FA7  009A               	movwf	26	;volatile
  5361  0FA8  0008               	return
  5362  0FA9                     __end_of_Uart1_PutChar:	
  5363  0FA9                     __ptext2128:	
  5364 ;; =============== function ___lbdiv ends ============
  5365                           
  5366                           
  5367 ;; *************** function ___lwmod *****************
  5368 ;; Defined at:
  5369 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;  divisor         2    0[BANK0 ] unsigned int 
  5372 ;;  dividend        2    2[BANK0 ] unsigned int 
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;  counter         1    4[BANK0 ] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2    0[BANK0 ] unsigned int 
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 1F/0
  5381 ;;		On exit  : 1F/0
  5382 ;;		Unchanged: FFFE0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5384 ;;      Params:         0       4       0       0       0       0       0       0
  5385 ;;      Locals:         0       1       0       0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0
  5387 ;;      Totals:         0       5       0       0       0       0       0       0
  5388 ;;Total ram usage:        5 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    3
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_InteractServer
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397  0FA9                     ___lwmod:	
  5398                           
  5399                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5400  0FA9  0821               	movf	___lwmod@divisor+1,w
  5401  0FAA  0420               	iorwf	___lwmod@divisor,w
  5402  0FAB  1903               	skipnz
  5403  0FAC  2FC4               	goto	l32806
  5404  0FAD  01A4               	clrf	___lwmod@counter
  5405  0FAE                     L9:	
  5406  0FAE  0AA4               	incf	___lwmod@counter,f
  5407  0FAF  1BA1               	btfsc	___lwmod@divisor+1,7
  5408  0FB0  2FB4               	goto	l32798
  5409  0FB1  35A0               	lslf	___lwmod@divisor,f
  5410  0FB2  0DA1               	rlf	___lwmod@divisor+1,f
  5411  0FB3  2FAE               	goto	L9
  5412  0FB4                     l32798:	
  5413  0FB4  0821               	movf	___lwmod@divisor+1,w
  5414  0FB5  0223               	subwf	___lwmod@dividend+1,w
  5415  0FB6  1D03               	skipz
  5416  0FB7  2FBA               	goto	u7735
  5417  0FB8  0820               	movf	___lwmod@divisor,w
  5418  0FB9  0222               	subwf	___lwmod@dividend,w
  5419  0FBA                     u7735:	
  5420  0FBA  1C03               	skipc
  5421  0FBB  2FC0               	goto	l32802
  5422  0FBC  0820               	movf	___lwmod@divisor,w
  5423  0FBD  02A2               	subwf	___lwmod@dividend,f
  5424  0FBE  0821               	movf	___lwmod@divisor+1,w
  5425  0FBF  3BA3               	subwfb	___lwmod@dividend+1,f
  5426  0FC0                     l32802:	
  5427  0FC0  36A1               	lsrf	___lwmod@divisor+1,f
  5428  0FC1  0CA0               	rrf	___lwmod@divisor,f
  5429  0FC2  0BA4               	decfsz	___lwmod@counter,f
  5430  0FC3  2FB4               	goto	l32798
  5431  0FC4                     l32806:	
  5432  0FC4  0823               	movf	___lwmod@dividend+1,w
  5433  0FC5  00A1               	movwf	?___lwmod+1
  5434  0FC6  0822               	movf	___lwmod@dividend,w
  5435  0FC7  00A0               	movwf	?___lwmod
  5436  0FC8  0008               	return
  5437  0FC9                     __end_of___lwmod:	
  5438  0FC9                     PL2:	
  5439  0FC9  0879               	movf	_ATCommand_RxCount,w
  5440  0FCA  3E8C               	addlw	140
  5441  0FCB  0086               	movwf	6
  5442  0FCC  3021               	movlw	33
  5443  0FCD  1803               	skipnc
  5444  0FCE  3022               	movlw	34
  5445  0FCF  0087               	movwf	7
  5446  0FD0  0181               	clrf	1
  5447  0FD1  0008               	return
  5448  0FD2                     PL4:	
  5449  0FD2  10F8               	bcf	_ATCommand_Flags,1
  5450  0FD3  1078               	bcf	_ATCommand_Flags,0
  5451  0FD4  085E               	movf	_SystemTick+1,w
  5452  0FD5  00D2               	movwf	_ATCommand_WaitACKTick+1
  5453  0FD6  085D               	movf	_SystemTick,w
  5454  0FD7  00D1               	movwf	_ATCommand_WaitACKTick
  5455  0FD8  01F9               	clrf	_ATCommand_RxCount
  5456  0FD9  1578               	bsf	_ATCommand_Flags,2
  5457  0FDA  0008               	return
  5458  0FDB                     PL6:	
  5459  0FDB  01E1               	clrf	_ATCommand_RetryTimes
  5460  0FDC  0AE1               	incf	_ATCommand_RetryTimes,f
  5461  0FDD  3058               	movlw	88
  5462  0FDE  00D3               	movwf	_ATCommand_WaitACKTimes
  5463  0FDF  3002               	movlw	2
  5464  0FE0  00D4               	movwf	_ATCommand_WaitACKTimes+1
  5465  0FE1  3022               	movlw	low (STR_2| (0+32768))
  5466  0FE2  00B1               	movwf	?_ATCommand_SendCmd
  5467  0FE3  3090               	movlw	high (STR_2| (0+32768))
  5468  0FE4  00B2               	movwf	?_ATCommand_SendCmd+1
  5469  0FE5  0008               	return
  5470  0FE6                     PL7:	
  5471  0FE6  0020               	movlb	0	; select bank0
  5472  0FE7  0AC3               	incf	InteractServer@j,f
  5473  0FE8  300C               	movlw	12
  5474  0FE9  0243               	subwf	InteractServer@j,w
  5475  0FEA  0008               	return
  5476  0FEB                     __ptext2130:	
  5477 ;; =============== function ___lwdiv ends ============
  5478                           
  5479                           
  5480 ;; *************** function ___wmul *****************
  5481 ;; Defined at:
  5482 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\wmul.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  multiplier      2    0[BANK0 ] unsigned int 
  5485 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  5486 ;; Auto vars:     Size  Location     Type
  5487 ;;  product         2    4[BANK0 ] unsigned int 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    0[BANK0 ] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 1F/0
  5494 ;;		On exit  : 1F/0
  5495 ;;		Unchanged: FFFE0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5497 ;;      Params:         0       4       0       0       0       0       0       0
  5498 ;;      Locals:         0       2       0       0       0       0       0       0
  5499 ;;      Temps:          0       0       0       0       0       0       0       0
  5500 ;;      Totals:         0       6       0       0       0       0       0       0
  5501 ;;Total ram usage:        6 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; Hardware stack levels required when called:    3
  5504 ;; This function calls:
  5505 ;;		Nothing
  5506 ;; This function is called by:
  5507 ;;		_atoi
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510  0FEB                     ___wmul:	
  5511                           
  5512                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5513  0FEB  01A4               	clrf	___wmul@product
  5514  0FEC  01A5               	clrf	___wmul@product+1
  5515  0FED                     l32750:	
  5516  0FED  1C20               	btfss	___wmul@multiplier,0
  5517  0FEE  2FF3               	goto	l32754
  5518  0FEF  0822               	movf	___wmul@multiplicand,w
  5519  0FF0  07A4               	addwf	___wmul@product,f
  5520  0FF1  0823               	movf	___wmul@multiplicand+1,w
  5521  0FF2  3DA5               	addwfc	___wmul@product+1,f
  5522  0FF3                     l32754:	
  5523  0FF3  35A2               	lslf	___wmul@multiplicand,f
  5524  0FF4  0DA3               	rlf	___wmul@multiplicand+1,f
  5525  0FF5  36A1               	lsrf	___wmul@multiplier+1,f
  5526  0FF6  0CA0               	rrf	___wmul@multiplier,f
  5527  0FF7  0821               	movf	___wmul@multiplier+1,w
  5528  0FF8  0420               	iorwf	___wmul@multiplier,w
  5529  0FF9  1D03               	skipz
  5530  0FFA  2FED               	goto	l32750
  5531  0FFB  0825               	movf	___wmul@product+1,w
  5532  0FFC  00A1               	movwf	?___wmul+1
  5533  0FFD  0824               	movf	___wmul@product,w
  5534  0FFE  00A0               	movwf	?___wmul
  5535  0FFF  0008               	return
  5536  1000                     __end_of___wmul:	
  5537                           
  5538                           	psect	bssCOMMON
  5539  0077                     __pbssCOMMON:	
  5540  0077                     _ATCommand_Clear:	
  5541  0077                     	ds	1
  5542  0078                     _ATCommand_Flags:	
  5543  0078                     	ds	1
  5544  0079                     _ATCommand_RxCount:	
  5545  0079                     	ds	1
  5546                           
  5547                           	psect	bssBANK0
  5548  004D                     __pbssBANK0:	
  5549  004D                     _TxTemperature:	
  5550  004D                     	ds	4
  5551  0051                     _ATCommand_WaitACKTick:	
  5552  0051                     	ds	2
  5553  0053                     _ATCommand_WaitACKTimes:	
  5554  0053                     	ds	2
  5555  0055                     _CurTemp:	
  5556  0055                     	ds	2
  5557  0057                     _MeasurementTick:	
  5558  0057                     	ds	2
  5559  0059                     _NeedMeasurementTick:	
  5560  0059                     	ds	2
  5561  005B                     _RunTick:	
  5562  005B                     	ds	2
  5563  005D                     _SystemTick:	
  5564  005D                     	ds	2
  5565  005F                     _TCN75_RegReadResualt:	
  5566  005F                     	ds	2
  5567  0061                     _ATCommand_RetryTimes:	
  5568  0061                     	ds	1
  5569  0062                     _CSQ:	
  5570  0062                     	ds	1
  5571  0063                     _ErrState:	
  5572  0063                     	ds	1
  5573  0064                     _TCN75_Config:	
  5574  0064                     	ds	1
  5575  0065                     _TListIndex:	
  5576  0065                     	ds	1
  5577  0066                     _gFlags:	
  5578  0066                     	ds	1
  5579  0067                     _RomParams:	
  5580  0067                     	ds	2
  5581  0069                     _TxErrDataIndex:	
  5582  0069                     	ds	1
  5583                           
  5584                           	psect	dataBANK0
  5585  006A                     __pdataBANK0:	
  5586  006A                     _DpyNum:	
  5587  006A                     	ds	6
  5588                           
  5589                           	psect	bssBANK1
  5590  00A0                     __pbssBANK1:	
  5591  00A0                     _ICCID:	
  5592  00A0                     	ds	21
  5593  00B5                     _ATCommand_ErrString:	
  5594  00B5                     	ds	15
  5595  00C4                     _ATCommand_OkString:	
  5596  00C4                     	ds	15
  5597  00D3                     _DS18X20_Scratchpad:	
  5598  00D3                     	ds	9
  5599                           
  5600                           	psect	bssBANK2
  5601  0120                     __pbssBANK2:	
  5602  0120                     _TList:	
  5603  0120                     	ds	24
  5604                           
  5605                           	psect	clrtext
  5606  06C9                     clear_ram:	
  5607                           ;	Called with FSR0 containing the base address, and
  5608                           ;	btemp/btemp+1 has the size to clear
  5609                           
  5610  06C9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5611  06CA                     clrloop:	
  5612  06CA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5613  06CB  3101               	addfsr 0,1
  5614  06CC  3001               	movlw	1
  5615  06CD  02FE               	subwf	126,f
  5616  06CE  3000               	movlw	0
  5617  06CF  3BFF               	subwfb	127,f
  5618  06D0  087F               	movf	127,w
  5619  06D1  047E               	iorwf	126,w
  5620  06D2  1903               	btfsc	3,2
  5621  06D3  3400               	retlw	0	;all done for this memory range, return
  5622  06D4  2ECA               	goto	clrloop	;have we reached the end yet?
  5623                           
  5624                           	psect	cstackCOMMON
  5625  0070                     __pcstackCOMMON:	
  5626  0070                     ?_SaveRomData:	
  5627  0070                     ?_ATCommand_Init:	
  5628                           ; 0 bytes @ 0x0
  5629                           
  5630  0070                     ?_TCN75_Init:	
  5631                           ; 0 bytes @ 0x0
  5632                           
  5633  0070                     ?_ReadTData:	
  5634                           ; 0 bytes @ 0x0
  5635                           
  5636  0070                     ?_TestProc:	
  5637                           ; 0 bytes @ 0x0
  5638                           
  5639  0070                     ?_CallProc:	
  5640                           ; 0 bytes @ 0x0
  5641                           
  5642  0070                     ?_ATCommand_ProcRx:	
  5643                           ; 0 bytes @ 0x0
  5644                           
  5645  0070                     ?_CallSend:	
  5646                           ; 0 bytes @ 0x0
  5647                           
  5648  0070                     ?_InitGPRS:	
  5649                           ; 0 bytes @ 0x0
  5650                           
  5651  0070                     ?_Uart1_PutHex:	
  5652                           ; 0 bytes @ 0x0
  5653                           
  5654  0070                     ?_CallTestProc:	
  5655                           ; 0 bytes @ 0x0
  5656                           
  5657  0070                     ?_CallTestSend:	
  5658                           ; 0 bytes @ 0x0
  5659                           
  5660  0070                     ?_isgraph:	
  5661                           ; 0 bytes @ 0x0
  5662                           
  5663  0070                     ??_isgraph:	
  5664                           ; 1 bit 
  5665                           
  5666  0070                     ?_OneWire_WriteByte:	
  5667                           ; 0 bytes @ 0x0
  5668                           
  5669  0070                     ?_SimI2C_Init:	
  5670                           ; 0 bytes @ 0x0
  5671                           
  5672  0070                     ?_SimI2C_Start:	
  5673                           ; 0 bytes @ 0x0
  5674                           
  5675  0070                     ?_SimI2C_SendByte:	
  5676                           ; 0 bytes @ 0x0
  5677                           
  5678  0070                     ?_SimI2C_Ack:	
  5679                           ; 0 bytes @ 0x0
  5680                           
  5681  0070                     ?_SimI2C_NoAck:	
  5682                           ; 0 bytes @ 0x0
  5683                           
  5684  0070                     ?_SimI2C_Stop:	
  5685                           ; 0 bytes @ 0x0
  5686                           
  5687  0070                     ?_isdigit:	
  5688                           ; 0 bytes @ 0x0
  5689                           
  5690  0070                     ?_LcdDisplayNum:	
  5691                           ; 1 bit 
  5692                           
  5693  0070                     ?_LcdDisplayAll:	
  5694                           ; 0 bytes @ 0x0
  5695                           
  5696  0070                     ?_LcdDisplay_CSQ:	
  5697                           ; 0 bytes @ 0x0
  5698                           
  5699  0070                     ?_LcdDisplay_CurTemp:	
  5700                           ; 0 bytes @ 0x0
  5701                           
  5702  0070                     ?_LcdDisplay_Err:	
  5703                           ; 0 bytes @ 0x0
  5704                           
  5705  0070                     ?_DisplayInit:	
  5706                           ; 0 bytes @ 0x0
  5707                           
  5708  0070                     ?_InitMCU:	
  5709                           ; 0 bytes @ 0x0
  5710                           
  5711  0070                     ?_InitVariable:	
  5712                           ; 0 bytes @ 0x0
  5713                           
  5714  0070                     ?_InitSystem:	
  5715                           ; 0 bytes @ 0x0
  5716                           
  5717  0070                     ?_main:	
  5718                           ; 0 bytes @ 0x0
  5719                           
  5720  0070                     ?_highISR:	
  5721                           ; 0 bytes @ 0x0
  5722                           
  5723  0070                     ?_Uart1_PutChar:	
  5724                           ; 0 bytes @ 0x0
  5725                           
  5726  0070                     ?_GetRomData:	
  5727                           ; 0 bytes @ 0x0
  5728                           
  5729  0070                     ?_OneWire_Reset:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     ?_TCN75_SetConfig:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     ?_DS18X20_StartMeas:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     ?_DS18X20_ReadMeas:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ?_TCN75_ReadReg:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ?_PowerON:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ?_PowerDown:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ?_InteractServer:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ?_eeprom_read:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ?_ATCommand_WaitData:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ?_OneWire_Command:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_OneWire_ReadByte:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ?_SimI2C_RecAck:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ?_SimI2C_ReadByte:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771  0070                     _isgraph$31798:	
  5772                           ; 1 bytes @ 0x0
  5773                           
  5774                           
  5775                           ; 1 bytes @ 0x0
  5776  0070                     	ds	1
  5777  0071                     isgraph@c:	
  5778                           
  5779                           ; 1 bytes @ 0x1
  5780  0071                     	ds	1
  5781  0072                     ??_ATCommand_ProcRx:	
  5782                           
  5783                           ; 0 bytes @ 0x2
  5784  0072                     	ds	3
  5785  0075                     ATCommand_ProcRx@rx:	
  5786                           
  5787                           ; 1 bytes @ 0x5
  5788  0075                     	ds	1
  5789  0076                     ??_highISR:	
  5790  0076                     highISR@rx:	
  5791                           ; 0 bytes @ 0x6
  5792                           
  5793                           
  5794                           ; 1 bytes @ 0x6
  5795  0076                     	ds	1
  5796                           
  5797                           	psect	cstackBANK0
  5798  0020                     __pcstackBANK0:	
  5799  0020                     ??_OneWire_Reset:	
  5800  0020                     ??_TCN75_Init:	
  5801                           ; 0 bytes @ 0x0
  5802                           
  5803  0020                     ?___delay_20ms:	
  5804                           ; 0 bytes @ 0x0
  5805                           
  5806  0020                     ?_eeprom_write:	
  5807                           ; 0 bytes @ 0x0
  5808                           
  5809  0020                     ?_MakeTxTemperature:	
  5810                           ; 0 bytes @ 0x0
  5811                           
  5812  0020                     ??_eeprom_read:	
  5813                           ; 0 bytes @ 0x0
  5814                           
  5815  0020                     ??_OneWire_ReadByte:	
  5816                           ; 0 bytes @ 0x0
  5817                           
  5818  0020                     ??_OneWire_WriteByte:	
  5819                           ; 0 bytes @ 0x0
  5820                           
  5821  0020                     ??_SimI2C_Init:	
  5822                           ; 0 bytes @ 0x0
  5823                           
  5824  0020                     ??_SimI2C_Start:	
  5825                           ; 0 bytes @ 0x0
  5826                           
  5827  0020                     ??_SimI2C_SendByte:	
  5828                           ; 0 bytes @ 0x0
  5829                           
  5830  0020                     ??_SimI2C_RecAck:	
  5831                           ; 0 bytes @ 0x0
  5832                           
  5833  0020                     ??_SimI2C_ReadByte:	
  5834                           ; 0 bytes @ 0x0
  5835                           
  5836  0020                     ??_SimI2C_Ack:	
  5837                           ; 0 bytes @ 0x0
  5838                           
  5839  0020                     ??_SimI2C_NoAck:	
  5840                           ; 0 bytes @ 0x0
  5841                           
  5842  0020                     ??_SimI2C_Stop:	
  5843                           ; 0 bytes @ 0x0
  5844                           
  5845  0020                     ??_isdigit:	
  5846                           ; 0 bytes @ 0x0
  5847                           
  5848  0020                     ??_LcdDisplayNum:	
  5849                           ; 0 bytes @ 0x0
  5850                           
  5851  0020                     ??_LcdDisplayAll:	
  5852                           ; 0 bytes @ 0x0
  5853                           
  5854  0020                     ??_DisplayInit:	
  5855                           ; 0 bytes @ 0x0
  5856                           
  5857  0020                     ??_InitMCU:	
  5858                           ; 0 bytes @ 0x0
  5859                           
  5860  0020                     ??_Uart1_PutChar:	
  5861                           ; 0 bytes @ 0x0
  5862                           
  5863  0020                     ?_strcpy:	
  5864                           ; 0 bytes @ 0x0
  5865                           
  5866  0020                     ?_GetVerify_Sum:	
  5867                           ; 1 bytes @ 0x0
  5868                           
  5869  0020                     ?_GetVerify_CRC8:	
  5870                           ; 1 bytes @ 0x0
  5871                           
  5872  0020                     ?___bmul:	
  5873                           ; 1 bytes @ 0x0
  5874                           
  5875  0020                     ?___lbdiv:	
  5876                           ; 1 bytes @ 0x0
  5877                           
  5878  0020                     ?___lbmod:	
  5879                           ; 1 bytes @ 0x0
  5880                           
  5881  0020                     ?_strlen:	
  5882                           ; 1 bytes @ 0x0
  5883                           
  5884  0020                     ?_strchr:	
  5885                           ; 2 bytes @ 0x0
  5886                           
  5887  0020                     ?___wmul:	
  5888                           ; 2 bytes @ 0x0
  5889                           
  5890  0020                     ?___lwdiv:	
  5891                           ; 2 bytes @ 0x0
  5892                           
  5893  0020                     ?___lwmod:	
  5894                           ; 2 bytes @ 0x0
  5895                           
  5896  0020                     LcdDisplayAll@x:	
  5897                           ; 2 bytes @ 0x0
  5898                           
  5899  0020                     Uart1_PutChar@c:	
  5900                           ; 1 bytes @ 0x0
  5901                           
  5902  0020                     SimI2C_RecAck@t:	
  5903                           ; 1 bytes @ 0x0
  5904                           
  5905  0020                     SimI2C_SendByte@data:	
  5906                           ; 1 bytes @ 0x0
  5907                           
  5908  0020                     SimI2C_ReadByte@data:	
  5909                           ; 1 bytes @ 0x0
  5910                           
  5911  0020                     eeprom_write@value:	
  5912                           ; 1 bytes @ 0x0
  5913                           
  5914  0020                     _isdigit$31795:	
  5915                           ; 1 bytes @ 0x0
  5916                           
  5917  0020                     ___bmul@multiplicand:	
  5918                           ; 1 bytes @ 0x0
  5919                           
  5920  0020                     ___lbdiv@divisor:	
  5921                           ; 1 bytes @ 0x0
  5922                           
  5923  0020                     ___lbmod@divisor:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0020                     MakeTxTemperature@T:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0020                     ___delay_20ms@x:	
  5930                           ; 2 bytes @ 0x0
  5931                           
  5932  0020                     GetVerify_Sum@Count:	
  5933                           ; 2 bytes @ 0x0
  5934                           
  5935  0020                     GetVerify_CRC8@Count:	
  5936                           ; 2 bytes @ 0x0
  5937                           
  5938  0020                     strcpy@from:	
  5939                           ; 2 bytes @ 0x0
  5940                           
  5941  0020                     ___wmul@multiplier:	
  5942                           ; 2 bytes @ 0x0
  5943                           
  5944  0020                     ___lwdiv@divisor:	
  5945                           ; 2 bytes @ 0x0
  5946                           
  5947  0020                     ___lwmod@divisor:	
  5948                           ; 2 bytes @ 0x0
  5949                           
  5950  0020                     strchr@ptr:	
  5951                           ; 2 bytes @ 0x0
  5952                           
  5953  0020                     strlen@s:	
  5954                           ; 2 bytes @ 0x0
  5955                           
  5956                           
  5957                           ; 2 bytes @ 0x0
  5958  0020                     	ds	1
  5959  0021                     ??_eeprom_write:	
  5960  0021                     ?_Uart1_PutString:	
  5961                           ; 0 bytes @ 0x1
  5962                           
  5963  0021                     ??_Uart1_PutHex:	
  5964                           ; 0 bytes @ 0x1
  5965                           
  5966  0021                     ??___bmul:	
  5967                           ; 0 bytes @ 0x1
  5968                           
  5969  0021                     ??___lbdiv:	
  5970                           ; 0 bytes @ 0x1
  5971                           
  5972  0021                     ??___lbmod:	
  5973                           ; 0 bytes @ 0x1
  5974                           
  5975  0021                     OneWire_Reset@Retry:	
  5976                           ; 0 bytes @ 0x1
  5977                           
  5978  0021                     OneWire_WriteByte@val:	
  5979                           ; 1 bytes @ 0x1
  5980                           
  5981  0021                     OneWire_ReadByte@b:	
  5982                           ; 1 bytes @ 0x1
  5983                           
  5984  0021                     Uart1_PutHex@c:	
  5985                           ; 1 bytes @ 0x1
  5986                           
  5987  0021                     SimI2C_SendByte@t:	
  5988                           ; 1 bytes @ 0x1
  5989                           
  5990  0021                     SimI2C_ReadByte@i:	
  5991                           ; 1 bytes @ 0x1
  5992                           
  5993  0021                     eeprom_write@addr:	
  5994                           ; 1 bytes @ 0x1
  5995                           
  5996  0021                     isdigit@c:	
  5997                           ; 1 bytes @ 0x1
  5998                           
  5999  0021                     ___bmul@product:	
  6000                           ; 1 bytes @ 0x1
  6001                           
  6002  0021                     ___lbdiv@dividend:	
  6003                           ; 1 bytes @ 0x1
  6004                           
  6005  0021                     Uart1_PutString@pString:	
  6006                           ; 1 bytes @ 0x1
  6007                           
  6008                           
  6009                           ; 2 bytes @ 0x1
  6010  0021                     	ds	1
  6011  0022                     ??___delay_20ms:	
  6012  0022                     ??_MakeTxTemperature:	
  6013                           ; 0 bytes @ 0x2
  6014                           
  6015  0022                     ??_strcpy:	
  6016                           ; 0 bytes @ 0x2
  6017                           
  6018  0022                     ??_GetVerify_Sum:	
  6019                           ; 0 bytes @ 0x2
  6020                           
  6021  0022                     ??_GetVerify_CRC8:	
  6022                           ; 0 bytes @ 0x2
  6023                           
  6024  0022                     ??_strlen:	
  6025                           ; 0 bytes @ 0x2
  6026                           
  6027  0022                     MakeTxTemperature@x:	
  6028                           ; 0 bytes @ 0x2
  6029                           
  6030  0022                     OneWire_Reset@r:	
  6031                           ; 1 bytes @ 0x2
  6032                           
  6033  0022                     OneWire_WriteByte@temp:	
  6034                           ; 1 bytes @ 0x2
  6035                           
  6036  0022                     OneWire_ReadByte@value:	
  6037                           ; 1 bytes @ 0x2
  6038                           
  6039  0022                     Uart1_PutHex@b:	
  6040                           ; 1 bytes @ 0x2
  6041                           
  6042  0022                     SimI2C_SendByte@i:	
  6043                           ; 1 bytes @ 0x2
  6044                           
  6045  0022                     eeprom_read@addr:	
  6046                           ; 1 bytes @ 0x2
  6047                           
  6048  0022                     ___bmul@multiplier:	
  6049                           ; 1 bytes @ 0x2
  6050                           
  6051  0022                     ___lbdiv@counter:	
  6052                           ; 1 bytes @ 0x2
  6053                           
  6054  0022                     ___lbmod@dividend:	
  6055                           ; 1 bytes @ 0x2
  6056                           
  6057  0022                     ___wmul@multiplicand:	
  6058                           ; 1 bytes @ 0x2
  6059                           
  6060  0022                     ___lwdiv@dividend:	
  6061                           ; 2 bytes @ 0x2
  6062                           
  6063  0022                     ___lwmod@dividend:	
  6064                           ; 2 bytes @ 0x2
  6065                           
  6066  0022                     strchr@chr:	
  6067                           ; 2 bytes @ 0x2
  6068                           
  6069                           
  6070                           ; 2 bytes @ 0x2
  6071  0022                     	ds	1
  6072  0023                     ??_TCN75_SetConfig:	
  6073  0023                     ??_TCN75_ReadReg:	
  6074                           ; 0 bytes @ 0x3
  6075                           
  6076  0023                     ??_Uart1_PutString:	
  6077                           ; 0 bytes @ 0x3
  6078                           
  6079  0023                     ?_Uart1_PutString_Hex:	
  6080                           ; 0 bytes @ 0x3
  6081                           
  6082  0023                     OneWire_WriteByte@i:	
  6083                           ; 0 bytes @ 0x3
  6084                           
  6085  0023                     OneWire_ReadByte@i:	
  6086                           ; 1 bytes @ 0x3
  6087                           
  6088  0023                     TCN75_ReadReg@RegPoint:	
  6089                           ; 1 bytes @ 0x3
  6090                           
  6091  0023                     TCN75_SetConfig@ErrTimes:	
  6092                           ; 1 bytes @ 0x3
  6093                           
  6094  0023                     Uart1_PutString@c:	
  6095                           ; 1 bytes @ 0x3
  6096                           
  6097  0023                     GetVerify_CRC8@pBuff:	
  6098                           ; 1 bytes @ 0x3
  6099                           
  6100  0023                     ___lbdiv@quotient:	
  6101                           ; 1 bytes @ 0x3
  6102                           
  6103  0023                     ___lbmod@counter:	
  6104                           ; 1 bytes @ 0x3
  6105                           
  6106  0023                     Uart1_PutString_Hex@pString:	
  6107                           ; 1 bytes @ 0x3
  6108                           
  6109                           
  6110                           ; 2 bytes @ 0x3
  6111  0023                     	ds	1
  6112  0024                     ??_PowerDown:	
  6113  0024                     ??_OneWire_Command:	
  6114                           ; 0 bytes @ 0x4
  6115                           
  6116  0024                     ??_strchr:	
  6117                           ; 0 bytes @ 0x4
  6118                           
  6119  0024                     ??___wmul:	
  6120                           ; 0 bytes @ 0x4
  6121                           
  6122  0024                     ??___lwdiv:	
  6123                           ; 0 bytes @ 0x4
  6124                           
  6125  0024                     ??___lwmod:	
  6126                           ; 0 bytes @ 0x4
  6127                           
  6128  0024                     PowerDown@i:	
  6129                           ; 0 bytes @ 0x4
  6130                           
  6131  0024                     OneWire_Command@command:	
  6132                           ; 1 bytes @ 0x4
  6133                           
  6134  0024                     TCN75_ReadReg@ErrTimes:	
  6135                           ; 1 bytes @ 0x4
  6136                           
  6137  0024                     TCN75_SetConfig@bRight:	
  6138                           ; 1 bytes @ 0x4
  6139                           
  6140  0024                     GetVerify_Sum@pBuff:	
  6141                           ; 1 bytes @ 0x4
  6142                           
  6143  0024                     GetVerify_CRC8@bit_counter:	
  6144                           ; 1 bytes @ 0x4
  6145                           
  6146  0024                     strcpy@to:	
  6147                           ; 1 bytes @ 0x4
  6148                           
  6149  0024                     ___lwdiv@counter:	
  6150                           ; 1 bytes @ 0x4
  6151                           
  6152  0024                     ___lwmod@counter:	
  6153                           ; 1 bytes @ 0x4
  6154                           
  6155  0024                     ___lbmod@rem:	
  6156                           ; 1 bytes @ 0x4
  6157                           
  6158  0024                     ___wmul@product:	
  6159                           ; 1 bytes @ 0x4
  6160                           
  6161  0024                     strlen@cp:	
  6162                           ; 2 bytes @ 0x4
  6163                           
  6164                           
  6165                           ; 2 bytes @ 0x4
  6166  0024                     	ds	1
  6167  0025                     ??_DS18X20_StartMeas:	
  6168  0025                     ??_Uart1_PutString_Hex:	
  6169                           ; 0 bytes @ 0x5
  6170                           
  6171  0025                     ??_LcdDisplay_CSQ:	
  6172                           ; 0 bytes @ 0x5
  6173                           
  6174  0025                     ??_LcdDisplay_CurTemp:	
  6175                           ; 0 bytes @ 0x5
  6176                           
  6177  0025                     ??_LcdDisplay_Err:	
  6178                           ; 0 bytes @ 0x5
  6179                           
  6180  0025                     LcdDisplay_CSQ@t1:	
  6181                           ; 0 bytes @ 0x5
  6182                           
  6183  0025                     TCN75_ReadReg@bRight:	
  6184                           ; 1 bytes @ 0x5
  6185                           
  6186  0025                     Uart1_PutString_Hex@c:	
  6187                           ; 1 bytes @ 0x5
  6188                           
  6189  0025                     GetVerify_Sum@sum:	
  6190                           ; 1 bytes @ 0x5
  6191                           
  6192  0025                     GetVerify_CRC8@data:	
  6193                           ; 1 bytes @ 0x5
  6194                           
  6195  0025                     strcpy@cp:	
  6196                           ; 1 bytes @ 0x5
  6197                           
  6198  0025                     ___lwdiv@quotient:	
  6199                           ; 1 bytes @ 0x5
  6200                           
  6201                           
  6202                           ; 2 bytes @ 0x5
  6203  0025                     	ds	1
  6204  0026                     ??_ATCommand_Init:	
  6205  0026                     ?_atoi:	
  6206                           ; 0 bytes @ 0x6
  6207                           
  6208  0026                     ?_strncmp:	
  6209                           ; 2 bytes @ 0x6
  6210                           
  6211  0026                     LcdDisplay_CSQ@t2:	
  6212                           ; 2 bytes @ 0x6
  6213                           
  6214  0026                     GetVerify_Sum@i:	
  6215                           ; 1 bytes @ 0x6
  6216                           
  6217  0026                     GetVerify_CRC8@i:	
  6218                           ; 1 bytes @ 0x6
  6219                           
  6220  0026                     atoi@s:	
  6221                           ; 2 bytes @ 0x6
  6222                           
  6223  0026                     strncmp@s1:	
  6224                           ; 2 bytes @ 0x6
  6225                           
  6226                           
  6227                           ; 2 bytes @ 0x6
  6228  0026                     	ds	1
  6229  0027                     ??_GetRomData:	
  6230  0027                     ??_SaveRomData:	
  6231                           ; 0 bytes @ 0x7
  6232                           
  6233  0027                     LcdDisplay_CurTemp@t1:	
  6234                           ; 0 bytes @ 0x7
  6235                           
  6236  0027                     GetRomData@i:	
  6237                           ; 1 bytes @ 0x7
  6238                           
  6239  0027                     SaveRomData@i:	
  6240                           ; 1 bytes @ 0x7
  6241                           
  6242                           
  6243                           ; 1 bytes @ 0x7
  6244  0027                     	ds	1
  6245  0028                     ??_atoi:	
  6246  0028                     ??_InitVariable:	
  6247                           ; 0 bytes @ 0x8
  6248                           
  6249  0028                     LcdDisplay_CurTemp@t2:	
  6250                           ; 0 bytes @ 0x8
  6251                           
  6252  0028                     GetVerify_CRC8@feedback_bit:	
  6253                           ; 1 bytes @ 0x8
  6254                           
  6255  0028                     strncmp@s2:	
  6256                           ; 1 bytes @ 0x8
  6257                           
  6258                           
  6259                           ; 2 bytes @ 0x8
  6260  0028                     	ds	1
  6261  0029                     GetVerify_CRC8@crc:	
  6262                           
  6263                           ; 1 bytes @ 0x9
  6264  0029                     	ds	1
  6265  002A                     ??_DS18X20_ReadMeas:	
  6266  002A                     DS18X20_ReadMeas@bVerify:	
  6267                           ; 0 bytes @ 0xA
  6268                           
  6269  002A                     strncmp@len:	
  6270                           ; 1 bytes @ 0xA
  6271                           
  6272                           
  6273                           ; 2 bytes @ 0xA
  6274  002A                     	ds	1
  6275  002B                     DS18X20_ReadMeas@i:	
  6276                           
  6277                           ; 1 bytes @ 0xB
  6278  002B                     	ds	1
  6279  002C                     ??_ReadTData:	
  6280  002C                     ??_strncmp:	
  6281                           ; 0 bytes @ 0xC
  6282                           
  6283  002C                     ReadTData@retry:	
  6284                           ; 0 bytes @ 0xC
  6285                           
  6286  002C                     atoi@sign:	
  6287                           ; 1 bytes @ 0xC
  6288                           
  6289                           
  6290                           ; 1 bytes @ 0xC
  6291  002C                     	ds	1
  6292  002D                     ??_InitSystem:	
  6293  002D                     ?_strstr:	
  6294                           ; 0 bytes @ 0xD
  6295                           
  6296  002D                     InitSystem@x:	
  6297                           ; 2 bytes @ 0xD
  6298                           
  6299  002D                     atoi@a:	
  6300                           ; 1 bytes @ 0xD
  6301                           
  6302  002D                     strstr@s1:	
  6303                           ; 2 bytes @ 0xD
  6304                           
  6305                           
  6306                           ; 2 bytes @ 0xD
  6307  002D                     	ds	2
  6308  002F                     strstr@s2:	
  6309                           
  6310                           ; 2 bytes @ 0xF
  6311  002F                     	ds	2
  6312  0031                     ??_ATCommand_WaitData:	
  6313  0031                     ??_strstr:	
  6314                           ; 0 bytes @ 0x11
  6315                           
  6316  0031                     ?_ATCommand_SendCmd:	
  6317                           ; 0 bytes @ 0x11
  6318                           
  6319  0031                     ATCommand_SendCmd@cmd:	
  6320                           ; 1 bytes @ 0x11
  6321                           
  6322                           
  6323                           ; 2 bytes @ 0x11
  6324  0031                     	ds	2
  6325  0033                     ??_ATCommand_SendCmd:	
  6326  0033                     ATCommand_WaitData@res:	
  6327                           ; 0 bytes @ 0x13
  6328                           
  6329                           
  6330                           ; 1 bytes @ 0x13
  6331  0033                     	ds	1
  6332  0034                     ATCommand_WaitData@strx:	
  6333                           
  6334                           ; 2 bytes @ 0x14
  6335  0034                     	ds	1
  6336  0035                     ATCommand_SendCmd@retry:	
  6337                           
  6338                           ; 1 bytes @ 0x15
  6339  0035                     	ds	1
  6340  0036                     ??_InteractServer:	
  6341  0036                     InteractServer@retry:	
  6342                           ; 0 bytes @ 0x16
  6343                           
  6344  0036                     ATCommand_SendCmd@strx:	
  6345                           ; 1 bytes @ 0x16
  6346                           
  6347                           
  6348                           ; 2 bytes @ 0x16
  6349  0036                     	ds	1
  6350  0037                     InteractServer@res:	
  6351                           
  6352                           ; 1 bytes @ 0x17
  6353  0037                     	ds	1
  6354  0038                     ATCommand_SendCmd@res:	
  6355  0038                     InteractServer@i_10574:	
  6356                           ; 1 bytes @ 0x18
  6357                           
  6358                           
  6359                           ; 2 bytes @ 0x18
  6360  0038                     	ds	1
  6361  0039                     ??_PowerON:	
  6362  0039                     ??_InitGPRS:	
  6363                           ; 0 bytes @ 0x19
  6364                           
  6365  0039                     PowerON@i:	
  6366                           ; 0 bytes @ 0x19
  6367                           
  6368                           
  6369                           ; 1 bytes @ 0x19
  6370  0039                     	ds	1
  6371  003A                     InteractServer@i_10579:	
  6372                           
  6373                           ; 2 bytes @ 0x1A
  6374  003A                     	ds	1
  6375  003B                     InitGPRS@i:	
  6376                           
  6377                           ; 1 bytes @ 0x1B
  6378  003B                     	ds	1
  6379  003C                     InteractServer@j_10586:	
  6380  003C                     InitGPRS@strx:	
  6381                           ; 2 bytes @ 0x1C
  6382                           
  6383                           
  6384                           ; 2 bytes @ 0x1C
  6385  003C                     	ds	2
  6386  003E                     InitGPRS@retry:	
  6387  003E                     InteractServer@txLen:	
  6388                           ; 1 bytes @ 0x1E
  6389                           
  6390                           
  6391                           ; 2 bytes @ 0x1E
  6392  003E                     	ds	2
  6393  0040                     InteractServer@t:	
  6394                           
  6395                           ; 2 bytes @ 0x20
  6396  0040                     	ds	2
  6397  0042                     InteractServer@addr:	
  6398                           
  6399                           ; 1 bytes @ 0x22
  6400  0042                     	ds	1
  6401  0043                     InteractServer@j:	
  6402                           
  6403                           ; 1 bytes @ 0x23
  6404  0043                     	ds	1
  6405  0044                     InteractServer@k:	
  6406                           
  6407                           ; 1 bytes @ 0x24
  6408  0044                     	ds	1
  6409  0045                     InteractServer@i:	
  6410                           
  6411                           ; 1 bytes @ 0x25
  6412  0045                     	ds	1
  6413  0046                     ??_CallSend:	
  6414  0046                     ??_CallTestProc:	
  6415                           ; 0 bytes @ 0x26
  6416                           
  6417  0046                     ??_CallTestSend:	
  6418                           ; 0 bytes @ 0x26
  6419                           
  6420  0046                     CallSend@ret:	
  6421                           ; 0 bytes @ 0x26
  6422                           
  6423  0046                     CallTestProc@retry:	
  6424                           ; 1 bytes @ 0x26
  6425                           
  6426                           
  6427                           ; 1 bytes @ 0x26
  6428  0046                     	ds	1
  6429  0047                     ??_TestProc:	
  6430  0047                     ??_CallProc:	
  6431                           ; 0 bytes @ 0x27
  6432                           
  6433  0047                     CallProc@retry:	
  6434                           ; 0 bytes @ 0x27
  6435                           
  6436                           
  6437                           ; 1 bytes @ 0x27
  6438  0047                     	ds	2
  6439  0049                     ??_main:	
  6440                           
  6441                           ; 0 bytes @ 0x29
  6442  0049                     	ds	2
  6443  004B                     main@addr:	
  6444                           
  6445                           ; 1 bytes @ 0x2B
  6446  004B                     	ds	1
  6447  004C                     main@i:	
  6448                           
  6449                           ; 1 bytes @ 0x2C
  6450  004C                     	ds	1
  6451                           
  6452                           	psect	text2085
  6453  002C                     __ptext2085:	
  6454 ;; =============== function _CallTestProc ends ============
  6455                           
  6456                           
  6457 ;; *************** function _CallProc *****************
  6458 ;; Defined at:
  6459 ;;		line 7 in file "F:\work\WYP\NBIoT\Function.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  retry           1   39[BANK0 ] unsigned char 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;		None               void
  6466 ;; Registers used:
  6467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 10/F
  6470 ;;		On exit  : 1F/F
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6473 ;;      Params:         0       0       0       0       0       0       0       0
  6474 ;;      Locals:         0       1       0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0
  6476 ;;      Totals:         0       1       0       0       0       0       0       0
  6477 ;;Total ram usage:        1 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    8
  6480 ;; This function calls:
  6481 ;;		_PowerON
  6482 ;;		_CallSend
  6483 ;;		_PowerDown
  6484 ;;		_LcdDisplay_CurTemp
  6485 ;;		___delay_20ms
  6486 ;;		_LcdDisplay_Err
  6487 ;; This function is called by:
  6488 ;;		_main
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491  002C                     _CallProc:	
  6492  002C                     l8632:	
  6493                           ;Function.c: 9: while(WA==0);
  6494                           
  6495                           ; Regs used in _CallProc: [wreg-btemp+0+pclath+cstack]
  6496                           
  6497  002C  002F               	movlb	15	; select bank15
  6498  002D  1E12               	btfss	18,4
  6499  002E  282C               	goto	l8632
  6500                           
  6501                           ;Function.c: 10: SEG5COM0=1;
  6502  002F  16A0               	bsf	32,5
  6503  0030                     l8635:	
  6504                           ;Function.c: 11: while(WA==0);
  6505                           
  6506  0030  1E12               	btfss	18,4
  6507  0031  2830               	goto	l8635
  6508                           
  6509                           ;Function.c: 12: SEG5COM2=1;
  6510  0032  16A6               	bsf	38,5
  6511  0033                     l8638:	
  6512                           ;Function.c: 13: while(WA==0);
  6513                           
  6514  0033  1E12               	btfss	18,4
  6515  0034  2833               	goto	l8638
  6516                           
  6517                           ;Function.c: 14: SEG21COM3=0;
  6518  0035  12AB               	bcf	43,5
  6519  0036                     l8641:	
  6520                           ;Function.c: 15: while(WA==0);
  6521                           
  6522  0036  1E12               	btfss	18,4
  6523  0037  2836               	goto	l8641
  6524                           
  6525                           ;Function.c: 16: SEG21COM2=0;
  6526  0038  12A8               	bcf	40,5
  6527                           
  6528                           ;Function.c: 17: if(gFlags.bNotify)
  6529  0039  0020               	movlb	0	; select bank0
  6530  003A  1C66               	btfss	_gFlags,0
  6531  003B  2843               	goto	l33962
  6532  003C                     l8645:	
  6533  003C  002F               	movlb	15	; select bank15
  6534  003D  1E12               	btfss	18,4
  6535  003E  283C               	goto	l8645
  6536                           
  6537                           ;Function.c: 20: SEG22COM3=1;
  6538  003F  172B               	bsf	43,6
  6539  0040                     l8648:	
  6540                           ;Function.c: 21: while(WA==0);
  6541                           
  6542  0040  1E12               	btfss	18,4
  6543  0041  2840               	goto	l8648
  6544                           
  6545                           ;Function.c: 22: SEG3COM3=1;
  6546  0042  15A9               	bsf	41,3
  6547  0043                     l33962:	
  6548                           
  6549                           ;Function.c: 23: }
  6550                           ;Function.c: 25: unsigned char retry=2;
  6551  0043  3002               	movlw	2
  6552  0044  0020               	movlb	0	; select bank0
  6553  0045  00C7               	movwf	CallProc@retry
  6554  0046                     l33990:	
  6555                           ;Function.c: 56: }
  6556                           
  6557                           ;Function.c: 26: while(retry!=0)
  6558                           
  6559  0046  08C7               	movf	CallProc@retry,f
  6560  0047  1903               	btfsc	3,2
  6561  0048  286B               	goto	l8660
  6562                           
  6563                           ;Function.c: 27: {
  6564                           ;Function.c: 28: ErrState=NoErr;
  6565  0049  01E3               	clrf	_ErrState
  6566                           
  6567                           ;Function.c: 29: gFlags.bRetry=0;
  6568  004A  1266               	bcf	_gFlags,4
  6569                           
  6570                           ;Function.c: 31: if(PowerON()==0)
  6571  004B  2322  3180         	fcall	_PowerON
  6572  004D  3800               	iorlw	0
  6573  004E  1D03               	skipz
  6574  004F  2854               	goto	l33972
  6575                           
  6576                           ;Function.c: 32: {
  6577                           ;Function.c: 33: ErrState=Miss900a;
  6578  0050  3002               	movlw	2
  6579  0051  0020               	movlb	0	; select bank0
  6580  0052  00E3               	movwf	_ErrState
  6581                           
  6582                           ;Function.c: 34: }
  6583  0053  285E               	goto	l33982
  6584  0054                     l33972:	
  6585                           
  6586                           ;Function.c: 35: else
  6587                           ;Function.c: 36: {
  6588                           ;Function.c: 37: CallSend();
  6589  0054  3189  2195  3180   	fcall	_CallSend
  6590                           
  6591                           ;Function.c: 38: if(ErrState!=NoErr)
  6592  0057  0863               	movf	_ErrState,w
  6593  0058  1D03               	skipz
  6594                           
  6595                           ;Function.c: 39: {
  6596                           ;Function.c: 40: if(RD4==1)
  6597  0059  1E0F               	btfss	15,4
  6598  005A  285D               	goto	l33980
  6599                           
  6600                           ;Function.c: 41: {
  6601                           ;Function.c: 42: ErrState=MissPower;
  6602  005B  3013               	movlw	19
  6603  005C  00E3               	movwf	_ErrState
  6604  005D                     l33980:	
  6605                           
  6606                           ;Function.c: 656: unsigned char i;
  6607                           ;Function.c: 657: return 1;
  6608                           
  6609                           ; Regs used in _PowerDown: [wreg+status,2+status,0+pclath+cstack]
  6610                           
  6611                           ;Function.c: 43: }
  6612                           ;Function.c: 44: }
  6613                           ;Function.c: 45: PowerDown();
  6614  005D  3001               	movlw	1
  6615  005E                     l33982:	
  6616                           
  6617                           ;Function.c: 46: }
  6618                           ;Function.c: 47: if(gFlags.bRetry)
  6619  005E  1E66               	btfss	_gFlags,4
  6620  005F  286B               	goto	l8660
  6621                           
  6622                           ;Function.c: 48: {
  6623                           ;Function.c: 49: retry--;
  6624  0060  03C7               	decf	CallProc@retry,f
  6625                           
  6626                           ;Function.c: 54: LcdDisplay_CurTemp();
  6627  0061  22D2               	fcall	_LcdDisplay_CurTemp
  6628                           
  6629                           ;Function.c: 55: __delay_20ms(3000);
  6630  0062  30B8               	movlw	184
  6631  0063  0020               	movlb	0	; select bank0
  6632  0064  00A0               	movwf	?___delay_20ms
  6633  0065  300B               	movlw	11
  6634  0066  00A1               	movwf	?___delay_20ms+1
  6635  0067  318B  2336  3180   	fcall	___delay_20ms
  6636  006A  2846               	goto	l33990
  6637  006B                     l8660:	
  6638  006B  002F               	movlb	15	; select bank15
  6639  006C  1E12               	btfss	18,4
  6640  006D  286B               	goto	l8660
  6641                           
  6642                           ;Function.c: 63: SEG5COM0=0;
  6643  006E  12A0               	bcf	32,5
  6644  006F                     l8663:	
  6645                           ;Function.c: 64: while(WA==0);
  6646                           
  6647  006F  1E12               	btfss	18,4
  6648  0070  286F               	goto	l8663
  6649                           
  6650                           ;Function.c: 65: SEG5COM2=0;
  6651  0071  12A6               	bcf	38,5
  6652  0072                     l8666:	
  6653                           ;Function.c: 66: while(WA==0);
  6654                           
  6655  0072  1E12               	btfss	18,4
  6656  0073  2872               	goto	l8666
  6657                           
  6658                           ;Function.c: 67: SEG22COM3=0;
  6659  0074  132B               	bcf	43,6
  6660  0075                     l8669:	
  6661                           ;Function.c: 68: while(WA==0);
  6662                           
  6663  0075  1E12               	btfss	18,4
  6664  0076  2875               	goto	l8669
  6665                           
  6666                           ;Function.c: 69: SEG3COM3=0;
  6667  0077  11A9               	bcf	41,3
  6668                           
  6669                           ;Function.c: 70: if(ErrState!=NoErr)
  6670  0078  0020               	movlb	0	; select bank0
  6671  0079  0863               	movf	_ErrState,w
  6672  007A  1903               	btfsc	3,2
  6673  007B  287D               	goto	l33996
  6674                           
  6675                           ;Function.c: 71: {
  6676                           ;Function.c: 72: LcdDisplay_Err();
  6677  007C  2A49               	ljmp	l2339
  6678  007D                     l33996:	
  6679                           ;Function.c: 73: }
  6680                           
  6681                           
  6682                           ;Function.c: 74: else
  6683                           ;Function.c: 75: {
  6684                           ;Function.c: 76: LcdDisplay_CurTemp();
  6685  007D  2AD2               	ljmp	l32860
  6686  007E                     __end_of_CallProc:	
  6687  007E                     __ptext2083:	
  6688 ;; =============== function _main ends ============
  6689                           
  6690                           
  6691 ;; *************** function _TestProc *****************
  6692 ;; Defined at:
  6693 ;;		line 9 in file "F:\work\WYP\NBIoT\TestProc.c"
  6694 ;; Parameters:    Size  Location     Type
  6695 ;;		None
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;		None
  6698 ;; Return value:  Size  Location     Type
  6699 ;;		None               void
  6700 ;; Registers used:
  6701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6702 ;; Tracked objects:
  6703 ;;		On entry : 1F/0
  6704 ;;		On exit  : 1F/0
  6705 ;;		Unchanged: 0/0
  6706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6707 ;;      Params:         0       0       0       0       0       0       0       0
  6708 ;;      Locals:         0       0       0       0       0       0       0       0
  6709 ;;      Temps:          0       2       0       0       0       0       0       0
  6710 ;;      Totals:         0       2       0       0       0       0       0       0
  6711 ;;Total ram usage:        2 bytes
  6712 ;; Hardware stack levels used:    1
  6713 ;; Hardware stack levels required when called:    9
  6714 ;; This function calls:
  6715 ;;		_LcdDisplayAll
  6716 ;;		___delay_20ms
  6717 ;;		_ReadTData
  6718 ;;		_LcdDisplay_Err
  6719 ;;		_CallTestProc
  6720 ;; This function is called by:
  6721 ;;		_main
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724  007E                     _TestProc:	
  6725                           
  6726                           ;TestProc.c: 10: if(RB7==0)
  6727                           
  6728                           ; Regs used in _TestProc: [wreg-btemp+0+pclath+cstack]
  6729  007E  1B8D               	btfsc	13,7
  6730  007F  0008               	return
  6731                           
  6732                           ;TestProc.c: 11: {
  6733                           ;TestProc.c: 12: _delay((unsigned long)((20)*(4000000/4000.0)));
  6734  0080  301A               	movlw	26
  6735  0081  00C8               	movwf	??_TestProc+1
  6736  0082  30F8               	movlw	248
  6737  0083  00C7               	movwf	??_TestProc
  6738  0084                     u9907:	
  6739  0084  0BC7               	decfsz	??_TestProc,f
  6740  0085  2884               	goto	u9907
  6741  0086  0BC8               	decfsz	??_TestProc+1,f
  6742  0087  2884               	goto	u9907
  6743  0088  0064               	clrwdt
  6744                           
  6745                           ;TestProc.c: 13: if(RB7==0)
  6746  0089  0020               	movlb	0	; select bank0
  6747  008A  1B8D               	btfsc	13,7
  6748  008B  0008               	return
  6749                           
  6750                           ;TestProc.c: 14: {
  6751                           ;TestProc.c: 15: LcdDisplayAll(0);
  6752  008C  3000               	movlw	0
  6753  008D  20C8               	fcall	_LcdDisplayAll
  6754                           
  6755                           ;TestProc.c: 16: __delay_20ms(150);
  6756  008E  3096               	movlw	150
  6757  008F  0020               	movlb	0	; select bank0
  6758  0090  00A0               	movwf	?___delay_20ms
  6759  0091  01A1               	clrf	?___delay_20ms+1
  6760  0092  318B  2336  3180   	fcall	___delay_20ms
  6761                           
  6762                           ;TestProc.c: 17: LcdDisplayAll(1);
  6763  0095  3001               	movlw	1
  6764  0096  20C8               	fcall	_LcdDisplayAll
  6765                           
  6766                           ;TestProc.c: 18: ReadTData();
  6767  0097  3188  20DD  3180   	fcall	_ReadTData
  6768                           
  6769                           ;TestProc.c: 19: if(CurTemp.u16==0xf000)
  6770  009A  0020               	movlb	0	; select bank0
  6771  009B  0856               	movf	_CurTemp+1,w
  6772  009C  3AF0               	xorlw	240
  6773  009D  0455               	iorwf	_CurTemp,w
  6774  009E  1D03               	skipz
  6775  009F  28A9               	goto	l34052
  6776                           
  6777                           ;TestProc.c: 20: {
  6778                           ;TestProc.c: 21: LATA4=0;
  6779  00A0  0022               	movlb	2	; select bank2
  6780  00A1  120C               	bcf	12,4
  6781                           
  6782                           ;TestProc.c: 22: LATA3=1;
  6783  00A2  158C               	bsf	12,3
  6784                           
  6785                           ;TestProc.c: 23: ErrState=MissT;
  6786  00A3  0020               	movlb	0	; select bank0
  6787  00A4  01E3               	clrf	_ErrState
  6788  00A5  0AE3               	incf	_ErrState,f
  6789  00A6                     l34050:	
  6790                           
  6791                           ;TestProc.c: 24: LcdDisplay_Err();
  6792  00A6  2249  3180         	fcall	_LcdDisplay_Err
  6793                           
  6794                           ;TestProc.c: 25: }
  6795  00A8  28BA               	goto	l34064
  6796  00A9                     l34052:	
  6797                           
  6798                           ;TestProc.c: 26: else
  6799                           ;TestProc.c: 27: {
  6800                           ;TestProc.c: 28: ErrState=NoErr;
  6801  00A9  01E3               	clrf	_ErrState
  6802                           
  6803                           ;TestProc.c: 29: CallTestProc();
  6804  00AA  2281  3180         	fcall	_CallTestProc
  6805                           
  6806                           ;TestProc.c: 30: if(ErrState!=NoErr)
  6807  00AC  0020               	movlb	0	; select bank0
  6808  00AD  0863               	movf	_ErrState,w
  6809  00AE  1903               	btfsc	3,2
  6810  00AF  28B4               	goto	l10880
  6811                           
  6812                           ;TestProc.c: 31: {
  6813                           ;TestProc.c: 32: LATA4=0;
  6814  00B0  0022               	movlb	2	; select bank2
  6815  00B1  120C               	bcf	12,4
  6816                           
  6817                           ;TestProc.c: 33: LATA3=1;
  6818  00B2  158C               	bsf	12,3
  6819  00B3  28A6               	goto	l34050
  6820  00B4                     l10880:	
  6821                           
  6822                           ;TestProc.c: 36: else
  6823                           ;TestProc.c: 37: {
  6824                           ;TestProc.c: 38: LATA4=1;
  6825  00B4  0022               	movlb	2	; select bank2
  6826  00B5  160C               	bsf	12,4
  6827                           
  6828                           ;TestProc.c: 39: LATA3=0;
  6829  00B6  118C               	bcf	12,3
  6830                           
  6831                           ;TestProc.c: 40: LcdDisplayAll(2);
  6832  00B7  3002               	movlw	2
  6833  00B8  20C8  3180         	fcall	_LcdDisplayAll
  6834  00BA                     l34064:	
  6835                           
  6836                           ;TestProc.c: 44: {
  6837                           ;TestProc.c: 45: if(ErrState!=NoErr)
  6838  00BA  0020               	movlb	0	; select bank0
  6839  00BB  0863               	movf	_ErrState,w
  6840  00BC  1903               	btfsc	3,2
  6841  00BD  28BA               	goto	l34064
  6842                           
  6843                           ;TestProc.c: 46: {
  6844                           ;TestProc.c: 47: __delay_20ms(20);
  6845  00BE  3014               	movlw	20
  6846  00BF  00A0               	movwf	?___delay_20ms
  6847  00C0  01A1               	clrf	?___delay_20ms+1
  6848  00C1  318B  2336  3180   	fcall	___delay_20ms
  6849                           
  6850                           ;TestProc.c: 48: LATA3=!LATA3;
  6851  00C4  3008               	movlw	8
  6852  00C5  0022               	movlb	2	; select bank2
  6853  00C6  068C               	xorwf	12,f
  6854  00C7  28BA               	goto	l34064
  6855  00C8                     __end_of_TestProc:	
  6856  00C8                     __ptext2125:	
  6857 ;; =============== function _LcdDisplay_CSQ ends ============
  6858                           
  6859                           
  6860 ;; *************** function _LcdDisplayAll *****************
  6861 ;; Defined at:
  6862 ;;		line 240 in file "F:\work\WYP\NBIoT\Display.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  x               1    wreg     unsigned char 
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;  x               1    0[BANK0 ] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;		None               void
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0, pclath, cstack
  6871 ;; Tracked objects:
  6872 ;;		On entry : 1D/0
  6873 ;;		On exit  : 10/0
  6874 ;;		Unchanged: FFFE0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6876 ;;      Params:         0       0       0       0       0       0       0       0
  6877 ;;      Locals:         0       1       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0
  6879 ;;      Totals:         0       1       0       0       0       0       0       0
  6880 ;;Total ram usage:        1 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    4
  6883 ;; This function calls:
  6884 ;;		_LcdDisplayNum
  6885 ;; This function is called by:
  6886 ;;		_TestProc
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889  00C8                     _LcdDisplayAll:	
  6890                           
  6891                           ; Regs used in _LcdDisplayAll: [wreg+status,2+status,0+pclath+cstack]
  6892                           ;LcdDisplayAll@x stored from wreg
  6893  00C8  0020               	movlb	0	; select bank0
  6894  00C9  00A0               	movwf	LcdDisplayAll@x
  6895                           
  6896                           ;Display.c: 244: if(x==0)
  6897  00CA  08A0               	movf	LcdDisplayAll@x,f
  6898  00CB  1D03               	skipz
  6899  00CC  28F2               	goto	l32840
  6900                           
  6901                           ;Display.c: 245: {
  6902                           ;Display.c: 246: DpyNum[0]=0xff;
  6903  00CD  30FF               	movlw	255
  6904  00CE  00EA               	movwf	_DpyNum
  6905                           
  6906                           ;Display.c: 247: DpyNum[1]=0xff;
  6907  00CF  00EB               	movwf	_DpyNum+1
  6908                           
  6909                           ;Display.c: 248: DpyNum[2]=0xff;
  6910  00D0  00EC               	movwf	_DpyNum+2
  6911                           
  6912                           ;Display.c: 249: LcdDisplayNum();
  6913  00D1  2140  3180         	fcall	_LcdDisplayNum
  6914  00D3                     l2225:	
  6915                           ;Display.c: 250: while(WA==0);
  6916                           
  6917  00D3  1E12               	btfss	18,4
  6918  00D4  28D3               	goto	l2225
  6919                           
  6920                           ;Display.c: 251: SEG5COM0=1;
  6921  00D5  16A0               	bsf	32,5
  6922  00D6                     l2228:	
  6923                           ;Display.c: 252: while(WA==0);
  6924                           
  6925  00D6  1E12               	btfss	18,4
  6926  00D7  28D6               	goto	l2228
  6927                           
  6928                           ;Display.c: 253: SEG5COM1=1;
  6929  00D8  16A3               	bsf	35,5
  6930  00D9                     l2231:	
  6931                           ;Display.c: 254: while(WA==0);
  6932                           
  6933  00D9  1E12               	btfss	18,4
  6934  00DA  28D9               	goto	l2231
  6935                           
  6936                           ;Display.c: 255: SEG5COM2=1;
  6937  00DB  16A6               	bsf	38,5
  6938  00DC                     l2234:	
  6939                           ;Display.c: 256: while(WA==0);
  6940                           
  6941  00DC  1E12               	btfss	18,4
  6942  00DD  28DC               	goto	l2234
  6943                           
  6944                           ;Display.c: 257: SEG5COM3=1;
  6945  00DE  16A9               	bsf	41,5
  6946  00DF                     l2237:	
  6947                           ;Display.c: 258: while(WA==0);
  6948                           
  6949  00DF  1E12               	btfss	18,4
  6950  00E0  28DF               	goto	l2237
  6951                           
  6952                           ;Display.c: 259: SEG22COM3=1;
  6953  00E1  172B               	bsf	43,6
  6954  00E2                     l2240:	
  6955                           ;Display.c: 260: while(WA==0);
  6956                           
  6957  00E2  1E12               	btfss	18,4
  6958  00E3  28E2               	goto	l2240
  6959                           
  6960                           ;Display.c: 261: SEG3COM3=1;
  6961  00E4  15A9               	bsf	41,3
  6962  00E5                     l2243:	
  6963                           ;Display.c: 262: while(WA==0);
  6964                           
  6965  00E5  1E12               	btfss	18,4
  6966  00E6  28E5               	goto	l2243
  6967                           
  6968                           ;Display.c: 263: SEG21COM3=1;
  6969  00E7  16AB               	bsf	43,5
  6970  00E8                     l2246:	
  6971                           ;Display.c: 264: while(WA==0);
  6972                           
  6973  00E8  1E12               	btfss	18,4
  6974  00E9  28E8               	goto	l2246
  6975                           
  6976                           ;Display.c: 265: SEG21COM2=1;
  6977  00EA  16A8               	bsf	40,5
  6978  00EB                     l2249:	
  6979                           ;Display.c: 266: while(WA==0);
  6980                           
  6981  00EB  1E12               	btfss	18,4
  6982  00EC  28EB               	goto	l2249
  6983                           
  6984                           ;Display.c: 267: SEG21COM1=1;
  6985  00ED  16A5               	bsf	37,5
  6986  00EE                     l2252:	
  6987                           ;Display.c: 268: while(WA==0);
  6988                           
  6989  00EE  1E12               	btfss	18,4
  6990  00EF  28EE               	goto	l2252
  6991                           
  6992                           ;Display.c: 269: SEG21COM0=1;
  6993  00F0  16A2               	bsf	34,5
  6994                           
  6995                           ;Display.c: 270: }
  6996  00F1  0008               	return
  6997  00F2                     l32840:	
  6998                           
  6999                           ;Display.c: 271: else if(x==1)
  7000  00F2  0B20               	decfsz	LcdDisplayAll@x,w
  7001  00F3  2918               	goto	l32846
  7002                           
  7003                           ;Display.c: 272: {
  7004                           ;Display.c: 273: DpyNum[0]=0;
  7005  00F4  01EA               	clrf	_DpyNum
  7006                           
  7007                           ;Display.c: 274: DpyNum[1]=0;
  7008  00F5  01EB               	clrf	_DpyNum+1
  7009                           
  7010                           ;Display.c: 275: DpyNum[2]=0;
  7011  00F6  01EC               	clrf	_DpyNum+2
  7012                           
  7013                           ;Display.c: 276: LcdDisplayNum();
  7014  00F7  2140  3180         	fcall	_LcdDisplayNum
  7015  00F9                     l2257:	
  7016                           ;Display.c: 277: while(WA==0);
  7017                           
  7018  00F9  1E12               	btfss	18,4
  7019  00FA  28F9               	goto	l2257
  7020                           
  7021                           ;Display.c: 278: SEG5COM0=0;
  7022  00FB  12A0               	bcf	32,5
  7023  00FC                     l2260:	
  7024                           ;Display.c: 279: while(WA==0);
  7025                           
  7026  00FC  1E12               	btfss	18,4
  7027  00FD  28FC               	goto	l2260
  7028                           
  7029                           ;Display.c: 280: SEG5COM1=0;
  7030  00FE  12A3               	bcf	35,5
  7031  00FF                     l2263:	
  7032                           ;Display.c: 281: while(WA==0);
  7033                           
  7034  00FF  1E12               	btfss	18,4
  7035  0100  28FF               	goto	l2263
  7036                           
  7037                           ;Display.c: 282: SEG5COM2=0;
  7038  0101  12A6               	bcf	38,5
  7039  0102                     l2266:	
  7040                           ;Display.c: 283: while(WA==0);
  7041                           
  7042  0102  1E12               	btfss	18,4
  7043  0103  2902               	goto	l2266
  7044                           
  7045                           ;Display.c: 284: SEG5COM3=0;
  7046  0104  12A9               	bcf	41,5
  7047  0105                     l2269:	
  7048                           ;Display.c: 285: while(WA==0);
  7049                           
  7050  0105  1E12               	btfss	18,4
  7051  0106  2905               	goto	l2269
  7052                           
  7053                           ;Display.c: 286: SEG22COM3=0;
  7054  0107  132B               	bcf	43,6
  7055  0108                     l2272:	
  7056                           ;Display.c: 287: while(WA==0);
  7057                           
  7058  0108  1E12               	btfss	18,4
  7059  0109  2908               	goto	l2272
  7060                           
  7061                           ;Display.c: 288: SEG3COM3=0;
  7062  010A  11A9               	bcf	41,3
  7063  010B                     l2275:	
  7064                           ;Display.c: 289: while(WA==0);
  7065                           
  7066  010B  1E12               	btfss	18,4
  7067  010C  290B               	goto	l2275
  7068                           
  7069                           ;Display.c: 290: SEG21COM3=0;
  7070  010D  12AB               	bcf	43,5
  7071  010E                     l2278:	
  7072                           ;Display.c: 291: while(WA==0);
  7073                           
  7074  010E  1E12               	btfss	18,4
  7075  010F  290E               	goto	l2278
  7076                           
  7077                           ;Display.c: 292: SEG21COM2=0;
  7078  0110  12A8               	bcf	40,5
  7079  0111                     l2281:	
  7080                           ;Display.c: 293: while(WA==0);
  7081                           
  7082  0111  1E12               	btfss	18,4
  7083  0112  2911               	goto	l2281
  7084                           
  7085                           ;Display.c: 294: SEG21COM1=0;
  7086  0113  12A5               	bcf	37,5
  7087  0114                     l2284:	
  7088                           ;Display.c: 295: while(WA==0);
  7089                           
  7090  0114  1E12               	btfss	18,4
  7091  0115  2914               	goto	l2284
  7092  0116                     l2286:	
  7093                           
  7094                           ;Display.c: 296: SEG21COM0=0;
  7095  0116  12A2               	bcf	34,5
  7096                           
  7097                           ;Display.c: 297: }
  7098  0117  0008               	return
  7099  0118                     l32846:	
  7100                           
  7101                           ;Display.c: 298: else if(x==2)
  7102  0118  0820               	movf	LcdDisplayAll@x,w
  7103  0119  3A02               	xorlw	2
  7104  011A  1D03               	skipz
  7105  011B  0008               	return
  7106                           
  7107                           ;Display.c: 299: {
  7108                           ;Display.c: 300: DpyNum[0]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  7109  011C  3077               	movlw	119
  7110  011D  00EA               	movwf	_DpyNum
  7111                           
  7112                           ;Display.c: 301: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  7113  011E  00EB               	movwf	_DpyNum+1
  7114                           
  7115                           ;Display.c: 302: DpyNum[2]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  7116  011F  00EC               	movwf	_DpyNum+2
  7117                           
  7118                           ;Display.c: 303: LcdDisplayNum();
  7119  0120  2140  3180         	fcall	_LcdDisplayNum
  7120  0122                     l2289:	
  7121                           ;Display.c: 304: while(WA==0);
  7122                           
  7123  0122  1E12               	btfss	18,4
  7124  0123  2922               	goto	l2289
  7125                           
  7126                           ;Display.c: 305: SEG5COM0=0;
  7127  0124  12A0               	bcf	32,5
  7128  0125                     l2292:	
  7129                           ;Display.c: 306: while(WA==0);
  7130                           
  7131  0125  1E12               	btfss	18,4
  7132  0126  2925               	goto	l2292
  7133                           
  7134                           ;Display.c: 307: SEG5COM1=0;
  7135  0127  12A3               	bcf	35,5
  7136  0128                     l2295:	
  7137                           ;Display.c: 308: while(WA==0);
  7138                           
  7139  0128  1E12               	btfss	18,4
  7140  0129  2928               	goto	l2295
  7141                           
  7142                           ;Display.c: 309: SEG5COM2=0;
  7143  012A  12A6               	bcf	38,5
  7144  012B                     l2298:	
  7145                           ;Display.c: 310: while(WA==0);
  7146                           
  7147  012B  1E12               	btfss	18,4
  7148  012C  292B               	goto	l2298
  7149                           
  7150                           ;Display.c: 311: SEG5COM3=0;
  7151  012D  12A9               	bcf	41,5
  7152  012E                     l2301:	
  7153                           ;Display.c: 312: while(WA==0);
  7154                           
  7155  012E  1E12               	btfss	18,4
  7156  012F  292E               	goto	l2301
  7157                           
  7158                           ;Display.c: 313: SEG22COM3=0;
  7159  0130  132B               	bcf	43,6
  7160  0131                     l2304:	
  7161                           ;Display.c: 314: while(WA==0);
  7162                           
  7163  0131  1E12               	btfss	18,4
  7164  0132  2931               	goto	l2304
  7165                           
  7166                           ;Display.c: 315: SEG3COM3=0;
  7167  0133  11A9               	bcf	41,3
  7168  0134                     l2307:	
  7169                           ;Display.c: 316: while(WA==0);
  7170                           
  7171  0134  1E12               	btfss	18,4
  7172  0135  2934               	goto	l2307
  7173                           
  7174                           ;Display.c: 317: SEG21COM3=0;
  7175  0136  12AB               	bcf	43,5
  7176  0137                     l2310:	
  7177                           ;Display.c: 318: while(WA==0);
  7178                           
  7179  0137  1E12               	btfss	18,4
  7180  0138  2937               	goto	l2310
  7181                           
  7182                           ;Display.c: 319: SEG21COM2=0;
  7183  0139  12A8               	bcf	40,5
  7184  013A                     l2313:	
  7185                           ;Display.c: 320: while(WA==0);
  7186                           
  7187  013A  1E12               	btfss	18,4
  7188  013B  293A               	goto	l2313
  7189                           
  7190                           ;Display.c: 321: SEG21COM1=0;
  7191  013C  12A5               	bcf	37,5
  7192  013D                     l2316:	
  7193                           ;Display.c: 322: while(WA==0);
  7194                           
  7195  013D  1A12               	btfsc	18,4
  7196  013E  2916               	goto	l2286
  7197  013F  293D               	goto	l2316
  7198  0140                     __end_of_LcdDisplayAll:	
  7199  0140                     __ptext2146:	
  7200 ;; =============== function _DisplayInit ends ============
  7201                           
  7202                           
  7203 ;; *************** function _LcdDisplayNum *****************
  7204 ;; Defined at:
  7205 ;;		line 12 in file "F:\work\WYP\NBIoT\Display.c"
  7206 ;; Parameters:    Size  Location     Type
  7207 ;;		None
  7208 ;; Auto vars:     Size  Location     Type
  7209 ;;		None
  7210 ;; Return value:  Size  Location     Type
  7211 ;;		None               void
  7212 ;; Registers used:
  7213 ;;		None
  7214 ;; Tracked objects:
  7215 ;;		On entry : 10/0
  7216 ;;		On exit  : 1F/F
  7217 ;;		Unchanged: FFFE0/0
  7218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7219 ;;      Params:         0       0       0       0       0       0       0       0
  7220 ;;      Locals:         0       0       0       0       0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0
  7222 ;;      Totals:         0       0       0       0       0       0       0       0
  7223 ;;Total ram usage:        0 bytes
  7224 ;; Hardware stack levels used:    1
  7225 ;; Hardware stack levels required when called:    3
  7226 ;; This function calls:
  7227 ;;		Nothing
  7228 ;; This function is called by:
  7229 ;;		_LcdDisplayAll
  7230 ;;		_LcdDisplay_CSQ
  7231 ;;		_LcdDisplay_CurTemp
  7232 ;;		_LcdDisplay_Err
  7233 ;; This function uses a non-reentrant model
  7234 ;;
  7235  0140                     _LcdDisplayNum:	
  7236  0140                     l32494:	
  7237                           ; Regs used in _LcdDisplayNum: []
  7238                           
  7239                           
  7240                           ;Display.c: 16: if(DpyNum[0]&0x01)
  7241  0140  0020               	movlb	0	; select bank0
  7242  0141  1C6A               	btfss	_DpyNum,0
  7243  0142  2948               	goto	l2050
  7244  0143                     l2046:	
  7245  0143  002F               	movlb	15	; select bank15
  7246  0144  1E12               	btfss	18,4
  7247  0145  2943               	goto	l2046
  7248                           
  7249                           ;Display.c: 19: SEG23COM0 = 1;
  7250  0146  17A2               	bsf	34,7
  7251                           
  7252                           ;Display.c: 20: }
  7253  0147  294C               	goto	l2049
  7254  0148                     l2050:	
  7255  0148  002F               	movlb	15	; select bank15
  7256  0149  1E12               	btfss	18,4
  7257  014A  2948               	goto	l2050
  7258                           
  7259                           ;Display.c: 24: SEG23COM0 = 0;
  7260  014B  13A2               	bcf	34,7
  7261  014C                     l2049:	
  7262                           
  7263                           ;Display.c: 25: }
  7264                           ;Display.c: 26: if(DpyNum[0]&0x02)
  7265  014C  0020               	movlb	0	; select bank0
  7266  014D  1CEA               	btfss	_DpyNum,1
  7267  014E  2954               	goto	l2058
  7268  014F                     l2054:	
  7269  014F  002F               	movlb	15	; select bank15
  7270  0150  1E12               	btfss	18,4
  7271  0151  294F               	goto	l2054
  7272                           
  7273                           ;Display.c: 29: SEG23COM1 = 1;
  7274  0152  17A5               	bsf	37,7
  7275                           
  7276                           ;Display.c: 30: }
  7277  0153  2958               	goto	l2057
  7278  0154                     l2058:	
  7279  0154  002F               	movlb	15	; select bank15
  7280  0155  1E12               	btfss	18,4
  7281  0156  2954               	goto	l2058
  7282                           
  7283                           ;Display.c: 34: SEG23COM1 = 0;
  7284  0157  13A5               	bcf	37,7
  7285  0158                     l2057:	
  7286                           
  7287                           ;Display.c: 35: }
  7288                           ;Display.c: 36: if(DpyNum[0]&0x04)
  7289  0158  0020               	movlb	0	; select bank0
  7290  0159  1D6A               	btfss	_DpyNum,2
  7291  015A  2960               	goto	l2066
  7292  015B                     l2062:	
  7293  015B  002F               	movlb	15	; select bank15
  7294  015C  1E12               	btfss	18,4
  7295  015D  295B               	goto	l2062
  7296                           
  7297                           ;Display.c: 39: SEG23COM2 = 1;
  7298  015E  17A8               	bsf	40,7
  7299                           
  7300                           ;Display.c: 40: }
  7301  015F  2964               	goto	l2065
  7302  0160                     l2066:	
  7303  0160  002F               	movlb	15	; select bank15
  7304  0161  1E12               	btfss	18,4
  7305  0162  2960               	goto	l2066
  7306                           
  7307                           ;Display.c: 44: SEG23COM2 = 0;
  7308  0163  13A8               	bcf	40,7
  7309  0164                     l2065:	
  7310                           
  7311                           ;Display.c: 45: }
  7312                           ;Display.c: 46: if(DpyNum[0]&0x08)
  7313  0164  0020               	movlb	0	; select bank0
  7314  0165  1DEA               	btfss	_DpyNum,3
  7315  0166  296C               	goto	l2074
  7316  0167                     l2070:	
  7317  0167  002F               	movlb	15	; select bank15
  7318  0168  1E12               	btfss	18,4
  7319  0169  2967               	goto	l2070
  7320                           
  7321                           ;Display.c: 49: SEG23COM3 = 1;
  7322  016A  17AB               	bsf	43,7
  7323                           
  7324                           ;Display.c: 50: }
  7325  016B  2970               	goto	l2073
  7326  016C                     l2074:	
  7327  016C  002F               	movlb	15	; select bank15
  7328  016D  1E12               	btfss	18,4
  7329  016E  296C               	goto	l2074
  7330                           
  7331                           ;Display.c: 54: SEG23COM3 = 0;
  7332  016F  13AB               	bcf	43,7
  7333  0170                     l2073:	
  7334                           
  7335                           ;Display.c: 55: }
  7336                           ;Display.c: 56: if(DpyNum[0]&0x10)
  7337  0170  0020               	movlb	0	; select bank0
  7338  0171  1E6A               	btfss	_DpyNum,4
  7339  0172  2978               	goto	l2082
  7340  0173                     l2078:	
  7341  0173  002F               	movlb	15	; select bank15
  7342  0174  1E12               	btfss	18,4
  7343  0175  2973               	goto	l2078
  7344                           
  7345                           ;Display.c: 59: SEG22COM2 = 1;
  7346  0176  1728               	bsf	40,6
  7347                           
  7348                           ;Display.c: 60: }
  7349  0177  297C               	goto	l2081
  7350  0178                     l2082:	
  7351  0178  002F               	movlb	15	; select bank15
  7352  0179  1E12               	btfss	18,4
  7353  017A  2978               	goto	l2082
  7354                           
  7355                           ;Display.c: 64: SEG22COM2 = 0;
  7356  017B  1328               	bcf	40,6
  7357  017C                     l2081:	
  7358                           
  7359                           ;Display.c: 65: }
  7360                           ;Display.c: 66: if(DpyNum[0]&0x20)
  7361  017C  0020               	movlb	0	; select bank0
  7362  017D  1EEA               	btfss	_DpyNum,5
  7363  017E  2984               	goto	l2090
  7364  017F                     l2086:	
  7365  017F  002F               	movlb	15	; select bank15
  7366  0180  1E12               	btfss	18,4
  7367  0181  297F               	goto	l2086
  7368                           
  7369                           ;Display.c: 69: SEG22COM0 = 1;
  7370  0182  1722               	bsf	34,6
  7371                           
  7372                           ;Display.c: 70: }
  7373  0183  2988               	goto	l2089
  7374  0184                     l2090:	
  7375  0184  002F               	movlb	15	; select bank15
  7376  0185  1E12               	btfss	18,4
  7377  0186  2984               	goto	l2090
  7378                           
  7379                           ;Display.c: 74: SEG22COM0 = 0;
  7380  0187  1322               	bcf	34,6
  7381  0188                     l2089:	
  7382                           
  7383                           ;Display.c: 75: }
  7384                           ;Display.c: 76: if(DpyNum[0]&0x40)
  7385  0188  0020               	movlb	0	; select bank0
  7386  0189  1F6A               	btfss	_DpyNum,6
  7387  018A  2990               	goto	l2098
  7388  018B                     l2094:	
  7389  018B  002F               	movlb	15	; select bank15
  7390  018C  1E12               	btfss	18,4
  7391  018D  298B               	goto	l2094
  7392                           
  7393                           ;Display.c: 79: SEG22COM1 = 1;
  7394  018E  1725               	bsf	37,6
  7395                           
  7396                           ;Display.c: 80: }
  7397  018F  2994               	goto	l2097
  7398  0190                     l2098:	
  7399  0190  002F               	movlb	15	; select bank15
  7400  0191  1E12               	btfss	18,4
  7401  0192  2990               	goto	l2098
  7402                           
  7403                           ;Display.c: 84: SEG22COM1 = 0;
  7404  0193  1325               	bcf	37,6
  7405  0194                     l2097:	
  7406                           
  7407                           ;Display.c: 85: }
  7408                           ;Display.c: 87: if(DpyNum[1]&0x01)
  7409  0194  0020               	movlb	0	; select bank0
  7410  0195  1C6B               	btfss	_DpyNum+1,0
  7411  0196  299C               	goto	l2106
  7412  0197                     l2102:	
  7413  0197  002F               	movlb	15	; select bank15
  7414  0198  1E12               	btfss	18,4
  7415  0199  2997               	goto	l2102
  7416                           
  7417                           ;Display.c: 90: SEG6COM0 = 1;
  7418  019A  1720               	bsf	32,6
  7419                           
  7420                           ;Display.c: 91: }
  7421  019B  29A0               	goto	l2105
  7422  019C                     l2106:	
  7423  019C  002F               	movlb	15	; select bank15
  7424  019D  1E12               	btfss	18,4
  7425  019E  299C               	goto	l2106
  7426                           
  7427                           ;Display.c: 95: SEG6COM0 = 0;
  7428  019F  1320               	bcf	32,6
  7429  01A0                     l2105:	
  7430                           
  7431                           ;Display.c: 96: }
  7432                           ;Display.c: 97: if(DpyNum[1]&0x02)
  7433  01A0  0020               	movlb	0	; select bank0
  7434  01A1  1CEB               	btfss	_DpyNum+1,1
  7435  01A2  29A8               	goto	l2114
  7436  01A3                     l2110:	
  7437  01A3  002F               	movlb	15	; select bank15
  7438  01A4  1E12               	btfss	18,4
  7439  01A5  29A3               	goto	l2110
  7440                           
  7441                           ;Display.c: 100: SEG6COM1 = 1;
  7442  01A6  1723               	bsf	35,6
  7443                           
  7444                           ;Display.c: 101: }
  7445  01A7  29AC               	goto	l2113
  7446  01A8                     l2114:	
  7447  01A8  002F               	movlb	15	; select bank15
  7448  01A9  1E12               	btfss	18,4
  7449  01AA  29A8               	goto	l2114
  7450                           
  7451                           ;Display.c: 105: SEG6COM1 = 0;
  7452  01AB  1323               	bcf	35,6
  7453  01AC                     l2113:	
  7454                           
  7455                           ;Display.c: 106: }
  7456                           ;Display.c: 107: if(DpyNum[1]&0x04)
  7457  01AC  0020               	movlb	0	; select bank0
  7458  01AD  1D6B               	btfss	_DpyNum+1,2
  7459  01AE  29B4               	goto	l2122
  7460  01AF                     l2118:	
  7461  01AF  002F               	movlb	15	; select bank15
  7462  01B0  1E12               	btfss	18,4
  7463  01B1  29AF               	goto	l2118
  7464                           
  7465                           ;Display.c: 110: SEG6COM2 = 1;
  7466  01B2  1726               	bsf	38,6
  7467                           
  7468                           ;Display.c: 111: }
  7469  01B3  29B8               	goto	l2121
  7470  01B4                     l2122:	
  7471  01B4  002F               	movlb	15	; select bank15
  7472  01B5  1E12               	btfss	18,4
  7473  01B6  29B4               	goto	l2122
  7474                           
  7475                           ;Display.c: 115: SEG6COM2 = 0;
  7476  01B7  1326               	bcf	38,6
  7477  01B8                     l2121:	
  7478                           
  7479                           ;Display.c: 116: }
  7480                           ;Display.c: 117: if(DpyNum[1]&0x08)
  7481  01B8  0020               	movlb	0	; select bank0
  7482  01B9  1DEB               	btfss	_DpyNum+1,3
  7483  01BA  29C0               	goto	l2130
  7484  01BB                     l2126:	
  7485  01BB  002F               	movlb	15	; select bank15
  7486  01BC  1E12               	btfss	18,4
  7487  01BD  29BB               	goto	l2126
  7488                           
  7489                           ;Display.c: 120: SEG6COM3 = 1;
  7490  01BE  1729               	bsf	41,6
  7491                           
  7492                           ;Display.c: 121: }
  7493  01BF  29C4               	goto	l2129
  7494  01C0                     l2130:	
  7495  01C0  002F               	movlb	15	; select bank15
  7496  01C1  1E12               	btfss	18,4
  7497  01C2  29C0               	goto	l2130
  7498                           
  7499                           ;Display.c: 125: SEG6COM3 = 0;
  7500  01C3  1329               	bcf	41,6
  7501  01C4                     l2129:	
  7502                           
  7503                           ;Display.c: 126: }
  7504                           ;Display.c: 127: if(DpyNum[1]&0x10)
  7505  01C4  0020               	movlb	0	; select bank0
  7506  01C5  1E6B               	btfss	_DpyNum+1,4
  7507  01C6  29CC               	goto	l2138
  7508  01C7                     l2134:	
  7509  01C7  002F               	movlb	15	; select bank15
  7510  01C8  1E12               	btfss	18,4
  7511  01C9  29C7               	goto	l2134
  7512                           
  7513                           ;Display.c: 130: SEG3COM2 = 1;
  7514  01CA  15A6               	bsf	38,3
  7515                           
  7516                           ;Display.c: 131: }
  7517  01CB  29D0               	goto	l2137
  7518  01CC                     l2138:	
  7519  01CC  002F               	movlb	15	; select bank15
  7520  01CD  1E12               	btfss	18,4
  7521  01CE  29CC               	goto	l2138
  7522                           
  7523                           ;Display.c: 135: SEG3COM2 = 0;
  7524  01CF  11A6               	bcf	38,3
  7525  01D0                     l2137:	
  7526                           
  7527                           ;Display.c: 136: }
  7528                           ;Display.c: 137: if(DpyNum[1]&0x20)
  7529  01D0  0020               	movlb	0	; select bank0
  7530  01D1  1EEB               	btfss	_DpyNum+1,5
  7531  01D2  29D8               	goto	l2146
  7532  01D3                     l2142:	
  7533  01D3  002F               	movlb	15	; select bank15
  7534  01D4  1E12               	btfss	18,4
  7535  01D5  29D3               	goto	l2142
  7536                           
  7537                           ;Display.c: 140: SEG3COM0 = 1;
  7538  01D6  15A0               	bsf	32,3
  7539                           
  7540                           ;Display.c: 141: }
  7541  01D7  29DC               	goto	l2145
  7542  01D8                     l2146:	
  7543  01D8  002F               	movlb	15	; select bank15
  7544  01D9  1E12               	btfss	18,4
  7545  01DA  29D8               	goto	l2146
  7546                           
  7547                           ;Display.c: 145: SEG3COM0 = 0;
  7548  01DB  11A0               	bcf	32,3
  7549  01DC                     l2145:	
  7550                           
  7551                           ;Display.c: 146: }
  7552                           ;Display.c: 147: if(DpyNum[1]&0x40)
  7553  01DC  0020               	movlb	0	; select bank0
  7554  01DD  1F6B               	btfss	_DpyNum+1,6
  7555  01DE  29E4               	goto	l2154
  7556  01DF                     l2150:	
  7557  01DF  002F               	movlb	15	; select bank15
  7558  01E0  1E12               	btfss	18,4
  7559  01E1  29DF               	goto	l2150
  7560                           
  7561                           ;Display.c: 150: SEG3COM1 = 1;
  7562  01E2  15A3               	bsf	35,3
  7563                           
  7564                           ;Display.c: 151: }
  7565  01E3  29E8               	goto	l2153
  7566  01E4                     l2154:	
  7567  01E4  002F               	movlb	15	; select bank15
  7568  01E5  1E12               	btfss	18,4
  7569  01E6  29E4               	goto	l2154
  7570                           
  7571                           ;Display.c: 155: SEG3COM1 = 0;
  7572  01E7  11A3               	bcf	35,3
  7573  01E8                     l2153:	
  7574                           
  7575                           ;Display.c: 156: }
  7576                           ;Display.c: 157: if(DpyNum[1]&0x80)
  7577  01E8  0020               	movlb	0	; select bank0
  7578  01E9  1FEB               	btfss	_DpyNum+1,7
  7579  01EA  29F0               	goto	l2162
  7580  01EB                     l2158:	
  7581  01EB  002F               	movlb	15	; select bank15
  7582  01EC  1E12               	btfss	18,4
  7583  01ED  29EB               	goto	l2158
  7584                           
  7585                           ;Display.c: 160: SEG16COM3 = 1;
  7586  01EE  142B               	bsf	43,0
  7587                           
  7588                           ;Display.c: 161: }
  7589  01EF  29F4               	goto	l2161
  7590  01F0                     l2162:	
  7591  01F0  002F               	movlb	15	; select bank15
  7592  01F1  1E12               	btfss	18,4
  7593  01F2  29F0               	goto	l2162
  7594                           
  7595                           ;Display.c: 165: SEG16COM3 = 0;
  7596  01F3  102B               	bcf	43,0
  7597  01F4                     l2161:	
  7598                           
  7599                           ;Display.c: 166: }
  7600                           ;Display.c: 168: if(DpyNum[2]&0x01)
  7601  01F4  0020               	movlb	0	; select bank0
  7602  01F5  1C6C               	btfss	_DpyNum+2,0
  7603  01F6  29FC               	goto	l2170
  7604  01F7                     l2166:	
  7605  01F7  002F               	movlb	15	; select bank15
  7606  01F8  1E12               	btfss	18,4
  7607  01F9  29F7               	goto	l2166
  7608                           
  7609                           ;Display.c: 171: SEG11COM0 = 1;
  7610  01FA  15A1               	bsf	33,3
  7611                           
  7612                           ;Display.c: 172: }
  7613  01FB  2A00               	goto	l2169
  7614  01FC                     l2170:	
  7615  01FC  002F               	movlb	15	; select bank15
  7616  01FD  1E12               	btfss	18,4
  7617  01FE  29FC               	goto	l2170
  7618                           
  7619                           ;Display.c: 176: SEG11COM0 = 0;
  7620  01FF  11A1               	bcf	33,3
  7621  0200                     l2169:	
  7622                           
  7623                           ;Display.c: 177: }
  7624                           ;Display.c: 178: if(DpyNum[2]&0x02)
  7625  0200  0020               	movlb	0	; select bank0
  7626  0201  1CEC               	btfss	_DpyNum+2,1
  7627  0202  2A08               	goto	l2178
  7628  0203                     l2174:	
  7629  0203  002F               	movlb	15	; select bank15
  7630  0204  1E12               	btfss	18,4
  7631  0205  2A03               	goto	l2174
  7632                           
  7633                           ;Display.c: 181: SEG11COM1 = 1;
  7634  0206  15A4               	bsf	36,3
  7635                           
  7636                           ;Display.c: 182: }
  7637  0207  2A0C               	goto	l2177
  7638  0208                     l2178:	
  7639  0208  002F               	movlb	15	; select bank15
  7640  0209  1E12               	btfss	18,4
  7641  020A  2A08               	goto	l2178
  7642                           
  7643                           ;Display.c: 186: SEG11COM1 = 0;
  7644  020B  11A4               	bcf	36,3
  7645  020C                     l2177:	
  7646                           
  7647                           ;Display.c: 187: }
  7648                           ;Display.c: 188: if(DpyNum[2]&0x04)
  7649  020C  0020               	movlb	0	; select bank0
  7650  020D  1D6C               	btfss	_DpyNum+2,2
  7651  020E  2A14               	goto	l2186
  7652  020F                     l2182:	
  7653  020F  002F               	movlb	15	; select bank15
  7654  0210  1E12               	btfss	18,4
  7655  0211  2A0F               	goto	l2182
  7656                           
  7657                           ;Display.c: 191: SEG11COM2 = 1;
  7658  0212  15A7               	bsf	39,3
  7659                           
  7660                           ;Display.c: 192: }
  7661  0213  2A18               	goto	l2185
  7662  0214                     l2186:	
  7663  0214  002F               	movlb	15	; select bank15
  7664  0215  1E12               	btfss	18,4
  7665  0216  2A14               	goto	l2186
  7666                           
  7667                           ;Display.c: 196: SEG11COM2 = 0;
  7668  0217  11A7               	bcf	39,3
  7669  0218                     l2185:	
  7670                           
  7671                           ;Display.c: 197: }
  7672                           ;Display.c: 198: if(DpyNum[2]&0x08)
  7673  0218  0020               	movlb	0	; select bank0
  7674  0219  1DEC               	btfss	_DpyNum+2,3
  7675  021A  2A20               	goto	l2194
  7676  021B                     l2190:	
  7677  021B  002F               	movlb	15	; select bank15
  7678  021C  1E12               	btfss	18,4
  7679  021D  2A1B               	goto	l2190
  7680                           
  7681                           ;Display.c: 201: SEG11COM3 = 1;
  7682  021E  15AA               	bsf	42,3
  7683                           
  7684                           ;Display.c: 202: }
  7685  021F  2A24               	goto	l2193
  7686  0220                     l2194:	
  7687  0220  002F               	movlb	15	; select bank15
  7688  0221  1E12               	btfss	18,4
  7689  0222  2A20               	goto	l2194
  7690                           
  7691                           ;Display.c: 206: SEG11COM3 = 0;
  7692  0223  11AA               	bcf	42,3
  7693  0224                     l2193:	
  7694                           
  7695                           ;Display.c: 207: }
  7696                           ;Display.c: 208: if(DpyNum[2]&0x10)
  7697  0224  0020               	movlb	0	; select bank0
  7698  0225  1E6C               	btfss	_DpyNum+2,4
  7699  0226  2A2C               	goto	l2202
  7700  0227                     l2198:	
  7701  0227  002F               	movlb	15	; select bank15
  7702  0228  1E12               	btfss	18,4
  7703  0229  2A27               	goto	l2198
  7704                           
  7705                           ;Display.c: 211: SEG16COM2 = 1;
  7706  022A  1428               	bsf	40,0
  7707                           
  7708                           ;Display.c: 212: }
  7709  022B  2A30               	goto	l2201
  7710  022C                     l2202:	
  7711  022C  002F               	movlb	15	; select bank15
  7712  022D  1E12               	btfss	18,4
  7713  022E  2A2C               	goto	l2202
  7714                           
  7715                           ;Display.c: 216: SEG16COM2 = 0;
  7716  022F  1028               	bcf	40,0
  7717  0230                     l2201:	
  7718                           
  7719                           ;Display.c: 217: }
  7720                           ;Display.c: 218: if(DpyNum[2]&0x20)
  7721  0230  0020               	movlb	0	; select bank0
  7722  0231  1EEC               	btfss	_DpyNum+2,5
  7723  0232  2A38               	goto	l2210
  7724  0233                     l2206:	
  7725  0233  002F               	movlb	15	; select bank15
  7726  0234  1E12               	btfss	18,4
  7727  0235  2A33               	goto	l2206
  7728                           
  7729                           ;Display.c: 221: SEG16COM0 = 1;
  7730  0236  1422               	bsf	34,0
  7731                           
  7732                           ;Display.c: 222: }
  7733  0237  2A3C               	goto	l2209
  7734  0238                     l2210:	
  7735  0238  002F               	movlb	15	; select bank15
  7736  0239  1E12               	btfss	18,4
  7737  023A  2A38               	goto	l2210
  7738                           
  7739                           ;Display.c: 226: SEG16COM0 = 0;
  7740  023B  1022               	bcf	34,0
  7741  023C                     l2209:	
  7742                           
  7743                           ;Display.c: 227: }
  7744                           ;Display.c: 228: if(DpyNum[2]&0x40)
  7745  023C  0020               	movlb	0	; select bank0
  7746  023D  1F6C               	btfss	_DpyNum+2,6
  7747  023E  2A44               	goto	l2218
  7748  023F                     l2214:	
  7749  023F  002F               	movlb	15	; select bank15
  7750  0240  1E12               	btfss	18,4
  7751  0241  2A3F               	goto	l2214
  7752                           
  7753                           ;Display.c: 231: SEG16COM1 = 1;
  7754  0242  1425               	bsf	37,0
  7755                           
  7756                           ;Display.c: 232: }
  7757  0243  0008               	return
  7758  0244                     l2218:	
  7759  0244  002F               	movlb	15	; select bank15
  7760  0245  1E12               	btfss	18,4
  7761  0246  2A44               	goto	l2218
  7762                           
  7763                           ;Display.c: 236: SEG16COM1 = 0;
  7764  0247  1025               	bcf	37,0
  7765  0248  0008               	return
  7766  0249                     __end_of_LcdDisplayNum:	
  7767  0249                     __ptext2122:	
  7768 ;; =============== function _GetRomData ends ============
  7769                           
  7770                           
  7771 ;; *************** function _LcdDisplay_Err *****************
  7772 ;; Defined at:
  7773 ;;		line 370 in file "F:\work\WYP\NBIoT\Display.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;		None
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;		None
  7778 ;; Return value:  Size  Location     Type
  7779 ;;		None               void
  7780 ;; Registers used:
  7781 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 1D/0
  7784 ;;		On exit  : 1F/F
  7785 ;;		Unchanged: FFFE0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7787 ;;      Params:         0       0       0       0       0       0       0       0
  7788 ;;      Locals:         0       0       0       0       0       0       0       0
  7789 ;;      Temps:          0       0       0       0       0       0       0       0
  7790 ;;      Totals:         0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:        0 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:    4
  7794 ;; This function calls:
  7795 ;;		___lbdiv
  7796 ;;		___lbmod
  7797 ;;		_LcdDisplayNum
  7798 ;; This function is called by:
  7799 ;;		_CallProc
  7800 ;;		_TestProc
  7801 ;;		_CallTestProc
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804  0249                     _LcdDisplay_Err:	
  7805  0249                     l2339:	
  7806                           ;Display.c: 374: while(WA==0);
  7807                           
  7808                           ; Regs used in _LcdDisplay_Err: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7809                           
  7810  0249  002F               	movlb	15	; select bank15
  7811  024A  1E12               	btfss	18,4
  7812  024B  2A49               	goto	l2339
  7813                           
  7814                           ;Display.c: 375: SEG5COM3=0;
  7815  024C  12A9               	bcf	41,5
  7816  024D                     l2342:	
  7817                           ;Display.c: 376: while(WA==0);
  7818                           
  7819  024D  1E12               	btfss	18,4
  7820  024E  2A4D               	goto	l2342
  7821                           
  7822                           ;Display.c: 377: SEG21COM2=1;
  7823  024F  16A8               	bsf	40,5
  7824                           
  7825                           ;Display.c: 378: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  7826  0250  3079               	movlw	121
  7827  0251  0020               	movlb	0	; select bank0
  7828  0252  00EA               	movwf	_DpyNum
  7829                           
  7830                           ;Display.c: 379: DpyNum[1]=SegCode[ErrState/10];
  7831  0253  300A               	movlw	10
  7832  0254  00A0               	movwf	?___lbdiv
  7833  0255  0863               	movf	_ErrState,w
  7834  0256  318C  2426  3180   	fcall	___lbdiv
  7835  0259  234B  3180         	fcall	PL5	;call to abstracted procedure
  7836                           
  7837                           ;Display.c: 380: DpyNum[2]=SegCode[ErrState%10];
  7838  025B  300A               	movlw	10
  7839  025C  00A0               	movwf	?___lbmod
  7840  025D  0863               	movf	_ErrState,w
  7841  025E  2269  3180         	fcall	___lbmod
  7842  0260  3E01               	addlw	low (_SegCode| (0+32768))
  7843  0261  0084               	movwf	4
  7844  0262  3090               	movlw	high (_SegCode| (0+32768))
  7845  0263  1803               	skipnc
  7846  0264  3E01               	addlw	1
  7847  0265  0085               	movwf	5
  7848  0266  0800               	movf	0,w	;code access
  7849  0267  00EC               	movwf	_DpyNum+2
  7850                           
  7851                           ;Display.c: 381: LcdDisplayNum();
  7852  0268  2940               	ljmp	l32494
  7853  0269                     __end_of_LcdDisplay_Err:	
  7854  0269                     __ptext2126:	
  7855 ;; =============== function _LcdDisplayAll ends ============
  7856                           
  7857                           
  7858 ;; *************** function ___lbmod *****************
  7859 ;; Defined at:
  7860 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbmod.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;  dividend        1    wreg     unsigned char 
  7863 ;;  divisor         1    0[BANK0 ] unsigned char 
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  dividend        1    2[BANK0 ] unsigned char 
  7866 ;;  rem             1    4[BANK0 ] unsigned char 
  7867 ;;  counter         1    3[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 1F/0
  7874 ;;		On exit  : 1F/0
  7875 ;;		Unchanged: FFFE0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7877 ;;      Params:         0       1       0       0       0       0       0       0
  7878 ;;      Locals:         0       3       0       0       0       0       0       0
  7879 ;;      Temps:          0       1       0       0       0       0       0       0
  7880 ;;      Totals:         0       5       0       0       0       0       0       0
  7881 ;;Total ram usage:        5 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_LcdDisplay_CSQ
  7888 ;;		_LcdDisplay_CurTemp
  7889 ;;		_LcdDisplay_Err
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892  0269                     ___lbmod:	
  7893                           
  7894                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  7895                           ;___lbmod@dividend stored from wreg
  7896  0269  00A2               	movwf	___lbmod@dividend
  7897  026A  3008               	movlw	8
  7898  026B  00A3               	movwf	___lbmod@counter
  7899  026C  01A4               	clrf	___lbmod@rem
  7900  026D                     l31044:	
  7901  026D  0822               	movf	___lbmod@dividend,w
  7902  026E  00A1               	movwf	??___lbmod
  7903  026F  3007               	movlw	7
  7904  0270                     u4645:	
  7905  0270  36A1               	lsrf	??___lbmod,f
  7906  0271  0B89               	decfsz	9,f
  7907  0272  2A70               	goto	u4645
  7908  0273  3524               	lslf	___lbmod@rem,w
  7909  0274  0421               	iorwf	??___lbmod,w
  7910  0275  00A4               	movwf	___lbmod@rem
  7911  0276  35A2               	lslf	___lbmod@dividend,f
  7912  0277  0820               	movf	___lbmod@divisor,w
  7913  0278  0224               	subwf	___lbmod@rem,w
  7914  0279  1C03               	skipc
  7915  027A  2A7D               	goto	l31052
  7916  027B  0820               	movf	___lbmod@divisor,w
  7917  027C  02A4               	subwf	___lbmod@rem,f
  7918  027D                     l31052:	
  7919  027D  0BA3               	decfsz	___lbmod@counter,f
  7920  027E  2A6D               	goto	l31044
  7921  027F  0824               	movf	___lbmod@rem,w
  7922  0280  0008               	return
  7923  0281                     __end_of___lbmod:	
  7924  0281                     __ptext2084:	
  7925 ;; =============== function _TestProc ends ============
  7926                           
  7927                           
  7928 ;; *************** function _CallTestProc *****************
  7929 ;; Defined at:
  7930 ;;		line 56 in file "F:\work\WYP\NBIoT\TestProc.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;		None
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  retry           1   38[BANK0 ] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;		None               void
  7937 ;; Registers used:
  7938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 1F/0
  7941 ;;		On exit  : 1F/F
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7944 ;;      Params:         0       0       0       0       0       0       0       0
  7945 ;;      Locals:         0       1       0       0       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0       0       0       0
  7947 ;;      Totals:         0       1       0       0       0       0       0       0
  7948 ;;Total ram usage:        1 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    8
  7951 ;; This function calls:
  7952 ;;		_PowerON
  7953 ;;		_CallTestSend
  7954 ;;		_PowerDown
  7955 ;;		_LcdDisplay_CurTemp
  7956 ;;		___delay_20ms
  7957 ;;		_LcdDisplay_Err
  7958 ;; This function is called by:
  7959 ;;		_TestProc
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962  0281                     _CallTestProc:	
  7963  0281                     l10889:	
  7964                           ;TestProc.c: 58: while(WA==0);
  7965                           
  7966                           ; Regs used in _CallTestProc: [wreg-btemp+0+pclath+cstack]
  7967                           
  7968  0281  002F               	movlb	15	; select bank15
  7969  0282  1E12               	btfss	18,4
  7970  0283  2A81               	goto	l10889
  7971                           
  7972                           ;TestProc.c: 59: SEG5COM0=1;
  7973  0284  16A0               	bsf	32,5
  7974  0285                     l10892:	
  7975                           ;TestProc.c: 60: while(WA==0);
  7976                           
  7977  0285  1E12               	btfss	18,4
  7978  0286  2A85               	goto	l10892
  7979                           
  7980                           ;TestProc.c: 61: SEG5COM2=1;
  7981  0287  16A6               	bsf	38,5
  7982  0288                     l10895:	
  7983                           ;TestProc.c: 62: while(WA==0);
  7984                           
  7985  0288  1E12               	btfss	18,4
  7986  0289  2A88               	goto	l10895
  7987                           
  7988                           ;TestProc.c: 63: SEG21COM3=0;
  7989  028A  12AB               	bcf	43,5
  7990  028B                     l10898:	
  7991                           ;TestProc.c: 64: while(WA==0);
  7992                           
  7993  028B  1E12               	btfss	18,4
  7994  028C  2A8B               	goto	l10898
  7995                           
  7996                           ;TestProc.c: 65: SEG21COM2=0;
  7997  028D  12A8               	bcf	40,5
  7998                           
  7999                           ;TestProc.c: 66: if(gFlags.bNotify)
  8000  028E  0020               	movlb	0	; select bank0
  8001  028F  1C66               	btfss	_gFlags,0
  8002  0290  2A98               	goto	l34002
  8003  0291                     l10902:	
  8004  0291  002F               	movlb	15	; select bank15
  8005  0292  1E12               	btfss	18,4
  8006  0293  2A91               	goto	l10902
  8007                           
  8008                           ;TestProc.c: 69: SEG22COM3=1;
  8009  0294  172B               	bsf	43,6
  8010  0295                     l10905:	
  8011                           ;TestProc.c: 70: while(WA==0);
  8012                           
  8013  0295  1E12               	btfss	18,4
  8014  0296  2A95               	goto	l10905
  8015                           
  8016                           ;TestProc.c: 71: SEG3COM3=1;
  8017  0297  15A9               	bsf	41,3
  8018  0298                     l34002:	
  8019                           
  8020                           ;TestProc.c: 72: }
  8021                           ;TestProc.c: 74: unsigned char retry=2;
  8022  0298  3002               	movlw	2
  8023  0299  0020               	movlb	0	; select bank0
  8024  029A  00C6               	movwf	CallTestProc@retry
  8025  029B                     l34028:	
  8026                           ;TestProc.c: 100: }
  8027                           
  8028                           ;TestProc.c: 75: while(retry!=0)
  8029                           
  8030  029B  08C6               	movf	CallTestProc@retry,f
  8031  029C  1903               	btfsc	3,2
  8032  029D  2ABF               	goto	l10917
  8033                           
  8034                           ;TestProc.c: 76: {
  8035                           ;TestProc.c: 77: ErrState=NoErr;
  8036  029E  01E3               	clrf	_ErrState
  8037                           
  8038                           ;TestProc.c: 79: if(PowerON()==0)
  8039  029F  2322  3180         	fcall	_PowerON
  8040  02A1  3800               	iorlw	0
  8041  02A2  1D03               	skipz
  8042  02A3  2AA8               	goto	l34010
  8043                           
  8044                           ;TestProc.c: 80: {
  8045                           ;TestProc.c: 81: ErrState=Miss900a;
  8046  02A4  3002               	movlw	2
  8047  02A5  0020               	movlb	0	; select bank0
  8048  02A6  00E3               	movwf	_ErrState
  8049                           
  8050                           ;TestProc.c: 82: }
  8051  02A7  2AB2               	goto	l34020
  8052  02A8                     l34010:	
  8053                           
  8054                           ;TestProc.c: 83: else
  8055                           ;TestProc.c: 84: {
  8056                           ;TestProc.c: 85: CallTestSend();
  8057  02A8  3189  2177  3180   	fcall	_CallTestSend
  8058                           
  8059                           ;TestProc.c: 86: if(ErrState!=NoErr)
  8060  02AB  0863               	movf	_ErrState,w
  8061  02AC  1D03               	skipz
  8062                           
  8063                           ;TestProc.c: 87: {
  8064                           ;TestProc.c: 88: if(RD4==1)
  8065  02AD  1E0F               	btfss	15,4
  8066  02AE  2AB1               	goto	l34018
  8067                           
  8068                           ;TestProc.c: 89: {
  8069                           ;TestProc.c: 90: ErrState=MissPower;
  8070  02AF  3013               	movlw	19
  8071  02B0  00E3               	movwf	_ErrState
  8072  02B1                     l34018:	
  8073                           
  8074                           ;Function.c: 656: unsigned char i;
  8075                           ;Function.c: 657: return 1;
  8076                           
  8077                           ; Regs used in _PowerDown: [wreg+status,2+status,0+pclath+cstack]
  8078                           
  8079                           ;TestProc.c: 91: }
  8080                           ;TestProc.c: 92: }
  8081                           ;TestProc.c: 93: PowerDown();
  8082  02B1  3001               	movlw	1
  8083  02B2                     l34020:	
  8084                           
  8085                           ;TestProc.c: 94: }
  8086                           ;TestProc.c: 95: if(gFlags.bRetry)
  8087  02B2  1E66               	btfss	_gFlags,4
  8088  02B3  2ABF               	goto	l10917
  8089                           
  8090                           ;TestProc.c: 96: {
  8091                           ;TestProc.c: 97: retry--;
  8092  02B4  03C6               	decf	CallTestProc@retry,f
  8093                           
  8094                           ;TestProc.c: 98: LcdDisplay_CurTemp();
  8095  02B5  22D2               	fcall	_LcdDisplay_CurTemp
  8096                           
  8097                           ;TestProc.c: 99: __delay_20ms(3000);
  8098  02B6  30B8               	movlw	184
  8099  02B7  0020               	movlb	0	; select bank0
  8100  02B8  00A0               	movwf	?___delay_20ms
  8101  02B9  300B               	movlw	11
  8102  02BA  00A1               	movwf	?___delay_20ms+1
  8103  02BB  318B  2336  3180   	fcall	___delay_20ms
  8104  02BE  2A9B               	goto	l34028
  8105  02BF                     l10917:	
  8106  02BF  002F               	movlb	15	; select bank15
  8107  02C0  1E12               	btfss	18,4
  8108  02C1  2ABF               	goto	l10917
  8109                           
  8110                           ;TestProc.c: 107: SEG5COM0=0;
  8111  02C2  12A0               	bcf	32,5
  8112  02C3                     l10920:	
  8113                           ;TestProc.c: 108: while(WA==0);
  8114                           
  8115  02C3  1E12               	btfss	18,4
  8116  02C4  2AC3               	goto	l10920
  8117                           
  8118                           ;TestProc.c: 109: SEG5COM2=0;
  8119  02C5  12A6               	bcf	38,5
  8120  02C6                     l10923:	
  8121                           ;TestProc.c: 110: while(WA==0);
  8122                           
  8123  02C6  1E12               	btfss	18,4
  8124  02C7  2AC6               	goto	l10923
  8125                           
  8126                           ;TestProc.c: 111: SEG22COM3=0;
  8127  02C8  132B               	bcf	43,6
  8128  02C9                     l10926:	
  8129                           ;TestProc.c: 112: while(WA==0);
  8130                           
  8131  02C9  1E12               	btfss	18,4
  8132  02CA  2AC9               	goto	l10926
  8133                           
  8134                           ;TestProc.c: 113: SEG3COM3=0;
  8135  02CB  11A9               	bcf	41,3
  8136                           
  8137                           ;TestProc.c: 114: if(ErrState!=NoErr)
  8138  02CC  0020               	movlb	0	; select bank0
  8139  02CD  0863               	movf	_ErrState,w
  8140  02CE  1903               	btfsc	3,2
  8141  02CF  2AD1               	goto	l34034
  8142                           
  8143                           ;TestProc.c: 115: {
  8144                           ;TestProc.c: 116: LcdDisplay_Err();
  8145  02D0  2A49               	ljmp	l2339
  8146  02D1                     l34034:	
  8147                           ;TestProc.c: 117: }
  8148                           
  8149                           
  8150                           ;TestProc.c: 118: else
  8151                           ;TestProc.c: 119: {
  8152                           ;TestProc.c: 120: LcdDisplay_CurTemp();
  8153  02D1  2AD2               	ljmp	l32860
  8154  02D2                     __end_of_CallTestProc:	
  8155  02D2                     __ptext2123:	
  8156 ;; =============== function _LcdDisplay_Err ends ============
  8157                           
  8158                           
  8159 ;; *************** function _LcdDisplay_CurTemp *****************
  8160 ;; Defined at:
  8161 ;;		line 340 in file "F:\work\WYP\NBIoT\Display.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;		None
  8164 ;; Auto vars:     Size  Location     Type
  8165 ;;  t2              1    8[BANK0 ] unsigned char 
  8166 ;;  t1              1    7[BANK0 ] unsigned char 
  8167 ;; Return value:  Size  Location     Type
  8168 ;;		None               void
  8169 ;; Registers used:
  8170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 1F/0
  8173 ;;		On exit  : 1F/F
  8174 ;;		Unchanged: FFFE0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8176 ;;      Params:         0       0       0       0       0       0       0       0
  8177 ;;      Locals:         0       2       0       0       0       0       0       0
  8178 ;;      Temps:          0       2       0       0       0       0       0       0
  8179 ;;      Totals:         0       4       0       0       0       0       0       0
  8180 ;;Total ram usage:        4 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    4
  8183 ;; This function calls:
  8184 ;;		___lbdiv
  8185 ;;		___lbmod
  8186 ;;		_LcdDisplayNum
  8187 ;; This function is called by:
  8188 ;;		_ReadTData
  8189 ;;		_CallProc
  8190 ;;		_CallTestProc
  8191 ;; This function uses a non-reentrant model
  8192 ;;
  8193  02D2                     _LcdDisplay_CurTemp:	
  8194  02D2                     l32860:	
  8195                           ; Regs used in _LcdDisplay_CurTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8196                           
  8197                           
  8198                           ;Display.c: 341: unsigned char t1,t2;
  8199                           ;Display.c: 345: if(CurTemp.u16==0xf000)
  8200  02D2  0856               	movf	_CurTemp+1,w
  8201  02D3  3AF0               	xorlw	240
  8202  02D4  0455               	iorwf	_CurTemp,w
  8203  02D5  1D03               	skipz
  8204  02D6  2AE5               	goto	l2333
  8205                           
  8206                           ;Display.c: 346: {
  8207                           ;Display.c: 347: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  8208  02D7  3079               	movlw	121
  8209  02D8  00EA               	movwf	_DpyNum
  8210                           
  8211                           ;Display.c: 348: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20;
  8212  02D9  303F               	movlw	63
  8213  02DA  00EB               	movwf	_DpyNum+1
  8214                           
  8215                           ;Display.c: 349: DpyNum[2]=0x02 | 0x04;
  8216  02DB  3006               	movlw	6
  8217  02DC  00EC               	movwf	_DpyNum+2
  8218  02DD                     l2326:	
  8219                           ;Display.c: 350: while(WA==0);
  8220                           
  8221  02DD  002F               	movlb	15	; select bank15
  8222  02DE  1E12               	btfss	18,4
  8223  02DF  2ADD               	goto	l2326
  8224                           
  8225                           ;Display.c: 351: SEG21COM2=1;
  8226  02E0  16A8               	bsf	40,5
  8227  02E1                     l2329:	
  8228                           ;Display.c: 352: while(WA==0);
  8229                           
  8230  02E1  1E12               	btfss	18,4
  8231  02E2  2AE1               	goto	l2329
  8232                           
  8233                           ;Display.c: 353: SEG5COM3=0;
  8234  02E3  12A9               	bcf	41,5
  8235                           
  8236                           ;Display.c: 354: }
  8237  02E4  2B21               	goto	l32880
  8238  02E5                     l2333:	
  8239  02E5  002F               	movlb	15	; select bank15
  8240  02E6  1E12               	btfss	18,4
  8241  02E7  2AE5               	goto	l2333
  8242                           
  8243                           ;Display.c: 358: SEG5COM3=1;
  8244  02E8  16A9               	bsf	41,5
  8245                           
  8246                           ;Display.c: 359: t1=CurTemp.u16>>4;
  8247  02E9  0020               	movlb	0	; select bank0
  8248  02EA  0856               	movf	_CurTemp+1,w
  8249  02EB  00A6               	movwf	??_LcdDisplay_CurTemp+1
  8250  02EC  0855               	movf	_CurTemp,w
  8251  02ED  00A5               	movwf	??_LcdDisplay_CurTemp
  8252  02EE  3004               	movlw	4
  8253  02EF                     u8165:	
  8254  02EF  36A6               	lsrf	??_LcdDisplay_CurTemp+1,f
  8255  02F0  0CA5               	rrf	??_LcdDisplay_CurTemp,f
  8256  02F1  0B89               	decfsz	9,f
  8257  02F2  2AEF               	goto	u8165
  8258  02F3  0825               	movf	??_LcdDisplay_CurTemp,w
  8259  02F4  00A7               	movwf	LcdDisplay_CurTemp@t1
  8260                           
  8261                           ;Display.c: 360: t2=CurTemp.u16&0x0f;
  8262  02F5  0855               	movf	_CurTemp,w
  8263  02F6  00A8               	movwf	LcdDisplay_CurTemp@t2
  8264  02F7  300F               	movlw	15
  8265  02F8  05A8               	andwf	LcdDisplay_CurTemp@t2,f
  8266                           
  8267                           ;Display.c: 361: t2=DS18X20_ToDecicel[t2];
  8268  02F9  0828               	movf	LcdDisplay_CurTemp@t2,w
  8269  02FA  3E12               	addlw	low (_DS18X20_ToDecicel| (0+32768))
  8270  02FB  0084               	movwf	4
  8271  02FC  3090               	movlw	high (_DS18X20_ToDecicel| (0+32768))
  8272  02FD  1803               	skipnc
  8273  02FE  3E01               	addlw	1
  8274  02FF  0085               	movwf	5
  8275  0300  0800               	movf	0,w	;code access
  8276  0301  00A8               	movwf	LcdDisplay_CurTemp@t2
  8277                           
  8278                           ;Display.c: 362: DpyNum[0]=SegCode[t1/10];
  8279  0302  300A               	movlw	10
  8280  0303  00A0               	movwf	?___lbdiv
  8281  0304  0827               	movf	LcdDisplay_CurTemp@t1,w
  8282  0305  318C  2426  3180   	fcall	___lbdiv
  8283  0308  3E01               	addlw	low (_SegCode| (0+32768))
  8284  0309  0084               	movwf	4
  8285  030A  3090               	movlw	high (_SegCode| (0+32768))
  8286  030B  1803               	skipnc
  8287  030C  3E01               	addlw	1
  8288  030D  0085               	movwf	5
  8289  030E  0800               	movf	0,w	;code access
  8290  030F  00EA               	movwf	_DpyNum
  8291                           
  8292                           ;Display.c: 363: DpyNum[1]=SegCode[t1%10];
  8293  0310  300A               	movlw	10
  8294  0311  00A0               	movwf	?___lbmod
  8295  0312  0827               	movf	LcdDisplay_CurTemp@t1,w
  8296  0313  2269  3180         	fcall	___lbmod
  8297  0315  234B  3180         	fcall	PL5	;call to abstracted procedure
  8298                           
  8299                           ;Display.c: 364: DpyNum[1] |= 0x80;
  8300  0317  17EB               	bsf	_DpyNum+1,7
  8301                           
  8302                           ;Display.c: 365: DpyNum[2]=SegCode[t2];
  8303  0318  0828               	movf	LcdDisplay_CurTemp@t2,w
  8304  0319  3E01               	addlw	low (_SegCode| (0+32768))
  8305  031A  0084               	movwf	4
  8306  031B  3090               	movlw	high (_SegCode| (0+32768))
  8307  031C  1803               	skipnc
  8308  031D  3E01               	addlw	1
  8309  031E  0085               	movwf	5
  8310  031F  0800               	movf	0,w	;code access
  8311  0320  00EC               	movwf	_DpyNum+2
  8312  0321                     l32880:	
  8313                           
  8314                           ;Display.c: 366: }
  8315                           ;Display.c: 367: LcdDisplayNum();
  8316  0321  2940               	ljmp	l32494
  8317  0322                     __end_of_LcdDisplay_CurTemp:	
  8318  0322                     __ptext2092:	
  8319 ;; =============== function _InitGPRS ends ============
  8320                           
  8321                           
  8322 ;; *************** function _PowerON *****************
  8323 ;; Defined at:
  8324 ;;		line 677 in file "F:\work\WYP\NBIoT\Function.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;		None
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  i               1   25[BANK0 ] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      unsigned char 
  8331 ;; Registers used:
  8332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 1F/0
  8335 ;;		On exit  : 1D/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8338 ;;      Params:         0       0       0       0       0       0       0       0
  8339 ;;      Locals:         0       1       0       0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0
  8341 ;;      Totals:         0       1       0       0       0       0       0       0
  8342 ;;Total ram usage:        1 bytes
  8343 ;; Hardware stack levels used:    1
  8344 ;; Hardware stack levels required when called:    6
  8345 ;; This function calls:
  8346 ;;		___delay_20ms
  8347 ;;		_PowerDown
  8348 ;;		_ATCommand_SendCmd
  8349 ;; This function is called by:
  8350 ;;		_CallProc
  8351 ;;		_CallTestProc
  8352 ;; This function uses a non-reentrant model
  8353 ;;
  8354  0322                     _PowerON:	
  8355                           
  8356                           ;Function.c: 678: unsigned char i;
  8357                           ;Function.c: 679: LATD5=1;
  8358                           
  8359                           ; Regs used in _PowerON: [wreg-status,0+pclath+cstack]
  8360  0322  0022               	movlb	2	; select bank2
  8361  0323  168F               	bsf	15,5
  8362                           
  8363                           ;Function.c: 680: __delay_20ms(5);
  8364  0324  3005               	movlw	5
  8365  0325  0020               	movlb	0	; select bank0
  8366  0326  00A0               	movwf	?___delay_20ms
  8367  0327  01A1               	clrf	?___delay_20ms+1
  8368  0328  318B  2336  3180   	fcall	___delay_20ms
  8369                           
  8370                           ;Function.c: 681: LATD5=0;
  8371  032B  0022               	movlb	2	; select bank2
  8372  032C  128F               	bcf	15,5
  8373                           
  8374                           ;Function.c: 682: __delay_20ms(500);
  8375  032D  30F4               	movlw	244
  8376  032E  0020               	movlb	0	; select bank0
  8377  032F  00A0               	movwf	?___delay_20ms
  8378  0330  3001               	movlw	1
  8379  0331  00A1               	movwf	?___delay_20ms+1
  8380  0332  318B  2336         	fcall	___delay_20ms
  8381                           
  8382                           ;Function.c: 683: return 1;
  8383  0334  3401               	retlw	1
  8384  0335                     l8801:	
  8385                           
  8386                           ;Function.c: 699: {
  8387                           ;Function.c: 700: ATCommand_RetryTimes=1;
  8388  0335  01E1               	clrf	_ATCommand_RetryTimes
  8389  0336  0AE1               	incf	_ATCommand_RetryTimes,f
  8390                           
  8391                           ;Function.c: 701: if(ATCommand_SendCmd("AT\0")==ATACK_OK)
  8392  0337  300F               	movlw	low (STR_20| (0+32768))
  8393  0338  00B1               	movwf	?_ATCommand_SendCmd
  8394  0339  3091               	movlw	high (STR_20| (0+32768))
  8395  033A  00B2               	movwf	?_ATCommand_SendCmd+1
  8396  033B  318A  22CA  3180   	fcall	_ATCommand_SendCmd
  8397  033E  3A01               	xorlw	1
  8398  033F  1D03               	skipz
  8399  0340  2B46               	goto	l33416
  8400                           
  8401                           ;Function.c: 702: {
  8402                           ;Function.c: 703: ErrState=MissAT;
  8403  0341  3003               	movlw	3
  8404  0342  00E3               	movwf	_ErrState
  8405                           
  8406                           ;Function.c: 704: LATD5=0;
  8407  0343  0022               	movlb	2	; select bank2
  8408  0344  128F               	bcf	15,5
  8409                           
  8410                           ;Function.c: 705: return 1;
  8411  0345  3401               	retlw	1
  8412  0346                     l33416:	
  8413                           
  8414                           ;Function.c: 706: }
  8415                           ;Function.c: 707: i--;
  8416  0346  0BB9               	decfsz	PowerON@i,f
  8417  0347  2B35               	goto	l8801
  8418                           
  8419                           ;Function.c: 708: }
  8420                           ;Function.c: 709: LATD5=0;
  8421  0348  0022               	movlb	2	; select bank2
  8422  0349  128F               	bcf	15,5
  8423                           
  8424                           ;Function.c: 710: return 0;
  8425  034A  3400               	retlw	0
  8426  034B                     __end_of_PowerON:	
  8427  034B                     PL5:	
  8428  034B  3E01               	addlw	low (_SegCode| (0+32768))
  8429  034C  0084               	movwf	4
  8430  034D  3090               	movlw	high (_SegCode| (0+32768))
  8431  034E  1803               	skipnc
  8432  034F  3E01               	addlw	1
  8433  0350  0085               	movwf	5
  8434  0351  0800               	movf	0,w	;code access
  8435  0352  00EB               	movwf	_DpyNum+1
  8436  0353  0008               	return
  8437                           
  8438                           	psect	text2094
  8439  0354                     __ptext2094:	
  8440 ;; =============== function _DS18X20_ReadMeas ends ============
  8441                           
  8442                           
  8443 ;; *************** function _DS18X20_StartMeas *****************
  8444 ;; Defined at:
  8445 ;;		line 133 in file "F:\work\WYP\NBIoT\DS18x20.c"
  8446 ;; Parameters:    Size  Location     Type
  8447 ;;		None
  8448 ;; Auto vars:     Size  Location     Type
  8449 ;;		None
  8450 ;; Return value:  Size  Location     Type
  8451 ;;                  1    wreg      unsigned char 
  8452 ;; Registers used:
  8453 ;;		wreg, status,2, status,0, pclath, cstack
  8454 ;; Tracked objects:
  8455 ;;		On entry : 10/0
  8456 ;;		On exit  : 1F/0
  8457 ;;		Unchanged: 0/0
  8458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8459 ;;      Params:         0       0       0       0       0       0       0       0
  8460 ;;      Locals:         0       0       0       0       0       0       0       0
  8461 ;;      Temps:          0       0       0       0       0       0       0       0
  8462 ;;      Totals:         0       0       0       0       0       0       0       0
  8463 ;;Total ram usage:        0 bytes
  8464 ;; Hardware stack levels used:    1
  8465 ;; Hardware stack levels required when called:    5
  8466 ;; This function calls:
  8467 ;;		_OneWire_Reset
  8468 ;;		_OneWire_Command
  8469 ;; This function is called by:
  8470 ;;		_ReadTData
  8471 ;; This function uses a non-reentrant model
  8472 ;;
  8473  0354                     _DS18X20_StartMeas:	
  8474                           
  8475                           ;DS18x20.c: 134: if(OneWire_Reset())
  8476                           
  8477                           ; Regs used in _DS18X20_StartMeas: [wreg+status,2+status,0+pclath+cstack]
  8478  0354  24D9  3183         	fcall	_OneWire_Reset
  8479  0356  3A00               	xorlw	0
  8480  0357  1D03               	btfss	3,2
  8481                           
  8482                           ;DS18x20.c: 135: return 0x01;
  8483  0358  3401               	retlw	1
  8484                           
  8485                           ;DS18x20.c: 136: return OneWire_Command( 0x44);
  8486  0359  3044               	movlw	68
  8487  035A  2BE2               	ljmp	_OneWire_Command
  8488  035B                     __end_of_DS18X20_StartMeas:	
  8489  035B                     __ptext2093:	
  8490 ;; =============== function _PowerON ends ============
  8491                           
  8492                           
  8493 ;; *************** function _DS18X20_ReadMeas *****************
  8494 ;; Defined at:
  8495 ;;		line 144 in file "F:\work\WYP\NBIoT\DS18x20.c"
  8496 ;; Parameters:    Size  Location     Type
  8497 ;;  bVerify         1    wreg     unsigned char 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  bVerify         1   10[BANK0 ] unsigned char 
  8500 ;;  i               1   11[BANK0 ] unsigned char 
  8501 ;; Return value:  Size  Location     Type
  8502 ;;                  1    wreg      unsigned char 
  8503 ;; Registers used:
  8504 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8505 ;; Tracked objects:
  8506 ;;		On entry : 1F/0
  8507 ;;		On exit  : 1E/0
  8508 ;;		Unchanged: 0/0
  8509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8510 ;;      Params:         0       0       0       0       0       0       0       0
  8511 ;;      Locals:         0       2       0       0       0       0       0       0
  8512 ;;      Temps:          0       0       0       0       0       0       0       0
  8513 ;;      Totals:         0       2       0       0       0       0       0       0
  8514 ;;Total ram usage:        2 bytes
  8515 ;; Hardware stack levels used:    1
  8516 ;; Hardware stack levels required when called:    5
  8517 ;; This function calls:
  8518 ;;		_OneWire_Reset
  8519 ;;		_OneWire_Command
  8520 ;;		_OneWire_ReadByte
  8521 ;;		_GetVerify_CRC8
  8522 ;; This function is called by:
  8523 ;;		_ReadTData
  8524 ;; This function uses a non-reentrant model
  8525 ;;
  8526  035B                     _DS18X20_ReadMeas:	
  8527                           
  8528                           ; Regs used in _DS18X20_ReadMeas: [wreg+fsr1l-status,0+pclath+cstack]
  8529                           ;DS18X20_ReadMeas@bVerify stored from wreg
  8530  035B  00AA               	movwf	DS18X20_ReadMeas@bVerify
  8531                           
  8532                           ;DS18x20.c: 145: unsigned char i;
  8533                           ;DS18x20.c: 146: if(OneWire_Reset())
  8534  035C  24D9  3183         	fcall	_OneWire_Reset
  8535  035E  3A00               	xorlw	0
  8536  035F  1D03               	btfss	3,2
  8537                           
  8538                           ;DS18x20.c: 147: return 0x01;
  8539  0360  3401               	retlw	1
  8540                           
  8541                           ;DS18x20.c: 148: if(OneWire_Command(0xBE))
  8542  0361  30BE               	movlw	190
  8543  0362  23E2  3183         	fcall	_OneWire_Command
  8544  0364  3A00               	xorlw	0
  8545  0365  1D03               	btfss	3,2
  8546  0366  3401               	retlw	1
  8547                           
  8548                           ;DS18x20.c: 150: if(bVerify)
  8549  0367  082A               	movf	DS18X20_ReadMeas@bVerify,w
  8550  0368  1903               	btfsc	3,2
  8551  0369  2B82               	goto	l33378
  8552                           
  8553                           ;DS18x20.c: 151: {
  8554                           ;DS18x20.c: 152: for ( i=0 ; i< 9; i++ )
  8555  036A  01AB               	clrf	DS18X20_ReadMeas@i
  8556  036B                     l33360:	
  8557                           
  8558                           ;DS18x20.c: 153: DS18X20_Scratchpad[i]=OneWire_ReadByte();
  8559  036B  082B               	movf	DS18X20_ReadMeas@i,w
  8560  036C  3ED3               	addlw	_DS18X20_Scratchpad& (0+255)
  8561  036D  0086               	movwf	6
  8562  036E  0187               	clrf	7
  8563  036F  238A  3183         	fcall	_OneWire_ReadByte
  8564  0371  0081               	movwf	1
  8565  0372  0AAB               	incf	DS18X20_ReadMeas@i,f
  8566  0373  3009               	movlw	9
  8567  0374  022B               	subwf	DS18X20_ReadMeas@i,w
  8568  0375  1C03               	skipc
  8569  0376  2B6B               	goto	l33360
  8570                           
  8571                           ;DS18x20.c: 154: if ( GetVerify_CRC8( DS18X20_Scratchpad, 9-1 )!=DS18X20_Scratchpad[9-1]
      +                           )
  8572  0377  3008               	movlw	8
  8573  0378  00A0               	movwf	?_GetVerify_CRC8
  8574  0379  01A1               	clrf	?_GetVerify_CRC8+1
  8575  037A  30D3               	movlw	_DS18X20_Scratchpad& (0+255)
  8576  037B  23B6  3183         	fcall	_GetVerify_CRC8
  8577  037D  0021               	movlb	1	; select bank1
  8578  037E  065B               	xorwf	(_DS18X20_Scratchpad^(0+128)+8),w
  8579  037F  1D03               	btfss	3,2
  8580                           
  8581                           ;DS18x20.c: 155: return 0x03;
  8582  0380  3403               	retlw	3
  8583                           
  8584                           ;DS18x20.c: 156: return 0x00;
  8585  0381  3400               	retlw	0
  8586  0382                     l33378:	
  8587                           
  8588                           ;DS18x20.c: 158: else
  8589                           ;DS18x20.c: 159: {
  8590                           ;DS18x20.c: 160: DS18X20_Scratchpad[0]=OneWire_ReadByte();
  8591  0382  238A  3183         	fcall	_OneWire_ReadByte
  8592  0384  0021               	movlb	1	; select bank1
  8593  0385  00D3               	movwf	_DS18X20_Scratchpad^(0+128)
  8594                           
  8595                           ;DS18x20.c: 161: DS18X20_Scratchpad[1]=OneWire_ReadByte();
  8596  0386  238A               	fcall	_OneWire_ReadByte
  8597  0387  0021               	movlb	1	; select bank1
  8598  0388  00D4               	movwf	(_DS18X20_Scratchpad^(0+128)+1)
  8599  0389  3400               	retlw	0
  8600  038A                     __end_of_DS18X20_ReadMeas:	
  8601  038A                     __ptext2111:	
  8602 ;; =============== function _OneWire_WriteByte ends ============
  8603                           
  8604                           
  8605 ;; *************** function _OneWire_ReadByte *****************
  8606 ;; Defined at:
  8607 ;;		line 190 in file "F:\work\WYP\NBIoT\OneWire.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  i               1    3[BANK0 ] unsigned char 
  8612 ;;  value           1    2[BANK0 ] unsigned char 
  8613 ;;  b               1    1[BANK0 ] unsigned char 
  8614 ;; Return value:  Size  Location     Type
  8615 ;;                  1    wreg      unsigned char 
  8616 ;; Registers used:
  8617 ;;		wreg, status,2, status,0
  8618 ;; Tracked objects:
  8619 ;;		On entry : 1E/0
  8620 ;;		On exit  : 1F/0
  8621 ;;		Unchanged: 0/0
  8622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8623 ;;      Params:         0       0       0       0       0       0       0       0
  8624 ;;      Locals:         0       3       0       0       0       0       0       0
  8625 ;;      Temps:          0       1       0       0       0       0       0       0
  8626 ;;      Totals:         0       4       0       0       0       0       0       0
  8627 ;;Total ram usage:        4 bytes
  8628 ;; Hardware stack levels used:    1
  8629 ;; Hardware stack levels required when called:    3
  8630 ;; This function calls:
  8631 ;;		Nothing
  8632 ;; This function is called by:
  8633 ;;		_DS18X20_ReadMeas
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636  038A                     _OneWire_ReadByte:	
  8637                           
  8638                           ;OneWire.c: 191: unsigned char i;
  8639                           ;OneWire.c: 192: unsigned char b;
  8640                           ;OneWire.c: 193: unsigned char value=0;
  8641                           
  8642                           ; Regs used in _OneWire_ReadByte: [wreg+status,2+status,0]
  8643  038A  0020               	movlb	0	; select bank0
  8644  038B  01A2               	clrf	OneWire_ReadByte@value
  8645                           
  8646                           ;OneWire.c: 194: for(i=0;i<8;i++)
  8647  038C  01A3               	clrf	OneWire_ReadByte@i
  8648  038D                     l19284:	
  8649                           
  8650                           ;OneWire.c: 195: {
  8651                           ;OneWire.c: 196: (GIE = 0);
  8652  038D  138B               	bcf	11,7
  8653                           
  8654                           ;OneWire.c: 197: TRISB1 = 0;LATB1=0;
  8655  038E  0021               	movlb	1	; select bank1
  8656  038F  108D               	bcf	13,1
  8657  0390  0022               	movlb	2	; select bank2
  8658  0391  108D               	bcf	13,1
  8659                           
  8660                           ;OneWire.c: 198: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8661  0392  2B93               	nop2	;2 cycle nop
  8662                           
  8663                           ;OneWire.c: 200: TRISB1=1;
  8664  0393  0021               	movlb	1	; select bank1
  8665  0394  148D               	bsf	13,1
  8666                           
  8667                           ;OneWire.c: 201: _delay((unsigned long)((15-3-9)*(4000000/4000000.0)));
  8668  0395  2B96               	nop2	;2 cycle nop
  8669  0396  0064               	clrwdt
  8670                           
  8671                           ;OneWire.c: 202: b=RB1;
  8672  0397  3000               	movlw	0
  8673  0398  0020               	movlb	0	; select bank0
  8674  0399  188D               	btfsc	13,1
  8675  039A  3001               	movlw	1
  8676  039B  00A1               	movwf	OneWire_ReadByte@b
  8677                           
  8678                           ;OneWire.c: 203: (GIE = 1);
  8679  039C  178B               	bsf	11,7
  8680                           
  8681                           ;OneWire.c: 204: _delay((unsigned long)((60)*(4000000/4000000.0)));
  8682  039D  3013               	movlw	19
  8683  039E  00A0               	movwf	??_OneWire_ReadByte
  8684  039F                     u9927:	
  8685  039F  0BA0               	decfsz	??_OneWire_ReadByte,f
  8686  03A0  2B9F               	goto	u9927
  8687  03A1  2BA2               	nop2	;nop
  8688                           
  8689                           ;OneWire.c: 206: if(b)
  8690  03A2  0020               	movlb	0	; select bank0
  8691  03A3  0821               	movf	OneWire_ReadByte@b,w
  8692  03A4  1903               	btfsc	3,2
  8693  03A5  2BAF               	goto	l31294
  8694                           
  8695                           ;OneWire.c: 207: {
  8696                           ;OneWire.c: 208: value|=(0x01<<i);
  8697  03A6  3001               	movlw	1
  8698  03A7  00A0               	movwf	??_OneWire_ReadByte
  8699  03A8  0A23               	incf	OneWire_ReadByte@i,w
  8700  03A9  2BAB               	goto	u5274
  8701  03AA                     u5275:	
  8702  03AA  35A0               	lslf	??_OneWire_ReadByte,f
  8703  03AB                     u5274:	
  8704  03AB  0B89               	decfsz	9,f
  8705  03AC  2BAA               	goto	u5275
  8706  03AD  0820               	movf	??_OneWire_ReadByte,w
  8707  03AE  04A2               	iorwf	OneWire_ReadByte@value,f
  8708  03AF                     l31294:	
  8709  03AF  0AA3               	incf	OneWire_ReadByte@i,f
  8710  03B0  3008               	movlw	8
  8711  03B1  0223               	subwf	OneWire_ReadByte@i,w
  8712  03B2  1C03               	skipc
  8713  03B3  2B8D               	goto	l19284
  8714                           
  8715                           ;OneWire.c: 210: }
  8716                           ;OneWire.c: 211: }
  8717                           ;OneWire.c: 212: return(value);
  8718  03B4  0822               	movf	OneWire_ReadByte@value,w
  8719  03B5  0008               	return
  8720  03B6                     __end_of_OneWire_ReadByte:	
  8721  03B6                     __ptext2138:	
  8722 ;; =============== function _SimI2C_Init ends ============
  8723                           
  8724                           
  8725 ;; *************** function _GetVerify_CRC8 *****************
  8726 ;; Defined at:
  8727 ;;		line 90 in file "F:\work\WYP\NBIoT\Verify.c"
  8728 ;; Parameters:    Size  Location     Type
  8729 ;;  pBuff           1    wreg     PTR unsigned char 
  8730 ;;		 -> DS18X20_Scratchpad(9), 
  8731 ;;  Count           2    0[BANK0 ] unsigned int 
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;  pBuff           1    3[BANK0 ] PTR unsigned char 
  8734 ;;		 -> DS18X20_Scratchpad(9), 
  8735 ;;  i               2    6[BANK0 ] unsigned int 
  8736 ;;  crc             1    9[BANK0 ] unsigned char 
  8737 ;;  feedback_bit    1    8[BANK0 ] unsigned char 
  8738 ;;  data            1    5[BANK0 ] unsigned char 
  8739 ;;  bit_counter     1    4[BANK0 ] unsigned char 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      unsigned char 
  8742 ;; Registers used:
  8743 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 1F/0
  8746 ;;		On exit  : 1F/0
  8747 ;;		Unchanged: FFFE0/0
  8748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8749 ;;      Params:         0       2       0       0       0       0       0       0
  8750 ;;      Locals:         0       7       0       0       0       0       0       0
  8751 ;;      Temps:          0       1       0       0       0       0       0       0
  8752 ;;      Totals:         0      10       0       0       0       0       0       0
  8753 ;;Total ram usage:       10 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:    3
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_DS18X20_ReadMeas
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762  03B6                     _GetVerify_CRC8:	
  8763                           
  8764                           ; Regs used in _GetVerify_CRC8: [wreg+fsr1l-status,0]
  8765                           ;GetVerify_CRC8@pBuff stored from wreg
  8766  03B6  00A3               	movwf	GetVerify_CRC8@pBuff
  8767                           
  8768                           ;Verify.c: 91: unsigned char crc;
  8769                           ;Verify.c: 92: unsigned int i;
  8770                           ;Verify.c: 93: unsigned char bit_counter;
  8771                           ;Verify.c: 94: unsigned char data;
  8772                           ;Verify.c: 95: unsigned char feedback_bit;
  8773                           ;Verify.c: 97: crc = 0x00;
  8774  03B7  01A9               	clrf	GetVerify_CRC8@crc
  8775                           
  8776                           ;Verify.c: 99: for(i = 0; i != Count; i++)
  8777  03B8  01A6               	clrf	GetVerify_CRC8@i
  8778  03B9  01A7               	clrf	GetVerify_CRC8@i+1
  8779  03BA                     l30878:	
  8780  03BA  0821               	movf	GetVerify_CRC8@Count+1,w
  8781  03BB  0627               	xorwf	GetVerify_CRC8@i+1,w
  8782  03BC  1D03               	skipz
  8783  03BD  2BC0               	goto	u4385
  8784  03BE  0820               	movf	GetVerify_CRC8@Count,w
  8785  03BF  0626               	xorwf	GetVerify_CRC8@i,w
  8786  03C0                     u4385:	
  8787  03C0  1903               	btfsc	3,2
  8788  03C1  2BE0               	goto	l30880
  8789                           
  8790                           ;Verify.c: 100: {
  8791                           ;Verify.c: 101: data = pBuff[i];
  8792  03C2  0826               	movf	GetVerify_CRC8@i,w
  8793  03C3  0723               	addwf	GetVerify_CRC8@pBuff,w
  8794  03C4  00A2               	movwf	??_GetVerify_CRC8
  8795  03C5  0086               	movwf	6
  8796  03C6  0187               	clrf	7
  8797  03C7  0801               	movf	1,w
  8798  03C8  00A5               	movwf	GetVerify_CRC8@data
  8799                           
  8800                           ;Verify.c: 102: bit_counter = 8;
  8801  03C9  3008               	movlw	8
  8802  03CA  00A4               	movwf	GetVerify_CRC8@bit_counter
  8803  03CB                     l30858:	
  8804                           
  8805                           ;Verify.c: 104: {
  8806                           ;Verify.c: 105: feedback_bit = (crc ^ data) & 0x01;
  8807  03CB  0829               	movf	GetVerify_CRC8@crc,w
  8808  03CC  0625               	xorwf	GetVerify_CRC8@data,w
  8809  03CD  00A8               	movwf	GetVerify_CRC8@feedback_bit
  8810  03CE  3001               	movlw	1
  8811  03CF  05A8               	andwf	GetVerify_CRC8@feedback_bit,f
  8812                           
  8813                           ;Verify.c: 106: if ( feedback_bit == 0x01 )
  8814  03D0  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8815  03D1  2BD4               	goto	l30866
  8816                           
  8817                           ;Verify.c: 107: crc = crc ^ 0x18;
  8818  03D2  3018               	movlw	24
  8819  03D3  06A9               	xorwf	GetVerify_CRC8@crc,f
  8820  03D4                     l30866:	
  8821                           
  8822                           ;Verify.c: 108: crc = (crc >> 1) & 0x7F;
  8823  03D4  36A9               	lsrf	GetVerify_CRC8@crc,f
  8824  03D5  13A9               	bcf	GetVerify_CRC8@crc,7
  8825                           
  8826                           ;Verify.c: 109: if ( feedback_bit == 0x01 )
  8827  03D6  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8828  03D7  2BD9               	goto	l25501
  8829                           
  8830                           ;Verify.c: 110: crc = crc | 0x80;
  8831  03D8  17A9               	bsf	GetVerify_CRC8@crc,7
  8832  03D9                     l25501:	
  8833                           
  8834                           ;Verify.c: 111: data = data >> 1;
  8835  03D9  36A5               	lsrf	GetVerify_CRC8@data,f
  8836                           
  8837                           ;Verify.c: 112: bit_counter--;
  8838  03DA  0BA4               	decfsz	GetVerify_CRC8@bit_counter,f
  8839                           
  8840                           ;Verify.c: 113: }while (bit_counter > 0);
  8841  03DB  2BCB               	goto	l30858
  8842  03DC  0AA6               	incf	GetVerify_CRC8@i,f
  8843  03DD  1903               	skipnz
  8844  03DE  0AA7               	incf	GetVerify_CRC8@i+1,f
  8845  03DF  2BBA               	goto	l30878
  8846  03E0                     l30880:	
  8847                           
  8848                           ;Verify.c: 114: }
  8849                           ;Verify.c: 115: return crc;
  8850  03E0  0829               	movf	GetVerify_CRC8@crc,w
  8851  03E1  0008               	return
  8852  03E2                     __end_of_GetVerify_CRC8:	
  8853  03E2                     __ptext2095:	
  8854 ;; =============== function _DS18X20_StartMeas ends ============
  8855                           
  8856                           
  8857 ;; *************** function _OneWire_Command *****************
  8858 ;; Defined at:
  8859 ;;		line 126 in file "F:\work\WYP\NBIoT\OneWire.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;  command         1    wreg     unsigned char 
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;  command         1    4[BANK0 ] unsigned char 
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      unsigned char 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0, pclath, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 1F/0
  8870 ;;		On exit  : 1F/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8873 ;;      Params:         0       0       0       0       0       0       0       0
  8874 ;;      Locals:         0       1       0       0       0       0       0       0
  8875 ;;      Temps:          0       0       0       0       0       0       0       0
  8876 ;;      Totals:         0       1       0       0       0       0       0       0
  8877 ;;Total ram usage:        1 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    4
  8880 ;; This function calls:
  8881 ;;		_OneWire_Reset
  8882 ;;		_OneWire_WriteByte
  8883 ;; This function is called by:
  8884 ;;		_DS18X20_StartMeas
  8885 ;;		_DS18X20_ReadMeas
  8886 ;; This function uses a non-reentrant model
  8887 ;;
  8888  03E2                     _OneWire_Command:	
  8889                           
  8890                           ; Regs used in _OneWire_Command: [wreg+status,2+status,0+pclath+cstack]
  8891                           ;OneWire_Command@command stored from wreg
  8892  03E2  00A4               	movwf	OneWire_Command@command
  8893                           
  8894                           ;OneWire.c: 127: if(OneWire_Reset())
  8895  03E3  24D9  3183         	fcall	_OneWire_Reset
  8896  03E5  3A00               	xorlw	0
  8897  03E6  1D03               	btfss	3,2
  8898                           
  8899                           ;OneWire.c: 128: return 0x01;
  8900  03E7  3401               	retlw	1
  8901                           
  8902                           ;OneWire.c: 129: OneWire_WriteByte( 0xCC );
  8903  03E8  30CC               	movlw	204
  8904  03E9  23EE  3183         	fcall	_OneWire_WriteByte
  8905                           
  8906                           ;OneWire.c: 130: OneWire_WriteByte( command );
  8907  03EB  0824               	movf	OneWire_Command@command,w
  8908  03EC  23EE               	fcall	_OneWire_WriteByte
  8909                           
  8910                           ;OneWire.c: 131: return 0x00;
  8911  03ED  3400               	retlw	0
  8912  03EE                     __end_of_OneWire_Command:	
  8913  03EE                     __ptext2110:	
  8914 ;; =============== function _SimI2C_Start ends ============
  8915                           
  8916                           
  8917 ;; *************** function _OneWire_WriteByte *****************
  8918 ;; Defined at:
  8919 ;;		line 167 in file "F:\work\WYP\NBIoT\OneWire.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  val             1    wreg     unsigned char 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  val             1    1[BANK0 ] unsigned char 
  8924 ;;  i               1    3[BANK0 ] unsigned char 
  8925 ;;  temp            1    2[BANK0 ] unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;		None               void
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0
  8930 ;; Tracked objects:
  8931 ;;		On entry : 1F/0
  8932 ;;		On exit  : 1F/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8935 ;;      Params:         0       0       0       0       0       0       0       0
  8936 ;;      Locals:         0       3       0       0       0       0       0       0
  8937 ;;      Temps:          0       1       0       0       0       0       0       0
  8938 ;;      Totals:         0       4       0       0       0       0       0       0
  8939 ;;Total ram usage:        4 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    3
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_OneWire_Command
  8946 ;; This function uses a non-reentrant model
  8947 ;;
  8948  03EE                     _OneWire_WriteByte:	
  8949                           
  8950                           ; Regs used in _OneWire_WriteByte: [wreg+status,2+status,0]
  8951                           ;OneWire_WriteByte@val stored from wreg
  8952  03EE  00A1               	movwf	OneWire_WriteByte@val
  8953                           
  8954                           ;OneWire.c: 168: unsigned char i;
  8955                           ;OneWire.c: 169: unsigned char temp;
  8956                           ;OneWire.c: 170: for (i=0;i<8;i++)
  8957  03EF  01A3               	clrf	OneWire_WriteByte@i
  8958  03F0                     l31306:	
  8959                           
  8960                           ;OneWire.c: 171: {
  8961                           ;OneWire.c: 172: temp=val>>i;
  8962  03F0  0821               	movf	OneWire_WriteByte@val,w
  8963  03F1  00A0               	movwf	??_OneWire_WriteByte
  8964  03F2  0A23               	incf	OneWire_WriteByte@i,w
  8965  03F3  2BF5               	goto	u5294
  8966  03F4                     u5295:	
  8967  03F4  36A0               	lsrf	??_OneWire_WriteByte,f
  8968  03F5                     u5294:	
  8969  03F5  0B89               	decfsz	9,f
  8970  03F6  2BF4               	goto	u5295
  8971  03F7  0820               	movf	??_OneWire_WriteByte,w
  8972  03F8  00A2               	movwf	OneWire_WriteByte@temp
  8973                           
  8974                           ;OneWire.c: 173: temp&=0x01;
  8975  03F9  3001               	movlw	1
  8976  03FA  05A2               	andwf	OneWire_WriteByte@temp,f
  8977                           
  8978                           ;OneWire.c: 174: (GIE = 0);
  8979  03FB  138B               	bcf	11,7
  8980                           
  8981                           ;OneWire.c: 175: TRISB1 = 0;LATB1=0;
  8982  03FC  0021               	movlb	1	; select bank1
  8983  03FD  108D               	bcf	13,1
  8984  03FE  0022               	movlb	2	; select bank2
  8985  03FF  108D               	bcf	13,1
  8986                           
  8987                           ;OneWire.c: 176: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8988  0400  2C01               	nop2	;2 cycle nop
  8989                           
  8990                           ;OneWire.c: 177: if (temp==1)
  8991  0401  0020               	movlb	0	; select bank0
  8992  0402  0322               	decf	OneWire_WriteByte@temp,w
  8993  0403  1D03               	skipz
  8994  0404  2C07               	goto	l31320
  8995                           
  8996                           ;OneWire.c: 178: {
  8997                           ;OneWire.c: 179: TRISB1=1;
  8998  0405  0021               	movlb	1	; select bank1
  8999  0406  148D               	bsf	13,1
  9000  0407                     l31320:	
  9001                           
  9002                           ;OneWire.c: 180: }
  9003                           ;OneWire.c: 181: _delay((unsigned long)((75)*(4000000/4000000.0)));
  9004  0407  3018               	movlw	24
  9005  0408  0020               	movlb	0	; select bank0
  9006  0409  00A0               	movwf	??_OneWire_WriteByte
  9007  040A                     u9917:	
  9008  040A  0BA0               	decfsz	??_OneWire_WriteByte,f
  9009  040B  2C0A               	goto	u9917
  9010  040C  2C0D               	nop2	;nop
  9011                           
  9012                           ;OneWire.c: 182: TRISB1=1;
  9013  040D  0021               	movlb	1	; select bank1
  9014  040E  148D               	bsf	13,1
  9015                           
  9016                           ;OneWire.c: 183: (GIE = 1);
  9017  040F  178B               	bsf	11,7
  9018  0410  0020               	movlb	0	; select bank0
  9019  0411  0AA3               	incf	OneWire_WriteByte@i,f
  9020  0412  3008               	movlw	8
  9021  0413  0223               	subwf	OneWire_WriteByte@i,w
  9022  0414  1803               	btfsc	3,0
  9023  0415  0008               	return
  9024  0416  2BF0               	goto	l31306
  9025  0417                     __end_of_OneWire_WriteByte:	
  9026  0417                     __ptext2086:	
  9027 ;; =============== function _CallProc ends ============
  9028                           
  9029                           
  9030 ;; *************** function _InitSystem *****************
  9031 ;; Defined at:
  9032 ;;		line 88 in file "F:\work\WYP\NBIoT\Init.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;		None
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  x               1   13[BANK0 ] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;		None               void
  9039 ;; Registers used:
  9040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9041 ;; Tracked objects:
  9042 ;;		On entry : 17F/0
  9043 ;;		On exit  : 1F/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9046 ;;      Params:         0       0       0       0       0       0       0       0
  9047 ;;      Locals:         0       1       0       0       0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0
  9049 ;;      Totals:         0       1       0       0       0       0       0       0
  9050 ;;Total ram usage:        1 bytes
  9051 ;; Hardware stack levels used:    1
  9052 ;; Hardware stack levels required when called:    7
  9053 ;; This function calls:
  9054 ;;		_InitMCU
  9055 ;;		_InitVariable
  9056 ;;		_DisplayInit
  9057 ;;		_ATCommand_Init
  9058 ;;		_OneWire_Reset
  9059 ;;		_TCN75_Init
  9060 ;;		_TCN75_SetConfig
  9061 ;;		___delay_20ms
  9062 ;;		_ReadTData
  9063 ;; This function is called by:
  9064 ;;		_main
  9065 ;; This function uses a non-reentrant model
  9066 ;;
  9067  0417                     _InitSystem:	
  9068                           
  9069                           ;Init.c: 89: unsigned char x;
  9070                           ;Init.c: 90: InitMCU();
  9071                           
  9072                           ; Regs used in _InitSystem: [wreg-status,0+pclath+cstack]
  9073  0417  2484  3183         	fcall	_InitMCU
  9074                           
  9075                           ;Init.c: 91: InitVariable();
  9076  0419  250B  3183         	fcall	_InitVariable
  9077                           
  9078                           ;Init.c: 93: DisplayInit();
  9079  041B  2457  3183         	fcall	_DisplayInit
  9080                           
  9081                           ;Init.c: 94: if(RomParams.bWinter==0)
  9082  041D  0020               	movlb	0	; select bank0
  9083  041E  08E8               	movf	_RomParams+1,f
  9084  041F  1D03               	skipz
  9085  0420  2C26               	goto	l4423
  9086  0421                     l4419:	
  9087  0421  002F               	movlb	15	; select bank15
  9088  0422  1E12               	btfss	18,4
  9089  0423  2C21               	goto	l4419
  9090                           
  9091                           ;Init.c: 97: SEG21COM0=1;
  9092  0424  16A2               	bsf	34,5
  9093                           
  9094                           ;Init.c: 98: }
  9095  0425  2C2A               	goto	l33922
  9096  0426                     l4423:	
  9097  0426  002F               	movlb	15	; select bank15
  9098  0427  1E12               	btfss	18,4
  9099  0428  2C26               	goto	l4423
  9100                           
  9101                           ;Init.c: 102: SEG21COM0=0;
  9102  0429  12A2               	bcf	34,5
  9103  042A                     l33922:	
  9104                           
  9105                           ;Init.c: 103: }
  9106                           ;Init.c: 105: ATCommand_Init();
  9107  042A  24C2  3183         	fcall	_ATCommand_Init
  9108                           
  9109                           ;Init.c: 107: x=10;
  9110  042C  300A               	movlw	10
  9111  042D  00AD               	movwf	InitSystem@x
  9112                           
  9113                           ;Init.c: 108: while(x!=0)
  9114  042E  2C30               	goto	l4426
  9115  042F                     l33930:	
  9116                           ;Init.c: 113: break;
  9117                           
  9118                           
  9119                           ;Init.c: 114: }
  9120                           ;Init.c: 115: x--;
  9121  042F  03AD               	decf	InitSystem@x,f
  9122  0430                     l4426:	
  9123  0430  08AD               	movf	InitSystem@x,f
  9124  0431  1903               	btfsc	3,2
  9125  0432  2C39               	goto	l33932
  9126                           
  9127                           ;Init.c: 109: {
  9128                           ;Init.c: 110: if(OneWire_Reset()==0)
  9129  0433  24D9  3183         	fcall	_OneWire_Reset
  9130  0435  3800               	iorlw	0
  9131  0436  1D03               	skipz
  9132  0437  2C2F               	goto	l33930
  9133                           
  9134                           ;Init.c: 111: {
  9135                           ;Init.c: 112: gFlags.b18B20=1;
  9136  0438  14E6               	bsf	_gFlags,1
  9137  0439                     l33932:	
  9138                           
  9139                           ;Init.c: 116: }
  9140                           ;Init.c: 117: if(x==0)
  9141  0439  08AD               	movf	InitSystem@x,f
  9142  043A  1D03               	skipz
  9143  043B  2C49               	goto	l33952
  9144                           
  9145                           ;Init.c: 118: {
  9146                           ;Init.c: 119: gFlags.b18B20=0;
  9147  043C  10E6               	bcf	_gFlags,1
  9148                           
  9149                           ;Init.c: 120: TCN75_Init();
  9150  043D  250A  3183         	fcall	_TCN75_Init
  9151                           
  9152                           ;Init.c: 121: TCN75_Config.bShutdown=1;
  9153  043F  0020               	movlb	0	; select bank0
  9154  0440  1464               	bsf	_TCN75_Config,0
  9155                           
  9156                           ;Init.c: 122: TCN75_Config.COMP_INT=0;
  9157  0441  10E4               	bcf	_TCN75_Config,1
  9158                           
  9159                           ;Init.c: 123: TCN75_Config.Polarity=0;
  9160  0442  1164               	bcf	_TCN75_Config,2
  9161                           
  9162                           ;Init.c: 124: TCN75_Config.FaultQueue=0b00;
  9163  0443  30E7               	movlw	-25
  9164  0444  05E4               	andwf	_TCN75_Config,f
  9165                           
  9166                           ;Init.c: 125: TCN75_Config.Resolution=0b11;
  9167  0445  3060               	movlw	96
  9168  0446  04E4               	iorwf	_TCN75_Config,f
  9169                           
  9170                           ;Init.c: 126: TCN75_Config.OneShot=0;
  9171  0447  13E4               	bcf	_TCN75_Config,7
  9172                           
  9173                           ;Init.c: 127: TCN75_SetConfig();
  9174  0448  258F               	fcall	_TCN75_SetConfig
  9175  0449                     l33952:	
  9176                           
  9177                           ;Init.c: 128: }
  9178                           ;Init.c: 129: __delay_20ms(50);
  9179  0449  3032               	movlw	50
  9180  044A  00A0               	movwf	?___delay_20ms
  9181  044B  01A1               	clrf	?___delay_20ms+1
  9182  044C  318B  2336  3183   	fcall	___delay_20ms
  9183                           
  9184                           ;Init.c: 130: ReadTData();
  9185  044F  3188  20DD         	fcall	_ReadTData
  9186                           
  9187                           ;Init.c: 131: __delay_20ms(250);
  9188  0451  30FA               	movlw	250
  9189  0452  0020               	movlb	0	; select bank0
  9190  0453  00A0               	movwf	?___delay_20ms
  9191  0454  01A1               	clrf	?___delay_20ms+1
  9192  0455  318B  2B36         	ljmp	l12988
  9193  0457                     __end_of_InitSystem:	
  9194  0457                     __ptext2145:	
  9195 ;; =============== function _InitMCU ends ============
  9196                           
  9197                           
  9198 ;; *************** function _DisplayInit *****************
  9199 ;; Defined at:
  9200 ;;		line 385 in file "F:\work\WYP\NBIoT\Display.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;		None               void
  9207 ;; Registers used:
  9208 ;;		wreg, status,2
  9209 ;; Tracked objects:
  9210 ;;		On entry : 17F/0
  9211 ;;		On exit  : 17F/F
  9212 ;;		Unchanged: FFE80/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9214 ;;      Params:         0       0       0       0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    3
  9221 ;; This function calls:
  9222 ;;		Nothing
  9223 ;; This function is called by:
  9224 ;;		_InitSystem
  9225 ;; This function uses a non-reentrant model
  9226 ;;
  9227  0457                     _DisplayInit:	
  9228                           
  9229                           ;Display.c: 389: LCDPS = 0b00000011;
  9230                           
  9231                           ; Regs used in _DisplayInit: [wreg+status,2]
  9232  0457  3003               	movlw	3
  9233  0458  002F               	movlb	15	; select bank15
  9234  0459  0092               	movwf	18	;volatile
  9235                           
  9236                           ;Display.c: 390: LCDSE0 = 0;
  9237  045A  0198               	clrf	24	;volatile
  9238                           
  9239                           ;Display.c: 391: LCDSE1 = 0;
  9240  045B  0199               	clrf	25	;volatile
  9241                           
  9242                           ;Display.c: 392: LCDSE2 = 0;
  9243  045C  019A               	clrf	26	;volatile
  9244                           
  9245                           ;Display.c: 393: SEG21=1;
  9246  045D  169A               	bsf	26,5
  9247                           
  9248                           ;Display.c: 394: SEG5=1;
  9249  045E  1698               	bsf	24,5
  9250                           
  9251                           ;Display.c: 395: SEG11=1;
  9252  045F  1599               	bsf	25,3
  9253                           
  9254                           ;Display.c: 396: SEG16=1;
  9255  0460  141A               	bsf	26,0
  9256                           
  9257                           ;Display.c: 397: SEG6=1;
  9258  0461  1718               	bsf	24,6
  9259                           
  9260                           ;Display.c: 398: SEG3=1;
  9261  0462  1598               	bsf	24,3
  9262                           
  9263                           ;Display.c: 399: SEG23=1;
  9264  0463  179A               	bsf	26,7
  9265                           
  9266                           ;Display.c: 400: SEG22=1;
  9267  0464  171A               	bsf	26,6
  9268                           
  9269                           ;Display.c: 402: LCDCON = 0b00001111;
  9270  0465  300F               	movlw	15
  9271  0466  0091               	movwf	17	;volatile
  9272                           
  9273                           ;Display.c: 403: LCDDATA0=0;
  9274  0467  01A0               	clrf	32	;volatile
  9275                           
  9276                           ;Display.c: 404: LCDDATA1=0;
  9277  0468  01A1               	clrf	33	;volatile
  9278                           
  9279                           ;Display.c: 405: LCDDATA2=0;
  9280  0469  01A2               	clrf	34	;volatile
  9281                           
  9282                           ;Display.c: 406: LCDDATA3=0;
  9283  046A  01A3               	clrf	35	;volatile
  9284                           
  9285                           ;Display.c: 407: LCDDATA4=0;
  9286  046B  01A4               	clrf	36	;volatile
  9287                           
  9288                           ;Display.c: 408: LCDDATA5=0;
  9289  046C  01A5               	clrf	37	;volatile
  9290                           
  9291                           ;Display.c: 409: LCDDATA6=0;
  9292  046D  01A6               	clrf	38	;volatile
  9293                           
  9294                           ;Display.c: 410: LCDDATA7=0;
  9295  046E  01A7               	clrf	39	;volatile
  9296                           
  9297                           ;Display.c: 411: LCDDATA8=0;
  9298  046F  01A8               	clrf	40	;volatile
  9299                           
  9300                           ;Display.c: 412: LCDDATA9=0;
  9301  0470  01A9               	clrf	41	;volatile
  9302                           
  9303                           ;Display.c: 413: LCDDATA10=0;
  9304  0471  01AA               	clrf	42	;volatile
  9305                           
  9306                           ;Display.c: 414: LCDDATA11=0;
  9307  0472  01AB               	clrf	43	;volatile
  9308                           
  9309                           ;Display.c: 416: LCDREF = 0b10100000;
  9310  0473  30A0               	movlw	160
  9311  0474  0093               	movwf	19	;volatile
  9312                           
  9313                           ;Display.c: 417: LCDRL = 0b00110000;
  9314  0475  3030               	movlw	48
  9315  0476  0095               	movwf	21	;volatile
  9316                           
  9317                           ;Display.c: 418: LCDCST = 0b00000000;
  9318  0477  0194               	clrf	20	;volatile
  9319                           
  9320                           ;Display.c: 420: LCDEN=1;
  9321  0478  1791               	bsf	17,7
  9322                           
  9323                           ;Display.c: 440: SEG5COM0=0;
  9324  0479  12A0               	bcf	32,5
  9325                           
  9326                           ;Display.c: 441: SEG5COM1=0;
  9327  047A  12A3               	bcf	35,5
  9328                           
  9329                           ;Display.c: 442: SEG5COM2=0;
  9330  047B  12A6               	bcf	38,5
  9331                           
  9332                           ;Display.c: 443: SEG5COM3=1;
  9333  047C  16A9               	bsf	41,5
  9334                           
  9335                           ;Display.c: 444: SEG22COM3=0;
  9336  047D  132B               	bcf	43,6
  9337                           
  9338                           ;Display.c: 445: SEG3COM3=0;
  9339  047E  11A9               	bcf	41,3
  9340                           
  9341                           ;Display.c: 446: SEG21COM3=0;
  9342  047F  12AB               	bcf	43,5
  9343                           
  9344                           ;Display.c: 447: SEG21COM2=0;
  9345  0480  12A8               	bcf	40,5
  9346                           
  9347                           ;Display.c: 448: SEG21COM1=0;
  9348  0481  12A5               	bcf	37,5
  9349                           
  9350                           ;Display.c: 449: SEG21COM0=0;
  9351  0482  12A2               	bcf	34,5
  9352  0483  0008               	return
  9353  0484                     __end_of_DisplayInit:	
  9354  0484                     __ptext2144:	
  9355 ;; =============== function _eeprom_write ends ============
  9356                           
  9357                           
  9358 ;; *************** function _InitMCU *****************
  9359 ;; Defined at:
  9360 ;;		line 3 in file "F:\work\WYP\NBIoT\Init.c"
  9361 ;; Parameters:    Size  Location     Type
  9362 ;;		None
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;		None               void
  9367 ;; Registers used:
  9368 ;;		wreg, status,2
  9369 ;; Tracked objects:
  9370 ;;		On entry : 17F/0
  9371 ;;		On exit  : 17F/0
  9372 ;;		Unchanged: FFE80/0
  9373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9374 ;;      Params:         0       0       0       0       0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0
  9376 ;;      Temps:          0       0       0       0       0       0       0       0
  9377 ;;      Totals:         0       0       0       0       0       0       0       0
  9378 ;;Total ram usage:        0 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; Hardware stack levels required when called:    3
  9381 ;; This function calls:
  9382 ;;		Nothing
  9383 ;; This function is called by:
  9384 ;;		_InitSystem
  9385 ;; This function uses a non-reentrant model
  9386 ;;
  9387  0484                     _InitMCU:	
  9388                           
  9389                           ;Init.c: 5: ADCON1=0b00111111;
  9390                           
  9391                           ; Regs used in _InitMCU: [wreg+status,2]
  9392  0484  303F               	movlw	63
  9393  0485  0021               	movlb	1	; select bank1
  9394  0486  009E               	movwf	30	;volatile
  9395                           
  9396                           ;Init.c: 7: ANSELA=0;
  9397  0487  0023               	movlb	3	; select bank3
  9398  0488  018C               	clrf	12	;volatile
  9399                           
  9400                           ;Init.c: 8: ANSELB=0;
  9401  0489  018D               	clrf	13	;volatile
  9402                           
  9403                           ;Init.c: 9: ANSELD=0;
  9404  048A  018F               	clrf	15	;volatile
  9405                           
  9406                           ;Init.c: 10: ANSELE=0;
  9407  048B  0190               	clrf	16	;volatile
  9408                           
  9409                           ;Init.c: 12: LATD5=0;
  9410  048C  0022               	movlb	2	; select bank2
  9411  048D  128F               	bcf	15,5
  9412                           
  9413                           ;Init.c: 13: TRISD5=0;
  9414  048E  0021               	movlb	1	; select bank1
  9415  048F  128F               	bcf	15,5
  9416                           
  9417                           ;Init.c: 14: TRISD4=1;
  9418  0490  160F               	bsf	15,4
  9419                           
  9420                           ;Init.c: 16: nWPUEN=0;
  9421  0491  1395               	bcf	21,7
  9422                           
  9423                           ;Init.c: 17: TRISB7=1;
  9424  0492  178D               	bsf	13,7
  9425                           
  9426                           ;Init.c: 18: WPUB7=1;
  9427  0493  0024               	movlb	4	; select bank4
  9428  0494  178D               	bsf	13,7
  9429                           
  9430                           ;Init.c: 20: LATA4=0;
  9431  0495  0022               	movlb	2	; select bank2
  9432  0496  120C               	bcf	12,4
  9433                           
  9434                           ;Init.c: 21: LATA3=0;
  9435  0497  118C               	bcf	12,3
  9436                           
  9437                           ;Init.c: 23: TRISA4=0;
  9438  0498  0021               	movlb	1	; select bank1
  9439  0499  120C               	bcf	12,4
  9440                           
  9441                           ;Init.c: 24: TRISA3=0;
  9442  049A  118C               	bcf	12,3
  9443                           
  9444                           ;Init.c: 26: TRISB2=1;
  9445  049B  150D               	bsf	13,2
  9446                           
  9447                           ;Init.c: 30: T2CON=0b00111011;
  9448  049C  303B               	movlw	59
  9449  049D  0020               	movlb	0	; select bank0
  9450  049E  009C               	movwf	28	;volatile
  9451                           
  9452                           ;Init.c: 31: PR2=227;
  9453  049F  30E3               	movlw	227
  9454  04A0  009B               	movwf	27	;volatile
  9455                           
  9456                           ;Init.c: 32: TMR2ON=0;
  9457  04A1  111C               	bcf	28,2
  9458                           
  9459                           ;Init.c: 33: TMR2IE=0;
  9460  04A2  0021               	movlb	1	; select bank1
  9461  04A3  1091               	bcf	17,1
  9462                           
  9463                           ;Init.c: 34: TMR2IF=0;
  9464  04A4  0020               	movlb	0	; select bank0
  9465  04A5  1091               	bcf	17,1
  9466                           
  9467                           ;Init.c: 38: T1CON=0b01110000;
  9468  04A6  3070               	movlw	112
  9469  04A7  0098               	movwf	24	;volatile
  9470                           
  9471                           ;Init.c: 39: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
  9472  04A8  303C               	movlw	60
  9473  04A9  0097               	movwf	23	;volatile
  9474  04AA  30B0               	movlw	176
  9475  04AB  0096               	movwf	22	;volatile
  9476                           
  9477                           ;Init.c: 40: TMR1ON=1;
  9478  04AC  1418               	bsf	24,0
  9479                           
  9480                           ;Init.c: 41: TMR1IE=1;
  9481  04AD  0021               	movlb	1	; select bank1
  9482  04AE  1411               	bsf	17,0
  9483                           
  9484                           ;Init.c: 42: TMR1IF=0;
  9485  04AF  0020               	movlb	0	; select bank0
  9486  04B0  1011               	bcf	17,0
  9487                           
  9488                           ;Init.c: 48: TRISC7=1;
  9489  04B1  0021               	movlb	1	; select bank1
  9490  04B2  178E               	bsf	14,7
  9491                           
  9492                           ;Init.c: 49: TRISC6=1;
  9493  04B3  170E               	bsf	14,6
  9494                           
  9495                           ;Init.c: 50: TXSTA=0b00100110;
  9496  04B4  3026               	movlw	38
  9497  04B5  0023               	movlb	3	; select bank3
  9498  04B6  009E               	movwf	30	;volatile
  9499                           
  9500                           ;Init.c: 51: RCSTA=0b10010000;
  9501  04B7  3090               	movlw	144
  9502  04B8  009D               	movwf	29	;volatile
  9503                           
  9504                           ;Init.c: 52: SPBRG=25;
  9505  04B9  3019               	movlw	25
  9506  04BA  009B               	movwf	27	;volatile
  9507                           
  9508                           ;Init.c: 53: RCIE=1;
  9509  04BB  0021               	movlb	1	; select bank1
  9510  04BC  1691               	bsf	17,5
  9511                           
  9512                           ;Init.c: 54: RCIF=0;
  9513  04BD  0020               	movlb	0	; select bank0
  9514  04BE  1291               	bcf	17,5
  9515                           
  9516                           ;Init.c: 56: PEIE=1;
  9517  04BF  170B               	bsf	11,6
  9518                           
  9519                           ;Init.c: 57: GIE=1;
  9520  04C0  178B               	bsf	11,7
  9521  04C1  0008               	return
  9522  04C2                     __end_of_InitMCU:	
  9523  04C2                     __ptext2119:	
  9524 ;; =============== function _OneWire_Reset ends ============
  9525                           
  9526                           
  9527 ;; *************** function _ATCommand_Init *****************
  9528 ;; Defined at:
  9529 ;;		line 17 in file "F:\work\WYP\NBIoT\ATCommand.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;		None
  9532 ;; Auto vars:     Size  Location     Type
  9533 ;;		None
  9534 ;; Return value:  Size  Location     Type
  9535 ;;		None               void
  9536 ;; Registers used:
  9537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9538 ;; Tracked objects:
  9539 ;;		On entry : 17F/F
  9540 ;;		On exit  : 17F/0
  9541 ;;		Unchanged: FFE80/0
  9542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9543 ;;      Params:         0       0       0       0       0       0       0       0
  9544 ;;      Locals:         0       0       0       0       0       0       0       0
  9545 ;;      Temps:          0       0       0       0       0       0       0       0
  9546 ;;      Totals:         0       0       0       0       0       0       0       0
  9547 ;;Total ram usage:        0 bytes
  9548 ;; Hardware stack levels used:    1
  9549 ;; Hardware stack levels required when called:    4
  9550 ;; This function calls:
  9551 ;;		_strcpy
  9552 ;; This function is called by:
  9553 ;;		_InitSystem
  9554 ;; This function uses a non-reentrant model
  9555 ;;
  9556  04C2                     _ATCommand_Init:	
  9557                           
  9558                           ;ATCommand.c: 18: ATCommand_WaitACKTimes=50;
  9559                           
  9560                           ; Regs used in _ATCommand_Init: [wreg-status,0+pclath+cstack]
  9561  04C2  3032               	movlw	50
  9562  04C3  0020               	movlb	0	; select bank0
  9563  04C4  00D3               	movwf	_ATCommand_WaitACKTimes
  9564  04C5  01D4               	clrf	_ATCommand_WaitACKTimes+1
  9565                           
  9566                           ;ATCommand.c: 19: ATCommand_RetryTimes=3;
  9567  04C6  3003               	movlw	3
  9568  04C7  00E1               	movwf	_ATCommand_RetryTimes
  9569                           
  9570                           ;ATCommand.c: 20: strcpy(ATCommand_OkString,"OK");
  9571  04C8  3013               	movlw	low (STR_32| (0+32768))
  9572  04C9  00A0               	movwf	?_strcpy
  9573  04CA  3091               	movlw	high (STR_32| (0+32768))
  9574  04CB  00A1               	movwf	?_strcpy+1
  9575  04CC  30C4               	movlw	_ATCommand_OkString& (0+255)
  9576  04CD  318B  2385  3183   	fcall	_strcpy
  9577                           
  9578                           ;ATCommand.c: 21: strcpy(ATCommand_ErrString,"ERROR");
  9579  04D0  30FA               	movlw	low (STR_18| (0+32768))
  9580  04D1  00A0               	movwf	?_strcpy
  9581  04D2  3090               	movlw	high (STR_18| (0+32768))
  9582  04D3  00A1               	movwf	?_strcpy+1
  9583  04D4  30B5               	movlw	_ATCommand_ErrString& (0+255)
  9584  04D5  318B  2385         	fcall	_strcpy
  9585                           
  9586                           ;ATCommand.c: 22: ATCommand_Clear='\0';
  9587  04D7  01F7               	clrf	_ATCommand_Clear
  9588  04D8  0008               	return
  9589  04D9                     __end_of_ATCommand_Init:	
  9590  04D9                     __ptext2118:	
  9591 ;; =============== function _TCN75_Init ends ============
  9592                           
  9593                           
  9594 ;; *************** function _OneWire_Reset *****************
  9595 ;; Defined at:
  9596 ;;		line 6 in file "F:\work\WYP\NBIoT\OneWire.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;		None
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  r               1    2[BANK0 ] unsigned char 
  9601 ;;  Retry           1    1[BANK0 ] unsigned char 
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      unsigned char 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0
  9606 ;; Tracked objects:
  9607 ;;		On entry : 1F/0
  9608 ;;		On exit  : 1F/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9611 ;;      Params:         0       0       0       0       0       0       0       0
  9612 ;;      Locals:         0       2       0       0       0       0       0       0
  9613 ;;      Temps:          0       1       0       0       0       0       0       0
  9614 ;;      Totals:         0       3       0       0       0       0       0       0
  9615 ;;Total ram usage:        3 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    3
  9618 ;; This function calls:
  9619 ;;		Nothing
  9620 ;; This function is called by:
  9621 ;;		_InitSystem
  9622 ;;		_DS18X20_StartMeas
  9623 ;;		_DS18X20_ReadMeas
  9624 ;;		_OneWire_Command
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627  04D9                     _OneWire_Reset:	
  9628                           
  9629                           ;OneWire.c: 7: unsigned char r,Retry;
  9630                           ;OneWire.c: 8: r=1;
  9631                           
  9632                           ; Regs used in _OneWire_Reset: [wreg+status,2+status,0]
  9633  04D9  01A2               	clrf	OneWire_Reset@r
  9634  04DA  0AA2               	incf	OneWire_Reset@r,f
  9635                           
  9636                           ;OneWire.c: 9: Retry=5;
  9637  04DB  3005               	movlw	5
  9638  04DC  00A1               	movwf	OneWire_Reset@Retry
  9639  04DD                     l31188:	
  9640                           ;OneWire.c: 10: while(Retry--)
  9641                           
  9642  04DD  03A1               	decf	OneWire_Reset@Retry,f
  9643  04DE  0821               	movf	OneWire_Reset@Retry,w
  9644  04DF  3AFF               	xorlw	255
  9645  04E0  1903               	btfsc	3,2
  9646  04E1  2D08               	goto	l31190
  9647                           
  9648                           ;OneWire.c: 11: {
  9649                           ;OneWire.c: 12: TRISB1 = 0;LATB1=0;
  9650  04E2  0021               	movlb	1	; select bank1
  9651  04E3  108D               	bcf	13,1
  9652  04E4  0022               	movlb	2	; select bank2
  9653  04E5  108D               	bcf	13,1
  9654                           
  9655                           ;OneWire.c: 13: _delay((unsigned long)((480)*(4000000/4000000.0)));
  9656  04E6  309F               	movlw	159
  9657  04E7  0020               	movlb	0	; select bank0
  9658  04E8  00A0               	movwf	??_OneWire_Reset
  9659  04E9                     u9947:	
  9660  04E9  0BA0               	decfsz	??_OneWire_Reset,f
  9661  04EA  2CE9               	goto	u9947
  9662  04EB  2CEC               	nop2	;nop
  9663                           
  9664                           ;OneWire.c: 14: TRISB1=1;
  9665  04EC  0021               	movlb	1	; select bank1
  9666  04ED  148D               	bsf	13,1
  9667                           
  9668                           ;OneWire.c: 15: (GIE = 0);
  9669  04EE  138B               	bcf	11,7
  9670                           
  9671                           ;OneWire.c: 16: _delay((unsigned long)((75)*(4000000/4000000.0)));
  9672  04EF  3018               	movlw	24
  9673  04F0  0020               	movlb	0	; select bank0
  9674  04F1  00A0               	movwf	??_OneWire_Reset
  9675  04F2                     u9957:	
  9676  04F2  0BA0               	decfsz	??_OneWire_Reset,f
  9677  04F3  2CF2               	goto	u9957
  9678  04F4  2CF5               	nop2	;nop
  9679                           
  9680                           ;OneWire.c: 17: r=RB1;
  9681  04F5  3000               	movlw	0
  9682  04F6  0020               	movlb	0	; select bank0
  9683  04F7  188D               	btfsc	13,1
  9684  04F8  3001               	movlw	1
  9685  04F9  00A2               	movwf	OneWire_Reset@r
  9686                           
  9687                           ;OneWire.c: 18: (GIE = 1);
  9688  04FA  178B               	bsf	11,7
  9689                           
  9690                           ;OneWire.c: 19: _delay((unsigned long)((480)*(4000000/4000000.0)));
  9691  04FB  309F               	movlw	159
  9692  04FC  00A0               	movwf	??_OneWire_Reset
  9693  04FD                     u9967:	
  9694  04FD  0BA0               	decfsz	??_OneWire_Reset,f
  9695  04FE  2CFD               	goto	u9967
  9696  04FF  2D00               	nop2	;nop
  9697                           
  9698                           ;OneWire.c: 20: if(RB1==0)
  9699  0500  0020               	movlb	0	; select bank0
  9700  0501  188D               	btfsc	13,1
  9701  0502  2D05               	goto	l31184
  9702                           
  9703                           ;OneWire.c: 21: r=1;
  9704  0503  01A2               	clrf	OneWire_Reset@r
  9705  0504  0AA2               	incf	OneWire_Reset@r,f
  9706  0505                     l31184:	
  9707                           
  9708                           ;OneWire.c: 22: if(r==0)
  9709  0505  08A2               	movf	OneWire_Reset@r,f
  9710  0506  1D03               	skipz
  9711  0507  2CDD               	goto	l31188
  9712  0508                     l31190:	
  9713                           
  9714                           ;OneWire.c: 24: }
  9715                           ;OneWire.c: 25: return r;
  9716  0508  0822               	movf	OneWire_Reset@r,w
  9717  0509  0008               	return
  9718  050A                     __end_of_OneWire_Reset:	
  9719  050A                     __ptext2117:	
  9720 ;; =============== function ___delay_20ms ends ============
  9721                           
  9722                           
  9723 ;; *************** function _TCN75_Init *****************
  9724 ;; Defined at:
  9725 ;;		line 16 in file "F:\work\WYP\NBIoT\TCN75.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;		None
  9728 ;; Auto vars:     Size  Location     Type
  9729 ;;		None
  9730 ;; Return value:  Size  Location     Type
  9731 ;;		None               void
  9732 ;; Registers used:
  9733 ;;		status,2, status,0, pclath, cstack
  9734 ;; Tracked objects:
  9735 ;;		On entry : 1F/0
  9736 ;;		On exit  : 1F/2
  9737 ;;		Unchanged: FFFE0/0
  9738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9739 ;;      Params:         0       0       0       0       0       0       0       0
  9740 ;;      Locals:         0       0       0       0       0       0       0       0
  9741 ;;      Temps:          0       0       0       0       0       0       0       0
  9742 ;;      Totals:         0       0       0       0       0       0       0       0
  9743 ;;Total ram usage:        0 bytes
  9744 ;; Hardware stack levels used:    1
  9745 ;; Hardware stack levels required when called:    4
  9746 ;; This function calls:
  9747 ;;		_SimI2C_Init
  9748 ;; This function is called by:
  9749 ;;		_InitSystem
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752  050A                     _TCN75_Init:	
  9753                           
  9754                           ;TCN75.c: 17: SimI2C_Init();
  9755                           
  9756                           ; Regs used in _TCN75_Init: [status,2+status,0+pclath+cstack]
  9757  050A  2E69               	ljmp	l32714
  9758  050B                     __end_of_TCN75_Init:	
  9759  050B                     __ptext2102:	
  9760 ;; =============== function _TCN75_SetConfig ends ============
  9761                           
  9762                           
  9763 ;; *************** function _InitVariable *****************
  9764 ;; Defined at:
  9765 ;;		line 60 in file "F:\work\WYP\NBIoT\Init.c"
  9766 ;; Parameters:    Size  Location     Type
  9767 ;;		None
  9768 ;; Auto vars:     Size  Location     Type
  9769 ;;		None
  9770 ;; Return value:  Size  Location     Type
  9771 ;;		None               void
  9772 ;; Registers used:
  9773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9774 ;; Tracked objects:
  9775 ;;		On entry : 17F/0
  9776 ;;		On exit  : 17F/0
  9777 ;;		Unchanged: FFE80/0
  9778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9779 ;;      Params:         0       0       0       0       0       0       0       0
  9780 ;;      Locals:         0       0       0       0       0       0       0       0
  9781 ;;      Temps:          0       0       0       0       0       0       0       0
  9782 ;;      Totals:         0       0       0       0       0       0       0       0
  9783 ;;Total ram usage:        0 bytes
  9784 ;; Hardware stack levels used:    1
  9785 ;; Hardware stack levels required when called:    5
  9786 ;; This function calls:
  9787 ;;		_GetRomData
  9788 ;;		_SaveRomData
  9789 ;; This function is called by:
  9790 ;;		_InitSystem
  9791 ;; This function uses a non-reentrant model
  9792 ;;
  9793  050B                     _InitVariable:	
  9794                           
  9795                           ;Init.c: 61: if(GetRomData()==0)
  9796                           
  9797                           ; Regs used in _InitVariable: [wreg+fsr1l-status,0+pclath+cstack]
  9798  050B  2524  3183         	fcall	_GetRomData
  9799  050D  3800               	iorlw	0
  9800  050E  1D03               	skipz
  9801  050F  2D14               	goto	l33086
  9802                           
  9803                           ;Init.c: 62: {
  9804                           ;Init.c: 63: RomParams.bWinter=1;
  9805  0510  01E8               	clrf	_RomParams+1
  9806  0511  0AE8               	incf	_RomParams+1,f
  9807                           
  9808                           ;Init.c: 64: SaveRomData();
  9809  0512  255A  3183         	fcall	_SaveRomData
  9810  0514                     l33086:	
  9811                           
  9812                           ;Init.c: 65: }
  9813                           ;Init.c: 66: gFlags.AllFlag=0;
  9814  0514  01E6               	clrf	_gFlags
  9815                           
  9816                           ;Init.c: 67: SystemTick=0;
  9817  0515  01DD               	clrf	_SystemTick
  9818  0516  01DE               	clrf	_SystemTick+1
  9819                           
  9820                           ;Init.c: 75: if(RomParams.bWinter==0)
  9821  0517  08E8               	movf	_RomParams+1,f
  9822  0518  1D03               	skipz
  9823  0519  2D1E               	goto	l33094
  9824                           
  9825                           ;Init.c: 76: {
  9826                           ;Init.c: 77: NeedMeasurementTick=36000;
  9827  051A  30A0               	movlw	160
  9828  051B  00D9               	movwf	_NeedMeasurementTick
  9829  051C  308C               	movlw	140
  9830  051D  2D21               	goto	L6
  9831  051E                     l33094:	
  9832                           ;Init.c: 78: }
  9833                           
  9834                           
  9835                           ;Init.c: 79: else
  9836                           ;Init.c: 80: {
  9837                           ;Init.c: 81: NeedMeasurementTick=6000;
  9838  051E  3070               	movlw	112
  9839  051F  00D9               	movwf	_NeedMeasurementTick
  9840  0520  3017               	movlw	23
  9841  0521                     L6:	
  9842  0521  00DA               	movwf	_NeedMeasurementTick+1
  9843                           
  9844                           ;Init.c: 82: }
  9845                           ;Init.c: 84: TxErrDataIndex=0;
  9846  0522  01E9               	clrf	_TxErrDataIndex
  9847  0523  0008               	return
  9848  0524                     __end_of_InitVariable:	
  9849  0524                     __ptext2121:	
  9850 ;; =============== function _SaveRomData ends ============
  9851                           
  9852                           
  9853 ;; *************** function _GetRomData *****************
  9854 ;; Defined at:
  9855 ;;		line 125 in file "F:\work\WYP\NBIoT\afx.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;		None
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  i               1    7[BANK0 ] unsigned char 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      unsigned char 
  9862 ;; Registers used:
  9863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 17F/0
  9866 ;;		On exit  : 17F/0
  9867 ;;		Unchanged: FFE80/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9869 ;;      Params:         0       0       0       0       0       0       0       0
  9870 ;;      Locals:         0       1       0       0       0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0
  9872 ;;      Totals:         0       1       0       0       0       0       0       0
  9873 ;;Total ram usage:        1 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    4
  9876 ;; This function calls:
  9877 ;;		_eeprom_read
  9878 ;;		_GetVerify_Sum
  9879 ;; This function is called by:
  9880 ;;		_InitVariable
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883  0524                     _GetRomData:	
  9884                           
  9885                           ;afx.c: 126: unsigned char i;
  9886                           ;afx.c: 127: for(i=0;i<2;i++)
  9887                           
  9888                           ; Regs used in _GetRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9889  0524  01A7               	clrf	GetRomData@i
  9890  0525                     l32898:	
  9891                           
  9892                           ;afx.c: 128: RomParams.All[i]=eeprom_read(i);
  9893  0525  0827               	movf	GetRomData@i,w
  9894  0526  3E67               	addlw	_RomParams& (0+255)
  9895  0527  0086               	movwf	6
  9896  0528  0187               	clrf	7
  9897  0529  0827               	movf	GetRomData@i,w
  9898  052A  318F  2747  3183   	fcall	_eeprom_read
  9899  052D  0081               	movwf	1
  9900  052E  0020               	movlb	0	; select bank0
  9901  052F  0AA7               	incf	GetRomData@i,f
  9902  0530  3002               	movlw	2
  9903  0531  0227               	subwf	GetRomData@i,w
  9904  0532  1C03               	skipc
  9905  0533  2D25               	goto	l32898
  9906                           
  9907                           ;afx.c: 129: i=GetVerify_Sum(&RomParams.All[1],2-1);
  9908  0534  01A0               	clrf	?_GetVerify_Sum
  9909  0535  0AA0               	incf	?_GetVerify_Sum,f
  9910  0536  01A1               	clrf	?_GetVerify_Sum+1
  9911  0537  3068               	movlw	(_RomParams+1)& (0+255)
  9912  0538  2541  3183         	fcall	_GetVerify_Sum
  9913  053A  00A7               	movwf	GetRomData@i
  9914                           
  9915                           ;afx.c: 130: i+=1;
  9916  053B  0AA7               	incf	GetRomData@i,f
  9917                           
  9918                           ;afx.c: 131: if(i==RomParams.sum)
  9919  053C  0867               	movf	_RomParams,w
  9920  053D  0627               	xorwf	GetRomData@i,w
  9921  053E  1903               	btfsc	3,2
  9922                           
  9923                           ;afx.c: 132: {
  9924                           ;afx.c: 133: return 1;
  9925  053F  3401               	retlw	1
  9926                           
  9927                           ;afx.c: 135: else
  9928                           ;afx.c: 136: return 0;
  9929  0540  3400               	retlw	0
  9930  0541                     __end_of_GetRomData:	
  9931  0541                     __ptext2139:	
  9932 ;; =============== function _GetVerify_CRC8 ends ============
  9933                           
  9934                           
  9935 ;; *************** function _GetVerify_Sum *****************
  9936 ;; Defined at:
  9937 ;;		line 79 in file "F:\work\WYP\NBIoT\Verify.c"
  9938 ;; Parameters:    Size  Location     Type
  9939 ;;  pBuff           1    wreg     PTR unsigned char 
  9940 ;;		 -> RomParams(2), 
  9941 ;;  Count           2    0[BANK0 ] unsigned int 
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;  pBuff           1    4[BANK0 ] PTR unsigned char 
  9944 ;;		 -> RomParams(2), 
  9945 ;;  i               1    6[BANK0 ] unsigned char 
  9946 ;;  sum             1    5[BANK0 ] unsigned char 
  9947 ;; Return value:  Size  Location     Type
  9948 ;;                  1    wreg      unsigned char 
  9949 ;; Registers used:
  9950 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9951 ;; Tracked objects:
  9952 ;;		On entry : 17F/0
  9953 ;;		On exit  : 17F/0
  9954 ;;		Unchanged: FFE80/0
  9955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9956 ;;      Params:         0       2       0       0       0       0       0       0
  9957 ;;      Locals:         0       3       0       0       0       0       0       0
  9958 ;;      Temps:          0       2       0       0       0       0       0       0
  9959 ;;      Totals:         0       7       0       0       0       0       0       0
  9960 ;;Total ram usage:        7 bytes
  9961 ;; Hardware stack levels used:    1
  9962 ;; Hardware stack levels required when called:    3
  9963 ;; This function calls:
  9964 ;;		Nothing
  9965 ;; This function is called by:
  9966 ;;		_GetRomData
  9967 ;;		_SaveRomData
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970  0541                     _GetVerify_Sum:	
  9971                           
  9972                           ; Regs used in _GetVerify_Sum: [wreg+fsr1l-status,0]
  9973                           ;GetVerify_Sum@pBuff stored from wreg
  9974  0541  00A4               	movwf	GetVerify_Sum@pBuff
  9975                           
  9976                           ;Verify.c: 80: unsigned char sum,i;
  9977                           ;Verify.c: 81: sum=0;
  9978  0542  01A5               	clrf	GetVerify_Sum@sum
  9979                           
  9980                           ;Verify.c: 82: for(i=0;i<Count;i++)
  9981  0543  01A6               	clrf	GetVerify_Sum@i
  9982  0544                     l30834:	
  9983  0544  0826               	movf	GetVerify_Sum@i,w
  9984  0545  00A2               	movwf	??_GetVerify_Sum
  9985  0546  01A3               	clrf	??_GetVerify_Sum+1
  9986  0547  0821               	movf	GetVerify_Sum@Count+1,w
  9987  0548  0223               	subwf	??_GetVerify_Sum+1,w
  9988  0549  1D03               	skipz
  9989  054A  2D4D               	goto	u4325
  9990  054B  0820               	movf	GetVerify_Sum@Count,w
  9991  054C  0222               	subwf	??_GetVerify_Sum,w
  9992  054D                     u4325:	
  9993  054D  1803               	btfsc	3,0
  9994  054E  2D58               	goto	l30836
  9995                           
  9996                           ;Verify.c: 83: {
  9997                           ;Verify.c: 84: sum=(unsigned char)(sum+pBuff[i]);
  9998  054F  0826               	movf	GetVerify_Sum@i,w
  9999  0550  0724               	addwf	GetVerify_Sum@pBuff,w
 10000  0551  00A2               	movwf	??_GetVerify_Sum
 10001  0552  0086               	movwf	6
 10002  0553  0187               	clrf	7
 10003  0554  0801               	movf	1,w
 10004  0555  07A5               	addwf	GetVerify_Sum@sum,f
 10005  0556  0AA6               	incf	GetVerify_Sum@i,f
 10006  0557  2D44               	goto	l30834
 10007  0558                     l30836:	
 10008                           
 10009                           ;Verify.c: 85: }
 10010                           ;Verify.c: 86: return sum;
 10011  0558  0825               	movf	GetVerify_Sum@sum,w
 10012  0559  0008               	return
 10013  055A                     __end_of_GetVerify_Sum:	
 10014  055A                     __ptext2120:	
 10015 ;; =============== function _ATCommand_Init ends ============
 10016                           
 10017                           
 10018 ;; *************** function _SaveRomData *****************
 10019 ;; Defined at:
 10020 ;;		line 139 in file "F:\work\WYP\NBIoT\afx.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;  i               1    7[BANK0 ] unsigned char 
 10025 ;; Return value:  Size  Location     Type
 10026 ;;		None               void
 10027 ;; Registers used:
 10028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10029 ;; Tracked objects:
 10030 ;;		On entry : 17F/0
 10031 ;;		On exit  : 17F/0
 10032 ;;		Unchanged: FFE80/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10034 ;;      Params:         0       0       0       0       0       0       0       0
 10035 ;;      Locals:         0       1       0       0       0       0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0
 10037 ;;      Totals:         0       1       0       0       0       0       0       0
 10038 ;;Total ram usage:        1 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; Hardware stack levels required when called:    4
 10041 ;; This function calls:
 10042 ;;		_GetVerify_Sum
 10043 ;;		_eeprom_write
 10044 ;; This function is called by:
 10045 ;;		_InitVariable
 10046 ;; This function uses a non-reentrant model
 10047 ;;
 10048  055A                     _SaveRomData:	
 10049                           
 10050                           ;afx.c: 140: unsigned char i;
 10051                           ;afx.c: 141: RomParams.sum=GetVerify_Sum(&RomParams.All[1],2-1);
 10052                           
 10053                           ; Regs used in _SaveRomData: [wreg+fsr1l-status,0+pclath+cstack]
 10054  055A  01A0               	clrf	?_GetVerify_Sum
 10055  055B  0AA0               	incf	?_GetVerify_Sum,f
 10056  055C  01A1               	clrf	?_GetVerify_Sum+1
 10057  055D  3068               	movlw	(_RomParams+1)& (0+255)
 10058  055E  2541  3183         	fcall	_GetVerify_Sum
 10059  0560  00E7               	movwf	_RomParams
 10060                           
 10061                           ;afx.c: 142: RomParams.sum+=1;
 10062  0561  0AE7               	incf	_RomParams,f
 10063                           
 10064                           ;afx.c: 143: for(i=0;i<2;i++)
 10065  0562  01A7               	clrf	SaveRomData@i
 10066  0563                     l32930:	
 10067                           
 10068                           ;afx.c: 144: eeprom_write(i,RomParams.All[i]);
 10069  0563  0827               	movf	SaveRomData@i,w
 10070  0564  3E67               	addlw	_RomParams& (0+255)
 10071  0565  0086               	movwf	6
 10072  0566  0187               	clrf	7
 10073  0567  0801               	movf	1,w
 10074  0568  00A0               	movwf	?_eeprom_write
 10075  0569  0827               	movf	SaveRomData@i,w
 10076  056A  2573  3183         	fcall	_eeprom_write
 10077  056C  0020               	movlb	0	; select bank0
 10078  056D  0AA7               	incf	SaveRomData@i,f
 10079  056E  3002               	movlw	2
 10080  056F  0227               	subwf	SaveRomData@i,w
 10081  0570  1803               	btfsc	3,0
 10082  0571  0008               	return
 10083  0572  2D63               	goto	l32930
 10084  0573                     __end_of_SaveRomData:	
 10085  0573                     __ptext2143:	
 10086 ;; =============== function _MakeTxTemperature ends ============
 10087                           
 10088                           
 10089 ;; *************** function _eeprom_write *****************
 10090 ;; Defined at:
 10091 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\eewrite.c"
 10092 ;; Parameters:    Size  Location     Type
 10093 ;;  addr            1    wreg     unsigned char 
 10094 ;;  value           1    0[BANK0 ] unsigned char 
 10095 ;; Auto vars:     Size  Location     Type
 10096 ;;  addr            1    1[BANK0 ] unsigned char 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;		None               void
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0
 10101 ;; Tracked objects:
 10102 ;;		On entry : 1F/0
 10103 ;;		On exit  : 1F/3
 10104 ;;		Unchanged: FFFE0/0
 10105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10106 ;;      Params:         0       1       0       0       0       0       0       0
 10107 ;;      Locals:         0       1       0       0       0       0       0       0
 10108 ;;      Temps:          0       0       0       0       0       0       0       0
 10109 ;;      Totals:         0       2       0       0       0       0       0       0
 10110 ;;Total ram usage:        2 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    3
 10113 ;; This function calls:
 10114 ;;		Nothing
 10115 ;; This function is called by:
 10116 ;;		_main
 10117 ;;		_SaveRomData
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120  0573                     _eeprom_write:	
 10121                           
 10122                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
 10123                           ;eeprom_write@addr stored from wreg
 10124  0573  00A1               	movwf	eeprom_write@addr
 10125  0574                     l27624:	
 10126  0574  0023               	movlb	3	; select bank3
 10127  0575  1895               	btfsc	21,1
 10128  0576  2D74               	goto	l27624
 10129  0577  0020               	movlb	0	; select bank0
 10130  0578  0821               	movf	eeprom_write@addr,w
 10131  0579  0023               	movlb	3	; select bank3
 10132  057A  0091               	movwf	17	;volatile
 10133  057B  0020               	movlb	0	; select bank0
 10134  057C  0820               	movf	eeprom_write@value,w
 10135  057D  0023               	movlb	3	; select bank3
 10136  057E  0093               	movwf	19	;volatile
 10137  057F  303F               	movlw	63
 10138  0580  0595               	andwf	21,f	;volatile
 10139  0581  1003               	bcf	3,0
 10140  0582  1B8B               	btfsc	11,7
 10141  0583  1403               	bsf	3,0
 10142  0584  138B               	bcf	11,7
 10143  0585  1515               	bsf	21,2
 10144  0586  3055               	movlw	85
 10145  0587  0096               	movwf	22	;volatile
 10146  0588  30AA               	movlw	170
 10147  0589  0096               	movwf	22	;volatile
 10148  058A  1495               	bsf	21,1
 10149  058B  1115               	bcf	21,2
 10150  058C  1803               	btfsc	3,0
 10151  058D  178B               	bsf	11,7
 10152  058E  0008               	return
 10153  058F                     __end_of_eeprom_write:	
 10154  058F                     __ptext2101:	
 10155 ;; =============== function _TCN75_ReadReg ends ============
 10156                           
 10157                           
 10158 ;; *************** function _TCN75_SetConfig *****************
 10159 ;; Defined at:
 10160 ;;		line 47 in file "F:\work\WYP\NBIoT\TCN75.c"
 10161 ;; Parameters:    Size  Location     Type
 10162 ;;		None
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  bRight          1    4[BANK0 ] unsigned char 
 10165 ;;  ErrTimes        1    3[BANK0 ] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      unsigned char 
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 1F/0
 10172 ;;		On exit  : 1F/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10175 ;;      Params:         0       0       0       0       0       0       0       0
 10176 ;;      Locals:         0       2       0       0       0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0
 10178 ;;      Totals:         0       2       0       0       0       0       0       0
 10179 ;;Total ram usage:        2 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    4
 10182 ;; This function calls:
 10183 ;;		_SimI2C_Start
 10184 ;;		_SimI2C_SendByte
 10185 ;;		_SimI2C_RecAck
 10186 ;;		_SimI2C_Stop
 10187 ;; This function is called by:
 10188 ;;		_InitSystem
 10189 ;;		_ReadTData
 10190 ;; This function uses a non-reentrant model
 10191 ;;
 10192  058F                     _TCN75_SetConfig:	
 10193                           
 10194                           ;TCN75.c: 48: unsigned char ErrTimes=2;
 10195                           
 10196                           ; Regs used in _TCN75_SetConfig: [wreg+status,2+status,0+pclath+cstack]
 10197  058F  3002               	movlw	2
 10198  0590  00A3               	movwf	TCN75_SetConfig@ErrTimes
 10199                           
 10200                           ;TCN75.c: 49: unsigned char bRight=0;
 10201  0591  01A4               	clrf	TCN75_SetConfig@bRight
 10202  0592                     l33122:	
 10203                           ;TCN75.c: 63: break;
 10204                           
 10205                           ;TCN75.c: 50: while(ErrTimes--)
 10206                           
 10207  0592  03A3               	decf	TCN75_SetConfig@ErrTimes,f
 10208  0593  0823               	movf	TCN75_SetConfig@ErrTimes,w
 10209  0594  3AFF               	xorlw	255
 10210  0595  1903               	btfsc	3,2
 10211  0596  2DB3               	goto	l33124
 10212                           
 10213                           ;TCN75.c: 51: {
 10214                           ;TCN75.c: 52: SimI2C_Start();
 10215  0597  2622  3183         	fcall	_SimI2C_Start
 10216                           
 10217                           ;TCN75.c: 53: SimI2C_SendByte(0b10010000&0xfe);
 10218  0599  3090               	movlw	144
 10219  059A  25ED  3183         	fcall	_SimI2C_SendByte
 10220                           
 10221                           ;TCN75.c: 54: if(SimI2C_RecAck())
 10222  059C  260E  3183         	fcall	_SimI2C_RecAck
 10223  059E  3A00               	xorlw	0
 10224  059F  1D03               	btfss	3,2
 10225  05A0  2D92               	goto	l33122
 10226                           
 10227                           ;TCN75.c: 56: SimI2C_SendByte(0x01);
 10228  05A1  3001               	movlw	1
 10229  05A2  25ED  3183         	fcall	_SimI2C_SendByte
 10230                           
 10231                           ;TCN75.c: 57: if(SimI2C_RecAck())
 10232  05A4  260E  3183         	fcall	_SimI2C_RecAck
 10233  05A6  3A00               	xorlw	0
 10234  05A7  1D03               	btfss	3,2
 10235  05A8  2D92               	goto	l33122
 10236                           
 10237                           ;TCN75.c: 59: SimI2C_SendByte(TCN75_Config.AllFlag);
 10238  05A9  0864               	movf	_TCN75_Config,w
 10239  05AA  25ED  3183         	fcall	_SimI2C_SendByte
 10240                           
 10241                           ;TCN75.c: 60: if(SimI2C_RecAck())
 10242  05AC  260E  3183         	fcall	_SimI2C_RecAck
 10243  05AE  3A00               	xorlw	0
 10244  05AF  1D03               	btfss	3,2
 10245  05B0  2D92               	goto	l33122
 10246                           
 10247                           ;TCN75.c: 62: bRight=1;
 10248  05B1  01A4               	clrf	TCN75_SetConfig@bRight
 10249  05B2  0AA4               	incf	TCN75_SetConfig@bRight,f
 10250  05B3                     l33124:	
 10251                           
 10252                           ;TCN75.c: 64: }
 10253                           ;TCN75.c: 65: SimI2C_Stop();
 10254  05B3  265F               	fcall	_SimI2C_Stop
 10255                           
 10256                           ;TCN75.c: 66: return bRight;
 10257  05B4  0020               	movlb	0	; select bank0
 10258  05B5  0824               	movf	TCN75_SetConfig@bRight,w
 10259  05B6  0008               	return
 10260  05B7                     __end_of_TCN75_SetConfig:	
 10261  05B7                     __ptext2100:	
 10262 ;; =============== function _PowerDown ends ============
 10263                           
 10264                           
 10265 ;; *************** function _TCN75_ReadReg *****************
 10266 ;; Defined at:
 10267 ;;		line 20 in file "F:\work\WYP\NBIoT\TCN75.c"
 10268 ;; Parameters:    Size  Location     Type
 10269 ;;  RegPoint        1    wreg     unsigned char 
 10270 ;; Auto vars:     Size  Location     Type
 10271 ;;  RegPoint        1    3[BANK0 ] unsigned char 
 10272 ;;  bRight          1    5[BANK0 ] unsigned char 
 10273 ;;  ErrTimes        1    4[BANK0 ] unsigned char 
 10274 ;; Return value:  Size  Location     Type
 10275 ;;                  1    wreg      unsigned char 
 10276 ;; Registers used:
 10277 ;;		wreg, status,2, status,0, pclath, cstack
 10278 ;; Tracked objects:
 10279 ;;		On entry : 1F/0
 10280 ;;		On exit  : 1F/0
 10281 ;;		Unchanged: 0/0
 10282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10283 ;;      Params:         0       0       0       0       0       0       0       0
 10284 ;;      Locals:         0       3       0       0       0       0       0       0
 10285 ;;      Temps:          0       0       0       0       0       0       0       0
 10286 ;;      Totals:         0       3       0       0       0       0       0       0
 10287 ;;Total ram usage:        3 bytes
 10288 ;; Hardware stack levels used:    1
 10289 ;; Hardware stack levels required when called:    4
 10290 ;; This function calls:
 10291 ;;		_SimI2C_Start
 10292 ;;		_SimI2C_SendByte
 10293 ;;		_SimI2C_RecAck
 10294 ;;		_SimI2C_ReadByte
 10295 ;;		_SimI2C_Ack
 10296 ;;		_SimI2C_NoAck
 10297 ;;		_SimI2C_Stop
 10298 ;; This function is called by:
 10299 ;;		_ReadTData
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302  05B7                     _TCN75_ReadReg:	
 10303                           
 10304                           ; Regs used in _TCN75_ReadReg: [wreg+status,2+status,0+pclath+cstack]
 10305                           ;TCN75_ReadReg@RegPoint stored from wreg
 10306  05B7  00A3               	movwf	TCN75_ReadReg@RegPoint
 10307                           
 10308                           ;TCN75.c: 21: unsigned char ErrTimes=2;
 10309  05B8  3002               	movlw	2
 10310  05B9  00A4               	movwf	TCN75_ReadReg@ErrTimes
 10311                           
 10312                           ;TCN75.c: 22: unsigned char bRight=0;
 10313  05BA  01A5               	clrf	TCN75_ReadReg@bRight
 10314  05BB                     l33164:	
 10315                           ;TCN75.c: 41: break;
 10316                           
 10317                           ;TCN75.c: 23: while(ErrTimes--)
 10318                           
 10319  05BB  03A4               	decf	TCN75_ReadReg@ErrTimes,f
 10320  05BC  0824               	movf	TCN75_ReadReg@ErrTimes,w
 10321  05BD  3AFF               	xorlw	255
 10322  05BE  1903               	btfsc	3,2
 10323  05BF  2DE9               	goto	l33166
 10324                           
 10325                           ;TCN75.c: 24: {
 10326                           ;TCN75.c: 25: SimI2C_Start();
 10327  05C0  2622  3183         	fcall	_SimI2C_Start
 10328                           
 10329                           ;TCN75.c: 26: SimI2C_SendByte(0b10010000&0xfe);
 10330  05C2  3090               	movlw	144
 10331  05C3  25ED  3183         	fcall	_SimI2C_SendByte
 10332                           
 10333                           ;TCN75.c: 27: if(SimI2C_RecAck())
 10334  05C5  260E  3183         	fcall	_SimI2C_RecAck
 10335  05C7  3A00               	xorlw	0
 10336  05C8  1D03               	btfss	3,2
 10337  05C9  2DBB               	goto	l33164
 10338                           
 10339                           ;TCN75.c: 29: SimI2C_SendByte(RegPoint);
 10340  05CA  0823               	movf	TCN75_ReadReg@RegPoint,w
 10341  05CB  25ED  3183         	fcall	_SimI2C_SendByte
 10342                           
 10343                           ;TCN75.c: 30: if(SimI2C_RecAck())
 10344  05CD  260E  3183         	fcall	_SimI2C_RecAck
 10345  05CF  3A00               	xorlw	0
 10346  05D0  1D03               	btfss	3,2
 10347  05D1  2DBB               	goto	l33164
 10348                           
 10349                           ;TCN75.c: 32: SimI2C_Start();
 10350  05D2  2622  3183         	fcall	_SimI2C_Start
 10351                           
 10352                           ;TCN75.c: 33: SimI2C_SendByte(0b10010000|0x01);
 10353  05D4  3091               	movlw	145
 10354  05D5  25ED  3183         	fcall	_SimI2C_SendByte
 10355                           
 10356                           ;TCN75.c: 34: if(SimI2C_RecAck())
 10357  05D7  260E  3183         	fcall	_SimI2C_RecAck
 10358  05D9  3A00               	xorlw	0
 10359  05DA  1D03               	btfss	3,2
 10360  05DB  2DBB               	goto	l33164
 10361                           
 10362                           ;TCN75.c: 36: TCN75_RegReadResualt.u8H=SimI2C_ReadByte();
 10363  05DC  262C  3183         	fcall	_SimI2C_ReadByte
 10364  05DE  00E0               	movwf	_TCN75_RegReadResualt+1
 10365                           
 10366                           ;TCN75.c: 37: SimI2C_Ack();
 10367  05DF  264C  3183         	fcall	_SimI2C_Ack
 10368                           
 10369                           ;TCN75.c: 38: TCN75_RegReadResualt.u8L=SimI2C_ReadByte();
 10370  05E1  262C  3183         	fcall	_SimI2C_ReadByte
 10371  05E3  00DF               	movwf	_TCN75_RegReadResualt
 10372                           
 10373                           ;TCN75.c: 39: SimI2C_NoAck();
 10374  05E4  2658  3183         	fcall	_SimI2C_NoAck
 10375                           
 10376                           ;TCN75.c: 40: bRight=1;
 10377  05E6  0020               	movlb	0	; select bank0
 10378  05E7  01A5               	clrf	TCN75_ReadReg@bRight
 10379  05E8  0AA5               	incf	TCN75_ReadReg@bRight,f
 10380  05E9                     l33166:	
 10381                           
 10382                           ;TCN75.c: 42: }
 10383                           ;TCN75.c: 43: SimI2C_Stop();
 10384  05E9  265F               	fcall	_SimI2C_Stop
 10385                           
 10386                           ;TCN75.c: 44: return bRight;
 10387  05EA  0020               	movlb	0	; select bank0
 10388  05EB  0825               	movf	TCN75_ReadReg@bRight,w
 10389  05EC  0008               	return
 10390  05ED                     __end_of_TCN75_ReadReg:	
 10391  05ED                     __ptext2108:	
 10392 ;; =============== function _SimI2C_RecAck ends ============
 10393                           
 10394                           
 10395 ;; *************** function _SimI2C_SendByte *****************
 10396 ;; Defined at:
 10397 ;;		line 71 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10398 ;; Parameters:    Size  Location     Type
 10399 ;;  data            1    wreg     unsigned char 
 10400 ;; Auto vars:     Size  Location     Type
 10401 ;;  data            1    0[BANK0 ] unsigned char 
 10402 ;;  i               1    2[BANK0 ] unsigned char 
 10403 ;;  t               1    1[BANK0 ] unsigned char 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;		None               void
 10406 ;; Registers used:
 10407 ;;		wreg, status,2, status,0
 10408 ;; Tracked objects:
 10409 ;;		On entry : 1D/2
 10410 ;;		On exit  : 1F/2
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10413 ;;      Params:         0       0       0       0       0       0       0       0
 10414 ;;      Locals:         0       3       0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0
 10416 ;;      Totals:         0       3       0       0       0       0       0       0
 10417 ;;Total ram usage:        3 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    3
 10420 ;; This function calls:
 10421 ;;		Nothing
 10422 ;; This function is called by:
 10423 ;;		_TCN75_ReadReg
 10424 ;;		_TCN75_SetConfig
 10425 ;; This function uses a non-reentrant model
 10426 ;;
 10427  05ED                     _SimI2C_SendByte:	
 10428                           
 10429                           ; Regs used in _SimI2C_SendByte: [wreg+status,2+status,0]
 10430                           ;SimI2C_SendByte@data stored from wreg
 10431  05ED  0020               	movlb	0	; select bank0
 10432  05EE  00A0               	movwf	SimI2C_SendByte@data
 10433                           
 10434                           ;SimI2C.c: 72: unsigned char i;
 10435                           ;SimI2C.c: 73: unsigned char t;
 10436                           ;SimI2C.c: 74: for(i=0;i<8;i++)
 10437  05EF  01A2               	clrf	SimI2C_SendByte@i
 10438  05F0                     l27579:	
 10439                           
 10440                           ;SimI2C.c: 75: {
 10441                           ;SimI2C.c: 76: LATD7=0;
 10442  05F0  0022               	movlb	2	; select bank2
 10443  05F1  138F               	bcf	15,7
 10444                           
 10445                           ;SimI2C.c: 77: t=data&0x80;
 10446  05F2  0020               	movlb	0	; select bank0
 10447  05F3  0820               	movf	SimI2C_SendByte@data,w
 10448  05F4  00A1               	movwf	SimI2C_SendByte@t
 10449  05F5  3080               	movlw	128
 10450  05F6  05A1               	andwf	SimI2C_SendByte@t,f
 10451                           
 10452                           ;SimI2C.c: 78: if(t==0x00)
 10453  05F7  08A1               	movf	SimI2C_SendByte@t,f
 10454  05F8  1D03               	skipz
 10455  05F9  2DFD               	goto	l27581
 10456                           
 10457                           ;SimI2C.c: 79: LATD6=0;
 10458  05FA  0022               	movlb	2	; select bank2
 10459  05FB  130F               	bcf	15,6
 10460  05FC  2DFF               	goto	l27582
 10461  05FD                     l27581:	
 10462                           
 10463                           ;SimI2C.c: 80: else
 10464                           ;SimI2C.c: 81: LATD6=1;
 10465  05FD  0022               	movlb	2	; select bank2
 10466  05FE  170F               	bsf	15,6
 10467  05FF                     l27582:	
 10468                           
 10469                           ;SimI2C.c: 82: data<<=1;
 10470  05FF  0020               	movlb	0	; select bank0
 10471  0600  35A0               	lslf	SimI2C_SendByte@data,f
 10472                           
 10473                           ;SimI2C.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10474  0601  0064               	clrwdt
 10475                           
 10476                           ;SimI2C.c: 84: LATD7=1;
 10477  0602  0022               	movlb	2	; select bank2
 10478  0603  178F               	bsf	15,7
 10479                           
 10480                           ;SimI2C.c: 85: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10481  0604  0064               	clrwdt
 10482  0605  0020               	movlb	0	; select bank0
 10483  0606  0AA2               	incf	SimI2C_SendByte@i,f
 10484  0607  3008               	movlw	8
 10485  0608  0222               	subwf	SimI2C_SendByte@i,w
 10486  0609  1C03               	skipc
 10487  060A  2DF0               	goto	l27579
 10488                           
 10489                           ;SimI2C.c: 86: }
 10490                           ;SimI2C.c: 87: LATD7=0;
 10491  060B  0022               	movlb	2	; select bank2
 10492  060C  138F               	bcf	15,7
 10493  060D  0008               	return
 10494  060E                     __end_of_SimI2C_SendByte:	
 10495  060E                     __ptext2107:	
 10496 ;; =============== function _SimI2C_ReadByte ends ============
 10497                           
 10498                           
 10499 ;; *************** function _SimI2C_RecAck *****************
 10500 ;; Defined at:
 10501 ;;		line 39 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10502 ;; Parameters:    Size  Location     Type
 10503 ;;		None
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  t               1    0[BANK0 ] unsigned char 
 10506 ;; Return value:  Size  Location     Type
 10507 ;;                  1    wreg      unsigned char 
 10508 ;; Registers used:
 10509 ;;		wreg
 10510 ;; Tracked objects:
 10511 ;;		On entry : 1F/2
 10512 ;;		On exit  : 1F/0
 10513 ;;		Unchanged: 0/0
 10514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10515 ;;      Params:         0       0       0       0       0       0       0       0
 10516 ;;      Locals:         0       1       0       0       0       0       0       0
 10517 ;;      Temps:          0       0       0       0       0       0       0       0
 10518 ;;      Totals:         0       1       0       0       0       0       0       0
 10519 ;;Total ram usage:        1 bytes
 10520 ;; Hardware stack levels used:    1
 10521 ;; Hardware stack levels required when called:    3
 10522 ;; This function calls:
 10523 ;;		Nothing
 10524 ;; This function is called by:
 10525 ;;		_TCN75_ReadReg
 10526 ;;		_TCN75_SetConfig
 10527 ;; This function uses a non-reentrant model
 10528 ;;
 10529  060E                     _SimI2C_RecAck:	
 10530                           
 10531                           ;SimI2C.c: 40: unsigned char t;
 10532                           ;SimI2C.c: 41: TRISD6=1;
 10533                           
 10534                           ; Regs used in _SimI2C_RecAck: [wreg]
 10535  060E  0021               	movlb	1	; select bank1
 10536  060F  170F               	bsf	15,6
 10537                           
 10538                           ;SimI2C.c: 42: LATD7=0;
 10539  0610  0022               	movlb	2	; select bank2
 10540  0611  138F               	bcf	15,7
 10541                           
 10542                           ;SimI2C.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10543  0612  0064               	clrwdt
 10544                           
 10545                           ;SimI2C.c: 44: LATD7=1;
 10546  0613  0022               	movlb	2	; select bank2
 10547  0614  178F               	bsf	15,7
 10548                           
 10549                           ;SimI2C.c: 45: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10550  0615  0064               	clrwdt
 10551                           
 10552                           ;SimI2C.c: 46: t=RD6;
 10553  0616  3000               	movlw	0
 10554  0617  0020               	movlb	0	; select bank0
 10555  0618  1B0F               	btfsc	15,6
 10556  0619  3001               	movlw	1
 10557  061A  00A0               	movwf	SimI2C_RecAck@t
 10558                           
 10559                           ;SimI2C.c: 47: LATD7=0;
 10560  061B  0022               	movlb	2	; select bank2
 10561  061C  138F               	bcf	15,7
 10562                           
 10563                           ;SimI2C.c: 48: TRISD6=0;
 10564  061D  0021               	movlb	1	; select bank1
 10565  061E  130F               	bcf	15,6
 10566                           
 10567                           ;SimI2C.c: 49: return t;
 10568  061F  0020               	movlb	0	; select bank0
 10569  0620  0820               	movf	SimI2C_RecAck@t,w
 10570  0621  0008               	return
 10571  0622                     __end_of_SimI2C_RecAck:	
 10572  0622                     __ptext2109:	
 10573 ;; =============== function _SimI2C_SendByte ends ============
 10574                           
 10575                           
 10576 ;; *************** function _SimI2C_Start *****************
 10577 ;; Defined at:
 10578 ;;		line 19 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;		None               void
 10585 ;; Registers used:
 10586 ;;		None
 10587 ;; Tracked objects:
 10588 ;;		On entry : 1F/0
 10589 ;;		On exit  : 1F/2
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10592 ;;      Params:         0       0       0       0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0
 10595 ;;      Totals:         0       0       0       0       0       0       0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    3
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_TCN75_ReadReg
 10603 ;;		_TCN75_SetConfig
 10604 ;; This function uses a non-reentrant model
 10605 ;;
 10606  0622                     _SimI2C_Start:	
 10607                           
 10608                           ;SimI2C.c: 20: LATD6=1;
 10609                           
 10610                           ; Regs used in _SimI2C_Start: []
 10611  0622  0022               	movlb	2	; select bank2
 10612  0623  170F               	bsf	15,6
 10613                           
 10614                           ;SimI2C.c: 21: LATD7=1;
 10615  0624  178F               	bsf	15,7
 10616                           
 10617                           ;SimI2C.c: 22: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10618  0625  0064               	clrwdt
 10619                           
 10620                           ;SimI2C.c: 23: LATD6=0;
 10621  0626  0022               	movlb	2	; select bank2
 10622  0627  130F               	bcf	15,6
 10623                           
 10624                           ;SimI2C.c: 24: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10625  0628  0064               	clrwdt
 10626                           
 10627                           ;SimI2C.c: 25: LATD7=0;
 10628  0629  0022               	movlb	2	; select bank2
 10629  062A  138F               	bcf	15,7
 10630  062B  0008               	return
 10631  062C                     __end_of_SimI2C_Start:	
 10632  062C                     __ptext2106:	
 10633 ;; =============== function _SimI2C_Ack ends ============
 10634                           
 10635                           
 10636 ;; *************** function _SimI2C_ReadByte *****************
 10637 ;; Defined at:
 10638 ;;		line 90 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;  i               1    1[BANK0 ] unsigned char 
 10643 ;;  data            1    0[BANK0 ] unsigned char 
 10644 ;; Return value:  Size  Location     Type
 10645 ;;                  1    wreg      unsigned char 
 10646 ;; Registers used:
 10647 ;;		wreg, status,2, status,0
 10648 ;; Tracked objects:
 10649 ;;		On entry : 1D/0
 10650 ;;		On exit  : 1F/0
 10651 ;;		Unchanged: 0/0
 10652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10653 ;;      Params:         0       0       0       0       0       0       0       0
 10654 ;;      Locals:         0       2       0       0       0       0       0       0
 10655 ;;      Temps:          0       0       0       0       0       0       0       0
 10656 ;;      Totals:         0       2       0       0       0       0       0       0
 10657 ;;Total ram usage:        2 bytes
 10658 ;; Hardware stack levels used:    1
 10659 ;; Hardware stack levels required when called:    3
 10660 ;; This function calls:
 10661 ;;		Nothing
 10662 ;; This function is called by:
 10663 ;;		_TCN75_ReadReg
 10664 ;; This function uses a non-reentrant model
 10665 ;;
 10666  062C                     _SimI2C_ReadByte:	
 10667                           
 10668                           ;SimI2C.c: 91: unsigned char data,i;
 10669                           ;SimI2C.c: 92: TRISD6=1;
 10670                           
 10671                           ; Regs used in _SimI2C_ReadByte: [wreg+status,2+status,0]
 10672  062C  0021               	movlb	1	; select bank1
 10673  062D  170F               	bsf	15,6
 10674                           
 10675                           ;SimI2C.c: 93: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10676  062E  0064               	clrwdt
 10677                           
 10678                           ;SimI2C.c: 94: LATD7=0;
 10679  062F  0022               	movlb	2	; select bank2
 10680  0630  138F               	bcf	15,7
 10681                           
 10682                           ;SimI2C.c: 95: data=0;
 10683  0631  0020               	movlb	0	; select bank0
 10684  0632  01A0               	clrf	SimI2C_ReadByte@data
 10685                           
 10686                           ;SimI2C.c: 96: for(i=0;i<8;i++)
 10687  0633  01A1               	clrf	SimI2C_ReadByte@i
 10688  0634                     l27586:	
 10689                           
 10690                           ;SimI2C.c: 97: {
 10691                           ;SimI2C.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10692  0634  0064               	clrwdt
 10693                           
 10694                           ;SimI2C.c: 99: LATD7=1;
 10695  0635  0022               	movlb	2	; select bank2
 10696  0636  178F               	bsf	15,7
 10697                           
 10698                           ;SimI2C.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10699  0637  0064               	clrwdt
 10700                           
 10701                           ;SimI2C.c: 101: data=data<<1;
 10702  0638  0020               	movlb	0	; select bank0
 10703  0639  35A0               	lslf	SimI2C_ReadByte@data,f
 10704                           
 10705                           ;SimI2C.c: 102: if(RD6)
 10706  063A  1B0F               	btfsc	15,6
 10707                           
 10708                           ;SimI2C.c: 103: data=data|0x01;
 10709  063B  1420               	bsf	SimI2C_ReadByte@data,0
 10710                           
 10711                           ;SimI2C.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10712  063C  0064               	clrwdt
 10713                           
 10714                           ;SimI2C.c: 105: LATD7=0;
 10715  063D  0022               	movlb	2	; select bank2
 10716  063E  138F               	bcf	15,7
 10717                           
 10718                           ;SimI2C.c: 106: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10719  063F  0064               	clrwdt
 10720  0640  0020               	movlb	0	; select bank0
 10721  0641  0AA1               	incf	SimI2C_ReadByte@i,f
 10722  0642  3008               	movlw	8
 10723  0643  0221               	subwf	SimI2C_ReadByte@i,w
 10724  0644  1C03               	skipc
 10725  0645  2E34               	goto	l27586
 10726                           
 10727                           ;SimI2C.c: 107: }
 10728                           ;SimI2C.c: 108: TRISD6=0;
 10729  0646  0021               	movlb	1	; select bank1
 10730  0647  130F               	bcf	15,6
 10731                           
 10732                           ;SimI2C.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10733  0648  0064               	clrwdt
 10734                           
 10735                           ;SimI2C.c: 110: return data;
 10736  0649  0020               	movlb	0	; select bank0
 10737  064A  0820               	movf	SimI2C_ReadByte@data,w
 10738  064B  0008               	return
 10739  064C                     __end_of_SimI2C_ReadByte:	
 10740  064C                     __ptext2105:	
 10741 ;; =============== function _SimI2C_NoAck ends ============
 10742                           
 10743                           
 10744 ;; *************** function _SimI2C_Ack *****************
 10745 ;; Defined at:
 10746 ;;		line 53 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10747 ;; Parameters:    Size  Location     Type
 10748 ;;		None
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;		None
 10751 ;; Return value:  Size  Location     Type
 10752 ;;		None               void
 10753 ;; Registers used:
 10754 ;;		None
 10755 ;; Tracked objects:
 10756 ;;		On entry : 1F/0
 10757 ;;		On exit  : 1F/2
 10758 ;;		Unchanged: 0/0
 10759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10760 ;;      Params:         0       0       0       0       0       0       0       0
 10761 ;;      Locals:         0       0       0       0       0       0       0       0
 10762 ;;      Temps:          0       0       0       0       0       0       0       0
 10763 ;;      Totals:         0       0       0       0       0       0       0       0
 10764 ;;Total ram usage:        0 bytes
 10765 ;; Hardware stack levels used:    1
 10766 ;; Hardware stack levels required when called:    3
 10767 ;; This function calls:
 10768 ;;		Nothing
 10769 ;; This function is called by:
 10770 ;;		_TCN75_ReadReg
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773  064C                     _SimI2C_Ack:	
 10774                           
 10775                           ;SimI2C.c: 54: LATD6=0;
 10776                           
 10777                           ; Regs used in _SimI2C_Ack: []
 10778  064C  0022               	movlb	2	; select bank2
 10779  064D  130F               	bcf	15,6
 10780                           
 10781                           ;SimI2C.c: 55: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10782  064E  0064               	clrwdt
 10783                           
 10784                           ;SimI2C.c: 56: LATD7=1;
 10785  064F  0022               	movlb	2	; select bank2
 10786  0650  178F               	bsf	15,7
 10787                           
 10788                           ;SimI2C.c: 57: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10789  0651  0064               	clrwdt
 10790                           
 10791                           ;SimI2C.c: 58: LATD7=0;
 10792  0652  0022               	movlb	2	; select bank2
 10793  0653  138F               	bcf	15,7
 10794                           
 10795                           ;SimI2C.c: 59: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10796  0654  0064               	clrwdt
 10797                           
 10798                           ;SimI2C.c: 60: LATD6=1;
 10799  0655  0022               	movlb	2	; select bank2
 10800  0656  170F               	bsf	15,6
 10801  0657  0008               	return
 10802  0658                     __end_of_SimI2C_Ack:	
 10803  0658                     __ptext2104:	
 10804 ;; =============== function _SimI2C_Stop ends ============
 10805                           
 10806                           
 10807 ;; *************** function _SimI2C_NoAck *****************
 10808 ;; Defined at:
 10809 ;;		line 64 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10810 ;; Parameters:    Size  Location     Type
 10811 ;;		None
 10812 ;; Auto vars:     Size  Location     Type
 10813 ;;		None
 10814 ;; Return value:  Size  Location     Type
 10815 ;;		None               void
 10816 ;; Registers used:
 10817 ;;		None
 10818 ;; Tracked objects:
 10819 ;;		On entry : 1F/0
 10820 ;;		On exit  : 1F/2
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10823 ;;      Params:         0       0       0       0       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0
 10826 ;;      Totals:         0       0       0       0       0       0       0       0
 10827 ;;Total ram usage:        0 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    3
 10830 ;; This function calls:
 10831 ;;		Nothing
 10832 ;; This function is called by:
 10833 ;;		_TCN75_ReadReg
 10834 ;; This function uses a non-reentrant model
 10835 ;;
 10836  0658                     _SimI2C_NoAck:	
 10837                           
 10838                           ;SimI2C.c: 65: LATD7=1;
 10839                           
 10840                           ; Regs used in _SimI2C_NoAck: []
 10841  0658  0022               	movlb	2	; select bank2
 10842  0659  178F               	bsf	15,7
 10843                           
 10844                           ;SimI2C.c: 66: LATD6=1;
 10845  065A  170F               	bsf	15,6
 10846                           
 10847                           ;SimI2C.c: 67: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10848  065B  0064               	clrwdt
 10849                           
 10850                           ;SimI2C.c: 68: LATD7=0;
 10851  065C  0022               	movlb	2	; select bank2
 10852  065D  138F               	bcf	15,7
 10853  065E  0008               	return
 10854  065F                     __end_of_SimI2C_NoAck:	
 10855  065F                     __ptext2103:	
 10856 ;; =============== function _InitVariable ends ============
 10857                           
 10858                           
 10859 ;; *************** function _SimI2C_Stop *****************
 10860 ;; Defined at:
 10861 ;;		line 29 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;		None
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;		None               void
 10868 ;; Registers used:
 10869 ;;		None
 10870 ;; Tracked objects:
 10871 ;;		On entry : 1F/0
 10872 ;;		On exit  : 1F/2
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10875 ;;      Params:         0       0       0       0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0
 10878 ;;      Totals:         0       0       0       0       0       0       0       0
 10879 ;;Total ram usage:        0 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    3
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_TCN75_ReadReg
 10886 ;;		_TCN75_SetConfig
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889  065F                     _SimI2C_Stop:	
 10890                           
 10891                           ;SimI2C.c: 30: LATD7=0;
 10892                           
 10893                           ; Regs used in _SimI2C_Stop: []
 10894  065F  0022               	movlb	2	; select bank2
 10895  0660  138F               	bcf	15,7
 10896                           
 10897                           ;SimI2C.c: 31: LATD6=0;
 10898  0661  130F               	bcf	15,6
 10899                           
 10900                           ;SimI2C.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10901  0662  0064               	clrwdt
 10902                           
 10903                           ;SimI2C.c: 33: LATD7=1;
 10904  0663  0022               	movlb	2	; select bank2
 10905  0664  178F               	bsf	15,7
 10906                           
 10907                           ;SimI2C.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));;
 10908  0665  0064               	clrwdt
 10909                           
 10910                           ;SimI2C.c: 35: LATD6=1;
 10911  0666  0022               	movlb	2	; select bank2
 10912  0667  170F               	bsf	15,6
 10913  0668  0008               	return
 10914  0669                     __end_of_SimI2C_Stop:	
 10915  0669                     __ptext2137:	
 10916 ;; =============== function _Uart1_PutChar ends ============
 10917                           
 10918                           
 10919 ;; *************** function _SimI2C_Init *****************
 10920 ;; Defined at:
 10921 ;;		line 3 in file "F:\work\WYP\NBIoT\SimI2C.c"
 10922 ;; Parameters:    Size  Location     Type
 10923 ;;		None
 10924 ;; Auto vars:     Size  Location     Type
 10925 ;;		None
 10926 ;; Return value:  Size  Location     Type
 10927 ;;		None               void
 10928 ;; Registers used:
 10929 ;;		None
 10930 ;; Tracked objects:
 10931 ;;		On entry : 1F/0
 10932 ;;		On exit  : 1F/2
 10933 ;;		Unchanged: FFFE0/0
 10934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10935 ;;      Params:         0       0       0       0       0       0       0       0
 10936 ;;      Locals:         0       0       0       0       0       0       0       0
 10937 ;;      Temps:          0       0       0       0       0       0       0       0
 10938 ;;      Totals:         0       0       0       0       0       0       0       0
 10939 ;;Total ram usage:        0 bytes
 10940 ;; Hardware stack levels used:    1
 10941 ;; Hardware stack levels required when called:    3
 10942 ;; This function calls:
 10943 ;;		Nothing
 10944 ;; This function is called by:
 10945 ;;		_TCN75_Init
 10946 ;; This function uses a non-reentrant model
 10947 ;;
 10948  0669                     _SimI2C_Init:	
 10949  0669                     l32714:	
 10950                           ; Regs used in _SimI2C_Init: []
 10951                           
 10952                           
 10953                           ;SimI2C.c: 4: TRISD7=0;
 10954  0669  0021               	movlb	1	; select bank1
 10955  066A  138F               	bcf	15,7
 10956                           
 10957                           ;SimI2C.c: 5: TRISD6=0;
 10958  066B  130F               	bcf	15,6
 10959                           
 10960                           ;SimI2C.c: 13: LATD7=1;
 10961  066C  0022               	movlb	2	; select bank2
 10962  066D  178F               	bsf	15,7
 10963                           
 10964                           ;SimI2C.c: 14: LATD6=1;
 10965  066E  170F               	bsf	15,6
 10966  066F  0008               	return
 10967  0670                     __end_of_SimI2C_Init:	
 10968                           
 10969                           	psect	text2099
 10970  06B8                     __ptext2099:	
 10971 ;; =============== function _ATCommand_SendCmd ends ============
 10972                           
 10973                           
 10974 ;; *************** function _PowerDown *****************
 10975 ;; Defined at:
 10976 ;;		line 655 in file "F:\work\WYP\NBIoT\Function.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;  i               1    4[BANK0 ] unsigned char 
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      unsigned char 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, pclath, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 1F/0
 10987 ;;		On exit  : 1F/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10990 ;;      Params:         0       0       0       0       0       0       0       0
 10991 ;;      Locals:         0       1       0       0       0       0       0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0
 10993 ;;      Totals:         0       1       0       0       0       0       0       0
 10994 ;;Total ram usage:        1 bytes
 10995 ;; Hardware stack levels used:    1
 10996 ;; Hardware stack levels required when called:    4
 10997 ;; This function calls:
 10998 ;;		___delay_20ms
 10999 ;; This function is called by:
 11000 ;;		_CallProc
 11001 ;;		_PowerON
 11002 ;;		_CallTestProc
 11003 ;; This function uses a non-reentrant model
 11004 ;;
 11005  06B8                     _PowerDown:	
 11006                           
 11007                           ;Function.c: 656: unsigned char i;
 11008                           ;Function.c: 657: return 1;
 11009                           
 11010                           ; Regs used in _PowerDown: [wreg+status,2+status,0+pclath+cstack]
 11011  06B8  3401               	retlw	1
 11012  06B9                     l33186:	
 11013                           
 11014                           ;Function.c: 665: {
 11015                           ;Function.c: 666: __delay_20ms(50);
 11016  06B9  3032               	movlw	50
 11017  06BA  00A0               	movwf	?___delay_20ms
 11018  06BB  01A1               	clrf	?___delay_20ms+1
 11019  06BC  318B  2336  3186   	fcall	___delay_20ms
 11020                           
 11021                           ;Function.c: 667: if(RD4==1)
 11022  06BF  1A0F               	btfsc	15,4
 11023  06C0  2EC5               	goto	l33194
 11024                           
 11025                           ;Function.c: 669: i--;
 11026  06C1  03A4               	decf	PowerDown@i,f
 11027  06C2  08A4               	movf	PowerDown@i,f
 11028  06C3  1D03               	skipz
 11029  06C4  2EB9               	goto	l33186
 11030  06C5                     l33194:	
 11031                           
 11032                           ;Function.c: 670: }
 11033                           ;Function.c: 671: }
 11034                           ;Function.c: 672: if(i==0)
 11035  06C5  08A4               	movf	PowerDown@i,f
 11036  06C6  1903               	btfsc	3,2
 11037                           
 11038                           ;Function.c: 673: return 0;
 11039  06C7  3400               	retlw	0
 11040  06C8  3401               	retlw	1
 11041  06C9                     __end_of_PowerDown:	
 11042                           
 11043                           	psect	intentry
 11044  0004                     __pintentry:	
 11045 ;; =============== function _LcdDisplayNum ends ============
 11046                           
 11047                           
 11048 ;; *************** function _highISR *****************
 11049 ;; Defined at:
 11050 ;;		line 83 in file "F:\work\WYP\NBIoT\Main.c"
 11051 ;; Parameters:    Size  Location     Type
 11052 ;;		None
 11053 ;; Auto vars:     Size  Location     Type
 11054 ;;  rx              1    6[COMMON] unsigned char 
 11055 ;; Return value:  Size  Location     Type
 11056 ;;		None               void
 11057 ;; Registers used:
 11058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
 11059 ;; Tracked objects:
 11060 ;;		On entry : 0/0
 11061 ;;		On exit  : 1E/0
 11062 ;;		Unchanged: FFFE0/0
 11063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11064 ;;      Params:         0       0       0       0       0       0       0       0
 11065 ;;      Locals:         1       0       0       0       0       0       0       0
 11066 ;;      Temps:          0       0       0       0       0       0       0       0
 11067 ;;      Totals:         1       0       0       0       0       0       0       0
 11068 ;;Total ram usage:        1 bytes
 11069 ;; Hardware stack levels used:    1
 11070 ;; Hardware stack levels required when called:    2
 11071 ;; This function calls:
 11072 ;;		_ATCommand_ProcRx
 11073 ;; This function is called by:
 11074 ;;		Interrupt level 1
 11075 ;; This function uses a non-reentrant model
 11076 ;;
 11077  0004                     _highISR:	
 11078                           
 11079                           ; Regs used in _highISR: [allreg]
 11080  0004  3180               	pagesel	$
 11081                           
 11082                           ;Main.c: 84: unsigned char rx;
 11083                           ;Main.c: 85: if(RCIE&&RCIF)
 11084  0005  0021               	movlb	1	; select bank1
 11085  0006  1E91               	btfss	17,5
 11086  0007  2818               	goto	i1l30724
 11087  0008  0020               	movlb	0	; select bank0
 11088  0009  1E91               	btfss	17,5
 11089  000A  2818               	goto	i1l30724
 11090                           
 11091                           ;Main.c: 86: {
 11092                           ;Main.c: 87: RCIF=0;
 11093  000B  1291               	bcf	17,5
 11094                           
 11095                           ;Main.c: 88: if(OERR==1)
 11096  000C  0023               	movlb	3	; select bank3
 11097  000D  1C9D               	btfss	29,1
 11098  000E  2812               	goto	i1l30720
 11099                           
 11100                           ;Main.c: 89: {
 11101                           ;Main.c: 90: CREN=0;
 11102  000F  121D               	bcf	29,4
 11103                           
 11104                           ;Main.c: 91: OERR=0;
 11105  0010  109D               	bcf	29,1
 11106                           
 11107                           ;Main.c: 92: CREN=1;
 11108  0011  161D               	bsf	29,4
 11109  0012                     i1l30720:	
 11110                           
 11111                           ;Main.c: 93: }
 11112                           ;Main.c: 94: rx=RCREG;
 11113  0012  0819               	movf	25,w	;volatile
 11114  0013  00F6               	movwf	highISR@rx
 11115                           
 11116                           ;Main.c: 95: ATCommand_ProcRx(rx);
 11117  0014  0876               	movf	highISR@rx,w
 11118  0015  3186  2670  3180   	fcall	_ATCommand_ProcRx
 11119  0018                     i1l30724:	
 11120                           
 11121                           ;Main.c: 96: }
 11122                           ;Main.c: 97: if(TMR1IF&& TMR1IE)
 11123  0018  0020               	movlb	0	; select bank0
 11124  0019  1C11               	btfss	17,0
 11125  001A  0009               	retfie
 11126  001B  0021               	movlb	1	; select bank1
 11127  001C  1C11               	btfss	17,0
 11128  001D  0009               	retfie
 11129  001E  0064               	clrwdt	;#
 11130                           
 11131                           ;Main.c: 100: TMR1IF=0;
 11132  001F  0020               	movlb	0	; select bank0
 11133  0020  1011               	bcf	17,0
 11134                           
 11135                           ;Main.c: 101: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
 11136  0021  303C               	movlw	60
 11137  0022  0097               	movwf	23	;volatile
 11138  0023  30B0               	movlw	176
 11139  0024  0096               	movwf	22	;volatile
 11140                           
 11141                           ;Main.c: 102: SystemTick++;
 11142  0025  0ADD               	incf	_SystemTick,f
 11143  0026  1903               	skipnz
 11144  0027  0ADE               	incf	_SystemTick+1,f
 11145  0028  0009               	retfie
 11146  0029                     __end_of_highISR:	
 11147                           
 11148                           	psect	text2148
 11149  0670                     __ptext2148:	
 11150 ;; =============== function _highISR ends ============
 11151                           
 11152                           
 11153 ;; *************** function _ATCommand_ProcRx *****************
 11154 ;; Defined at:
 11155 ;;		line 27 in file "F:\work\WYP\NBIoT\ATCommand.c"
 11156 ;; Parameters:    Size  Location     Type
 11157 ;;  rx              1    wreg     unsigned char 
 11158 ;; Auto vars:     Size  Location     Type
 11159 ;;  rx              1    5[COMMON] unsigned char 
 11160 ;; Return value:  Size  Location     Type
 11161 ;;		None               void
 11162 ;; Registers used:
 11163 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11164 ;; Tracked objects:
 11165 ;;		On entry : 1F/3
 11166 ;;		On exit  : 1F/3
 11167 ;;		Unchanged: FFFE0/0
 11168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11169 ;;      Params:         0       0       0       0       0       0       0       0
 11170 ;;      Locals:         1       0       0       0       0       0       0       0
 11171 ;;      Temps:          3       0       0       0       0       0       0       0
 11172 ;;      Totals:         4       0       0       0       0       0       0       0
 11173 ;;Total ram usage:        4 bytes
 11174 ;; Hardware stack levels used:    1
 11175 ;; Hardware stack levels required when called:    1
 11176 ;; This function calls:
 11177 ;;		_isgraph
 11178 ;; This function is called by:
 11179 ;;		_highISR
 11180 ;; This function uses a non-reentrant model
 11181 ;;
 11182  0670                     _ATCommand_ProcRx:	
 11183                           
 11184                           ; Regs used in _ATCommand_ProcRx: [wreg+fsr1l-status,0+pclath+cstack]
 11185                           ;ATCommand_ProcRx@rx stored from wreg
 11186  0670  00F5               	movwf	ATCommand_ProcRx@rx
 11187                           
 11188                           ;ATCommand.c: 28: if(ATCommand_Flags.bRx)
 11189  0671  18F8               	btfsc	_ATCommand_Flags,1
 11190  0672  0008               	return
 11191                           
 11192                           ;ATCommand.c: 30: if(ATCommand_Clear!='\0')
 11193  0673  0877               	movf	_ATCommand_Clear,w
 11194  0674  1903               	btfsc	3,2
 11195  0675  2E7E               	goto	i1l15117
 11196                           
 11197                           ;ATCommand.c: 31: {
 11198                           ;ATCommand.c: 32: if(rx==ATCommand_Clear)
 11199  0676  0875               	movf	ATCommand_ProcRx@rx,w
 11200  0677  0677               	xorwf	_ATCommand_Clear,w
 11201  0678  1D03               	skipz
 11202  0679  2E7E               	goto	i1l15117
 11203  067A                     i1l30740:	
 11204                           
 11205                           ;ATCommand.c: 33: {
 11206                           ;ATCommand.c: 34: ATCommand_RxCount=0;
 11207  067A  01F9               	clrf	_ATCommand_RxCount
 11208  067B                     i1l30742:	
 11209                           
 11210                           ;ATCommand.c: 35: ATCommand_RxList[ATCommand_RxCount]='\0';
 11211  067B  318F  27C9         	fcall	PL2	;call to abstracted procedure
 11212  067D  0008               	return
 11213  067E                     i1l15117:	
 11214                           
 11215                           ;ATCommand.c: 37: }
 11216                           ;ATCommand.c: 38: }
 11217                           ;ATCommand.c: 39: if(ATCommand_Flags.bChar)
 11218  067E  1C78               	btfss	_ATCommand_Flags,0
 11219  067F  2E8C               	goto	i1l30760
 11220                           
 11221                           ;ATCommand.c: 40: {
 11222                           ;ATCommand.c: 41: ATCommand_RxList[ATCommand_RxCount++]=rx;
 11223  0680  0875               	movf	ATCommand_ProcRx@rx,w
 11224                           
 11225                           ;ATCommand.c: 42: if(ATCommand_RxCount>=100)
 11226  0681  26A6  3186         	fcall	PL3	;call to abstracted procedure
 11227  0683  1C03               	skipc
 11228  0684  2E87               	goto	i1l30754
 11229                           
 11230                           ;ATCommand.c: 43: {
 11231                           ;ATCommand.c: 44: ATCommand_RxCount=0;
 11232  0685  01F9               	clrf	_ATCommand_RxCount
 11233                           
 11234                           ;ATCommand.c: 45: }
 11235  0686  2E89               	goto	i1l30756
 11236  0687                     i1l30754:	
 11237                           
 11238                           ;ATCommand.c: 46: else
 11239                           ;ATCommand.c: 47: {
 11240                           ;ATCommand.c: 48: ATCommand_RxList[ATCommand_RxCount]='\0';
 11241  0687  318F  27C9         	fcall	PL2	;call to abstracted procedure
 11242  0689                     i1l30756:	
 11243                           
 11244                           ;ATCommand.c: 49: }
 11245                           ;ATCommand.c: 50: if(!ATCommand_Flags.bWaitData)
 11246  0689  1D78               	btfss	_ATCommand_Flags,2
 11247                           
 11248                           ;ATCommand.c: 51: {
 11249                           ;ATCommand.c: 52: ;;
 11250                           ;ATCommand.c: 53: ATCommand_RxCount=0;
 11251  068A  01F9               	clrf	_ATCommand_RxCount
 11252  068B  0008               	return
 11253  068C                     i1l30760:	
 11254                           
 11255                           ;ATCommand.c: 56: else
 11256                           ;ATCommand.c: 57: {
 11257                           ;ATCommand.c: 58: if(isgraph(rx)==1)
 11258  068C  0875               	movf	ATCommand_ProcRx@rx,w
 11259  068D  2698  3186         	fcall	_isgraph
 11260  068F  1C03               	btfss	3,0
 11261  0690  0008               	return
 11262                           
 11263                           ;ATCommand.c: 59: {
 11264                           ;ATCommand.c: 60: ATCommand_Flags.bChar=1;
 11265  0691  1478               	bsf	_ATCommand_Flags,0
 11266                           
 11267                           ;ATCommand.c: 61: ATCommand_RxList[ATCommand_RxCount++]=rx;
 11268  0692  0875               	movf	ATCommand_ProcRx@rx,w
 11269                           
 11270                           ;ATCommand.c: 62: if(ATCommand_RxCount>=100)
 11271  0693  26A6  3186         	fcall	PL3	;call to abstracted procedure
 11272  0695  1803               	btfsc	3,0
 11273  0696  2E7A               	goto	i1l30740
 11274  0697  2E7B               	goto	i1l30742
 11275  0698                     __end_of_ATCommand_ProcRx:	
 11276  0698                     __ptext2149:	
 11277 ;; =============== function _ATCommand_ProcRx ends ============
 11278                           
 11279                           
 11280 ;; *************** function _isgraph *****************
 11281 ;; Defined at:
 11282 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isgraph.c"
 11283 ;; Parameters:    Size  Location     Type
 11284 ;;  c               1    wreg     unsigned char 
 11285 ;; Auto vars:     Size  Location     Type
 11286 ;;  c               1    1[COMMON] unsigned char 
 11287 ;; Return value:  Size  Location     Type
 11288 ;;		None               void
 11289 ;; Registers used:
 11290 ;;		wreg, status,2, status,0
 11291 ;; Tracked objects:
 11292 ;;		On entry : 1F/3
 11293 ;;		On exit  : 1F/3
 11294 ;;		Unchanged: FFFE0/0
 11295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11296 ;;      Params:         0       0       0       0       0       0       0       0
 11297 ;;      Locals:         2       0       0       0       0       0       0       0
 11298 ;;      Temps:          0       0       0       0       0       0       0       0
 11299 ;;      Totals:         2       0       0       0       0       0       0       0
 11300 ;;Total ram usage:        2 bytes
 11301 ;; Hardware stack levels used:    1
 11302 ;; This function calls:
 11303 ;;		Nothing
 11304 ;; This function is called by:
 11305 ;;		_ATCommand_ProcRx
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308  0698                     _isgraph:	
 11309                           
 11310                           ; Regs used in _isgraph: [wreg+status,2+status,0]
 11311                           ;isgraph@c stored from wreg
 11312  0698  00F1               	movwf	isgraph@c
 11313  0699  01F0               	clrf	_isgraph$31798
 11314  069A  307F               	movlw	127
 11315  069B  0271               	subwf	isgraph@c,w
 11316  069C  1803               	skipnc
 11317  069D  2EA4               	goto	i1l30848
 11318  069E  3021               	movlw	33
 11319  069F  0271               	subwf	isgraph@c,w
 11320  06A0  1C03               	skipc
 11321  06A1  2EA4               	goto	i1l30848
 11322  06A2  01F0               	clrf	_isgraph$31798
 11323  06A3  0AF0               	incf	_isgraph$31798,f
 11324  06A4                     i1l30848:	
 11325  06A4  0C70               	rrf	_isgraph$31798,w
 11326  06A5  0008               	return
 11327  06A6                     __end_of_isgraph:	
 11328  06A6                     PL3:	
 11329  06A6  00F2               	movwf	??_ATCommand_ProcRx
 11330  06A7  0879               	movf	_ATCommand_RxCount,w
 11331  06A8  3E8C               	addlw	140
 11332  06A9  00F3               	movwf	??_ATCommand_ProcRx+1
 11333  06AA  3021               	movlw	33
 11334  06AB  1803               	skipnc
 11335  06AC  3022               	movlw	34
 11336  06AD  00F4               	movwf	??_ATCommand_ProcRx+2
 11337  06AE  0873               	movf	??_ATCommand_ProcRx+1,w
 11338  06AF  0086               	movwf	6
 11339  06B0  0874               	movf	??_ATCommand_ProcRx+2,w
 11340  06B1  0087               	movwf	7
 11341  06B2  0872               	movf	??_ATCommand_ProcRx,w
 11342  06B3  0081               	movwf	1
 11343  06B4  0AF9               	incf	_ATCommand_RxCount,f
 11344  06B5  3064               	movlw	100
 11345  06B6  0279               	subwf	_ATCommand_RxCount,w
 11346  06B7  0008               	return
 11347                           
 11348                           	psect	text2150
 11349  0000                     __ptext2150:	
 11350 ;; =============== function _isgraph ends ============
 11351                           
 11352  007E                     btemp	set	126	;btemp
 11353  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Wed Jan 02 15:14:10 2019

              ___bmul@product 0021                            _RD 0CA8                            _WA 3C94  
                          _WR 0CA9           ___wmul@multiplicand 0022                           _GIE 005F  
                         _RB1 0069                           _RB2 006A                           _RB7 006F  
                         _CSQ 0062                           _RD4 007C                           _RD6 007E  
                         _PR2 001B       __end_of_TCN75_SetConfig 05B7             DS18X20_ReadMeas@i 002B  
            SimI2C_SendByte@i 0022              SimI2C_SendByte@t 0021                           wreg 0009  
       ATCommand_WaitData@res 0033                   ?_TCN75_Init 0070                          l2110 01A3  
                        l2102 0197                          l2201 0230                          l2121 01B8  
                        l2113 01AC                          l2105 01A0                          l2210 0238  
                        l2202 022C                          l2130 01C0                          l2122 01B4  
                        l2114 01A8                          l2106 019C                          l2050 0148  
                        l2301 012E                          l2214 023F                          l2206 0233  
                        l2150 01DF                          l2142 01D3                          l2134 01C7  
                        l2126 01BB                          l2118 01AF                          l2070 0167  
                        l2062 015B                          l2054 014F                          l2046 0143  
                        l2310 0137                          l2231 00D9                          l2304 0131  
                        l2240 00E2                          l2209 023C                          l2161 01F4  
                        l2153 01E8                          l2145 01DC                          l2137 01D0  
                        l2129 01C4                          l2081 017C                          l2073 0170  
                        l2065 0164                          l2057 0158                          l2049 014C  
                        l2313 013A                          l2225 00D3                          l2218 0244  
                        l2170 01FC                          l2162 01F0                          l2154 01E4  
                        l2146 01D8                          l2138 01CC                          l2090 0184  
                        l2082 0178                          l2074 016C                          l2066 0160  
                        l2058 0154                          l2234 00DC                          l2322 0000  
                        l2307 0134                          l2243 00E5                          l2316 013D  
                        l2260 00FC                          l2252 00EE                          l2228 00D6  
                        l2237 00DF                          l2333 02E5                          l2190 021B  
                        l2182 020F                          l2174 0203                          l2166 01F7  
                        l2158 01EB                          l2094 018B                          l2086 017F  
                        l2078 0173                          l2246 00E8                          l2326 02DD  
                        l2342 024D                          l2263 00FF                          l2272 0108  
                        l2336 0000                          l2193 0224                          l2185 0218  
                        l2177 020C                          l2169 0200                          l2097 0194  
                        l2089 0188                          l2281 0111                          l2257 00F9  
                        l2249 00EB                          l2329 02E1                          l2345 0000  
                        l2194 0220                          l2186 0214                          l2178 0208  
                        l2098 0190                          l2266 0102                          l2275 010B  
                        l2339 0249                          l2348 0000                          l2292 0125  
                        l2284 0114                          l2269 0105                          l2198 0227  
                        l2286 0116                          l2278 010E                          l2295 0128  
                        l2289 0122                          l2298 012B                          l4415 0000  
                        l4431 0000                          l4423 0426                          l4409 0000  
                        l4426 0430                          l4419 0421                          l6504 087E  
                        l6541 0000                          l6527 0908                          l6528 08E2  
                        l8800 0000                          l8632 002C                          l8801 0335  
                        l8641 0036                          l8635 0030                          l8708 0DAB  
                        l8660 006B                          l8741 0000                          l8645 003C  
                        l8638 0033                          l8663 006F                          l8680 09B4  
                        l8648 0040                          l8666 0072                          l8669 0075  
                        l8790 0000                          l8689 0CFC                          STR_1 1046  
                        STR_2 1022                          STR_3 106E                          STR_4 10BB  
                        STR_5 1105                          STR_6 1100                          STR_7 106E  
                        STR_8 10CD                          STR_9 1105                          _CREN 0CEC  
                        u4325 054D                          _PEIE 005E                          _SEG3 3CC3  
                        _SEG5 3CC5                          _SEG6 3CC6                          u4385 03C0  
                        u5274 03AB                          u5275 03AA                          _RCIE 048D  
                        _RCIF 008D                          u4645 0270                          u5294 03F5  
                        u5295 03F4                          _OERR 0CE9                          u8165 02EF  
                        u9125 0E9E                          u7735 0FBA                          u8535 0B14  
                        u7695 0F90                          u8595 0961                          u8915 0CF9  
                        u8945 0D3D                          u9825 088F                          u9907 0084  
                        u9917 040A                          u9927 039F                          u9937 0B44  
                        u9947 04E9                          u9957 04F2                          u9967 04FD  
                        u9897 085E                          _WERR 3C8D                          _TRMT 0CF1  
                        _WREN 0CAA                ??_eeprom_write 0021                 _SimI2C_RecAck 060E  
                        _atoi 0C3E                          _main 0842                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               ?_SimI2C_NoAck 0070                          start 0029                 ??_SimI2C_Init 0020  
               ?_SimI2C_Start 0070                 ??_SimI2C_Stop 0020         __size_of_CallTestSend 001E  
       __size_of_CallTestProc 0051             ___bmul@multiplier 0022        ATCommand_WaitData@strx 0034  
             __end_of_InitMCU 04C2                  InitGPRS@strx 003C                 ?_InitVariable 0070  
       __end_of_LcdDisplayAll 0140         __end_of_LcdDisplayNum 0249                    _GetRomData 0524  
             __end_of_PowerON 034B           __end_of_DisplayInit 0484                         l13041 0000  
                       l10902 0291                         l10920 02C3                         l10905 0295  
                       l10923 02C6                         l10917 02BF                         l10926 02C9  
                       l31040 0000                         l15112 0000                         l10936 0988  
                       l10880 00B4                         l31042 0000                         l21346 0000  
                       l15130 0AE2                         l21355 0000                         l31052 027D  
                       l31044 026D                         l31300 0000                         l21364 0000  
                       l15132 0B16                         l10892 0285                         l31054 0000  
                       l31046 0000                         l31310 0000                         l10895 0288  
                       l31048 0000                         l33000 0C4A                         l31320 0407  
                       l31312 0000                         l15144 0963                         l10889 0281  
                       l31170 0000                         l33010 0C8C                         l31322 0000  
                       l31314 0000                         l31306 03F0                         l10898 028B  
                       l15139 0000                         l31180 0000                         l31172 0000  
                       l33020 0000                         l33004 0000                         l31324 0000  
                       l31316 0000                         l31308 0000                         l33100 0000  
                       l23421 0000                         l15149 0000                         l31190 0508  
                       l31174 0000                         l23430 0F5E                         l31326 0000  
                       l33030 0000                         l31184 0505                         l31176 0000  
                       l31168 0000                         l33024 0C9F                         l33016 0C67  
                       l33008 0C5F                         l31328 0000                         l33112 0000  
                       l33104 0000                         l23418 0FA1                         l31178 0000  
                       l33018 0C90                         l31290 0000                         l31282 0000  
                       l33042 0000                         l33050 0000                         l33106 0000  
                       l33122 0592                         l33130 0000                         l34010 02A8  
                       l34002 0298                         l31188 04DD                         l31292 0000  
                       l33028 0000                         l33044 0000                         l33036 0000  
                       l33052 0000                         l33124 05B3                         l33132 0000  
                       l33220 0000                         l33212 0000                         l33204 0000  
                       l34012 0000                         l34020 02B2                         l34100 086D  
                       l23437 0EF8                         l30902 0000                         l30910 0000  
                       l31294 03AF                         l33038 0000                         l33046 0000  
                       l33070 0000                         l33126 0000                         l33118 0000  
                       l33150 0000                         l33230 0AF5                         l33222 0000  
                       l33214 0000                         l33206 0000                         l33310 0000  
                       l33302 0954                         l34030 0000                         l34014 0000  
                       l34006 0000                         l34110 0000                         l12991 0000  
                       l32600 0000                         l30824 0000                         l30832 0000  
                       l30904 0B9F                         l30920 0BE8                         l23448 0000  
                       l31288 0000                         l33048 0000                         l33056 0000  
                       l33080 0000                         l33160 0000                         l33152 0000  
                       l33144 0000                         l33136 0000                         l33232 0000  
                       l33224 0000                         l33216 0000                         l33208 0000  
                       l33312 0000                         l33304 0956                         l34032 0000  
                       l34024 0000                         l34040 0000                         l34120 0000  
                       l34112 0000                         l32610 0000                         l32602 0000  
                       l30826 0B87                         l30834 0544                         l30922 0BBA  
                       l30930 0000                         l33066 0000                         l33058 0000  
                       l33074 0000                         l33090 0000                         l33162 0000  
                       l33138 0000                         l33242 0000                         l33218 0000  
                       l33250 0ACF                         l33314 0000                         l33330 0000  
                       l34034 02D1                         l34026 0000                         l34018 02B1  
                       l34050 00A6                         l34130 0000                         l34122 0000  
                       l34114 0000                         l34106 0883                         l32540 0000  
                       l32620 0000                         l32612 0000                         l32604 0000  
                       l30836 0558                         l30828 0000                         l30860 0000  
                       l30852 0000                         l30924 0BEF                         l30916 0BD9  
                       l12988 0B36                         l33068 0000                         l33076 0000  
                       l33084 0000                         l33164 05BB                         l33260 0000  
                       l33252 0B21                         l33236 0B07                         l33308 0000  
                       l33340 0000                         l33412 0000                         l33500 0000  
                       l34028 029B                         l34052 00A9                         l34044 0000  
                       l34036 0000                         l34140 0000                         l34132 0000  
                       l34124 0000                         l34116 0000                         l25501 03D9  
                       l32550 0000                         l32542 0000                         l32630 0000  
                       l32622 0000                         l32614 0000                         l32606 0000  
                       l32710 0F45                         l30870 0000                         l30862 0000  
                       l33078 0000                         l33094 051E                         l33086 0514  
                       l33166 05E9                         l33158 0000                         l33254 0000  
                       l33246 0B1A                         l33238 0B09                         l33326 0000  
                       l33318 0000                         l33422 0000                         l34062 0000  
                       l34054 0000                         l34046 0000                         l34150 0000  
                       l34142 0000                         l34070 0000                         l32560 0000  
                       l32552 0000                         l32544 0000                         l32640 0000  
                       l32632 0000                         l32624 0000                         l32616 0000  
                       l32608 0000                         l32704 0000                         l25504 0000  
                       l30880 03E0                         l30872 0000                         l30864 0000  
                       l30856 0000                         l32720 0000                         l30928 0000  
                       l33088 0000                         l33168 0000                         l33256 0000  
                       l33248 0000                         l33272 0000                         l33264 0000  
                       l33280 0000                         l33360 036B                         l33416 0346  
                       l33408 0000                         l33432 09E6                         l33424 0000  
                       l33600 0000                         l34056 0000                         l34064 00BA  
                       l34128 08B3                         l34152 08D5                         l34080 0000  
                       l34072 0000                         l32570 0000                         l32562 0000  
                       l32554 0000                         l32546 0000                         l32642 0000  
                       l32634 0000                         l32626 0000                         l32618 0000  
                       l32650 0000                         l30874 0000                         l30866 03D4  
                       l30858 03CB                         l32714 0669                         l32722 0000  
                       l32802 0FC0                         l32810 0000                         l33098 0000  
                       l33194 06C5                         l33186 06B9                         l33258 0000  
                       l33266 0000                         l33290 0000                         l33282 0000  
                       l33274 0000                         l33362 0000                         l33354 0000  
                       l33418 0000                         l33506 0A8A                         l33514 0A55  
                       l33450 0A07                         l33426 0000                         l33610 0000  
                       l33602 0D40                         l34066 0000                         l34058 0000  
                       l34154 0000                         l34146 0000                         l34138 08BB  
                       l34090 0000                         l34082 0000                         l34074 0000  
                       l32580 0000                         l32572 0000                         l32564 0000  
                       l32556 0000                         l32548 0000                         l32644 0000  
                       l32636 0000                         l32628 0000                         l32660 0000  
                       l32652 0000                         l30876 0000                         l30868 0000  
                       l32716 0000                         l32740 0000                         l32732 0000  
                       l32804 0000                         l32820 0000                         l32812 0000  
                       l32900 0000                         l33188 0000                         l33284 0000  
                       l33276 0000                         l33364 0000                         l33540 0000  
                       l33532 0AAC                         l33524 0A9B                         l33508 0000  
                       l33516 0A91                         l33700 0000                         l33620 0D5E  
                       l33612 0000                         l34068 0000                         l34156 08D8  
                       l34084 0000                         l34076 0000                         l32494 0140  
                       l32590 0000                         l32582 0000                         l32574 0000  
                       l32566 0000                         l32558 0000                         l32646 0000  
                       l32638 0000                         l32662 0000                         l32654 0000  
                       l32670 0000                         l30878 03BA                         l32742 0000  
                       l32734 0F71                         l32750 0FED                         l32806 0FC4  
                       l32814 0000                         l32830 0C3C                         l32902 0000  
                       l33286 0000                         l33278 0000                         l33390 0000  
                       l33534 0000                         l33542 0A9D                         l33470 0A34  
                       l33462 0000                         l33446 0000                         l33438 09F2  
                       l33702 0000                         l33550 0000                         l34094 0000  
                       l34086 0857                         l34078 0000                         l32584 0000  
                       l32576 0000                         l32568 0000                         l32592 0000  
                       l32664 0000                         l32728 0CB0                         l32824 0000  
                       l32816 0C2C                         l32840 00F2                         l32920 0000  
                       l33296 0942                         l33288 092F                         l33384 0000  
                       l33544 0AC4                         l33472 0000                         l33480 0A10  
                       l33456 0A0D                         l33448 09F4                         l33712 0E08  
                       l33640 0DD1                         l33632 0DC2                         l33616 0000  
                       l33608 0D4A                         l33624 0DA5                         l33800 0CB5  
                       l33552 0CB2                         l34096 0000                         l28017 0BF2  
                       l32586 0000                         l32578 0000                         l32594 0000  
                       l32658 0000                         l32682 0000                         l28026 0000  
                       l32754 0FF3                         l32826 0C39                         l32850 0000  
                       l32842 0000                         l32834 0000                         l32906 0000  
                       l32930 0563                         l32922 0000                         l33298 0000  
                       l33378 0382                         l33386 0000                         l33482 0000  
                       l33474 0000                         l33802 0ED7                         l33722 0E43  
                       l33706 0000                         l33650 0DD6                         l33714 0E3D  
                       l33626 0000                         l33618 0D54                         l33562 0CD6  
                       l34098 0000                         l32588 0000                         l32596 0000  
                       l32676 0F13                         l32668 0000                         l32756 0000  
                       l32748 0000                         l32780 0000                         l32764 0000  
                       l32828 0000                         l32844 0000                         l32852 0000  
                       l32860 02D2                         l32908 0000                         l32932 0000  
                       l32924 0000                         l32940 0000                         l33388 0000  
                       l33492 0000                         l33484 0A16                         l33724 0000  
                       l33708 0000                         l33652 0000                         l33628 0000  
                       l33580 0000                         l33572 0CE4                         l33556 0000  
                       l33812 08EB                         l33900 0000                         l32598 0000  
                       l25494 0000                         l32758 0000                         l32782 0F97  
                       l32774 0F88                         l32766 0000                         l32790 0000  
                       l32846 0118                         l32838 0000                         l32854 0000  
                       l32870 0000                         l32934 0000                         l32942 0000  
                       l33486 0A50                         l33742 0000                         l33734 0E5D  
                       l33726 0000                         l33670 0000                         l33662 0DF0  
                       l33654 0000                         l33750 0E73                         l33590 0000  
                       l33582 0000                         l33574 0000                         l33566 0000  
                       l33558 0000                         l33814 08EE                         l33806 0000  
                       l33910 0000                         l33902 0000                         l32688 0F23  
                       l32784 0000                         l32776 0000                         l32856 0000  
                       l32872 0000                         l32864 0000                         l32880 0321  
                       l32936 0000                         l32944 0000                         l33496 0000  
                       l33760 0000                         l33752 0E74                         l33744 0000  
                       l33736 0000                         l33728 0000                         l33672 0000  
                       l33664 0000                         l33656 0000                         l33576 0000  
                       l33824 0901                         l33816 0000                         l33840 0000  
                       l33912 0000                         l19281 0000                         l32698 0F32  
                       l27602 0F48                         l32786 0F9B                         l32858 0000  
                       l32874 0000                         l32866 0000                         l32890 0000  
                       l32882 0000                         l32938 0000                         l19266 0000  
                       l32954 0000                         l32946 0000                         l32970 0000  
                       l32962 0EE4                         l33498 0000                         l33770 0000  
                       l33738 0000                         l33690 0000                         l33666 0000  
                       l33586 0D1A                         l33826 0904                         l33850 0000  
                       l33842 0000                         l33930 042F                         l33922 042A  
                       l33914 0000                         l27604 0000                         l32876 0000  
                       l32868 0000                         l32884 0000                         l32892 0000  
                       l32948 0000                         l32956 0000                         l32980 0B4B  
                       l19284 038D                         l33748 0E3E                         l33692 0000  
                       l33596 0D28                         l33780 0EAB                         l33828 0000  
                       l33852 0000                         l33844 0000                         l33940 0000  
                       l33932 0439                         l33924 0000                         l33916 0000  
                       l32798 0FB4                         l32878 0000                         l32886 0000  
                       l32974 0EF4                         l32966 0000                         l32958 0000  
                       l32990 0B82                         l32982 0000                         l33790 0000  
                       l33782 0000                         l33766 0E89                         l33758 0000  
                       l33686 0E0D                         l33678 0E06                         l33598 0000  
                       l33838 0927                         l33862 0000                         l33846 0000  
                       l33950 0000                         l33942 0000                         l33918 0000  
                       l27623 0000                         l19287 0000                         l27624 0574  
                       l32888 0000                         l32968 0000                         l33792 0000  
                       l33784 0000                         l33776 0EA8                         l33768 0000  
                       l33688 0000                         l33880 09CC                         l33872 0000  
                       l33864 0000                         l33848 0000                         l33856 09A8  
                       l33944 0000                         l33936 0000                         l33952 0449  
                       l27561 0000                         l27650 0000                         l32898 0525  
                       l32986 0B77                         l32978 0000                         l32994 0000  
                       l27570 0000                         l33786 0000                         l33698 0E27  
                       l33882 0000                         l33874 0000                         l33858 09B1  
                       l33890 0000                         l33954 0000                         l33946 0000  
                       l33938 0000                         l33962 0043                         l27715 0C31  
                       l27708 0000                         l27724 0000                         l32996 0C46  
                       l27564 0000                         l33788 0000                         l33884 0000  
                       l33956 0000                         l33948 0000                         l33980 005D  
                       l33972 0054                         l27661 0000                         l27581 05FD  
                       l27573 0000                         l27718 0000                         l32998 0C3E  
                       l27582 05FF                         l33798 0000                         l33878 09CA  
                       l33974 0000                         l33982 005E                         l33966 0000  
                       l33990 0046                         l33958 0000                         l27583 0000  
                       l27567 0000                         l27576 0000                         l33896 0985  
                       l33888 0000                         l33992 0000                         l33976 0000  
                       l33968 0000                         l27682 0000                         l27586 0634  
                       l33994 0000                         l33986 0000                         l27579 05F0  
                       l33996 007D                         l33988 0000                         l27589 0000  
                       l33998 0000                         l27688 0000                         l27698 0000  
                       ?_atoi 0026                         ?_main 0070               __end_of___lbdiv 0C3E  
                       STR_10 1100                         STR_11 105D                         STR_20 110F  
                       STR_12 108E                         STR_21 10EE                         STR_13 107E  
                       STR_30 1046                         STR_22 10D6                         STR_14 10C4  
                       STR_15 1105                         STR_31 1022                         STR_23 10B1  
                       STR_16 1100                         STR_32 1113                         STR_24 110A  
                       STR_33 10FA                         STR_17 10E7                         STR_25 10DF  
                       STR_34 1116                         STR_18 10FA                         STR_26 10F4  
                       STR_35 1113                         STR_19 1116                         STR_27 109B  
                       STR_36 10FA                         STR_28 10A6                         STR_29 110F  
                       STR_37 1113                         STR_38 10FA               __end_of___lbmod 0281  
                       _CARRY 0018                         _ICCID 00A0                         _LCDEN 3C8F  
                       _T1CON 0018                         _T2CON 001C                         _LATB1 0869  
                       _LATA3 0863                         _LATA4 0864                         _LATD5 087D  
                       _LATD6 087E                         _LATD7 087F                         _LCDRL 0795  
                       _LCDPS 0792               __end_of___lwdiv 0FA0                         _SEG11 3CCB  
                       _SEG21 3CD5                         _SEG22 3CD6                         _SEG23 3CD7  
                       _SEG16 3CD0               __end_of___lwmod 0FC9                         _RCREG 0199  
                       _RCSTA 019D                         _TMR1H 0017                         _TMR1L 0016  
                       _SPBRG 019B                    _TListIndex 0065               _OneWire_Command 03E2  
                       _WPUB7 106F                _LcdDisplay_CSQ 0C0A                         _TXREG 019A  
                       _TXSTA 019E                _LcdDisplay_Err 0249                         _TList 0120  
             __end_of_highISR 0029               __end_of_isdigit 0CB2             OneWire_ReadByte@b 0021  
           OneWire_ReadByte@i 0023               __end_of_isgraph 06A6                         atoi@a 002D  
                       atoi@s 0026                         main@i 004C  __size_of_Uart1_PutString_Hex 0010  
             InteractServer@i 0045               InteractServer@j 0043               InteractServer@k 0044  
              ?_SimI2C_RecAck 0070               InteractServer@t 0040                  _CallTestSend 0977  
                _CallTestProc 0281              __end_of_CallSend 09D4              __end_of_CallProc 007E  
               Uart1_PutHex@b 0022                 Uart1_PutHex@c 0021                ??_SimI2C_NoAck 0020  
                       status 0003                         wtemp0 007E               __end_of_strncmp 0BF2  
             ___lbdiv@divisor 0020                ??_SimI2C_Start 0020        __size_of_TCN75_ReadReg 0036  
             ___lbdiv@counter 0022                    _SimI2C_Ack 064C                   InitSystem@x 002D  
                __end_of_atoi 0CA4                  __end_of_main 08DD                ??_InitVariable 0028  
            __end_of_InitGPRS 0ACA           __size_of_TCN75_Init 0001                    _InitSystem 0417  
     __size_of_GetVerify_CRC8 002C           __end_of_SimI2C_Init 0670                 InitGPRS@retry 003E  
         __end_of_SimI2C_Stop 0669                 ??_SaveRomData 0027                        ??_atoi 0028  
                      ??_main 0049        __end_of_LcdDisplay_CSQ 0C26           GetVerify_CRC8@Count 0020  
      __end_of_LcdDisplay_Err 0269           GetVerify_CRC8@pBuff 0023              ?_TCN75_SetConfig 0070  
            __end_of_TestProc 00C8                        _ADCON1 009E                        _EEADRL 0191  
                      _EEDATA 0193                        _EECON1 0195                        _EECON2 0196  
              _ATCommand_Init 04C2                _TxErrDataIndex 0069                        _ANSELA 018C  
                      _ANSELB 018D                        _ANSELD 018F                        _ANSELE 0190  
                      _LCDCON 0791                        _LCDSE0 0798                        _LCDCST 0794  
                      _LCDSE1 0799                        _LCDSE2 079A        __size_of_OneWire_Reset 0031  
                      _LCDREF 0793        OneWire_Command@command 0024             ?_DS18X20_ReadMeas 0070  
          __size_of_ReadTData 004C                        _TMR1IE 0488                        _TMR1IF 0088  
                      _TMR2IE 0489                        _TMR2IF 0089                        _TMR1ON 00C0  
                      _TMR2ON 00E2                        _TRISB1 0469                        _TRISA3 0463  
                      _TRISB2 046A                        _TRISA4 0464                        _TRISB7 046F  
                      _TRISD4 047C                        _TRISC6 0476                        _TRISD5 047D  
                      _TRISC7 0477                        _TRISD6 047E                        _TRISD7 047F  
          ??_DS18X20_ReadMeas 002A   __size_of_ATCommand_WaitData 004E                     ??_InitMCU 0020  
                      _DpyNum 006A              _OneWire_ReadByte 038A          __size_of_eeprom_read 0017  
                      _gFlags 0066                   _DisplayInit 0457                     ??_PowerON 0039  
                      _nWPUEN 04AF                        ___bmul 0F6F         __end_of_GetVerify_Sum 055A  
                      ___wmul 0FEB             ?_ATCommand_ProcRx 0070                     ??___lbdiv 0021  
                   ??___lbmod 0021               _SimI2C_ReadByte 062C                     ??___lwdiv 0024  
                   ??___lwmod 0024       __end_of_OneWire_Command 03EE                   ?_GetRomData 0070  
          ??_ATCommand_ProcRx 0072               _SimI2C_SendByte 05ED          __end_of_eeprom_write 058F  
                   ??_highISR 0076               ?_LcdDisplay_CSQ 0070                        _strchr 0BF2  
                      clrloop 06CA                        _strcpy 0B85                        _strlen 0B9B  
                      _strstr 0B4A               ?_LcdDisplay_Err 0070                 _TCN75_ReadReg 05B7  
         SimI2C_SendByte@data 0020                    PowerDown@i 0024                     ??_isdigit 0020  
                   ??_isgraph 0070            __size_of_PowerDown 0011        __end_of_ATCommand_Init 04D9  
         __end_of_SaveRomData 0573                Uart1_PutChar@c 0020                GetVerify_Sum@i 0026  
             ??_SimI2C_RecAck 0020         InteractServer@i_10574 0038         InteractServer@i_10579 003A  
       InteractServer@j_10586 003C                     ??_strncmp 002C              ___lbdiv@dividend 0021  
  __end_of_LcdDisplay_CurTemp 0322                 ?_Uart1_PutHex 0070          _ATCommand_RetryTimes 0061  
  Uart1_PutString_Hex@pString 0023               ___lbmod@divisor 0020               ___lbmod@counter 0023  
             eeprom_read@addr 0022         TCN75_ReadReg@ErrTimes 0024         TCN75_ReadReg@RegPoint 0023  
          ATCommand_ProcRx@rx 0075                   _SimI2C_Init 0669                   ?_SimI2C_Ack 0070  
         ___bmul@multiplicand 0020                   _SimI2C_Stop 065F                __pcstackCOMMON 0070  
          MakeTxTemperature@T 0020            MakeTxTemperature@x 0022                  __pidataBANK0 0000  
                 ?_InitSystem 0070                 _OneWire_Reset 04D9                 _isdigit$31795 0020  
             _MeasurementTick 0057              ___lbdiv@quotient 0023             __end_of_ReadTData 0929  
              ?_TCN75_ReadReg 0070          __end_of_SimI2C_NoAck 065F                     ?_CallSend 0070  
                   ?_CallProc 0070          __end_of_SimI2C_Start 062C                    _SystemTick 005D  
           eeprom_write@value 0020               ?_ATCommand_Init 0070                  ??_TCN75_Init 0020  
              ??_Uart1_PutHex 0021          __end_of_InitVariable 0524            OneWire_Reset@Retry 0021  
     __size_of_InteractServer 0227                    __pbssBANK0 004D                    __pbssBANK1 00A0  
                  __pbssBANK2 0120                     ?_InitGPRS 0070      __size_of_Uart1_PutString 0011  
         __size_of_GetRomData 001D        __size_of_Uart1_PutChar 0009       __end_of_SimI2C_ReadByte 064C  
           __end_of_PowerDown 06C9                    __pmaintext 0842       __end_of_SimI2C_SendByte 060E  
                   ?_TestProc 0070                       ?___bmul 0020                ?_OneWire_Reset 0070  
                     ?___wmul 0020                _GetVerify_CRC8 03B6                    __pintentry 0004  
          __end_of_TCN75_Init 050B              ?_OneWire_Command 0070           _Uart1_PutString_Hex 0EF8  
                  __ptext2100 05B7                    __ptext2101 058F                    __ptext2110 03EE  
                  __ptext2102 050B                    __ptext2111 038A                    __ptext2103 065F  
                  __ptext2120 055A                    __ptext2112 0C3E                    __ptext2104 0658  
                  __ptext2121 0524                    __ptext2113 0B4A                    __ptext2105 064C  
                  __ptext2130 0FEB                    __ptext2122 0249                    __ptext2114 0ED9  
                  __ptext2106 062C                    __ptext2131 0F6F                    __ptext2123 02D2  
                  __ptext2115 0F5E                    __ptext2107 060E                    __ptext2140 0B85  
                  __ptext2132 0BF2                    __ptext2124 0C0A                    __ptext2116 0B36  
                  __ptext2108 05ED                    __ptext2141 0F47                    __ptext2133 0BBA  
                  __ptext2125 00C8                    __ptext2117 050A                    __ptext2109 0622  
                  __ptext2150 0000                    __ptext2142 0F08                    __ptext2134 0B9B  
                  __ptext2126 0269                    __ptext2118 04D9                    __ptext2143 0573  
                  __ptext2135 0CA4                    __ptext2127 0C26                    __ptext2119 04C2  
                  __ptext2144 0484                    __ptext2136 0FA0                    __ptext2128 0FA9  
                  __ptext2145 0457                    __ptext2137 0669                    __ptext2129 0F7B  
                  __ptext2146 0140                    __ptext2138 03B6                    __ptext2090 0CB2  
                  __ptext2139 0541                    __ptext2091 09D4                    __ptext2083 007E  
             _ATCommand_Clear 0077                    __ptext2148 0670                    __ptext2092 0322  
                  __ptext2084 0281                    __ptext2149 0698                    __ptext2093 035B  
                  __ptext2085 002C                    __ptext2094 0354                    __ptext2086 0417  
                  __ptext2095 03E2                    __ptext2087 0977                    __ptext2096 0929  
                  __ptext2088 0995                    __ptext2097 0EF8                    __ptext2089 08DD  
                  __ptext2098 0ACA                    __ptext2099 06B8               _ATCommand_Flags 0078  
                 _SaveRomData 055A                       ?_strchr 0020                       ?_strcpy 0020  
                     ?_strlen 0020                       ?_strstr 002D                    ??_CallSend 0046  
                  ??_CallProc 0047                       i1l15117 067E                       i1l30720 0012  
                     i1l30712 0000                       i1l30730 0000                       i1l30722 0000  
                     i1l30740 067A                       i1l30732 0000                       i1l30724 0018  
                     i1l30750 0000                       i1l30742 067B                       i1l30734 0000  
                     i1l30840 0000                       i1l30760 068C                       i1l30842 0000  
                     i1l30754 0687                       i1l30738 0000                       i1l30764 0000  
                     i1l30756 0689                       i1l30748 0000                       i1l30766 0000  
                     i1l30848 06A4                       i1l30768 0000                       i1l27655 0000  
           _DS18X20_ToDecicel 1012           __size_of_SimI2C_Ack 000C                    __stringtab 1000  
        ?_Uart1_PutString_Hex 0023                    ??_InitGPRS 0039           __size_of_InitSystem 0040  
               _isgraph$31798 0070                       _CurTemp 0055                       _InitMCU 0484  
                     _SegCode 1001             _ATCommand_SendCmd 0ACA        __end_of_GetVerify_CRC8 03E2  
                     _PowerON 0322                    ??_TestProc 0047             _ATCommand_RxCount 0079  
                     _RunTick 005B         __size_of_eeprom_write 001C             _DS18X20_StartMeas 0354  
             __size_of___bmul 000C                       ___lbdiv 0C26             _MakeTxTemperature 0F08  
                     ___lbmod 0269            ?_ATCommand_SendCmd 0031               __size_of___wmul 0015  
                     ___lwdiv 0F7B                       ___lwmod 0FA9                     _LCDDATA10 07AA  
                   _LCDDATA11 07AB               ??_TCN75_ReadReg 0023            ?_DS18X20_StartMeas 0070  
          ?_MakeTxTemperature 0020         _ATCommand_WaitACKTick 0051                       _highISR 0004  
             __size_of_strchr 0018               __size_of_strcpy 0016               __size_of_strlen 001F  
               _Uart1_PutChar 0FA0           ??_ATCommand_SendCmd 0033               __size_of_strstr 003B  
                     _isdigit 0CA4           ??_DS18X20_StartMeas 0025                       _isgraph 0698  
    __end_of_OneWire_ReadByte 03B6           ??_MakeTxTemperature 0022                     _SEG11COM0 3D0B  
                   _SEG11COM1 3D23                     _SEG11COM2 3D3B                     _SEG11COM3 3D53  
                   _SEG21COM0 3D15                     _SEG21COM1 3D2D                     _SEG21COM2 3D45  
                   _SEG21COM3 3D5D                     _SEG22COM0 3D16                     _SEG22COM1 3D2E  
                   _SEG22COM2 3D46                     _SEG22COM3 3D5E                     _SEG23COM0 3D17  
                   _SEG23COM1 3D2F                     _SEG23COM2 3D47                     _SEG23COM3 3D5F  
                   _SEG16COM0 3D10                     _SEG16COM1 3D28                     _SEG16COM2 3D40  
                   _SEG16COM3 3D58         ??_Uart1_PutString_Hex 0025                       _strncmp 0BBA  
       TCN75_SetConfig@bRight 0024          end_of_initialization 0840               GetVerify_CRC8@i 0026  
      __size_of_LcdDisplayAll 0078        __size_of_LcdDisplayNum 0109                  _eeprom_write 0573  
           InteractServer@res 0037     __end_of_ATCommand_SendCmd 0B36              ?_SimI2C_ReadByte 0070  
           _OneWire_WriteByte 03EE     __end_of_DS18X20_StartMeas 035B             ??_Uart1_PutString 0023  
             ??_OneWire_Reset 0020     __end_of_MakeTxTemperature 0F47                  ?_DisplayInit 0070  
             ?_GetVerify_CRC8 0020              ?_SimI2C_SendByte 0070            ?_OneWire_WriteByte 0070  
            ??_LcdDisplay_CSQ 0025              ??_LcdDisplay_Err 0025         __size_of_SimI2C_NoAck 0007  
                __pstringtext 1000          __end_of_Uart1_PutHex 0EF8                  ??_GetRomData 0027  
   __size_of_DS18X20_ReadMeas 002F         __size_of_SimI2C_Start 000A                       strlen@s 0020  
         ??_OneWire_WriteByte 0020                ?_Uart1_PutChar 0070            OneWire_WriteByte@i 0023  
       __size_of_InitVariable 0019              ___lbmod@dividend 0022                 ?___delay_20ms 0020  
   __size_of_ATCommand_ProcRx 0028                _InteractServer 0CB2                     InitGPRS@i 003B  
  __end_of_ATCommand_WaitData 0977      __size_of_TCN75_SetConfig 0028                   ___lbmod@rem 0024  
          __end_of_GetRomData 0541     __end_of_OneWire_WriteByte 0417                 ??_eeprom_read 0020  
                _SimI2C_NoAck 0658                  ?_SimI2C_Init 0070                  ??_SimI2C_Ack 0020  
                _SimI2C_Start 0622                  ?_SimI2C_Stop 0070            _LcdDisplay_CurTemp 02D2  
                ??_InitSystem 002D                  SaveRomData@i 0027                __end_of___bmul 0F7B  
                _InitVariable 050B                __end_of___wmul 1000                 _LcdDisplayAll 00C8  
               _LcdDisplayNum 0140           ?_LcdDisplay_CurTemp 0070              ??_ATCommand_Init 0026  
              __end_of_strchr 0C0A                __end_of_strcpy 0B9B                __end_of_strlen 0BBA  
              __end_of_strstr 0B85                ??___delay_20ms 0022           start_initialization 080A  
                   _ReadTData 08DD             __size_of_CallSend 003F             __size_of_CallProc 0052  
      __end_of_InteractServer 0ED9            __end_of_SimI2C_Ack 0658        __size_of_GetVerify_Sum 0019  
         _ATCommand_ErrString 00B5            GetVerify_CRC8@data 0025         __end_of_SimI2C_RecAck 0622  
          __end_of_InitSystem 0457          ??_LcdDisplay_CurTemp 0025             __size_of_InitGPRS 00F6  
  GetVerify_CRC8@feedback_bit 0028    __size_of_ATCommand_SendCmd 006C    __size_of_DS18X20_StartMeas 0007  
                   _RomParams 0067    __size_of_MakeTxTemperature 003F          _TCN75_RegReadResualt 005F  
                    ??___bmul 0021                      ??___wmul 0024           __end_of_eeprom_read 0F5E  
                _TCN75_Config 0064                ?_LcdDisplayAll 0070                     _PowerDown 06B8  
                 __pdataBANK0 006A                ?_LcdDisplayNum 0070           _NeedMeasurementTick 0059  
           __size_of_TestProc 004A               ??_Uart1_PutChar 0020                  ?_SaveRomData 0070  
                    ??_strchr 0024                      ??_strcpy 0022                      ??_strlen 0022  
                    ??_strstr 0031                   __pbssBIGRAM 218C                   __pbssCOMMON 0077  
                  ?_ReadTData 0070                 __pcstackBANK0 0020               ?_InteractServer 0070  
              OneWire_Reset@r 0022                 ?_CallTestSend 0070                 ?_CallTestProc 0070  
            eeprom_write@addr 0021    __size_of_OneWire_WriteByte 0029                      ?_InitMCU 0070  
       __size_of_Uart1_PutHex 001F              ___lwdiv@dividend 0022             ??_TCN75_SetConfig 0023  
                    ?_PowerON 0070                   CallSend@ret 0046             CallTestProc@retry 0046  
                    ?___lbdiv 0020                      ?___lbmod 0020                 _GetVerify_Sum 0541  
                    ?___lwdiv 0020          __size_of_DisplayInit 002D                      ?___lwmod 0020  
            _DS18X20_ReadMeas 035B                    ?_PowerDown 0070                      ?_highISR 0070  
              ReadTData@retry 002C                      ?_isdigit 0070                      ?_isgraph 0070  
    __size_of_OneWire_Command 000C             ?_OneWire_ReadByte 0070              _ATCommand_RxList 218C  
            _ATCommand_ProcRx 0670              ___lwdiv@quotient 0025                      _LCDDATA0 07A0  
                    _LCDDATA1 07A1                      _LCDDATA2 07A2                      _LCDDATA3 07A3  
                    _LCDDATA4 07A4                      _LCDDATA5 07A5                      _LCDDATA6 07A6  
                    _LCDDATA7 07A7                      _LCDDATA8 07A8                      _LCDDATA9 07A9  
          ??_OneWire_ReadByte 0020                      ?_strncmp 0026                ??_CallTestSend 0046  
             _Uart1_PutString 0F5E                ??_CallTestProc 0046                  _Uart1_PutHex 0ED9  
               CallProc@retry 0047                ___wmul@product 0024              ??_GetVerify_CRC8 0022  
                    _SEG3COM0 3D03                      _SEG3COM1 3D1B                      _SEG3COM2 3D33  
                    _SEG3COM3 3D4B                      _SEG5COM0 3D05                      _SEG5COM1 3D1D  
                    _SEG5COM2 3D35                      _SEG5COM3 3D4D                      _SEG6COM0 3D06  
                    _SEG6COM1 3D1E                      _SEG6COM2 3D36                      _SEG6COM3 3D4E  
       OneWire_ReadByte@value 0022                   _eeprom_read 0F47                LcdDisplayAll@x 0020  
        __end_of___delay_20ms 0B4A                     highISR@rx 0076               ??_LcdDisplayAll 0020  
              ?_GetVerify_Sum 0020               ??_LcdDisplayNum 0020          __size_of_SimI2C_Init 0007  
        __size_of_SimI2C_Stop 000A                SimI2C_RecAck@t 0020       TCN75_SetConfig@ErrTimes 0023  
       __end_of_TCN75_ReadReg 05ED             ___wmul@multiplier 0020                      _CallSend 0995  
                    _CallProc 002C   __end_of_Uart1_PutString_Hex 0F08            _DS18X20_Scratchpad 00D3  
                 ??_ReadTData 002C            GetVerify_Sum@Count 0020            GetVerify_Sum@pBuff 0024  
                    _InitGPRS 09D4                      _ErrState 0063       DS18X20_ReadMeas@bVerify 002A  
      Uart1_PutString@pString 0021             GetVerify_CRC8@crc 0029            _ATCommand_OkString 00C4  
            __size_of_InitMCU 003E                      _TestProc 007E                      PowerON@i 0039  
       __end_of_OneWire_Reset 050A            _ATCommand_WaitData 0929              __size_of_PowerON 0029  
                 ??_PowerDown 0024              __size_of___lbdiv 0018              __size_of___lbmod 0018  
               _TxTemperature 004D      __size_of_SimI2C_ReadByte 0020              __size_of___lwdiv 0025  
            __size_of___lwmod 0020           TCN75_ReadReg@bRight 0025           InteractServer@txLen 003E  
         InteractServer@retry 0036           ?_ATCommand_WaitData 0070      __size_of_SimI2C_SendByte 0021  
            __size_of_highISR 0025       __end_of_Uart1_PutString 0F6F          __size_of_SaveRomData 0019  
   GetVerify_CRC8@bit_counter 0024              __size_of_isdigit 000E              __size_of_isgraph 000E  
             ___lwdiv@divisor 0020        _ATCommand_WaitACKTimes 0053               ___lwdiv@counter 0024  
            __size_of_strncmp 0038                    strcpy@from 0020             ??_OneWire_Command 0024  
               __size_of_atoi 0066                 __size_of_main 009B          ??_ATCommand_WaitData 0031  
                  strncmp@len 002A          LcdDisplay_CurTemp@t1 0027          LcdDisplay_CurTemp@t2 0028  
                    clear_ram 06C9               ??_GetVerify_Sum 0022                ___delay_20ms@x 0020  
                    atoi@sign 002C                      main@addr 004B          __end_of_CallTestSend 0995  
        __end_of_CallTestProc 02D2        ATCommand_SendCmd@retry 0035                   GetRomData@i 0027  
            ??_InteractServer 0036       __size_of_LcdDisplay_CSQ 001C       __size_of_LcdDisplay_Err 0020  
                  _TCN75_Init 050A                      isdigit@c 0021            InteractServer@addr 0042  
             _TCN75_SetConfig 058F                      isgraph@c 0071      __end_of_DS18X20_ReadMeas 038A  
                    intlevel1 0000              LcdDisplay_CSQ@t1 0025              LcdDisplay_CSQ@t2 0026  
                   strchr@chr 0022              ___lwmod@dividend 0022         __size_of___delay_20ms 0014  
                   strchr@ptr 0020   __size_of_LcdDisplay_CurTemp 0050         OneWire_WriteByte@temp 0022  
                   strncmp@s1 0026                     strncmp@s2 0028      __end_of_ATCommand_ProcRx 0698  
         SimI2C_ReadByte@data 0020         ATCommand_SendCmd@strx 0036              GetVerify_Sum@sum 0025  
      __size_of_SimI2C_RecAck 0014         __end_of_Uart1_PutChar 0FA9          Uart1_PutString_Hex@c 0025  
        OneWire_WriteByte@val 0021               ___lwmod@divisor 0020              ?_Uart1_PutString 0021  
                    strcpy@cp 0025                      strlen@cp 0024                      strcpy@to 0024  
             ___lwmod@counter 0024             ??_SimI2C_ReadByte 0020                  ___delay_20ms 0B36  
        ATCommand_SendCmd@cmd 0031                      strstr@s1 002D                      strstr@s2 002F  
        ATCommand_SendCmd@res 0038             ??_SimI2C_SendByte 0020       __size_of_ATCommand_Init 0017  
               ?_eeprom_write 0020                  ?_eeprom_read 0070              SimI2C_ReadByte@i 0021  
            Uart1_PutString@c 0023     __size_of_OneWire_ReadByte 002C                 ??_DisplayInit 0020  
