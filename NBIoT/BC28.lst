

HI-TECH Software PIC PRO Macro Assembler V9.71a build 6446 
                                                                                               Thu Jan 03 13:32:12 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 6446
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	text1963,local,class=CODE,delta=2
    16                           	psect	text1970,local,class=CODE,delta=2
    17                           	psect	text1977,local,class=CODE,delta=2
    18                           	psect	text1989,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text2025,local,class=CODE,delta=2
    21                           	psect	text2027,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x320,16
    24                           	dabs	1,0x2A0,80
    25                           	dabs	1,0x26C,4
    26                           	dabs	1,0x7E,2
    27  000A                     	;_ATCommand_RxList
    28                           
    29                           	psect	idataBANK0
    30  0000                     __pidataBANK0:	
    31                           
    32                           	psect	stringtext
    33  1000                     __pstringtext:	
    34  1000                     __stringtab:	
    35  1000  3400               	retlw	0
    36  1001                     _SegCode:	
    37  1001  343F               	retlw	63
    38  1002  3406               	retlw	6
    39  1003  345B               	retlw	91
    40  1004  344F               	retlw	79
    41  1005  3466               	retlw	102
    42  1006  346D               	retlw	109
    43  1007  347D               	retlw	125
    44  1008  3407               	retlw	7
    45  1009  347F               	retlw	127
    46  100A  346F               	retlw	111
    47  100B  3477               	retlw	119
    48  100C  347C               	retlw	124
    49  100D  3439               	retlw	57
    50  100E  345E               	retlw	94
    51  100F  3479               	retlw	121
    52  1010  3471               	retlw	113
    53  1011  3450               	retlw	80
    54  1012                     _DS18X20_ToDecicel:	
    55  1012  3400               	retlw	0
    56  1013  3401               	retlw	1
    57  1014  3401               	retlw	1
    58  1015  3402               	retlw	2
    59  1016  3403               	retlw	3
    60  1017  3403               	retlw	3
    61  1018  3404               	retlw	4
    62  1019  3404               	retlw	4
    63  101A  3405               	retlw	5
    64  101B  3406               	retlw	6
    65  101C  3406               	retlw	6
    66  101D  3407               	retlw	7
    67  101E  3408               	retlw	8
    68  101F  3408               	retlw	8
    69  1020  3409               	retlw	9
    70  1021  3409               	retlw	9
    71  001B                     _PR2	set	27
    72  0018                     _T1CON	set	24
    73  001C                     _T2CON	set	28
    74  0017                     _TMR1H	set	23
    75  0016                     _TMR1L	set	22
    76  0018                     _CARRY	set	24
    77  005F                     _GIE	set	95
    78  005E                     _PEIE	set	94
    79  0069                     _RB1	set	105
    80  006A                     _RB2	set	106
    81  006F                     _RB7	set	111
    82  008D                     _RCIF	set	141
    83  007E                     _RD6	set	126
    84  0088                     _TMR1IF	set	136
    85  00C0                     _TMR1ON	set	192
    86  0089                     _TMR2IF	set	137
    87  00E2                     _TMR2ON	set	226
    88  009E                     _ADCON1	set	158
    89  048D                     _RCIE	set	1165
    90  0488                     _TMR1IE	set	1160
    91  0489                     _TMR2IE	set	1161
    92  0463                     _TRISA3	set	1123
    93  0464                     _TRISA4	set	1124
    94  0469                     _TRISB1	set	1129
    95  046A                     _TRISB2	set	1130
    96  046F                     _TRISB7	set	1135
    97  0476                     _TRISC6	set	1142
    98  0477                     _TRISC7	set	1143
    99  047C                     _TRISD4	set	1148
   100  047D                     _TRISD5	set	1149
   101  047E                     _TRISD6	set	1150
   102  047F                     _TRISD7	set	1151
   103  04AF                     _nWPUEN	set	1199
   104  0863                     _LATA3	set	2147
   105  0864                     _LATA4	set	2148
   106  0869                     _LATB1	set	2153
   107  087D                     _LATD5	set	2173
   108  087E                     _LATD6	set	2174
   109  087F                     _LATD7	set	2175
   110  018C                     _ANSELA	set	396
   111  018D                     _ANSELB	set	397
   112  018F                     _ANSELD	set	399
   113  0190                     _ANSELE	set	400
   114  0191                     _EEADRL	set	401
   115  0195                     _EECON1	set	405
   116  0196                     _EECON2	set	406
   117  0193                     _EEDATA	set	403
   118  0199                     _RCREG	set	409
   119  019D                     _RCSTA	set	413
   120  019B                     _SPBRG	set	411
   121  019A                     _TXREG	set	410
   122  019E                     _TXSTA	set	414
   123  0CEC                     _CREN	set	3308
   124  0CE9                     _OERR	set	3305
   125  0CA8                     _RD	set	3240
   126  0CF1                     _TRMT	set	3313
   127  0CA9                     _WR	set	3241
   128  0CAA                     _WREN	set	3242
   129  106F                     _WPUB7	set	4207
   130  0791                     _LCDCON	set	1937
   131  0794                     _LCDCST	set	1940
   132  07A0                     _LCDDATA0	set	1952
   133  07A1                     _LCDDATA1	set	1953
   134  07AA                     _LCDDATA10	set	1962
   135  07AB                     _LCDDATA11	set	1963
   136  07A2                     _LCDDATA2	set	1954
   137  07A3                     _LCDDATA3	set	1955
   138  07A4                     _LCDDATA4	set	1956
   139  07A5                     _LCDDATA5	set	1957
   140  07A6                     _LCDDATA6	set	1958
   141  07A7                     _LCDDATA7	set	1959
   142  07A8                     _LCDDATA8	set	1960
   143  07A9                     _LCDDATA9	set	1961
   144  0792                     _LCDPS	set	1938
   145  0793                     _LCDREF	set	1939
   146  0795                     _LCDRL	set	1941
   147  0798                     _LCDSE0	set	1944
   148  0799                     _LCDSE1	set	1945
   149  079A                     _LCDSE2	set	1946
   150  3C8F                     _LCDEN	set	15503
   151  3CCB                     _SEG11	set	15563
   152  3D0B                     _SEG11COM0	set	15627
   153  3D23                     _SEG11COM1	set	15651
   154  3D3B                     _SEG11COM2	set	15675
   155  3D53                     _SEG11COM3	set	15699
   156  3CD0                     _SEG16	set	15568
   157  3D10                     _SEG16COM0	set	15632
   158  3D28                     _SEG16COM1	set	15656
   159  3D40                     _SEG16COM2	set	15680
   160  3D58                     _SEG16COM3	set	15704
   161  3CD5                     _SEG21	set	15573
   162  3D15                     _SEG21COM0	set	15637
   163  3D2D                     _SEG21COM1	set	15661
   164  3D45                     _SEG21COM2	set	15685
   165  3D5D                     _SEG21COM3	set	15709
   166  3CD6                     _SEG22	set	15574
   167  3D16                     _SEG22COM0	set	15638
   168  3D2E                     _SEG22COM1	set	15662
   169  3D46                     _SEG22COM2	set	15686
   170  3D5E                     _SEG22COM3	set	15710
   171  3CD7                     _SEG23	set	15575
   172  3D17                     _SEG23COM0	set	15639
   173  3D2F                     _SEG23COM1	set	15663
   174  3D47                     _SEG23COM2	set	15687
   175  3D5F                     _SEG23COM3	set	15711
   176  3CC3                     _SEG3	set	15555
   177  3D03                     _SEG3COM0	set	15619
   178  3D1B                     _SEG3COM1	set	15643
   179  3D33                     _SEG3COM2	set	15667
   180  3D4B                     _SEG3COM3	set	15691
   181  3CC5                     _SEG5	set	15557
   182  3D05                     _SEG5COM0	set	15621
   183  3D1D                     _SEG5COM1	set	15645
   184  3D35                     _SEG5COM2	set	15669
   185  3D4D                     _SEG5COM3	set	15693
   186  3CC6                     _SEG6	set	15558
   187  3D06                     _SEG6COM0	set	15622
   188  3D1E                     _SEG6COM1	set	15646
   189  3D36                     _SEG6COM2	set	15670
   190  3D4E                     _SEG6COM3	set	15694
   191  3C94                     _WA	set	15508
   192  3C8D                     _WERR	set	15501
   193  1022                     STR_2:	
   194  1022  3441               	retlw	65	;'A'
   195  1023  3454               	retlw	84	;'T'
   196  1024  342B               	retlw	43	;'+'
   197  1025  344E               	retlw	78	;'N'
   198  1026  3453               	retlw	83	;'S'
   199  1027  344F               	retlw	79	;'O'
   200  1028  3443               	retlw	67	;'C'
   201  1029  344F               	retlw	79	;'O'
   202  102A  343D               	retlw	61	;'='
   203  102B  3431               	retlw	49	;'1'
   204  102C  342C               	retlw	44	;','
   205  102D  3422               	retlw	34	;'"'
   206  102E  3477               	retlw	119	;'w'
   207  102F  3477               	retlw	119	;'w'
   208  1030  3477               	retlw	119	;'w'
   209  1031  342E               	retlw	46	;'.'
   210  1032  3477               	retlw	119	;'w'
   211  1033  346C               	retlw	108	;'l'
   212  1034  3477               	retlw	119	;'w'
   213  1035  3464               	retlw	100	;'d'
   214  1036  346A               	retlw	106	;'j'
   215  1037  3463               	retlw	99	;'c'
   216  1038  3479               	retlw	121	;'y'
   217  1039  342E               	retlw	46	;'.'
   218  103A  3463               	retlw	99	;'c'
   219  103B  346F               	retlw	111	;'o'
   220  103C  346D               	retlw	109	;'m'
   221  103D  3422               	retlw	34	;'"'
   222  103E  342C               	retlw	44	;','
   223  103F  3431               	retlw	49	;'1'
   224  1040  3432               	retlw	50	;'2'
   225  1041  3431               	retlw	49	;'1'
   226  1042  3432               	retlw	50	;'2'
   227  1043  3439               	retlw	57	;'9'
   228  1044  3400               	retlw	0
   229  1045  3400               	retlw	0
   230  1046                     STR_1:	
   231  1046  3441               	retlw	65	;'A'
   232  1047  3454               	retlw	84	;'T'
   233  1048  342B               	retlw	43	;'+'
   234  1049  344E               	retlw	78	;'N'
   235  104A  3453               	retlw	83	;'S'
   236  104B  344F               	retlw	79	;'O'
   237  104C  3443               	retlw	67	;'C'
   238  104D  3452               	retlw	82	;'R'
   239  104E  343D               	retlw	61	;'='
   240  104F  3453               	retlw	83	;'S'
   241  1050  3454               	retlw	84	;'T'
   242  1051  3452               	retlw	82	;'R'
   243  1052  3445               	retlw	69	;'E'
   244  1053  3441               	retlw	65	;'A'
   245  1054  344D               	retlw	77	;'M'
   246  1055  342C               	retlw	44	;','
   247  1056  3436               	retlw	54	;'6'
   248  1057  342C               	retlw	44	;','
   249  1058  3430               	retlw	48	;'0'
   250  1059  342C               	retlw	44	;','
   251  105A  3431               	retlw	49	;'1'
   252  105B  3400               	retlw	0
   253  105C  3400               	retlw	0
   254  105D                     STR_11:	
   255  105D  3441               	retlw	65	;'A'
   256  105E  3454               	retlw	84	;'T'
   257  105F  342B               	retlw	43	;'+'
   258  1060  344E               	retlw	78	;'N'
   259  1061  3453               	retlw	83	;'S'
   260  1062  344F               	retlw	79	;'O'
   261  1063  3453               	retlw	83	;'S'
   262  1064  3444               	retlw	68	;'D'
   263  1065  343D               	retlw	61	;'='
   264  1066  3431               	retlw	49	;'1'
   265  1067  342C               	retlw	44	;','
   266  1068  3436               	retlw	54	;'6'
   267  1069  3438               	retlw	56	;'8'
   268  106A  3437               	retlw	55	;'7'
   269  106B  342C               	retlw	44	;','
   270  106C  3400               	retlw	0
   271  106D  3400               	retlw	0
   272  106E                     STR_3:	
   273  106E  3441               	retlw	65	;'A'
   274  106F  3454               	retlw	84	;'T'
   275  1070  342B               	retlw	43	;'+'
   276  1071  344E               	retlw	78	;'N'
   277  1072  3453               	retlw	83	;'S'
   278  1073  344F               	retlw	79	;'O'
   279  1074  3453               	retlw	83	;'S'
   280  1075  3444               	retlw	68	;'D'
   281  1076  343D               	retlw	61	;'='
   282  1077  3431               	retlw	49	;'1'
   283  1078  342C               	retlw	44	;','
   284  1079  3433               	retlw	51	;'3'
   285  107A  3432               	retlw	50	;'2'
   286  107B  342C               	retlw	44	;','
   287  107C  3400               	retlw	0
   288  107D  3400               	retlw	0
   289  107E                     STR_13:	
   290  107E  3441               	retlw	65	;'A'
   291  107F  3454               	retlw	84	;'T'
   292  1080  342B               	retlw	43	;'+'
   293  1081  344E               	retlw	78	;'N'
   294  1082  3453               	retlw	83	;'S'
   295  1083  344F               	retlw	79	;'O'
   296  1084  3453               	retlw	83	;'S'
   297  1085  3444               	retlw	68	;'D'
   298  1086  343D               	retlw	61	;'='
   299  1087  3431               	retlw	49	;'1'
   300  1088  342C               	retlw	44	;','
   301  1089  3438               	retlw	56	;'8'
   302  108A  3437               	retlw	55	;'7'
   303  108B  342C               	retlw	44	;','
   304  108C  3400               	retlw	0
   305  108D  3400               	retlw	0
   306  108E                     STR_12:	
   307  108E  3441               	retlw	65	;'A'
   308  108F  3454               	retlw	84	;'T'
   309  1090  342B               	retlw	43	;'+'
   310  1091  344E               	retlw	78	;'N'
   311  1092  3453               	retlw	83	;'S'
   312  1093  344F               	retlw	79	;'O'
   313  1094  3453               	retlw	83	;'S'
   314  1095  3444               	retlw	68	;'D'
   315  1096  343D               	retlw	61	;'='
   316  1097  3431               	retlw	49	;'1'
   317  1098  342C               	retlw	44	;','
   318  1099  3400               	retlw	0
   319  109A  3400               	retlw	0
   320  109B                     STR_27:	
   321  109B  3441               	retlw	65	;'A'
   322  109C  3454               	retlw	84	;'T'
   323  109D  342B               	retlw	43	;'+'
   324  109E  3443               	retlw	67	;'C'
   325  109F  3445               	retlw	69	;'E'
   326  10A0  3452               	retlw	82	;'R'
   327  10A1  3445               	retlw	69	;'E'
   328  10A2  3447               	retlw	71	;'G'
   329  10A3  343F               	retlw	63	;'?'
   330  10A4  3400               	retlw	0
   331  10A5  3400               	retlw	0
   332  10A6                     STR_28:	
   333  10A6  342B               	retlw	43	;'+'
   334  10A7  3443               	retlw	67	;'C'
   335  10A8  3445               	retlw	69	;'E'
   336  10A9  3452               	retlw	82	;'R'
   337  10AA  3445               	retlw	69	;'E'
   338  10AB  3447               	retlw	71	;'G'
   339  10AC  343A               	retlw	58	;':'
   340  10AD  3430               	retlw	48	;'0'
   341  10AE  342C               	retlw	44	;','
   342  10AF  3431               	retlw	49	;'1'
   343  10B0  3400               	retlw	0
   344  10B1                     STR_23:	
   345  10B1  3441               	retlw	65	;'A'
   346  10B2  3454               	retlw	84	;'T'
   347  10B3  342B               	retlw	43	;'+'
   348  10B4  344E               	retlw	78	;'N'
   349  10B5  3443               	retlw	67	;'C'
   350  10B6  3443               	retlw	67	;'C'
   351  10B7  3449               	retlw	73	;'I'
   352  10B8  3444               	retlw	68	;'D'
   353  10B9  3400               	retlw	0
   354  10BA  3400               	retlw	0
   355  10BB                     STR_4:	
   356  10BB  3440               	retlw	64	;'@'
   357  10BC  3423               	retlw	35	;'#'
   358  10BD  3470               	retlw	112	;'p'
   359  10BE  3474               	retlw	116	;'t'
   360  10BF  3423               	retlw	35	;'#'
   361  10C0  3431               	retlw	49	;'1'
   362  10C1  3423               	retlw	35	;'#'
   363  10C2  3400               	retlw	0
   364  10C3  3400               	retlw	0
   365  10C4                     STR_14:	
   366  10C4  3440               	retlw	64	;'@'
   367  10C5  3423               	retlw	35	;'#'
   368  10C6  3470               	retlw	112	;'p'
   369  10C7  3474               	retlw	116	;'t'
   370  10C8  3423               	retlw	35	;'#'
   371  10C9  3432               	retlw	50	;'2'
   372  10CA  3423               	retlw	35	;'#'
   373  10CB  3400               	retlw	0
   374  10CC  3400               	retlw	0
   375  10CD                     STR_8:	
   376  10CD  3440               	retlw	64	;'@'
   377  10CE  3423               	retlw	35	;'#'
   378  10CF  3470               	retlw	112	;'p'
   379  10D0  3474               	retlw	116	;'t'
   380  10D1  3423               	retlw	35	;'#'
   381  10D2  3433               	retlw	51	;'3'
   382  10D3  3423               	retlw	35	;'#'
   383  10D4  3400               	retlw	0
   384  10D5  3400               	retlw	0
   385  10D6                     STR_22:	
   386  10D6  3441               	retlw	65	;'A'
   387  10D7  3454               	retlw	84	;'T'
   388  10D8  342B               	retlw	43	;'+'
   389  10D9  3443               	retlw	67	;'C'
   390  10DA  3449               	retlw	73	;'I'
   391  10DB  344D               	retlw	77	;'M'
   392  10DC  3449               	retlw	73	;'I'
   393  10DD  3400               	retlw	0
   394  10DE  3400               	retlw	0
   395  10DF                     STR_25:	
   396  10DF  3441               	retlw	65	;'A'
   397  10E0  3454               	retlw	84	;'T'
   398  10E1  342B               	retlw	43	;'+'
   399  10E2  3443               	retlw	67	;'C'
   400  10E3  3453               	retlw	83	;'S'
   401  10E4  3451               	retlw	81	;'Q'
   402  10E5  3400               	retlw	0
   403  10E6  3400               	retlw	0
   404  10E7                     STR_17:	
   405  10E7  344E               	retlw	78	;'N'
   406  10E8  3453               	retlw	83	;'S'
   407  10E9  344F               	retlw	79	;'O'
   408  10EA  344E               	retlw	78	;'N'
   409  10EB  344D               	retlw	77	;'M'
   410  10EC  3449               	retlw	73	;'I'
   411  10ED  3400               	retlw	0
   412  10EE                     STR_21:	
   413  10EE  3441               	retlw	65	;'A'
   414  10EF  3454               	retlw	84	;'T'
   415  10F0  3445               	retlw	69	;'E'
   416  10F1  3431               	retlw	49	;'1'
   417  10F2  3400               	retlw	0
   418  10F3  3400               	retlw	0
   419  10F4                     STR_26:	
   420  10F4  342B               	retlw	43	;'+'
   421  10F5  3443               	retlw	67	;'C'
   422  10F6  3453               	retlw	83	;'S'
   423  10F7  3451               	retlw	81	;'Q'
   424  10F8  343A               	retlw	58	;':'
   425  10F9  3400               	retlw	0
   426  10FA                     STR_18:	
   427  10FA  3445               	retlw	69	;'E'
   428  10FB  3452               	retlw	82	;'R'
   429  10FC  3452               	retlw	82	;'R'
   430  10FD  344F               	retlw	79	;'O'
   431  10FE  3452               	retlw	82	;'R'
   432  10FF  3400               	retlw	0
   433  1100                     STR_6:	
   434  1100  3431               	retlw	49	;'1'
   435  1101  3430               	retlw	48	;'0'
   436  1102  3423               	retlw	35	;'#'
   437  1103  3400               	retlw	0
   438  1104  3400               	retlw	0
   439  1105                     STR_5:	
   440  1105  3436               	retlw	54	;'6'
   441  1106  3430               	retlw	48	;'0'
   442  1107  3423               	retlw	35	;'#'
   443  1108  3400               	retlw	0
   444  1109  3400               	retlw	0
   445  110A                     STR_24:	
   446  110A  3438               	retlw	56	;'8'
   447  110B  3439               	retlw	57	;'9'
   448  110C  3438               	retlw	56	;'8'
   449  110D  3436               	retlw	54	;'6'
   450  110E  3400               	retlw	0
   451  110F                     STR_20:	
   452  110F  3441               	retlw	65	;'A'
   453  1110  3454               	retlw	84	;'T'
   454  1111  3400               	retlw	0
   455  1112  3400               	retlw	0
   456  1113                     STR_29:	
   457  1113  344F               	retlw	79	;'O'
   458  1114  344B               	retlw	75	;'K'
   459  1115  3400               	retlw	0
   460  1116                     STR_19:	
   461  1116  340D               	retlw	13
   462  1117  3400               	retlw	0
   463  1118  3400               	retlw	0
   464  1116                     
   465                           	psect	cinit
   466  080B                     start_initialization:	
   467  218C                     	;BIGRAM
   468                           
   469                           ; Clear objects allocated to BIGRAM
   470  080B  308C               	movlw	140
   471  080C  0084               	movwf	4
   472  080D  3021               	movlw	33
   473  080E  0085               	movwf	5
   474  080F  3064               	movlw	100
   475  0810  00FE               	movwf	126
   476  0811  3000               	movlw	0
   477  0812  01FF               	clrf	127
   478  0813  3186  2612  3188   	fcall	clear_ram
   479                           
   480                           ; Clear objects allocated to COMMON
   481  0816  01F7               	clrf	__pbssCOMMON& (0+127)
   482  0817  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   483  0818  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   484  0819  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   485  081A  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   486                           
   487                           ; Clear objects allocated to BANK0
   488  081B  304E               	movlw	low __pbssBANK0
   489  081C  0084               	movwf	4
   490  081D  3000               	movlw	high __pbssBANK0
   491  081E  0085               	movwf	5
   492  081F  301B               	movlw	27
   493  0820  00FE               	movwf	126
   494  0821  3000               	movlw	0
   495  0822  00FF               	movwf	127
   496  0823  3186  2612  3188   	fcall	clear_ram
   497                           
   498                           ; Clear objects allocated to BANK1
   499  0826  30A0               	movlw	low __pbssBANK1
   500  0827  0084               	movwf	4
   501  0828  3000               	movlw	high __pbssBANK1
   502  0829  0085               	movwf	5
   503  082A  303C               	movlw	60
   504  082B  00FE               	movwf	126
   505  082C  3000               	movlw	0
   506  082D  00FF               	movwf	127
   507  082E  3186  2612  3188   	fcall	clear_ram
   508                           
   509                           ; Clear objects allocated to BANK2
   510  0831  3020               	movlw	low __pbssBANK2
   511  0832  0084               	movwf	4
   512  0833  3001               	movlw	high __pbssBANK2
   513  0834  0085               	movwf	5
   514  0835  3018               	movlw	24
   515  0836  00FE               	movwf	126
   516  0837  3000               	movlw	0
   517  0838  00FF               	movwf	127
   518  0839  3186  2612  3188   	fcall	clear_ram
   519                           
   520                           ;initializer for _DpyNum
   521  083C  3040               	movlw	64
   522  083D  00E9               	movwf	__pdataBANK0& (0+127)
   523  083E  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   524  083F  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   525  0840  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   526  0841  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   527  0842  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   528  0843                     end_of_initialization:	
   529                           ;End of C runtime variable initialization code
   530                           
   531  0843  0020               	movlb	0
   532  0844  2845               	ljmp	_main	;jump to C main() function
   533  0845                     __pmaintext:	
   534 ;;Data sizes: Strings 247, constant 33, data 6, bss 116, persistent 0 stack 0
   535 ;;Auto spaces:   Size  Autos    Used
   536 ;; COMMON          14      7      12
   537 ;; BANK0           80     46      79
   538 ;; BANK1           80      0      60
   539 ;; BANK2           80      0      24
   540 ;; BANK3           80      0       0
   541 ;; BANK4           76      0       0
   542 ;; BANK5            0      0       0
   543 ;; BANK6            0      0       0
   544 ;;
   545 ;; Pointer list with targets:
   546 ;; ?_strchr	PTR unsigned char  size(2) Largest target is 128
   547 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   548 ;;
   549 ;; ?_strncmp	int  size(1) Largest target is 0
   550 ;;
   551 ;; ?_strlen	unsigned int  size(2) Largest target is 15
   552 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   553 ;;		 -> ATCommand_OkString(BANK1[15]), 
   554 ;;
   555 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   556 ;;
   557 ;; ?_atoi	int  size(1) Largest target is 0
   558 ;;
   559 ;; ?_strstr	PTR unsigned char  size(2) Largest target is 128
   560 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   561 ;;
   562 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 15
   563 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   564 ;;
   565 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   566 ;;
   567 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   568 ;;
   569 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
   570 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   571 ;;		 -> ATCommand_OkString(BANK1[15]), 
   572 ;;
   573 ;; strncmp@s1	PTR const unsigned char  size(2) Largest target is 128
   574 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   575 ;;
   576 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 15
   577 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   578 ;;		 -> ATCommand_OkString(BANK1[15]), 
   579 ;;
   580 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 15
   581 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   582 ;;		 -> ATCommand_OkString(BANK1[15]), 
   583 ;;
   584 ;; strchr@ptr	PTR const unsigned char  size(2) Largest target is 128
   585 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   586 ;;
   587 ;; sp__strchr	PTR unsigned char  size(2) Largest target is 128
   588 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   589 ;;
   590 ;; strstr@s2	PTR const unsigned char  size(2) Largest target is 15
   591 ;;		 -> STR_28(CODE[11]), STR_26(CODE[6]), STR_24(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   592 ;;		 -> ATCommand_OkString(BANK1[15]), 
   593 ;;
   594 ;; strstr@s1	PTR const unsigned char  size(2) Largest target is 128
   595 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   596 ;;
   597 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 7
   598 ;;		 -> STR_35(CODE[6]), STR_34(CODE[3]), STR_33(CODE[6]), STR_32(CODE[3]), 
   599 ;;		 -> STR_30(CODE[6]), STR_29(CODE[3]), STR_18(CODE[6]), STR_17(CODE[7]), 
   600 ;;
   601 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 15
   602 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   603 ;;
   604 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 15
   605 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   606 ;;
   607 ;; atoi@s	PTR const unsigned char  size(2) Largest target is 128
   608 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   609 ;;
   610 ;; GetVerify_CRC8@pBuff	PTR unsigned char  size(1) Largest target is 9
   611 ;;		 -> DS18X20_Scratchpad(BANK1[9]), 
   612 ;;
   613 ;; GetVerify_Sum@pBuff	PTR unsigned char  size(1) Largest target is 2
   614 ;;		 -> RomParams(BANK0[2]), 
   615 ;;
   616 ;; Uart1_PutString_Hex@pString	PTR const unsigned char  size(2) Largest target is 21
   617 ;;		 -> STR_16(CODE[5]), STR_15(CODE[5]), STR_14(CODE[9]), STR_10(CODE[5]), 
   618 ;;		 -> STR_9(CODE[5]), STR_8(CODE[9]), STR_6(CODE[5]), STR_5(CODE[5]), 
   619 ;;		 -> ICCID(BANK1[21]), STR_4(CODE[9]), 
   620 ;;
   621 ;; Uart1_PutString@pString	PTR const unsigned char  size(2) Largest target is 36
   622 ;;		 -> STR_31(CODE[3]), STR_27(CODE[11]), STR_25(CODE[8]), STR_23(CODE[10]), 
   623 ;;		 -> STR_22(CODE[9]), STR_21(CODE[6]), STR_20(CODE[4]), STR_19(CODE[3]), 
   624 ;;		 -> STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[17]), STR_7(CODE[16]), 
   625 ;;		 -> STR_3(CODE[16]), STR_2(CODE[36]), STR_1(CODE[23]), 
   626 ;;
   627 ;; ATCommand_WaitData@strx	PTR unsigned char  size(2) Largest target is 128
   628 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   629 ;;
   630 ;; ATCommand_SendCmd@cmd	PTR const unsigned char  size(2) Largest target is 36
   631 ;;		 -> STR_27(CODE[11]), STR_25(CODE[8]), STR_23(CODE[10]), STR_22(CODE[9]), 
   632 ;;		 -> STR_21(CODE[6]), STR_20(CODE[4]), STR_2(CODE[36]), STR_1(CODE[23]), 
   633 ;;
   634 ;; ATCommand_SendCmd@strx	PTR unsigned char  size(2) Largest target is 128
   635 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   636 ;;
   637 ;; sp__strstr	PTR unsigned char  size(2) Largest target is 128
   638 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   639 ;;
   640 ;; InitGPRS@strx	PTR unsigned char  size(2) Largest target is 128
   641 ;;		 -> ATCommand_RxList(BIGRAM[100]), RAM(NULL[128]), 
   642 ;;
   643 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 15
   644 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   645 ;;
   646 ;; CallSend@strx	PTR unsigned char  size(1) Largest target is 128
   647 ;;		 -> RAM(NULL[128]), 
   648 ;;
   649 ;;
   650 ;; Critical Paths under _main in COMMON
   651 ;;
   652 ;;   None.
   653 ;;
   654 ;; Critical Paths under _highISR in COMMON
   655 ;;
   656 ;;   _highISR->_ATCommand_ProcRx
   657 ;;   _ATCommand_ProcRx->_isgraph
   658 ;;
   659 ;; Critical Paths under _main in BANK0
   660 ;;
   661 ;;   _main->_TestProc
   662 ;;   _TestProc->_CallProc
   663 ;;   _CallProc->_CallSend
   664 ;;   _InitSystem->_ReadTData
   665 ;;   _CallSend->_InteractServer
   666 ;;   _ReadTData->_DS18X20_ReadMeas
   667 ;;   _InteractServer->_ATCommand_WaitData
   668 ;;   _InitGPRS->_ATCommand_SendCmd
   669 ;;   _DS18X20_ReadMeas->_GetVerify_CRC8
   670 ;;   _DS18X20_StartMeas->_OneWire_Command
   671 ;;   _OneWire_Command->_OneWire_WriteByte
   672 ;;   _ATCommand_WaitData->_strstr
   673 ;;   _Uart1_PutString_Hex->_Uart1_PutHex
   674 ;;   _ATCommand_SendCmd->_strstr
   675 ;;   _PowerON->___delay_20ms
   676 ;;   _TCN75_ReadReg->_SimI2C_SendByte
   677 ;;   _TCN75_SetConfig->_SimI2C_SendByte
   678 ;;   _InitVariable->_GetRomData
   679 ;;   _InitVariable->_SaveRomData
   680 ;;   _atoi->___wmul
   681 ;;   _strstr->_strncmp
   682 ;;   _Uart1_PutHex->_Uart1_PutChar
   683 ;;   _Uart1_PutString->_Uart1_PutChar
   684 ;;   _ATCommand_Init->_strcpy
   685 ;;   _SaveRomData->_GetVerify_Sum
   686 ;;   _GetRomData->_GetVerify_Sum
   687 ;;   _LcdDisplay_Err->___lbmod
   688 ;;   _LcdDisplay_CurTemp->___lbmod
   689 ;;   _LcdDisplay_CSQ->___lbmod
   690 ;;   _strncmp->_strlen
   691 ;;
   692 ;; Critical Paths under _highISR in BANK0
   693 ;;
   694 ;;   None.
   695 ;;
   696 ;; Critical Paths under _main in BANK1
   697 ;;
   698 ;;   None.
   699 ;;
   700 ;; Critical Paths under _highISR in BANK1
   701 ;;
   702 ;;   None.
   703 ;;
   704 ;; Critical Paths under _main in BANK2
   705 ;;
   706 ;;   None.
   707 ;;
   708 ;; Critical Paths under _highISR in BANK2
   709 ;;
   710 ;;   None.
   711 ;;
   712 ;; Critical Paths under _main in BANK3
   713 ;;
   714 ;;   None.
   715 ;;
   716 ;; Critical Paths under _highISR in BANK3
   717 ;;
   718 ;;   None.
   719 ;;
   720 ;; Critical Paths under _main in BANK4
   721 ;;
   722 ;;   None.
   723 ;;
   724 ;; Critical Paths under _highISR in BANK4
   725 ;;
   726 ;;   None.
   727 ;;
   728 ;; Critical Paths under _main in BANK5
   729 ;;
   730 ;;   None.
   731 ;;
   732 ;; Critical Paths under _highISR in BANK5
   733 ;;
   734 ;;   None.
   735 ;;
   736 ;; Critical Paths under _main in BANK6
   737 ;;
   738 ;;   None.
   739 ;;
   740 ;; Critical Paths under _highISR in BANK6
   741 ;;
   742 ;;   None.
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   745 ;;
   746 ;;
   747 ;;Call Graph Tables:
   748 ;;
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   751 ;; ---------------------------------------------------------------------------------
   752 ;; (0) _main                                                 4     4      0   28904
   753 ;;                                             42 BANK0      4     4      0
   754 ;;                         _InitSystem
   755 ;;                       ___delay_20ms
   756 ;;                           _TestProc
   757 ;;                          _ReadTData
   758 ;;                           _CallProc
   759 ;;                             ___bmul
   760 ;;                       _eeprom_write
   761 ;; ---------------------------------------------------------------------------------
   762 ;; (1) _TestProc                                             2     2      0   12815
   763 ;;                                             40 BANK0      2     2      0
   764 ;;                      _LcdDisplayAll
   765 ;;                       ___delay_20ms
   766 ;;                          _ReadTData
   767 ;;                     _LcdDisplay_Err
   768 ;;                           _CallProc
   769 ;; ---------------------------------------------------------------------------------
   770 ;; (1) _CallProc                                             1     1      0    9996
   771 ;;                                             39 BANK0      1     1      0
   772 ;;                           _CallSend
   773 ;;                 _LcdDisplay_CurTemp
   774 ;;                       ___delay_20ms
   775 ;;                     _LcdDisplay_Err
   776 ;; ---------------------------------------------------------------------------------
   777 ;; (1) _InitSystem                                           1     1      0    3402
   778 ;;                                             13 BANK0      1     1      0
   779 ;;                            _InitMCU
   780 ;;                       _InitVariable
   781 ;;                        _DisplayInit
   782 ;;                     _ATCommand_Init
   783 ;;                      _OneWire_Reset
   784 ;;                         _TCN75_Init
   785 ;;                    _TCN75_SetConfig
   786 ;;                       ___delay_20ms
   787 ;;                          _ReadTData
   788 ;; ---------------------------------------------------------------------------------
   789 ;; (2) _CallSend                                             3     3      0    9001
   790 ;;                                             38 BANK0      1     1      0
   791 ;;                           _InitGPRS
   792 ;;                       ___delay_20ms
   793 ;;                  _ATCommand_SendCmd
   794 ;;                     _InteractServer
   795 ;; ---------------------------------------------------------------------------------
   796 ;; (1) _ReadTData                                            1     1      0    2304
   797 ;;                                             12 BANK0      1     1      0
   798 ;;                  _DS18X20_StartMeas
   799 ;;                       ___delay_20ms
   800 ;;                   _DS18X20_ReadMeas
   801 ;;                    _TCN75_SetConfig
   802 ;;                      _TCN75_ReadReg
   803 ;;                 _LcdDisplay_CurTemp
   804 ;; ---------------------------------------------------------------------------------
   805 ;; (3) _InteractServer                                      16    16      0    4761
   806 ;;                                             22 BANK0     16    16      0
   807 ;;                    _Uart1_PutString
   808 ;;                _Uart1_PutString_Hex
   809 ;;                       _Uart1_PutHex
   810 ;;                  _MakeTxTemperature
   811 ;;                            ___lwdiv
   812 ;;                      _Uart1_PutChar
   813 ;;                            ___lwmod
   814 ;;                             ___bmul
   815 ;;                        _eeprom_read
   816 ;;                             _strcpy
   817 ;;                 _ATCommand_WaitData
   818 ;;                       ___delay_20ms
   819 ;; ---------------------------------------------------------------------------------
   820 ;; (3) _InitGPRS                                             6     6      0    3184
   821 ;;                                             25 BANK0      6     6      0
   822 ;;                            _PowerON
   823 ;;                  _ATCommand_SendCmd
   824 ;;                       ___delay_20ms
   825 ;;                             _strstr
   826 ;;                               _atoi
   827 ;;                     _LcdDisplay_CSQ
   828 ;; ---------------------------------------------------------------------------------
   829 ;; (2) _DS18X20_ReadMeas                                     2     2      0     763
   830 ;;                                             10 BANK0      2     2      0
   831 ;;                      _OneWire_Reset
   832 ;;                    _OneWire_Command
   833 ;;                   _OneWire_ReadByte
   834 ;;                     _GetVerify_CRC8
   835 ;; ---------------------------------------------------------------------------------
   836 ;; (2) _DS18X20_StartMeas                                    0     0      0     285
   837 ;;                      _OneWire_Reset
   838 ;;                    _OneWire_Command
   839 ;; ---------------------------------------------------------------------------------
   840 ;; (3) _OneWire_Command                                      1     1      0     215
   841 ;;                                              4 BANK0      1     1      0
   842 ;;                      _OneWire_Reset
   843 ;;                  _OneWire_WriteByte
   844 ;; ---------------------------------------------------------------------------------
   845 ;; (4) _ATCommand_WaitData                                   5     5      0     749
   846 ;;                                             17 BANK0      5     5      0
   847 ;;                             _strstr
   848 ;;                             _strcpy
   849 ;; ---------------------------------------------------------------------------------
   850 ;; (4) _Uart1_PutString_Hex                                  3     1      2     337
   851 ;;                                              3 BANK0      3     1      2
   852 ;;                       _Uart1_PutHex
   853 ;; ---------------------------------------------------------------------------------
   854 ;; (3) _ATCommand_SendCmd                                    8     6      2    1000
   855 ;;                                             17 BANK0      8     6      2
   856 ;;                    _Uart1_PutString
   857 ;;                             _strstr
   858 ;;                       ___delay_20ms
   859 ;;                             _strcpy
   860 ;; ---------------------------------------------------------------------------------
   861 ;; (4) _PowerON                                              0     0      0      22
   862 ;;                       ___delay_20ms
   863 ;; ---------------------------------------------------------------------------------
   864 ;; (2) _TCN75_ReadReg                                        3     3      0     383
   865 ;;                                              3 BANK0      3     3      0
   866 ;;                       _SimI2C_Start
   867 ;;                    _SimI2C_SendByte
   868 ;;                      _SimI2C_RecAck
   869 ;;                    _SimI2C_ReadByte
   870 ;;                         _SimI2C_Ack
   871 ;;                       _SimI2C_NoAck
   872 ;;                        _SimI2C_Stop
   873 ;; ---------------------------------------------------------------------------------
   874 ;; (2) _TCN75_SetConfig                                      2     2      0     244
   875 ;;                                              3 BANK0      2     2      0
   876 ;;                       _SimI2C_Start
   877 ;;                    _SimI2C_SendByte
   878 ;;                      _SimI2C_RecAck
   879 ;;                        _SimI2C_Stop
   880 ;; ---------------------------------------------------------------------------------
   881 ;; (2) _InitVariable                                         0     0      0     621
   882 ;;                         _GetRomData
   883 ;;                        _SaveRomData
   884 ;; ---------------------------------------------------------------------------------
   885 ;; (3) _SimI2C_Stop                                          0     0      0       0
   886 ;; ---------------------------------------------------------------------------------
   887 ;; (3) _SimI2C_NoAck                                         0     0      0       0
   888 ;; ---------------------------------------------------------------------------------
   889 ;; (3) _SimI2C_Ack                                           0     0      0       0
   890 ;; ---------------------------------------------------------------------------------
   891 ;; (3) _SimI2C_ReadByte                                      2     2      0     108
   892 ;;                                              0 BANK0      2     2      0
   893 ;; ---------------------------------------------------------------------------------
   894 ;; (3) _SimI2C_RecAck                                        1     1      0      34
   895 ;;                                              0 BANK0      1     1      0
   896 ;; ---------------------------------------------------------------------------------
   897 ;; (3) _SimI2C_SendByte                                      3     3      0     139
   898 ;;                                              0 BANK0      3     3      0
   899 ;; ---------------------------------------------------------------------------------
   900 ;; (3) _SimI2C_Start                                         0     0      0       0
   901 ;; ---------------------------------------------------------------------------------
   902 ;; (4) _OneWire_WriteByte                                    4     4      0     114
   903 ;;                                              0 BANK0      4     4      0
   904 ;; ---------------------------------------------------------------------------------
   905 ;; (3) _OneWire_ReadByte                                     4     4      0     115
   906 ;;                                              0 BANK0      4     4      0
   907 ;; ---------------------------------------------------------------------------------
   908 ;; (4) _atoi                                                 9     7      2     569
   909 ;;                                              6 BANK0      9     7      2
   910 ;;                             ___wmul
   911 ;;                            _isdigit
   912 ;; ---------------------------------------------------------------------------------
   913 ;; (5) _strstr                                               4     0      4     562
   914 ;;                                             13 BANK0      4     0      4
   915 ;;                             _strlen
   916 ;;                            _strncmp
   917 ;;                             _strchr
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (4) _Uart1_PutHex                                         2     2      0     238
   920 ;;                                              1 BANK0      2     2      0
   921 ;;                      _Uart1_PutChar
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (4) _Uart1_PutString                                      3     1      2     130
   924 ;;                                              1 BANK0      3     1      2
   925 ;;                      _Uart1_PutChar
   926 ;; ---------------------------------------------------------------------------------
   927 ;; (2) ___delay_20ms                                         4     2      2      22
   928 ;;                                              0 BANK0      4     2      2
   929 ;; ---------------------------------------------------------------------------------
   930 ;; (2) _TCN75_Init                                           0     0      0       0
   931 ;;                        _SimI2C_Init
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (4) _OneWire_Reset                                        3     3      0      70
   934 ;;                                              0 BANK0      3     3      0
   935 ;; ---------------------------------------------------------------------------------
   936 ;; (2) _ATCommand_Init                                       0     0      0      73
   937 ;;                             _strcpy
   938 ;; ---------------------------------------------------------------------------------
   939 ;; (3) _SaveRomData                                          1     1      0     312
   940 ;;                                              7 BANK0      1     1      0
   941 ;;                      _GetVerify_Sum
   942 ;;                       _eeprom_write
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (3) _GetRomData                                           1     1      0     309
   945 ;;                                              7 BANK0      1     1      0
   946 ;;                        _eeprom_read
   947 ;;                      _GetVerify_Sum
   948 ;; ---------------------------------------------------------------------------------
   949 ;; (2) _LcdDisplay_Err                                       0     0      0     400
   950 ;;                            ___lbdiv
   951 ;;                            ___lbmod
   952 ;;                      _LcdDisplayNum
   953 ;; ---------------------------------------------------------------------------------
   954 ;; (2) _LcdDisplay_CurTemp                                   4     4      0     536
   955 ;;                                              5 BANK0      4     4      0
   956 ;;                            ___lbdiv
   957 ;;                            ___lbmod
   958 ;;                      _LcdDisplayNum
   959 ;; ---------------------------------------------------------------------------------
   960 ;; (4) _LcdDisplay_CSQ                                       2     2      0     468
   961 ;;                                              5 BANK0      2     2      0
   962 ;;                            ___lbdiv
   963 ;;                            ___lbmod
   964 ;;                      _LcdDisplayNum
   965 ;; ---------------------------------------------------------------------------------
   966 ;; (2) _LcdDisplayAll                                        1     1      0      93
   967 ;;                                              0 BANK0      1     1      0
   968 ;;                      _LcdDisplayNum
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (3) ___lbmod                                              5     4      1     159
   971 ;;                                              0 BANK0      5     4      1
   972 ;; ---------------------------------------------------------------------------------
   973 ;; (3) ___lbdiv                                              4     3      1     241
   974 ;;                                              0 BANK0      4     3      1
   975 ;; ---------------------------------------------------------------------------------
   976 ;; (4) ___lwmod                                              5     1      4     232
   977 ;;                                              0 BANK0      5     1      4
   978 ;; ---------------------------------------------------------------------------------
   979 ;; (4) ___lwdiv                                              7     3      4     241
   980 ;;                                              0 BANK0      7     3      4
   981 ;; ---------------------------------------------------------------------------------
   982 ;; (5) ___wmul                                               6     2      4     136
   983 ;;                                              0 BANK0      6     2      4
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (1) ___bmul                                               3     2      1     136
   986 ;;                                              0 BANK0      3     2      1
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (6) _strchr                                               6     2      4      88
   989 ;;                                              0 BANK0      6     2      4
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (6) _strncmp                                              7     1      6     134
   992 ;;                                              6 BANK0      7     1      6
   993 ;;                             _strlen (ARG)
   994 ;; ---------------------------------------------------------------------------------
   995 ;; (6) _strlen                                               6     4      2      89
   996 ;;                                              0 BANK0      6     4      2
   997 ;; ---------------------------------------------------------------------------------
   998 ;; (5) _isdigit                                              2     2      0      99
   999 ;;                                              0 BANK0      2     2      0
  1000 ;; ---------------------------------------------------------------------------------
  1001 ;; (3) _SimI2C_Init                                          0     0      0       0
  1002 ;; ---------------------------------------------------------------------------------
  1003 ;; (3) _GetVerify_CRC8                                      10     8      2     233
  1004 ;;                                              0 BANK0     10     8      2
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (4) _GetVerify_Sum                                        7     5      2     120
  1007 ;;                                              0 BANK0      7     5      2
  1008 ;; ---------------------------------------------------------------------------------
  1009 ;; (5) _strcpy                                               6     4      2      73
  1010 ;;                                              0 BANK0      6     4      2
  1011 ;; ---------------------------------------------------------------------------------
  1012 ;; (4) _eeprom_read                                          3     3      0      22
  1013 ;;                                              0 BANK0      3     3      0
  1014 ;; ---------------------------------------------------------------------------------
  1015 ;; (4) _Uart1_PutChar                                        1     1      0      31
  1016 ;;                                              0 BANK0      1     1      0
  1017 ;; ---------------------------------------------------------------------------------
  1018 ;; (4) _MakeTxTemperature                                    3     1      2     556
  1019 ;;                                              0 BANK0      3     1      2
  1020 ;; ---------------------------------------------------------------------------------
  1021 ;; (1) _eeprom_write                                         2     1      1      62
  1022 ;;                                              0 BANK0      2     1      1
  1023 ;; ---------------------------------------------------------------------------------
  1024 ;; (2) _InitMCU                                              0     0      0       0
  1025 ;; ---------------------------------------------------------------------------------
  1026 ;; (2) _DisplayInit                                          0     0      0       0
  1027 ;; ---------------------------------------------------------------------------------
  1028 ;; (3) _LcdDisplayNum                                        0     0      0       0
  1029 ;; ---------------------------------------------------------------------------------
  1030 ;; Estimated maximum stack depth 6
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1033 ;; ---------------------------------------------------------------------------------
  1034 ;; (8) _highISR                                              1     1      0     179
  1035 ;;                                              6 COMMON     1     1      0
  1036 ;;                   _ATCommand_ProcRx
  1037 ;; ---------------------------------------------------------------------------------
  1038 ;; (9) _ATCommand_ProcRx                                     4     4      0     156
  1039 ;;                                              2 COMMON     4     4      0
  1040 ;;                            _isgraph
  1041 ;; ---------------------------------------------------------------------------------
  1042 ;; (10) _isgraph                                             2     2      0      68
  1043 ;;                                              0 COMMON     2     2      0
  1044 ;; ---------------------------------------------------------------------------------
  1045 ;; Estimated maximum stack depth 10
  1046 ;; ---------------------------------------------------------------------------------
  1047 ;; Call Graph Graphs:
  1048 ;; _main (ROOT)
  1049 ;;   _InitSystem
  1050 ;;     _InitMCU
  1051 ;;     _InitVariable
  1052 ;;       _GetRomData
  1053 ;;         _eeprom_read
  1054 ;;         _GetVerify_Sum
  1055 ;;       _SaveRomData
  1056 ;;         _GetVerify_Sum
  1057 ;;         _eeprom_write
  1058 ;;     _DisplayInit
  1059 ;;     _ATCommand_Init
  1060 ;;       _strcpy
  1061 ;;     _OneWire_Reset
  1062 ;;     _TCN75_Init
  1063 ;;       _SimI2C_Init
  1064 ;;     _TCN75_SetConfig
  1065 ;;       _SimI2C_Start
  1066 ;;       _SimI2C_SendByte
  1067 ;;       _SimI2C_RecAck
  1068 ;;       _SimI2C_Stop
  1069 ;;     ___delay_20ms
  1070 ;;     _ReadTData
  1071 ;;       _DS18X20_StartMeas
  1072 ;;         _OneWire_Reset
  1073 ;;         _OneWire_Command
  1074 ;;           _OneWire_Reset
  1075 ;;           _OneWire_WriteByte
  1076 ;;       ___delay_20ms
  1077 ;;       _DS18X20_ReadMeas
  1078 ;;         _OneWire_Reset
  1079 ;;         _OneWire_Command
  1080 ;;           _OneWire_Reset
  1081 ;;           _OneWire_WriteByte
  1082 ;;         _OneWire_ReadByte
  1083 ;;         _GetVerify_CRC8
  1084 ;;       _TCN75_SetConfig
  1085 ;;         _SimI2C_Start
  1086 ;;         _SimI2C_SendByte
  1087 ;;         _SimI2C_RecAck
  1088 ;;         _SimI2C_Stop
  1089 ;;       _TCN75_ReadReg
  1090 ;;         _SimI2C_Start
  1091 ;;         _SimI2C_SendByte
  1092 ;;         _SimI2C_RecAck
  1093 ;;         _SimI2C_ReadByte
  1094 ;;         _SimI2C_Ack
  1095 ;;         _SimI2C_NoAck
  1096 ;;         _SimI2C_Stop
  1097 ;;       _LcdDisplay_CurTemp
  1098 ;;         ___lbdiv
  1099 ;;         ___lbmod
  1100 ;;         _LcdDisplayNum
  1101 ;;   ___delay_20ms
  1102 ;;   _TestProc
  1103 ;;     _LcdDisplayAll
  1104 ;;       _LcdDisplayNum
  1105 ;;     ___delay_20ms
  1106 ;;     _ReadTData
  1107 ;;       _DS18X20_StartMeas
  1108 ;;         _OneWire_Reset
  1109 ;;         _OneWire_Command
  1110 ;;           _OneWire_Reset
  1111 ;;           _OneWire_WriteByte
  1112 ;;       ___delay_20ms
  1113 ;;       _DS18X20_ReadMeas
  1114 ;;         _OneWire_Reset
  1115 ;;         _OneWire_Command
  1116 ;;           _OneWire_Reset
  1117 ;;           _OneWire_WriteByte
  1118 ;;         _OneWire_ReadByte
  1119 ;;         _GetVerify_CRC8
  1120 ;;       _TCN75_SetConfig
  1121 ;;         _SimI2C_Start
  1122 ;;         _SimI2C_SendByte
  1123 ;;         _SimI2C_RecAck
  1124 ;;         _SimI2C_Stop
  1125 ;;       _TCN75_ReadReg
  1126 ;;         _SimI2C_Start
  1127 ;;         _SimI2C_SendByte
  1128 ;;         _SimI2C_RecAck
  1129 ;;         _SimI2C_ReadByte
  1130 ;;         _SimI2C_Ack
  1131 ;;         _SimI2C_NoAck
  1132 ;;         _SimI2C_Stop
  1133 ;;       _LcdDisplay_CurTemp
  1134 ;;         ___lbdiv
  1135 ;;         ___lbmod
  1136 ;;         _LcdDisplayNum
  1137 ;;     _LcdDisplay_Err
  1138 ;;       ___lbdiv
  1139 ;;       ___lbmod
  1140 ;;       _LcdDisplayNum
  1141 ;;     _CallProc
  1142 ;;       _CallSend
  1143 ;;         _InitGPRS
  1144 ;;           _PowerON
  1145 ;;             ___delay_20ms
  1146 ;;           _ATCommand_SendCmd
  1147 ;;             _Uart1_PutString
  1148 ;;               _Uart1_PutChar
  1149 ;;             _strstr
  1150 ;;               _strlen
  1151 ;;               _strncmp
  1152 ;;                 _strlen (ARG)
  1153 ;;               _strchr
  1154 ;;             ___delay_20ms
  1155 ;;             _strcpy
  1156 ;;           ___delay_20ms
  1157 ;;           _strstr
  1158 ;;             _strlen
  1159 ;;             _strncmp
  1160 ;;               _strlen (ARG)
  1161 ;;             _strchr
  1162 ;;           _atoi
  1163 ;;             ___wmul
  1164 ;;             _isdigit
  1165 ;;           _LcdDisplay_CSQ
  1166 ;;             ___lbdiv
  1167 ;;             ___lbmod
  1168 ;;             _LcdDisplayNum
  1169 ;;         ___delay_20ms
  1170 ;;         _ATCommand_SendCmd
  1171 ;;           _Uart1_PutString
  1172 ;;             _Uart1_PutChar
  1173 ;;           _strstr
  1174 ;;             _strlen
  1175 ;;             _strncmp
  1176 ;;               _strlen (ARG)
  1177 ;;             _strchr
  1178 ;;           ___delay_20ms
  1179 ;;           _strcpy
  1180 ;;         _InteractServer
  1181 ;;           _Uart1_PutString
  1182 ;;             _Uart1_PutChar
  1183 ;;           _Uart1_PutString_Hex
  1184 ;;             _Uart1_PutHex
  1185 ;;               _Uart1_PutChar
  1186 ;;           _Uart1_PutHex
  1187 ;;             _Uart1_PutChar
  1188 ;;           _MakeTxTemperature
  1189 ;;           ___lwdiv
  1190 ;;           _Uart1_PutChar
  1191 ;;           ___lwmod
  1192 ;;           ___bmul
  1193 ;;           _eeprom_read
  1194 ;;           _strcpy
  1195 ;;           _ATCommand_WaitData
  1196 ;;             _strstr
  1197 ;;               _strlen
  1198 ;;               _strncmp
  1199 ;;                 _strlen (ARG)
  1200 ;;               _strchr
  1201 ;;             _strcpy
  1202 ;;           ___delay_20ms
  1203 ;;       _LcdDisplay_CurTemp
  1204 ;;         ___lbdiv
  1205 ;;         ___lbmod
  1206 ;;         _LcdDisplayNum
  1207 ;;       ___delay_20ms
  1208 ;;       _LcdDisplay_Err
  1209 ;;         ___lbdiv
  1210 ;;         ___lbmod
  1211 ;;         _LcdDisplayNum
  1212 ;;   _ReadTData
  1213 ;;     _DS18X20_StartMeas
  1214 ;;       _OneWire_Reset
  1215 ;;       _OneWire_Command
  1216 ;;         _OneWire_Reset
  1217 ;;         _OneWire_WriteByte
  1218 ;;     ___delay_20ms
  1219 ;;     _DS18X20_ReadMeas
  1220 ;;       _OneWire_Reset
  1221 ;;       _OneWire_Command
  1222 ;;         _OneWire_Reset
  1223 ;;         _OneWire_WriteByte
  1224 ;;       _OneWire_ReadByte
  1225 ;;       _GetVerify_CRC8
  1226 ;;     _TCN75_SetConfig
  1227 ;;       _SimI2C_Start
  1228 ;;       _SimI2C_SendByte
  1229 ;;       _SimI2C_RecAck
  1230 ;;       _SimI2C_Stop
  1231 ;;     _TCN75_ReadReg
  1232 ;;       _SimI2C_Start
  1233 ;;       _SimI2C_SendByte
  1234 ;;       _SimI2C_RecAck
  1235 ;;       _SimI2C_ReadByte
  1236 ;;       _SimI2C_Ack
  1237 ;;       _SimI2C_NoAck
  1238 ;;       _SimI2C_Stop
  1239 ;;     _LcdDisplay_CurTemp
  1240 ;;       ___lbdiv
  1241 ;;       ___lbmod
  1242 ;;       _LcdDisplayNum
  1243 ;;   _CallProc
  1244 ;;     _CallSend
  1245 ;;       _InitGPRS
  1246 ;;         _PowerON
  1247 ;;           ___delay_20ms
  1248 ;;         _ATCommand_SendCmd
  1249 ;;           _Uart1_PutString
  1250 ;;             _Uart1_PutChar
  1251 ;;           _strstr
  1252 ;;             _strlen
  1253 ;;             _strncmp
  1254 ;;               _strlen (ARG)
  1255 ;;             _strchr
  1256 ;;           ___delay_20ms
  1257 ;;           _strcpy
  1258 ;;         ___delay_20ms
  1259 ;;         _strstr
  1260 ;;           _strlen
  1261 ;;           _strncmp
  1262 ;;             _strlen (ARG)
  1263 ;;           _strchr
  1264 ;;         _atoi
  1265 ;;           ___wmul
  1266 ;;           _isdigit
  1267 ;;         _LcdDisplay_CSQ
  1268 ;;           ___lbdiv
  1269 ;;           ___lbmod
  1270 ;;           _LcdDisplayNum
  1271 ;;       ___delay_20ms
  1272 ;;       _ATCommand_SendCmd
  1273 ;;         _Uart1_PutString
  1274 ;;           _Uart1_PutChar
  1275 ;;         _strstr
  1276 ;;           _strlen
  1277 ;;           _strncmp
  1278 ;;             _strlen (ARG)
  1279 ;;           _strchr
  1280 ;;         ___delay_20ms
  1281 ;;         _strcpy
  1282 ;;       _InteractServer
  1283 ;;         _Uart1_PutString
  1284 ;;           _Uart1_PutChar
  1285 ;;         _Uart1_PutString_Hex
  1286 ;;           _Uart1_PutHex
  1287 ;;             _Uart1_PutChar
  1288 ;;         _Uart1_PutHex
  1289 ;;           _Uart1_PutChar
  1290 ;;         _MakeTxTemperature
  1291 ;;         ___lwdiv
  1292 ;;         _Uart1_PutChar
  1293 ;;         ___lwmod
  1294 ;;         ___bmul
  1295 ;;         _eeprom_read
  1296 ;;         _strcpy
  1297 ;;         _ATCommand_WaitData
  1298 ;;           _strstr
  1299 ;;             _strlen
  1300 ;;             _strncmp
  1301 ;;               _strlen (ARG)
  1302 ;;             _strchr
  1303 ;;           _strcpy
  1304 ;;         ___delay_20ms
  1305 ;;     _LcdDisplay_CurTemp
  1306 ;;       ___lbdiv
  1307 ;;       ___lbmod
  1308 ;;       _LcdDisplayNum
  1309 ;;     ___delay_20ms
  1310 ;;     _LcdDisplay_Err
  1311 ;;       ___lbdiv
  1312 ;;       ___lbmod
  1313 ;;       _LcdDisplayNum
  1314 ;;   ___bmul
  1315 ;;   _eeprom_write
  1316 ;;
  1317 ;; _highISR (ROOT)
  1318 ;;   _ATCommand_ProcRx
  1319 ;;     _isgraph
  1320 ;;
  1321 ;; Address spaces:
  1322 ;;Name               Size   Autos  Total    Cost      Usage
  1323 ;;BIGRAM             1F0      0       0       0        0.0%
  1324 ;;EEDATA             100      0       0       0        0.0%
  1325 ;;NULL                 0      0       0       0        0.0%
  1326 ;;CODE                 0      0       0       0        0.0%
  1327 ;;BITCOMMON            E      0       0       1        0.0%
  1328 ;;BITSFR0              0      0       0       1        0.0%
  1329 ;;SFR0                 0      0       0       1        0.0%
  1330 ;;COMMON               E      7       C       2       85.7%
  1331 ;;BITSFR1              0      0       0       2        0.0%
  1332 ;;SFR1                 0      0       0       2        0.0%
  1333 ;;BITSFR2              0      0       0       3        0.0%
  1334 ;;SFR2                 0      0       0       3        0.0%
  1335 ;;STACK                0      0       D       3        0.0%
  1336 ;;BITSFR3              0      0       0       4        0.0%
  1337 ;;SFR3                 0      0       0       4        0.0%
  1338 ;;ABS                  0      0      AF       4        0.0%
  1339 ;;BITBANK0            50      0       0       5        0.0%
  1340 ;;BITSFR4              0      0       0       5        0.0%
  1341 ;;SFR4                 0      0       0       5        0.0%
  1342 ;;BANK0               50     2E      4F       6       98.8%
  1343 ;;BITSFR5              0      0       0       6        0.0%
  1344 ;;SFR5                 0      0       0       6        0.0%
  1345 ;;BITBANK1            50      0       0       7        0.0%
  1346 ;;BITSFR6              0      0       0       7        0.0%
  1347 ;;SFR6                 0      0       0       7        0.0%
  1348 ;;BANK1               50      0      3C       8       75.0%
  1349 ;;BITSFR7              0      0       0       8        0.0%
  1350 ;;SFR7                 0      0       0       8        0.0%
  1351 ;;BITBANK2            50      0       0       9        0.0%
  1352 ;;BITSFR8              0      0       0       9        0.0%
  1353 ;;SFR8                 0      0       0       9        0.0%
  1354 ;;BANK2               50      0      18      10       30.0%
  1355 ;;BITSFR9              0      0       0      10        0.0%
  1356 ;;SFR9                 0      0       0      10        0.0%
  1357 ;;BITBANK3            50      0       0      11        0.0%
  1358 ;;BITSFR10             0      0       0      11        0.0%
  1359 ;;SFR10                0      0       0      11        0.0%
  1360 ;;BANK3               50      0       0      12        0.0%
  1361 ;;BITSFR11             0      0       0      12        0.0%
  1362 ;;SFR11                0      0       0      12        0.0%
  1363 ;;BITBANK4            50      0       0      13        0.0%
  1364 ;;BITSFR12             0      0       0      13        0.0%
  1365 ;;SFR12                0      0       0      13        0.0%
  1366 ;;BANK4               4C      0       0      14        0.0%
  1367 ;;BITSFR13             0      0       0      14        0.0%
  1368 ;;SFR13                0      0       0      14        0.0%
  1369 ;;BITBANK5            50      0       0      15        0.0%
  1370 ;;BITSFR14             0      0       0      15        0.0%
  1371 ;;SFR14                0      0       0      15        0.0%
  1372 ;;BITSFR15             0      0       0      16        0.0%
  1373 ;;SFR15                0      0       0      16        0.0%
  1374 ;;BANK5                0      0       0      16        0.0%
  1375 ;;BITBANK6            10      0       0      17        0.0%
  1376 ;;BITSFR16             0      0       0      17        0.0%
  1377 ;;SFR16                0      0       0      17        0.0%
  1378 ;;BITSFR17             0      0       0      18        0.0%
  1379 ;;SFR17                0      0       0      18        0.0%
  1380 ;;BANK6                0      0       0      18        0.0%
  1381 ;;BITSFR18             0      0       0      19        0.0%
  1382 ;;SFR18                0      0       0      19        0.0%
  1383 ;;DATA                 0      0      BC      19        0.0%
  1384 ;;BITSFR19             0      0       0      20        0.0%
  1385 ;;SFR19                0      0       0      20        0.0%
  1386 ;;BITSFR20             0      0       0      21        0.0%
  1387 ;;SFR20                0      0       0      21        0.0%
  1388 ;;BITSFR21             0      0       0      22        0.0%
  1389 ;;SFR21                0      0       0      22        0.0%
  1390 ;;BITSFR22             0      0       0      23        0.0%
  1391 ;;SFR22                0      0       0      23        0.0%
  1392 ;;BITSFR23             0      0       0      24        0.0%
  1393 ;;SFR23                0      0       0      24        0.0%
  1394 ;;BITSFR24             0      0       0      25        0.0%
  1395 ;;SFR24                0      0       0      25        0.0%
  1396 ;;BITSFR25             0      0       0      26        0.0%
  1397 ;;SFR25                0      0       0      26        0.0%
  1398 ;;BITSFR26             0      0       0      27        0.0%
  1399 ;;SFR26                0      0       0      27        0.0%
  1400 ;;BITSFR27             0      0       0      28        0.0%
  1401 ;;SFR27                0      0       0      28        0.0%
  1402 ;;BITSFR28             0      0       0      29        0.0%
  1403 ;;SFR28                0      0       0      29        0.0%
  1404 ;;BITSFR29             0      0       0      30        0.0%
  1405 ;;SFR29                0      0       0      30        0.0%
  1406 ;;BITSFR30             0      0       0      31        0.0%
  1407 ;;SFR30                0      0       0      31        0.0%
  1408 ;;BITSFR31             0      0       0      32        0.0%
  1409 ;;SFR31                0      0       0      32        0.0%
  1410                           
  1411                           
  1412 ;; *************** function _main *****************
  1413 ;; Defined at:
  1414 ;;		line 12 in file "F:\work\WYP\NBIoT\Main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  i               1   45[BANK0 ] unsigned char 
  1419 ;;  addr            1   44[BANK0 ] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;		None               void
  1422 ;; Registers used:
  1423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1424 ;; Tracked objects:
  1425 ;;		On entry : 17F/0
  1426 ;;		On exit  : 1F/F
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1429 ;;      Params:         0       0       0       0       0       0       0       0
  1430 ;;      Locals:         0       2       0       0       0       0       0       0
  1431 ;;      Temps:          0       2       0       0       0       0       0       0
  1432 ;;      Totals:         0       4       0       0       0       0       0       0
  1433 ;;Total ram usage:        4 bytes
  1434 ;; Hardware stack levels required when called:   10
  1435 ;; This function calls:
  1436 ;;		_InitSystem
  1437 ;;		___delay_20ms
  1438 ;;		_TestProc
  1439 ;;		_ReadTData
  1440 ;;		_CallProc
  1441 ;;		___bmul
  1442 ;;		_eeprom_write
  1443 ;; This function is called by:
  1444 ;;		Startup code after reset
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447  0845                     _main:	
  1448                           
  1449                           ;Main.c: 13: unsigned char addr,i;
  1450                           ;Main.c: 14: InitSystem();
  1451                           
  1452                           ; Regs used in _main: [wreg-btemp+0+pclath+cstack]
  1453  0845  3180  20E8  3188   	fcall	_InitSystem
  1454                           
  1455                           ;Main.c: 15: __delay_20ms(250);
  1456  0848  30FA               	movlw	250
  1457  0849  00A0               	movwf	?___delay_20ms
  1458  084A  01A1               	clrf	?___delay_20ms+1
  1459  084B  22C4               	fcall	___delay_20ms
  1460                           
  1461                           ;Main.c: 16: gFlags.bFirst=1;
  1462  084C  1565               	bsf	_gFlags,2
  1463                           
  1464                           ;Main.c: 17: TestProc();
  1465  084D  3182  2244  3188   	fcall	_TestProc
  1466                           
  1467                           ;Main.c: 18: ReadTData();
  1468  0850  20DF  3188         	fcall	_ReadTData
  1469                           
  1470                           ;Main.c: 19: CallProc();
  1471  0852  2313  3188         	fcall	_CallProc
  1472                           
  1473                           ;Main.c: 20: gFlags.bFirst=0;
  1474  0854  0020               	movlb	0	; select bank0
  1475  0855  1165               	bcf	_gFlags,2
  1476                           
  1477                           ;Main.c: 21: MeasurementTick=SystemTick;
  1478  0856  085D               	movf	_SystemTick+1,w
  1479  0857  00D9               	movwf	_MeasurementTick+1
  1480  0858  085C               	movf	_SystemTick,w
  1481  0859  00D8               	movwf	_MeasurementTick
  1482  085A                     l33544:	
  1483                           
  1484                           ;Main.c: 23: {
  1485                           ;Main.c: 24: if(RB2==0)
  1486  085A  0020               	movlb	0	; select bank0
  1487  085B  190D               	btfsc	13,2
  1488  085C  2870               	goto	l33558
  1489                           
  1490                           ;Main.c: 25: {
  1491                           ;Main.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1492  085D  301A               	movlw	26
  1493  085E  00CB               	movwf	??_main+1
  1494  085F  30F8               	movlw	248
  1495  0860  00CA               	movwf	??_main
  1496  0861                     u8967:	
  1497  0861  0BCA               	decfsz	??_main,f
  1498  0862  2861               	goto	u8967
  1499  0863  0BCB               	decfsz	??_main+1,f
  1500  0864  2861               	goto	u8967
  1501  0865  0064               	clrwdt
  1502                           
  1503                           ;Main.c: 27: if(RB2==0)
  1504  0866  0020               	movlb	0	; select bank0
  1505  0867  190D               	btfsc	13,2
  1506  0868  2870               	goto	l33558
  1507                           
  1508                           ;Main.c: 28: {
  1509                           ;Main.c: 29: gFlags.bNotify=1;
  1510  0869  1465               	bsf	_gFlags,0
  1511                           
  1512                           ;Main.c: 30: ReadTData();
  1513  086A  20DF  3188         	fcall	_ReadTData
  1514                           
  1515                           ;Main.c: 31: CallProc();
  1516  086C  2313  3188         	fcall	_CallProc
  1517                           
  1518                           ;Main.c: 32: gFlags.bNotify=0;
  1519  086E  0020               	movlb	0	; select bank0
  1520  086F  1065               	bcf	_gFlags,0
  1521  0870                     l33558:	
  1522                           
  1523                           ;Main.c: 33: }
  1524                           ;Main.c: 34: }
  1525                           ;Main.c: 35: if((SystemTick-RunTick)>20)
  1526  0870  0877               	movf	_RunTick,w
  1527  0871  025C               	subwf	_SystemTick,w
  1528  0872  00CA               	movwf	??_main
  1529  0873  0878               	movf	_RunTick+1,w
  1530  0874  3B5D               	subwfb	_SystemTick+1,w
  1531  0875  00CB               	movwf	??_main+1
  1532  0876  3000               	movlw	0
  1533  0877  024B               	subwf	??_main+1,w
  1534  0878  3015               	movlw	21
  1535  0879  1903               	skipnz
  1536  087A  024A               	subwf	??_main,w
  1537  087B  1C03               	skipc
  1538  087C  2886               	goto	l33564
  1539                           
  1540                           ;Main.c: 36: {
  1541                           ;Main.c: 37: RunTick=SystemTick;
  1542  087D  085D               	movf	_SystemTick+1,w
  1543  087E  00F8               	movwf	_RunTick+1
  1544  087F  085C               	movf	_SystemTick,w
  1545  0880  00F7               	movwf	_RunTick
  1546  0881                     l6502:	
  1547                           ;Main.c: 39: while(WA==0);
  1548                           
  1549  0881  002F               	movlb	15	; select bank15
  1550  0882  1E12               	btfss	18,4
  1551  0883  2881               	goto	l6502
  1552                           
  1553                           ;Main.c: 40: SEG21COM3=!SEG21COM3;
  1554  0884  3020               	movlw	32
  1555  0885  06AB               	xorwf	43,f
  1556  0886                     l33564:	
  1557                           
  1558                           ;Main.c: 42: }
  1559                           ;Main.c: 43: if((SystemTick-MeasurementTick)>NeedMeasurementTick)
  1560  0886  0020               	movlb	0	; select bank0
  1561  0887  0858               	movf	_MeasurementTick,w
  1562  0888  025C               	subwf	_SystemTick,w
  1563  0889  00CA               	movwf	??_main
  1564  088A  0859               	movf	_MeasurementTick+1,w
  1565  088B  3B5D               	subwfb	_SystemTick+1,w
  1566  088C  00CB               	movwf	??_main+1
  1567  088D  025B               	subwf	_NeedMeasurementTick+1,w
  1568  088E  1D03               	skipz
  1569  088F  2892               	goto	u8895
  1570  0890  084A               	movf	??_main,w
  1571  0891  025A               	subwf	_NeedMeasurementTick,w
  1572  0892                     u8895:	
  1573  0892  1803               	skipnc
  1574  0893  28DA               	goto	l33614
  1575                           
  1576                           ;Main.c: 44: {
  1577                           ;Main.c: 45: MeasurementTick=SystemTick;
  1578  0894  085D               	movf	_SystemTick+1,w
  1579  0895  00D9               	movwf	_MeasurementTick+1
  1580  0896  085C               	movf	_SystemTick,w
  1581  0897  00D8               	movwf	_MeasurementTick
  1582                           
  1583                           ;Main.c: 46: ReadTData();
  1584  0898  20DF  3188         	fcall	_ReadTData
  1585                           
  1586                           ;Main.c: 47: TList.T[TListIndex++]=CurTemp;
  1587  089A  0020               	movlb	0	; select bank0
  1588  089B  3564               	lslf	_TListIndex,w
  1589  089C  3E20               	addlw	_TList& (0+255)
  1590  089D  0086               	movwf	6
  1591  089E  3001               	movlw	1	; select bank2/3
  1592  089F  0087               	movwf	7
  1593  08A0  0856               	movf	_CurTemp,w
  1594  08A1  3FC0               	movwi [0]fsr1
  1595  08A2  0857               	movf	_CurTemp+1,w
  1596  08A3  3FC1               	movwi [1]fsr1
  1597  08A4  0AE4               	incf	_TListIndex,f
  1598                           
  1599                           ;Main.c: 48: if(TListIndex>=12)
  1600  08A5  300C               	movlw	12
  1601  08A6  0264               	subwf	_TListIndex,w
  1602  08A7  1C03               	skipc
  1603  08A8  28DA               	goto	l33614
  1604                           
  1605                           ;Main.c: 49: {
  1606                           ;Main.c: 50: CallProc();
  1607  08A9  2313  3188         	fcall	_CallProc
  1608                           
  1609                           ;Main.c: 51: TListIndex=0;
  1610  08AB  0020               	movlb	0	; select bank0
  1611  08AC  01E4               	clrf	_TListIndex
  1612                           
  1613                           ;Main.c: 52: if(ErrState!=NoErr)
  1614  08AD  0862               	movf	_ErrState,w
  1615  08AE  1903               	btfsc	3,2
  1616  08AF  28D7               	goto	l33610
  1617                           
  1618                           ;Main.c: 53: {
  1619                           ;Main.c: 54: if(TxErrDataIndex==0xff)
  1620  08B0  0868               	movf	_TxErrDataIndex,w
  1621  08B1  3AFF               	xorlw	255
  1622  08B2  1D03               	skipz
  1623  08B3  28B5               	goto	l33586
  1624                           
  1625                           ;Main.c: 55: TxErrDataIndex=0;
  1626  08B4  01E8               	clrf	_TxErrDataIndex
  1627  08B5                     l33586:	
  1628                           
  1629                           ;Main.c: 56: addr=TxErrDataIndex*12;
  1630  08B5  300C               	movlw	12
  1631  08B6  00A0               	movwf	?___bmul
  1632  08B7  0868               	movf	_TxErrDataIndex,w
  1633  08B8  261E  3188         	fcall	___bmul
  1634  08BA  00CC               	movwf	main@addr
  1635                           
  1636                           ;Main.c: 57: addr+=16;
  1637  08BB  3010               	movlw	16
  1638  08BC  07CC               	addwf	main@addr,f
  1639                           
  1640                           ;Main.c: 58: for(i=0;i<24;i++)
  1641  08BD  01CD               	clrf	main@i
  1642  08BE                     l33596:	
  1643                           
  1644                           ;Main.c: 59: {
  1645                           ;Main.c: 60: eeprom_write(addr+i,TList.All[i]);
  1646  08BE  084D               	movf	main@i,w
  1647  08BF  3E20               	addlw	_TList& (0+255)
  1648  08C0  0086               	movwf	6
  1649  08C1  3001               	movlw	1	; select bank2/3
  1650  08C2  0087               	movwf	7
  1651  08C3  0801               	movf	1,w
  1652  08C4  00A0               	movwf	?_eeprom_write
  1653  08C5  084C               	movf	main@addr,w
  1654  08C6  074D               	addwf	main@i,w
  1655  08C7  26D4  3188         	fcall	_eeprom_write
  1656  08C9  0020               	movlb	0	; select bank0
  1657  08CA  0ACD               	incf	main@i,f
  1658  08CB  3018               	movlw	24
  1659  08CC  024D               	subwf	main@i,w
  1660  08CD  1C03               	skipc
  1661  08CE  28BE               	goto	l33596
  1662                           
  1663                           ;Main.c: 61: }
  1664                           ;Main.c: 62: TxErrDataIndex++;
  1665  08CF  0AE8               	incf	_TxErrDataIndex,f
  1666                           
  1667                           ;Main.c: 63: if(TxErrDataIndex>=10)
  1668  08D0  300A               	movlw	10
  1669  08D1  0268               	subwf	_TxErrDataIndex,w
  1670  08D2  1C03               	skipc
  1671  08D3  28DA               	goto	l33614
  1672                           
  1673                           ;Main.c: 64: {
  1674                           ;Main.c: 65: gFlags.bErrFull=1;
  1675  08D4  15E5               	bsf	_gFlags,3
  1676                           
  1677                           ;Main.c: 66: TxErrDataIndex=0;
  1678  08D5  01E8               	clrf	_TxErrDataIndex
  1679  08D6  28DA               	goto	l33614
  1680  08D7                     l33610:	
  1681                           
  1682                           ;Main.c: 69: else
  1683                           ;Main.c: 70: {
  1684                           ;Main.c: 71: TxErrDataIndex=0xff;
  1685  08D7  30FF               	movlw	255
  1686  08D8  00E8               	movwf	_TxErrDataIndex
  1687                           
  1688                           ;Main.c: 72: gFlags.bErrFull=0;
  1689  08D9  11E5               	bcf	_gFlags,3
  1690  08DA                     l33614:	
  1691                           
  1692                           ;Main.c: 73: }
  1693                           ;Main.c: 74: }
  1694                           ;Main.c: 75: }
  1695                           ;Main.c: 76: if(WERR==1)
  1696  08DA  002F               	movlb	15	; select bank15
  1697  08DB  1E91               	btfss	17,5
  1698  08DC  285A               	goto	l33544
  1699                           
  1700                           ;Main.c: 77: {
  1701                           ;Main.c: 78: WERR=0;
  1702  08DD  1291               	bcf	17,5
  1703  08DE  285A               	goto	l33544
  1704  08DF                     __end_of_main:	
  1705  08DF                     __ptext1967:	
  1706 ;; =============== function _CallSend ends ============
  1707                           
  1708                           
  1709 ;; *************** function _ReadTData *****************
  1710 ;; Defined at:
  1711 ;;		line 106 in file "F:\work\WYP\NBIoT\Main.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  retry           1   12[BANK0 ] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 10/0
  1722 ;;		On exit  : 1F/F
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1725 ;;      Params:         0       0       0       0       0       0       0       0
  1726 ;;      Locals:         0       1       0       0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0
  1728 ;;      Totals:         0       1       0       0       0       0       0       0
  1729 ;;Total ram usage:        1 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    6
  1732 ;; This function calls:
  1733 ;;		_DS18X20_StartMeas
  1734 ;;		___delay_20ms
  1735 ;;		_DS18X20_ReadMeas
  1736 ;;		_TCN75_SetConfig
  1737 ;;		_TCN75_ReadReg
  1738 ;;		_LcdDisplay_CurTemp
  1739 ;; This function is called by:
  1740 ;;		_InitSystem
  1741 ;;		_main
  1742 ;;		_TestProc
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745  08DF                     _ReadTData:	
  1746                           
  1747                           ;Main.c: 107: unsigned char retry;
  1748                           ;Main.c: 108: if(gFlags.b18B20)
  1749                           
  1750                           ; Regs used in _ReadTData: [wreg-status,0+pclath+cstack]
  1751  08DF  0020               	movlb	0	; select bank0
  1752  08E0  1CE5               	btfss	_gFlags,1
  1753  08E1  2909               	goto	l6525
  1754                           
  1755                           ;Main.c: 109: {
  1756                           ;Main.c: 110: retry=5;
  1757  08E2  3005               	movlw	5
  1758  08E3  00AC               	movwf	ReadTData@retry
  1759  08E4                     l6526:	
  1760                           ;Main.c: 111: while(retry!=0)
  1761                           
  1762  08E4  08AC               	movf	ReadTData@retry,f
  1763  08E5  1903               	btfsc	3,2
  1764  08E6  2902               	goto	l33366
  1765                           
  1766                           ;Main.c: 112: {
  1767                           ;Main.c: 113: if(DS18X20_StartMeas()!=0x00)
  1768  08E7  27E2  3188         	fcall	_DS18X20_StartMeas
  1769  08E9  3A00               	xorlw	0
  1770  08EA  1903               	skipnz
  1771  08EB  28EF               	goto	l33356
  1772  08EC                     l33354:	
  1773                           
  1774                           ;Main.c: 114: {
  1775                           ;Main.c: 115: retry--;
  1776  08EC  0020               	movlb	0	; select bank0
  1777  08ED  03AC               	decf	ReadTData@retry,f
  1778                           
  1779                           ;Main.c: 116: }
  1780  08EE  28E4               	goto	l6526
  1781  08EF                     l33356:	
  1782                           
  1783                           ;Main.c: 117: else
  1784                           ;Main.c: 118: {
  1785                           ;Main.c: 119: __delay_20ms(50);
  1786  08EF  3032               	movlw	50
  1787  08F0  00A0               	movwf	?___delay_20ms
  1788  08F1  01A1               	clrf	?___delay_20ms+1
  1789  08F2  22C4               	fcall	___delay_20ms
  1790                           
  1791                           ;Main.c: 120: if(DS18X20_ReadMeas(1)==0x00)
  1792  08F3  3001               	movlw	1
  1793  08F4  3180  202C  3188   	fcall	_DS18X20_ReadMeas
  1794  08F7  3800               	iorlw	0
  1795  08F8  1D03               	skipz
  1796  08F9  28EC               	goto	l33354
  1797                           
  1798                           ;Main.c: 121: {
  1799                           ;Main.c: 122: CurTemp.u8L=DS18X20_Scratchpad[0];
  1800  08FA  0021               	movlb	1	; select bank1
  1801  08FB  0853               	movf	_DS18X20_Scratchpad^(0+128),w
  1802  08FC  0020               	movlb	0	; select bank0
  1803  08FD  00D6               	movwf	_CurTemp
  1804                           
  1805                           ;Main.c: 123: CurTemp.u8H=DS18X20_Scratchpad[1];
  1806  08FE  0021               	movlb	1	; select bank1
  1807  08FF  0854               	movf	(_DS18X20_Scratchpad^(0+128)+1),w
  1808  0900  0020               	movlb	0	; select bank0
  1809  0901  00D7               	movwf	_CurTemp+1
  1810  0902                     l33366:	
  1811                           ;Main.c: 124: break;
  1812                           
  1813                           
  1814                           ;Main.c: 129: }
  1815                           ;Main.c: 130: }
  1816                           ;Main.c: 131: }
  1817                           ;Main.c: 132: if(retry==0)
  1818  0902  08AC               	movf	ReadTData@retry,f
  1819  0903  1D03               	skipz
  1820  0904  2927               	goto	l33380
  1821  0905                     l33368:	
  1822                           
  1823                           ;Main.c: 133: CurTemp.u16=0xf000;
  1824  0905  01D6               	clrf	_CurTemp
  1825  0906  30F0               	movlw	240
  1826  0907  00D7               	movwf	_CurTemp+1
  1827  0908  2927               	goto	l33380
  1828  0909                     l6525:	
  1829                           
  1830                           ;Main.c: 135: else
  1831                           ;Main.c: 136: {
  1832                           ;Main.c: 137: TCN75_Config.OneShot=1;
  1833  0909  17E3               	bsf	_TCN75_Config,7
  1834                           
  1835                           ;Main.c: 138: if(TCN75_SetConfig()==1)
  1836  090A  27AA  3188         	fcall	_TCN75_SetConfig
  1837  090C  3A01               	xorlw	1
  1838  090D  1D03               	skipz
  1839  090E  2905               	goto	l33368
  1840                           
  1841                           ;Main.c: 139: {
  1842                           ;Main.c: 140: __delay_20ms(25);
  1843  090F  3019               	movlw	25
  1844  0910  00A0               	movwf	?___delay_20ms
  1845  0911  01A1               	clrf	?___delay_20ms+1
  1846  0912  22C4               	fcall	___delay_20ms
  1847                           
  1848                           ;Main.c: 141: if(TCN75_ReadReg(TCN75_TEMP)==1)
  1849  0913  3000               	movlw	0
  1850  0914  3184  2439  3188   	fcall	_TCN75_ReadReg
  1851  0917  3A01               	xorlw	1
  1852  0918  1D03               	skipz
  1853  0919  2905               	goto	l33368
  1854                           
  1855                           ;Main.c: 142: {
  1856                           ;Main.c: 143: CurTemp.u16=TCN75_RegReadResualt.u16>>4;
  1857  091A  085F               	movf	_TCN75_RegReadResualt+1,w
  1858  091B  00D7               	movwf	_CurTemp+1
  1859  091C  085E               	movf	_TCN75_RegReadResualt,w
  1860  091D  00D6               	movwf	_CurTemp
  1861  091E  0ED6               	swapf	_CurTemp,f
  1862  091F  0ED7               	swapf	_CurTemp+1,f
  1863  0920  300F               	movlw	15
  1864  0921  05D6               	andwf	_CurTemp,f
  1865  0922  0857               	movf	_CurTemp+1,w
  1866  0923  39F0               	andlw	240
  1867  0924  04D6               	iorwf	_CurTemp,f
  1868  0925  300F               	movlw	15
  1869  0926  05D7               	andwf	_CurTemp+1,f
  1870  0927                     l33380:	
  1871                           ;Main.c: 144: }
  1872                           
  1873                           
  1874                           ;Main.c: 153: }
  1875                           ;Main.c: 154: }
  1876                           ;Main.c: 156: LcdDisplay_CurTemp();
  1877  0927  2E85               	ljmp	l32468
  1878  0928                     __end_of_ReadTData:	
  1879  0928                     __ptext1966:	
  1880 ;; =============== function _InitSystem ends ============
  1881                           
  1882                           
  1883 ;; *************** function _CallSend *****************
  1884 ;; Defined at:
  1885 ;;		line 73 in file "F:\work\WYP\NBIoT\Function.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;		None
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  ret             1   38[BANK0 ] unsigned char 
  1890 ;;  strx            1    0        PTR unsigned char 
  1891 ;;		 -> RAM(128), 
  1892 ;;  i               1    0        unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 1F/0
  1899 ;;		On exit  : 1F/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1902 ;;      Params:         0       0       0       0       0       0       0       0
  1903 ;;      Locals:         0       1       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0
  1905 ;;      Totals:         0       1       0       0       0       0       0       0
  1906 ;;Total ram usage:        1 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    7
  1909 ;; This function calls:
  1910 ;;		_InitGPRS
  1911 ;;		___delay_20ms
  1912 ;;		_ATCommand_SendCmd
  1913 ;;		_InteractServer
  1914 ;; This function is called by:
  1915 ;;		_CallProc
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918  0928                     _CallSend:	
  1919                           
  1920                           ;Function.c: 76: ErrState=NoErr;
  1921                           
  1922                           ; Regs used in _CallSend: [wreg-btemp+0+pclath+cstack]
  1923  0928  01E2               	clrf	_ErrState
  1924                           
  1925                           ;Function.c: 77: InitGPRS();
  1926  0929  215F  3188         	fcall	_InitGPRS
  1927                           
  1928                           ;Function.c: 78: if(ErrState!=NoErr)
  1929  092B  0862               	movf	_ErrState,w
  1930  092C  1903               	btfsc	3,2
  1931  092D  293A               	goto	l33398
  1932                           
  1933                           ;Function.c: 79: {
  1934                           ;Function.c: 80: __delay_20ms(3000);
  1935  092E  30B8               	movlw	184
  1936  092F  00A0               	movwf	?___delay_20ms
  1937  0930  300B               	movlw	11
  1938  0931  00A1               	movwf	?___delay_20ms+1
  1939  0932  22C4  3188         	fcall	___delay_20ms
  1940                           
  1941                           ;Function.c: 81: ErrState=NoErr;
  1942  0934  01E2               	clrf	_ErrState
  1943                           
  1944                           ;Function.c: 82: InitGPRS();
  1945  0935  215F  3188         	fcall	_InitGPRS
  1946                           
  1947                           ;Function.c: 83: if(ErrState!=NoErr)
  1948  0937  0862               	movf	_ErrState,w
  1949  0938  1D03               	skipz
  1950  0939  0008               	return
  1951  093A                     l33398:	
  1952                           
  1953                           ;Function.c: 85: }
  1954                           ;Function.c: 89: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  1955  093A  3046               	movlw	low (STR_1| (0+32768))
  1956  093B  00B1               	movwf	?_ATCommand_SendCmd
  1957  093C  3090               	movlw	high (STR_1| (0+32768))
  1958  093D  00B2               	movwf	?_ATCommand_SendCmd+1
  1959  093E  2252  3188         	fcall	_ATCommand_SendCmd
  1960  0940  3A01               	xorlw	1
  1961  0941  1903               	skipnz
  1962  0942  2946               	goto	l8677
  1963  0943                     l33400:	
  1964                           
  1965                           ;Function.c: 90: {
  1966                           ;Function.c: 91: ErrState=MissAT_NSOCR;
  1967  0943  3023               	movlw	35
  1968  0944  00E2               	movwf	_ErrState
  1969  0945  0008               	return
  1970  0946                     l8677:	
  1971                           
  1972                           ;Function.c: 93: }
  1973                           ;Function.c: 94: ATCommand_RetryTimes=1;
  1974  0946  01E0               	clrf	_ATCommand_RetryTimes
  1975  0947  0AE0               	incf	_ATCommand_RetryTimes,f
  1976                           
  1977                           ;Function.c: 95: ATCommand_WaitACKTimes=600;
  1978  0948  3058               	movlw	88
  1979  0949  00D4               	movwf	_ATCommand_WaitACKTimes
  1980  094A  3002               	movlw	2
  1981  094B  00D5               	movwf	_ATCommand_WaitACKTimes+1
  1982                           
  1983                           ;Function.c: 96: if(ATCommand_SendCmd("AT+NSOCO=1,\"www.wlwdjcy.com\",12129\0")!=ATACK_O
      +                          K)
  1984  094C  3022               	movlw	low (STR_2| (0+32768))
  1985  094D  00B1               	movwf	?_ATCommand_SendCmd
  1986  094E  3090               	movlw	high (STR_2| (0+32768))
  1987  094F  00B2               	movwf	?_ATCommand_SendCmd+1
  1988  0950  2252  3188         	fcall	_ATCommand_SendCmd
  1989  0952  3A01               	xorlw	1
  1990  0953  1D03               	btfss	3,2
  1991  0954  2943               	goto	l33400
  1992                           
  1993                           ;Function.c: 100: }
  1994                           ;Function.c: 102: __delay_20ms(50);
  1995  0955  3032               	movlw	50
  1996  0956  00A0               	movwf	?___delay_20ms
  1997  0957  01A1               	clrf	?___delay_20ms+1
  1998  0958  22C4  3188         	fcall	___delay_20ms
  1999                           
  2000                           ;Function.c: 104: ret=InteractServer();
  2001  095A  2355               	fcall	_InteractServer
  2002  095B  00C6               	movwf	CallSend@ret
  2003                           
  2004                           ;Function.c: 105: if(ret!=ATACK_OK)
  2005  095C  0B46               	decfsz	CallSend@ret,w
  2006                           
  2007                           ;Function.c: 106: {
  2008                           ;Function.c: 107: gFlags.bRetry=1;
  2009  095D  1665               	bsf	_gFlags,4
  2010                           
  2011                           ;Function.c: 108: return;
  2012  095E  0008               	return
  2013  095F                     __end_of_CallSend:	
  2014  095F                     __ptext1969:	
  2015 ;; =============== function _InteractServer ends ============
  2016                           
  2017                           
  2018 ;; *************** function _InitGPRS *****************
  2019 ;; Defined at:
  2020 ;;		line 343 in file "F:\work\WYP\NBIoT\Function.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  strx            2   28[BANK0 ] PTR unsigned char 
  2025 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2026 ;;  retry           1   30[BANK0 ] unsigned char 
  2027 ;;  i               1   27[BANK0 ] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;		None               void
  2030 ;; Registers used:
  2031 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2032 ;; Tracked objects:
  2033 ;;		On entry : 1F/0
  2034 ;;		On exit  : 1F/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2037 ;;      Params:         0       0       0       0       0       0       0       0
  2038 ;;      Locals:         0       4       0       0       0       0       0       0
  2039 ;;      Temps:          0       2       0       0       0       0       0       0
  2040 ;;      Totals:         0       6       0       0       0       0       0       0
  2041 ;;Total ram usage:        6 bytes
  2042 ;; Hardware stack levels used:    1
  2043 ;; Hardware stack levels required when called:    6
  2044 ;; This function calls:
  2045 ;;		_PowerON
  2046 ;;		_ATCommand_SendCmd
  2047 ;;		___delay_20ms
  2048 ;;		_strstr
  2049 ;;		_atoi
  2050 ;;		_LcdDisplay_CSQ
  2051 ;; This function is called by:
  2052 ;;		_CallSend
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055  095F                     _InitGPRS:	
  2056                           
  2057                           ;Function.c: 346: PowerON();
  2058                           
  2059                           ; Regs used in _InitGPRS: [wreg-status,0+pclath+cstack]
  2060  095F  27F0  3188         	fcall	_PowerON
  2061                           
  2062                           ;Function.c: 347: if(ATCommand_SendCmd("AT\0")!=ATACK_OK)
  2063  0961  300F               	movlw	low (STR_20| (0+32768))
  2064  0962  00B1               	movwf	?_ATCommand_SendCmd
  2065  0963  3091               	movlw	high (STR_20| (0+32768))
  2066  0964  00B2               	movwf	?_ATCommand_SendCmd+1
  2067  0965  2252  3188         	fcall	_ATCommand_SendCmd
  2068  0967  3A01               	xorlw	1
  2069  0968  1903               	skipnz
  2070  0969  296D               	goto	l32972
  2071                           
  2072                           ;Function.c: 348: {
  2073                           ;Function.c: 349: ErrState=MissAT;
  2074  096A  3003               	movlw	3
  2075  096B  00E2               	movwf	_ErrState
  2076  096C  0008               	return
  2077  096D                     l32972:	
  2078                           
  2079                           ;Function.c: 351: }
  2080                           ;Function.c: 353: if(ATCommand_SendCmd("ATE1\0")!=ATACK_OK)
  2081  096D  30EE               	movlw	low (STR_21| (0+32768))
  2082  096E  00B1               	movwf	?_ATCommand_SendCmd
  2083  096F  3090               	movlw	high (STR_21| (0+32768))
  2084  0970  00B2               	movwf	?_ATCommand_SendCmd+1
  2085  0971  2252  3188         	fcall	_ATCommand_SendCmd
  2086  0973  3A01               	xorlw	1
  2087  0974  1903               	skipnz
  2088  0975  2979               	goto	l32978
  2089                           
  2090                           ;Function.c: 354: {
  2091                           ;Function.c: 355: ErrState=MissAT_ATE1;
  2092  0976  300C               	movlw	12
  2093  0977  00E2               	movwf	_ErrState
  2094  0978  0008               	return
  2095  0979                     l32978:	
  2096                           
  2097                           ;Function.c: 357: }
  2098                           ;Function.c: 358: retry=10;
  2099  0979  300A               	movlw	10
  2100  097A  00BE               	movwf	InitGPRS@retry
  2101  097B                     l32988:	
  2102                           ;Function.c: 359: while(retry!=0)
  2103                           
  2104  097B  08BE               	movf	InitGPRS@retry,f
  2105  097C  1903               	btfsc	3,2
  2106  097D  298E               	goto	l32990
  2107                           
  2108                           ;Function.c: 360: {
  2109                           ;Function.c: 361: if(ATCommand_SendCmd("AT+CIMI\0")==ATACK_OK)
  2110  097E  30D6               	movlw	low (STR_22| (0+32768))
  2111  097F  00B1               	movwf	?_ATCommand_SendCmd
  2112  0980  3090               	movlw	high (STR_22| (0+32768))
  2113  0981  00B2               	movwf	?_ATCommand_SendCmd+1
  2114  0982  2252  3188         	fcall	_ATCommand_SendCmd
  2115  0984  3A01               	xorlw	1
  2116  0985  1903               	btfsc	3,2
  2117  0986  298E               	goto	l32990
  2118                           
  2119                           ;Function.c: 364: }
  2120                           ;Function.c: 365: __delay_20ms(150);
  2121  0987  3096               	movlw	150
  2122  0988  00A0               	movwf	?___delay_20ms
  2123  0989  01A1               	clrf	?___delay_20ms+1
  2124  098A  22C4  3188         	fcall	___delay_20ms
  2125                           
  2126                           ;Function.c: 366: retry--;
  2127  098C  03BE               	decf	InitGPRS@retry,f
  2128  098D  297B               	goto	l32988
  2129  098E                     l32990:	
  2130                           
  2131                           ;Function.c: 367: }
  2132                           ;Function.c: 368: if(retry==0)
  2133  098E  08BE               	movf	InitGPRS@retry,f
  2134  098F  1D03               	skipz
  2135  0990  2994               	goto	l32996
  2136                           
  2137                           ;Function.c: 369: {
  2138                           ;Function.c: 370: ErrState=MissSimCard;
  2139  0991  3004               	movlw	4
  2140  0992  00E2               	movwf	_ErrState
  2141  0993  0008               	return
  2142  0994                     l32996:	
  2143                           
  2144                           ;Function.c: 372: }
  2145                           ;Function.c: 373: retry=10;
  2146  0994  300A               	movlw	10
  2147  0995  00BE               	movwf	InitGPRS@retry
  2148                           
  2149                           ;Function.c: 374: while(retry!=0)
  2150  0996  299D               	goto	l33024
  2151  0997                     l33020:	
  2152                           ;Function.c: 387: break;
  2153                           
  2154                           
  2155                           ;Function.c: 389: else
  2156                           ;Function.c: 390: {
  2157                           ;Function.c: 391: retry--;
  2158  0997  03BE               	decf	InitGPRS@retry,f
  2159                           
  2160                           ;Function.c: 392: __delay_20ms(150);
  2161  0998  3096               	movlw	150
  2162  0999  00A0               	movwf	?___delay_20ms
  2163  099A  01A1               	clrf	?___delay_20ms+1
  2164  099B  22C4  3188         	fcall	___delay_20ms
  2165  099D                     l33024:	
  2166  099D  08BE               	movf	InitGPRS@retry,f
  2167  099E  1903               	btfsc	3,2
  2168  099F  29D7               	goto	l33026
  2169                           
  2170                           ;Function.c: 375: {
  2171                           ;Function.c: 377: if(ATCommand_SendCmd("AT+NCCID\0")==ATACK_OK)
  2172  09A0  30B1               	movlw	low (STR_23| (0+32768))
  2173  09A1  00B1               	movwf	?_ATCommand_SendCmd
  2174  09A2  3090               	movlw	high (STR_23| (0+32768))
  2175  09A3  00B2               	movwf	?_ATCommand_SendCmd+1
  2176  09A4  2252  3188         	fcall	_ATCommand_SendCmd
  2177  09A6  3A01               	xorlw	1
  2178  09A7  1D03               	skipz
  2179  09A8  299D               	goto	l33024
  2180                           
  2181                           ;Function.c: 378: {
  2182                           ;Function.c: 379: strx=strstr((const char*)ATCommand_RxList,"8986");
  2183  09A9  308C               	movlw	140
  2184  09AA  00AD               	movwf	?_strstr
  2185  09AB  3021               	movlw	33
  2186  09AC  00AE               	movwf	?_strstr+1
  2187  09AD  300A               	movlw	low (STR_24| (0+32768))
  2188  09AE  00AF               	movwf	?_strstr+2
  2189  09AF  3091               	movlw	high (STR_24| (0+32768))
  2190  09B0  00B0               	movwf	?_strstr+3
  2191  09B1  22D8  3188         	fcall	_strstr
  2192  09B3  082E               	movf	?_strstr+1,w
  2193  09B4  00BD               	movwf	InitGPRS@strx+1
  2194  09B5  082D               	movf	?_strstr,w
  2195  09B6  00BC               	movwf	InitGPRS@strx
  2196                           
  2197                           ;Function.c: 380: if(strx!=0)
  2198  09B7  043D               	iorwf	InitGPRS@strx+1,w
  2199  09B8  1903               	skipnz
  2200  09B9  2997               	goto	l33020
  2201                           
  2202                           ;Function.c: 381: {
  2203                           ;Function.c: 382: for(i=0;i<15;i++)
  2204  09BA  01BB               	clrf	InitGPRS@i
  2205  09BB                     l33010:	
  2206                           
  2207                           ;Function.c: 383: {
  2208                           ;Function.c: 384: ICCID[i]=strx[i+5];
  2209  09BB  083B               	movf	InitGPRS@i,w
  2210  09BC  3EA0               	addlw	_ICCID& (0+255)
  2211  09BD  0086               	movwf	6
  2212  09BE  0187               	clrf	7
  2213  09BF  083B               	movf	InitGPRS@i,w
  2214  09C0  073C               	addwf	InitGPRS@strx,w
  2215  09C1  00B9               	movwf	??_InitGPRS
  2216  09C2  083D               	movf	InitGPRS@strx+1,w
  2217  09C3  1803               	skipnc
  2218  09C4  0A89               	incf	9,f
  2219  09C5  1BBB               	btfsc	InitGPRS@i,7
  2220  09C6  0389               	decf	9,f
  2221  09C7  00BA               	movwf	??_InitGPRS+1
  2222  09C8  0839               	movf	??_InitGPRS,w
  2223  09C9  3E05               	addlw	5
  2224  09CA  0084               	movwf	4
  2225  09CB  3000               	movlw	0
  2226  09CC  3D3A               	addwfc	??_InitGPRS+1,w
  2227  09CD  0085               	movwf	5
  2228  09CE  0800               	movf	0,w
  2229  09CF  0081               	movwf	1
  2230  09D0  0ABB               	incf	InitGPRS@i,f
  2231  09D1  300F               	movlw	15
  2232  09D2  023B               	subwf	InitGPRS@i,w
  2233  09D3  1C03               	skipc
  2234  09D4  29BB               	goto	l33010
  2235                           
  2236                           ;Function.c: 385: }
  2237                           ;Function.c: 386: ICCID[15]='\0';
  2238  09D5  0021               	movlb	1	; select bank1
  2239  09D6  01AF               	clrf	(_ICCID^(0+128)+15)
  2240  09D7                     l33026:	
  2241                           
  2242                           ;Function.c: 393: }
  2243                           ;Function.c: 394: }
  2244                           ;Function.c: 396: }
  2245                           ;Function.c: 397: retry=100;
  2246  09D7  3064               	movlw	100
  2247  09D8  0020               	movlb	0	; select bank0
  2248  09D9  00BE               	movwf	InitGPRS@retry
  2249                           
  2250                           ;Function.c: 398: CSQ=0xff;
  2251  09DA  30FF               	movlw	255
  2252  09DB  00E1               	movwf	_CSQ
  2253  09DC                     l33054:	
  2254                           ;Function.c: 399: while(retry!=0)
  2255                           
  2256  09DC  08BE               	movf	InitGPRS@retry,f
  2257  09DD  1903               	btfsc	3,2
  2258  09DE  2A19               	goto	l33056
  2259                           
  2260                           ;Function.c: 400: {
  2261                           ;Function.c: 401: if(ATCommand_SendCmd("AT+CSQ\0")==ATACK_OK)
  2262  09DF  30DF               	movlw	low (STR_25| (0+32768))
  2263  09E0  00B1               	movwf	?_ATCommand_SendCmd
  2264  09E1  3090               	movlw	high (STR_25| (0+32768))
  2265  09E2  00B2               	movwf	?_ATCommand_SendCmd+1
  2266  09E3  2252  3188         	fcall	_ATCommand_SendCmd
  2267  09E5  3A01               	xorlw	1
  2268  09E6  1D03               	skipz
  2269  09E7  29DC               	goto	l33054
  2270                           
  2271                           ;Function.c: 402: {
  2272                           ;Function.c: 403: strx=strstr((const char*)ATCommand_RxList,"+CSQ:");
  2273  09E8  308C               	movlw	140
  2274  09E9  00AD               	movwf	?_strstr
  2275  09EA  3021               	movlw	33
  2276  09EB  00AE               	movwf	?_strstr+1
  2277  09EC  30F4               	movlw	low (STR_26| (0+32768))
  2278  09ED  00AF               	movwf	?_strstr+2
  2279  09EE  3090               	movlw	high (STR_26| (0+32768))
  2280  09EF  00B0               	movwf	?_strstr+3
  2281  09F0  22D8  3188         	fcall	_strstr
  2282  09F2  082E               	movf	?_strstr+1,w
  2283  09F3  00BD               	movwf	InitGPRS@strx+1
  2284  09F4  082D               	movf	?_strstr,w
  2285  09F5  00BC               	movwf	InitGPRS@strx
  2286                           
  2287                           ;Function.c: 404: if(strx!=0)
  2288  09F6  043D               	iorwf	InitGPRS@strx+1,w
  2289  09F7  1903               	skipnz
  2290  09F8  2A12               	goto	l33046
  2291                           
  2292                           ;Function.c: 405: {
  2293                           ;Function.c: 406: CSQ=atoi(strx+5);
  2294  09F9  083C               	movf	InitGPRS@strx,w
  2295  09FA  3E05               	addlw	5
  2296  09FB  00B9               	movwf	??_InitGPRS
  2297  09FC  3000               	movlw	0
  2298  09FD  3D3D               	addwfc	InitGPRS@strx+1,w
  2299  09FE  00BA               	movwf	??_InitGPRS+1
  2300  09FF  0839               	movf	??_InitGPRS,w
  2301  0A00  00A6               	movwf	?_atoi
  2302  0A01  083A               	movf	??_InitGPRS+1,w
  2303  0A02  00A7               	movwf	?_atoi+1
  2304  0A03  3185  2589  3188   	fcall	_atoi
  2305  0A06  0826               	movf	?_atoi,w
  2306  0A07  00E1               	movwf	_CSQ
  2307                           
  2308                           ;Function.c: 408: LcdDisplay_CSQ();
  2309  0A08  2777  3188         	fcall	_LcdDisplay_CSQ
  2310                           
  2311                           ;Function.c: 410: if(CSQ!=0 && CSQ!=99)
  2312  0A0A  0020               	movlb	0	; select bank0
  2313  0A0B  0861               	movf	_CSQ,w
  2314  0A0C  1903               	btfsc	3,2
  2315  0A0D  2A12               	goto	l33046
  2316  0A0E  0861               	movf	_CSQ,w
  2317  0A0F  3A63               	xorlw	99
  2318  0A10  1D03               	btfss	3,2
  2319  0A11  2A19               	goto	l33056
  2320  0A12                     l33046:	
  2321                           
  2322                           ;Function.c: 412: else
  2323                           ;Function.c: 413: {
  2324                           ;Function.c: 414: retry--;
  2325  0A12  03BE               	decf	InitGPRS@retry,f
  2326                           
  2327                           ;Function.c: 415: __delay_20ms(150);
  2328  0A13  3096               	movlw	150
  2329  0A14  00A0               	movwf	?___delay_20ms
  2330  0A15  01A1               	clrf	?___delay_20ms+1
  2331  0A16  22C4  3188         	fcall	___delay_20ms
  2332  0A18  29DC               	goto	l33054
  2333  0A19                     l33056:	
  2334                           
  2335                           ;Function.c: 422: }
  2336                           ;Function.c: 423: }
  2337                           ;Function.c: 424: }
  2338                           ;Function.c: 425: if(retry==0 && CSQ!=0xff)
  2339  0A19  08BE               	movf	InitGPRS@retry,f
  2340  0A1A  1D03               	skipz
  2341  0A1B  2A23               	goto	l33064
  2342  0A1C  0861               	movf	_CSQ,w
  2343  0A1D  3AFF               	xorlw	255
  2344  0A1E  1903               	skipnz
  2345  0A1F  2A23               	goto	l33064
  2346                           
  2347                           ;Function.c: 426: {
  2348                           ;Function.c: 427: ErrState=MissAT_CSQ;
  2349  0A20  300F               	movlw	15
  2350  0A21  00E2               	movwf	_ErrState
  2351  0A22  0008               	return
  2352  0A23                     l33064:	
  2353                           
  2354                           ;Function.c: 429: }
  2355                           ;Function.c: 430: retry=20;
  2356  0A23  3014               	movlw	20
  2357  0A24  00BE               	movwf	InitGPRS@retry
  2358  0A25                     l33082:	
  2359                           ;Function.c: 431: while(retry!=0)
  2360                           
  2361  0A25  08BE               	movf	InitGPRS@retry,f
  2362  0A26  1903               	btfsc	3,2
  2363  0A27  2A4C               	goto	l33084
  2364                           
  2365                           ;Function.c: 432: {
  2366                           ;Function.c: 433: if(ATCommand_SendCmd("AT+CEREG?\0")!=ATACK_OK)
  2367  0A28  309B               	movlw	low (STR_27| (0+32768))
  2368  0A29  00B1               	movwf	?_ATCommand_SendCmd
  2369  0A2A  3090               	movlw	high (STR_27| (0+32768))
  2370  0A2B  00B2               	movwf	?_ATCommand_SendCmd+1
  2371  0A2C  2252  3188         	fcall	_ATCommand_SendCmd
  2372  0A2E  3A01               	xorlw	1
  2373  0A2F  1903               	skipnz
  2374  0A30  2A34               	goto	l33072
  2375                           
  2376                           ;Function.c: 434: {
  2377                           ;Function.c: 435: ErrState=MissAT_COPS;
  2378  0A31  3010               	movlw	16
  2379  0A32  00E2               	movwf	_ErrState
  2380  0A33  0008               	return
  2381  0A34                     l33072:	
  2382                           
  2383                           ;Function.c: 437: }
  2384                           ;Function.c: 438: strx=strstr((const char*)ATCommand_RxList,"+CEREG:0,1");
  2385  0A34  308C               	movlw	140
  2386  0A35  00AD               	movwf	?_strstr
  2387  0A36  3021               	movlw	33
  2388  0A37  00AE               	movwf	?_strstr+1
  2389  0A38  30A6               	movlw	low (STR_28| (0+32768))
  2390  0A39  00AF               	movwf	?_strstr+2
  2391  0A3A  3090               	movlw	high (STR_28| (0+32768))
  2392  0A3B  00B0               	movwf	?_strstr+3
  2393  0A3C  22D8  3188         	fcall	_strstr
  2394  0A3E  082E               	movf	?_strstr+1,w
  2395  0A3F  00BD               	movwf	InitGPRS@strx+1
  2396  0A40  082D               	movf	?_strstr,w
  2397  0A41  00BC               	movwf	InitGPRS@strx
  2398                           
  2399                           ;Function.c: 439: if(strx!=0)
  2400  0A42  043D               	iorwf	InitGPRS@strx+1,w
  2401  0A43  1D03               	btfss	3,2
  2402  0A44  2A4C               	goto	l33084
  2403                           
  2404                           ;Function.c: 442: }
  2405                           ;Function.c: 443: __delay_20ms(150);
  2406  0A45  3096               	movlw	150
  2407  0A46  00A0               	movwf	?___delay_20ms
  2408  0A47  01A1               	clrf	?___delay_20ms+1
  2409  0A48  22C4  3188         	fcall	___delay_20ms
  2410                           
  2411                           ;Function.c: 444: retry--;
  2412  0A4A  03BE               	decf	InitGPRS@retry,f
  2413  0A4B  2A25               	goto	l33082
  2414  0A4C                     l33084:	
  2415                           
  2416                           ;Function.c: 445: }
  2417                           ;Function.c: 446: if(retry==0)
  2418  0A4C  08BE               	movf	InitGPRS@retry,f
  2419  0A4D  1D03               	skipz
  2420  0A4E  0008               	return
  2421                           
  2422                           ;Function.c: 447: {
  2423                           ;Function.c: 448: ErrState=MissNet;
  2424  0A4F  3005               	movlw	5
  2425  0A50  00E2               	movwf	_ErrState
  2426  0A51  0008               	return
  2427  0A52                     __end_of_InitGPRS:	
  2428  0A52                     __ptext1975:	
  2429 ;; =============== function _Uart1_PutString_Hex ends ============
  2430                           
  2431                           
  2432 ;; *************** function _ATCommand_SendCmd *****************
  2433 ;; Defined at:
  2434 ;;		line 71 in file "F:\work\WYP\NBIoT\ATCommand.c"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;  cmd             2   17[BANK0 ] PTR const unsigned char 
  2437 ;;		 -> STR_27(11), STR_25(8), STR_23(10), STR_22(9), 
  2438 ;;		 -> STR_21(6), STR_20(4), STR_2(36), STR_1(23), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  strx            2   22[BANK0 ] PTR unsigned char 
  2441 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2442 ;;  res             1   24[BANK0 ] unsigned char 
  2443 ;;  retry           1   21[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  1    wreg      unsigned char 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2448 ;; Tracked objects:
  2449 ;;		On entry : 1F/0
  2450 ;;		On exit  : 1F/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2453 ;;      Params:         0       2       0       0       0       0       0       0
  2454 ;;      Locals:         0       4       0       0       0       0       0       0
  2455 ;;      Temps:          0       2       0       0       0       0       0       0
  2456 ;;      Totals:         0       8       0       0       0       0       0       0
  2457 ;;Total ram usage:        8 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    5
  2460 ;; This function calls:
  2461 ;;		_Uart1_PutString
  2462 ;;		_strstr
  2463 ;;		___delay_20ms
  2464 ;;		_strcpy
  2465 ;; This function is called by:
  2466 ;;		_CallSend
  2467 ;;		_InitGPRS
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470  0A52                     _ATCommand_SendCmd:	
  2471                           
  2472                           ;ATCommand.c: 73: unsigned char retry;
  2473                           ;ATCommand.c: 74: char *strx=0;
  2474                           
  2475                           ; Regs used in _ATCommand_SendCmd: [wreg-status,0+pclath+cstack]
  2476  0A52  01B6               	clrf	ATCommand_SendCmd@strx
  2477  0A53  01B7               	clrf	ATCommand_SendCmd@strx+1
  2478                           
  2479                           ;ATCommand.c: 76: retry=ATCommand_RetryTimes;
  2480  0A54  0860               	movf	_ATCommand_RetryTimes,w
  2481  0A55  00B5               	movwf	ATCommand_SendCmd@retry
  2482                           
  2483                           ;ATCommand.c: 77: res=ATACK_Null;
  2484  0A56  01B8               	clrf	ATCommand_SendCmd@res
  2485  0A57                     l32828:	
  2486                           ;ATCommand.c: 78: while(retry!=0)
  2487                           
  2488  0A57  08B5               	movf	ATCommand_SendCmd@retry,f
  2489  0A58  1903               	btfsc	3,2
  2490  0A59  2AAF               	goto	l32830
  2491                           
  2492                           ;ATCommand.c: 79: {
  2493                           ;ATCommand.c: 80: Uart1_PutString(cmd);
  2494  0A5A  0832               	movf	ATCommand_SendCmd@cmd+1,w
  2495  0A5B  00A2               	movwf	?_Uart1_PutString+1
  2496  0A5C  0831               	movf	ATCommand_SendCmd@cmd,w
  2497  0A5D  00A1               	movwf	?_Uart1_PutString
  2498  0A5E  260D  3188         	fcall	_Uart1_PutString
  2499                           
  2500                           ;ATCommand.c: 81: Uart1_PutString("\r\0");
  2501  0A60  3016               	movlw	low (STR_19| (0+32768))
  2502  0A61  00A1               	movwf	?_Uart1_PutString
  2503  0A62  3091               	movlw	high (STR_19| (0+32768))
  2504  0A63  00A2               	movwf	?_Uart1_PutString+1
  2505  0A64  260D               	fcall	_Uart1_PutString
  2506                           
  2507                           ;ATCommand.c: 82: ATCommand_Flags.bRx=0;
  2508  0A65  10FA               	bcf	_ATCommand_Flags,1
  2509                           
  2510                           ;ATCommand.c: 83: ATCommand_Flags.bChar=0;
  2511  0A66  107A               	bcf	_ATCommand_Flags,0
  2512                           
  2513                           ;ATCommand.c: 84: ATCommand_WaitACKTick=SystemTick;
  2514  0A67  085D               	movf	_SystemTick+1,w
  2515  0A68  00D3               	movwf	_ATCommand_WaitACKTick+1
  2516  0A69  085C               	movf	_SystemTick,w
  2517  0A6A  00D2               	movwf	_ATCommand_WaitACKTick
  2518                           
  2519                           ;ATCommand.c: 85: ATCommand_RxCount=0;
  2520  0A6B  01FB               	clrf	_ATCommand_RxCount
  2521                           
  2522                           ;ATCommand.c: 86: ATCommand_Flags.bWaitData=1;
  2523  0A6C  157A               	bsf	_ATCommand_Flags,2
  2524                           
  2525                           ;ATCommand.c: 87: ATCommand_RxList[ATCommand_RxCount]='\0';
  2526  0A6D  3185  2580  3188   	fcall	PL2	;call to abstracted procedure
  2527  0A70                     l15038:	
  2528                           ;ATCommand.c: 88: while(1)
  2529                           
  2530                           
  2531                           ;ATCommand.c: 89: {
  2532                           ;ATCommand.c: 90: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  2533  0A70  308C               	movlw	140
  2534  0A71  00AD               	movwf	?_strstr
  2535  0A72  3021               	movlw	33
  2536  0A73  00AE               	movwf	?_strstr+1
  2537  0A74  30C4               	movlw	_ATCommand_OkString& (0+255)
  2538  0A75  00AF               	movwf	?_strstr+2
  2539  0A76  01B0               	clrf	?_strstr+3
  2540  0A77  22D8  3188         	fcall	_strstr
  2541  0A79  082E               	movf	?_strstr+1,w
  2542  0A7A  00B7               	movwf	ATCommand_SendCmd@strx+1
  2543  0A7B  082D               	movf	?_strstr,w
  2544  0A7C  00B6               	movwf	ATCommand_SendCmd@strx
  2545                           
  2546                           ;ATCommand.c: 91: if(strx!=0)
  2547  0A7D  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2548  0A7E  1903               	skipnz
  2549  0A7F  2A83               	goto	l32808
  2550                           
  2551                           ;ATCommand.c: 92: {
  2552                           ;ATCommand.c: 93: res=ATACK_OK;
  2553  0A80  01B8               	clrf	ATCommand_SendCmd@res
  2554  0A81  0AB8               	incf	ATCommand_SendCmd@res,f
  2555  0A82  2A95               	goto	l32814
  2556  0A83                     l32808:	
  2557                           ;ATCommand.c: 95: break;
  2558                           
  2559                           ;ATCommand.c: 94: ATCommand_Flags.bRx=1;
  2560                           
  2561                           
  2562                           ;ATCommand.c: 97: else
  2563                           ;ATCommand.c: 98: {
  2564                           ;ATCommand.c: 99: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2565  0A83  308C               	movlw	140
  2566  0A84  00AD               	movwf	?_strstr
  2567  0A85  3021               	movlw	33
  2568  0A86  00AE               	movwf	?_strstr+1
  2569  0A87  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2570  0A88  00AF               	movwf	?_strstr+2
  2571  0A89  01B0               	clrf	?_strstr+3
  2572  0A8A  22D8  3188         	fcall	_strstr
  2573  0A8C  082E               	movf	?_strstr+1,w
  2574  0A8D  00B7               	movwf	ATCommand_SendCmd@strx+1
  2575  0A8E  082D               	movf	?_strstr,w
  2576  0A8F  00B6               	movwf	ATCommand_SendCmd@strx
  2577                           
  2578                           ;ATCommand.c: 100: if(strx!=0)
  2579  0A90  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2580  0A91  1903               	skipnz
  2581  0A92  2A97               	goto	l32816
  2582                           
  2583                           ;ATCommand.c: 101: {
  2584                           ;ATCommand.c: 102: res=ATACK_Err;
  2585  0A93  3002               	movlw	2
  2586  0A94  00B8               	movwf	ATCommand_SendCmd@res
  2587  0A95                     l32814:	
  2588                           
  2589                           ;ATCommand.c: 103: ATCommand_Flags.bRx=1;
  2590  0A95  14FA               	bsf	_ATCommand_Flags,1
  2591                           
  2592                           ;ATCommand.c: 104: break;
  2593  0A96  2AA4               	goto	l15040
  2594  0A97                     l32816:	
  2595                           
  2596                           ;ATCommand.c: 105: }
  2597                           ;ATCommand.c: 106: }
  2598                           ;ATCommand.c: 107: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2599  0A97  0852               	movf	_ATCommand_WaitACKTick,w
  2600  0A98  025C               	subwf	_SystemTick,w
  2601  0A99  00B3               	movwf	??_ATCommand_SendCmd
  2602  0A9A  0853               	movf	_ATCommand_WaitACKTick+1,w
  2603  0A9B  3B5D               	subwfb	_SystemTick+1,w
  2604  0A9C  00B4               	movwf	??_ATCommand_SendCmd+1
  2605  0A9D  0255               	subwf	_ATCommand_WaitACKTimes+1,w
  2606  0A9E  1D03               	skipz
  2607  0A9F  2AA2               	goto	u7875
  2608  0AA0  0833               	movf	??_ATCommand_SendCmd,w
  2609  0AA1  0254               	subwf	_ATCommand_WaitACKTimes,w
  2610  0AA2                     u7875:	
  2611  0AA2  1803               	skipnc
  2612  0AA3  2A70               	goto	l15038
  2613  0AA4                     l15040:	
  2614                           
  2615                           ;ATCommand.c: 109: }
  2616                           ;ATCommand.c: 110: ATCommand_Flags.bWaitData=0;
  2617  0AA4  117A               	bcf	_ATCommand_Flags,2
  2618                           
  2619                           ;ATCommand.c: 111: if(res==ATACK_OK)
  2620  0AA5  0B38               	decfsz	ATCommand_SendCmd@res,w
  2621  0AA6  2AA8               	goto	l32824
  2622  0AA7  2AAF               	goto	l32830
  2623  0AA8                     l32824:	
  2624                           
  2625                           ;ATCommand.c: 113: __delay_20ms(100);;
  2626  0AA8  3064               	movlw	100
  2627  0AA9  00A0               	movwf	?___delay_20ms
  2628  0AAA  01A1               	clrf	?___delay_20ms+1
  2629  0AAB  22C4  3188         	fcall	___delay_20ms
  2630                           
  2631                           ;ATCommand.c: 114: retry--;
  2632  0AAD  03B5               	decf	ATCommand_SendCmd@retry,f
  2633  0AAE  2A57               	goto	l32828
  2634  0AAF                     l32830:	
  2635                           
  2636                           ;ATCommand.c: 115: }
  2637                           ;ATCommand.c: 116: strcpy(ATCommand_OkString,"OK");
  2638  0AAF  3013               	movlw	low (STR_29| (0+32768))
  2639  0AB0  00A0               	movwf	?_strcpy
  2640  0AB1  3091               	movlw	high (STR_29| (0+32768))
  2641  0AB2  00A1               	movwf	?_strcpy+1
  2642  0AB3  30C4               	movlw	_ATCommand_OkString& (0+255)
  2643  0AB4  262A  3188         	fcall	_strcpy
  2644                           
  2645                           ;ATCommand.c: 117: strcpy(ATCommand_ErrString,"ERROR");
  2646  0AB6  30FA               	movlw	low (STR_18| (0+32768))
  2647  0AB7  00A0               	movwf	?_strcpy
  2648  0AB8  3090               	movlw	high (STR_18| (0+32768))
  2649  0AB9  00A1               	movwf	?_strcpy+1
  2650  0ABA  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2651  0ABB  262A               	fcall	_strcpy
  2652                           
  2653                           ;ATCommand.c: 118: ATCommand_Clear='\0';
  2654  0ABC  01F9               	clrf	_ATCommand_Clear
  2655                           
  2656                           ;ATCommand.c: 120: ATCommand_RetryTimes=3;
  2657  0ABD  3003               	movlw	3
  2658  0ABE  00E0               	movwf	_ATCommand_RetryTimes
  2659                           
  2660                           ;ATCommand.c: 121: ATCommand_WaitACKTimes=50;
  2661  0ABF  3032               	movlw	50
  2662  0AC0  00D4               	movwf	_ATCommand_WaitACKTimes
  2663  0AC1  01D5               	clrf	_ATCommand_WaitACKTimes+1
  2664                           
  2665                           ;ATCommand.c: 122: return res;
  2666  0AC2  0838               	movf	ATCommand_SendCmd@res,w
  2667  0AC3  0008               	return
  2668  0AC4                     __end_of_ATCommand_SendCmd:	
  2669  0AC4                     __ptext1993:	
  2670 ;; =============== function _Uart1_PutString ends ============
  2671                           
  2672                           
  2673 ;; *************** function ___delay_20ms *****************
  2674 ;; Defined at:
  2675 ;;		line 8 in file "F:\work\WYP\NBIoT\afx.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  x               2    0[BANK0 ] unsigned int 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;		None               void
  2682 ;; Registers used:
  2683 ;;		wreg
  2684 ;; Tracked objects:
  2685 ;;		On entry : 1F/0
  2686 ;;		On exit  : 1F/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2689 ;;      Params:         0       2       0       0       0       0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0
  2691 ;;      Temps:          0       2       0       0       0       0       0       0
  2692 ;;      Totals:         0       4       0       0       0       0       0       0
  2693 ;;Total ram usage:        4 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; Hardware stack levels required when called:    3
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_InitSystem
  2700 ;;		_main
  2701 ;;		_ReadTData
  2702 ;;		_PowerON
  2703 ;;		_CallProc
  2704 ;;		_CallSend
  2705 ;;		_InteractServer
  2706 ;;		_InitGPRS
  2707 ;;		_TestProc
  2708 ;;		_ATCommand_SendCmd
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711  0AC4                     ___delay_20ms:	
  2712  0AC4                     l12896:	
  2713                           ;afx.c: 9: while(x--)
  2714                           
  2715                           ; Regs used in ___delay_20ms: [wreg]
  2716                           
  2717  0AC4  3001               	movlw	1
  2718  0AC5  0020               	movlb	0	; select bank0
  2719  0AC6  02A0               	subwf	___delay_20ms@x,f
  2720  0AC7  3000               	movlw	0
  2721  0AC8  3BA1               	subwfb	___delay_20ms@x+1,f
  2722  0AC9  0A20               	incf	___delay_20ms@x,w
  2723  0ACA  1903               	skipnz
  2724  0ACB  0A21               	incf	___delay_20ms@x+1,w
  2725  0ACC  1903               	btfsc	3,2
  2726  0ACD  0008               	return
  2727                           
  2728                           ;afx.c: 10: {
  2729                           ;afx.c: 11: _delay((unsigned long)((20)*(4000000/4000.0)));
  2730  0ACE  301A               	movlw	26
  2731  0ACF  00A3               	movwf	??___delay_20ms+1
  2732  0AD0  30F8               	movlw	248
  2733  0AD1  00A2               	movwf	??___delay_20ms
  2734  0AD2                     u9007:	
  2735  0AD2  0BA2               	decfsz	??___delay_20ms,f
  2736  0AD3  2AD2               	goto	u9007
  2737  0AD4  0BA3               	decfsz	??___delay_20ms+1,f
  2738  0AD5  2AD2               	goto	u9007
  2739  0AD6  0064               	clrwdt
  2740  0AD7  2AC4               	goto	l12896
  2741  0AD8                     __end_of___delay_20ms:	
  2742  0AD8                     __ptext1990:	
  2743 ;; =============== function _atoi ends ============
  2744                           
  2745                           
  2746 ;; *************** function _strstr *****************
  2747 ;; Defined at:
  2748 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strstr.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  s1              2   13[BANK0 ] PTR const unsigned char 
  2751 ;;		 -> ATCommand_RxList(100), RAM(128), 
  2752 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
  2753 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  2754 ;;		 -> ATCommand_OkString(15), 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  2    wreg      PTR unsigned char 
  2759 ;; Registers used:
  2760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 1F/0
  2763 ;;		On exit  : 1F/0
  2764 ;;		Unchanged: FFFE0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2766 ;;      Params:         0       4       0       0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0
  2769 ;;      Totals:         0       4       0       0       0       0       0       0
  2770 ;;Total ram usage:        4 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    4
  2773 ;; This function calls:
  2774 ;;		_strlen
  2775 ;;		_strncmp
  2776 ;;		_strchr
  2777 ;; This function is called by:
  2778 ;;		_InitGPRS
  2779 ;;		_ATCommand_SendCmd
  2780 ;;		_ATCommand_WaitData
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783  0AD8                     _strstr:	
  2784                           
  2785                           ; Regs used in _strstr: [wreg-status,0+pclath+cstack]
  2786  0AD8  2B05               	goto	l32594
  2787  0AD9                     l32588:	
  2788  0AD9  082E               	movf	strstr@s1+1,w
  2789  0ADA  00A7               	movwf	?_strncmp+1
  2790  0ADB  082D               	movf	strstr@s1,w
  2791  0ADC  00A6               	movwf	?_strncmp
  2792  0ADD  0830               	movf	strstr@s2+1,w
  2793  0ADE  00A9               	movwf	?_strncmp+3
  2794  0ADF  082F               	movf	strstr@s2,w
  2795  0AE0  00A8               	movwf	?_strncmp+2
  2796  0AE1  0830               	movf	strstr@s2+1,w
  2797  0AE2  00A1               	movwf	?_strlen+1
  2798  0AE3  082F               	movf	strstr@s2,w
  2799  0AE4  00A0               	movwf	?_strlen
  2800  0AE5  26F0  3188         	fcall	_strlen
  2801  0AE7  0821               	movf	?_strlen+1,w
  2802  0AE8  00AB               	movwf	?_strncmp+5
  2803  0AE9  0820               	movf	?_strlen,w
  2804  0AEA  00AA               	movwf	?_strncmp+4
  2805  0AEB  270F  3188         	fcall	_strncmp
  2806  0AED  0827               	movf	?_strncmp+1,w
  2807  0AEE  0426               	iorwf	?_strncmp,w
  2808  0AEF  1903               	btfsc	3,2
  2809  0AF0  0008               	return
  2810  0AF1  082E               	movf	strstr@s1+1,w
  2811  0AF2  00A1               	movwf	?_strchr+1
  2812  0AF3  082D               	movf	strstr@s1,w
  2813  0AF4  00A0               	movwf	?_strchr
  2814  0AF5  0AA0               	incf	?_strchr,f
  2815  0AF6  1903               	skipnz
  2816  0AF7  0AA1               	incf	?_strchr+1,f
  2817  0AF8  082F               	movf	strstr@s2,w
  2818  0AF9  0084               	movwf	4
  2819  0AFA  0830               	movf	strstr@s2+1,w
  2820  0AFB  0085               	movwf	5
  2821  0AFC  0800               	movf	0,w	;code access
  2822  0AFD  00A2               	movwf	?_strchr+2
  2823  0AFE  01A3               	clrf	?_strchr+3
  2824  0AFF  2747  3188         	fcall	_strchr
  2825  0B01  0821               	movf	?_strchr+1,w
  2826  0B02  00AE               	movwf	strstr@s1+1
  2827  0B03  0820               	movf	?_strchr,w
  2828  0B04  00AD               	movwf	strstr@s1
  2829  0B05                     l32594:	
  2830  0B05  082E               	movf	strstr@s1+1,w
  2831  0B06  042D               	iorwf	strstr@s1,w
  2832  0B07  1903               	skipnz
  2833  0B08  2B10               	goto	l32598
  2834  0B09  082D               	movf	strstr@s1,w
  2835  0B0A  0086               	movwf	6
  2836  0B0B  082E               	movf	strstr@s1+1,w
  2837  0B0C  0087               	movwf	7
  2838  0B0D  0881               	movf	1,f
  2839  0B0E  1D03               	skipz
  2840  0B0F  2AD9               	goto	l32588
  2841  0B10                     l32598:	
  2842  0B10  01AD               	clrf	?_strstr
  2843  0B11  01AE               	clrf	?_strstr+1
  2844  0B12  0008               	return
  2845  0B13                     __end_of_strstr:	
  2846  0B13                     __ptext1964:	
  2847 ;; =============== function _TestProc ends ============
  2848                           
  2849                           
  2850 ;; *************** function _CallProc *****************
  2851 ;; Defined at:
  2852 ;;		line 14 in file "F:\work\WYP\NBIoT\Function.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;		None
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  retry           1   39[BANK0 ] unsigned char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;		None               void
  2859 ;; Registers used:
  2860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 10/F
  2863 ;;		On exit  : 1F/F
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2866 ;;      Params:         0       0       0       0       0       0       0       0
  2867 ;;      Locals:         0       1       0       0       0       0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0
  2869 ;;      Totals:         0       1       0       0       0       0       0       0
  2870 ;;Total ram usage:        1 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    8
  2873 ;; This function calls:
  2874 ;;		_CallSend
  2875 ;;		_LcdDisplay_CurTemp
  2876 ;;		___delay_20ms
  2877 ;;		_LcdDisplay_Err
  2878 ;; This function is called by:
  2879 ;;		_main
  2880 ;;		_TestProc
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883  0B13                     _CallProc:	
  2884  0B13                     l8633:	
  2885                           ;Function.c: 16: while(WA==0);
  2886                           
  2887                           ; Regs used in _CallProc: [wreg-btemp+0+pclath+cstack]
  2888                           
  2889  0B13  002F               	movlb	15	; select bank15
  2890  0B14  1E12               	btfss	18,4
  2891  0B15  2B13               	goto	l8633
  2892                           
  2893                           ;Function.c: 17: SEG5COM0=1;
  2894  0B16  16A0               	bsf	32,5
  2895  0B17                     l8636:	
  2896                           ;Function.c: 18: while(WA==0);
  2897                           
  2898  0B17  1E12               	btfss	18,4
  2899  0B18  2B17               	goto	l8636
  2900                           
  2901                           ;Function.c: 19: SEG5COM2=1;
  2902  0B19  16A6               	bsf	38,5
  2903  0B1A                     l8639:	
  2904                           ;Function.c: 20: while(WA==0);
  2905                           
  2906  0B1A  1E12               	btfss	18,4
  2907  0B1B  2B1A               	goto	l8639
  2908                           
  2909                           ;Function.c: 21: SEG21COM3=0;
  2910  0B1C  12AB               	bcf	43,5
  2911  0B1D                     l8642:	
  2912                           ;Function.c: 22: while(WA==0);
  2913                           
  2914  0B1D  1E12               	btfss	18,4
  2915  0B1E  2B1D               	goto	l8642
  2916                           
  2917                           ;Function.c: 23: SEG21COM2=0;
  2918  0B1F  12A8               	bcf	40,5
  2919                           
  2920                           ;Function.c: 24: if(gFlags.bNotify)
  2921  0B20  0020               	movlb	0	; select bank0
  2922  0B21  1C65               	btfss	_gFlags,0
  2923  0B22  2B2A               	goto	l33470
  2924  0B23                     l8646:	
  2925  0B23  002F               	movlb	15	; select bank15
  2926  0B24  1E12               	btfss	18,4
  2927  0B25  2B23               	goto	l8646
  2928                           
  2929                           ;Function.c: 27: SEG22COM3=1;
  2930  0B26  172B               	bsf	43,6
  2931  0B27                     l8649:	
  2932                           ;Function.c: 28: while(WA==0);
  2933                           
  2934  0B27  1E12               	btfss	18,4
  2935  0B28  2B27               	goto	l8649
  2936                           
  2937                           ;Function.c: 29: SEG3COM3=1;
  2938  0B29  15A9               	bsf	41,3
  2939  0B2A                     l33470:	
  2940                           
  2941                           ;Function.c: 30: }
  2942                           ;Function.c: 32: unsigned char retry=2;
  2943  0B2A  3002               	movlw	2
  2944  0B2B  0020               	movlb	0	; select bank0
  2945  0B2C  00C7               	movwf	CallProc@retry
  2946                           
  2947                           ;Function.c: 33: while(retry!=0)
  2948  0B2D  2B38               	goto	l33486
  2949  0B2E                     l33480:	
  2950                           
  2951                           ;Function.c: 39: {
  2952                           ;Function.c: 40: retry--;
  2953  0B2E  03C7               	decf	CallProc@retry,f
  2954                           
  2955                           ;Function.c: 45: LcdDisplay_CurTemp();
  2956  0B2F  2685  3188         	fcall	_LcdDisplay_CurTemp
  2957                           
  2958                           ;Function.c: 46: __delay_20ms(3000);
  2959  0B31  30B8               	movlw	184
  2960  0B32  0020               	movlb	0	; select bank0
  2961  0B33  00A0               	movwf	?___delay_20ms
  2962  0B34  300B               	movlw	11
  2963  0B35  00A1               	movwf	?___delay_20ms+1
  2964  0B36  22C4  3188         	fcall	___delay_20ms
  2965  0B38                     l33486:	
  2966                           ;Function.c: 47: }
  2967                           
  2968  0B38  08C7               	movf	CallProc@retry,f
  2969  0B39  1903               	btfsc	3,2
  2970  0B3A  2B41               	goto	l8657
  2971                           
  2972                           ;Function.c: 34: {
  2973                           ;Function.c: 35: ErrState=NoErr;
  2974  0B3B  01E2               	clrf	_ErrState
  2975                           
  2976                           ;Function.c: 36: gFlags.bRetry=0;
  2977  0B3C  1265               	bcf	_gFlags,4
  2978                           
  2979                           ;Function.c: 37: CallSend();
  2980  0B3D  2128  3188         	fcall	_CallSend
  2981                           
  2982                           ;Function.c: 38: if(gFlags.bRetry)
  2983  0B3F  1A65               	btfsc	_gFlags,4
  2984  0B40  2B2E               	goto	l33480
  2985  0B41                     l8657:	
  2986  0B41  002F               	movlb	15	; select bank15
  2987  0B42  1E12               	btfss	18,4
  2988  0B43  2B41               	goto	l8657
  2989                           
  2990                           ;Function.c: 54: SEG5COM0=0;
  2991  0B44  12A0               	bcf	32,5
  2992  0B45                     l8660:	
  2993                           ;Function.c: 55: while(WA==0);
  2994                           
  2995  0B45  1E12               	btfss	18,4
  2996  0B46  2B45               	goto	l8660
  2997                           
  2998                           ;Function.c: 56: SEG5COM2=0;
  2999  0B47  12A6               	bcf	38,5
  3000  0B48                     l8663:	
  3001                           ;Function.c: 57: while(WA==0);
  3002                           
  3003  0B48  1E12               	btfss	18,4
  3004  0B49  2B48               	goto	l8663
  3005                           
  3006                           ;Function.c: 58: SEG22COM3=0;
  3007  0B4A  132B               	bcf	43,6
  3008  0B4B                     l8666:	
  3009                           ;Function.c: 59: while(WA==0);
  3010                           
  3011  0B4B  1E12               	btfss	18,4
  3012  0B4C  2B4B               	goto	l8666
  3013                           
  3014                           ;Function.c: 60: SEG3COM3=0;
  3015  0B4D  11A9               	bcf	41,3
  3016                           
  3017                           ;Function.c: 61: if(ErrState!=NoErr)
  3018  0B4E  0020               	movlb	0	; select bank0
  3019  0B4F  0862               	movf	_ErrState,w
  3020  0B50  1903               	btfsc	3,2
  3021  0B51  2B54               	goto	l33492
  3022                           
  3023                           ;Function.c: 62: {
  3024                           ;Function.c: 63: LcdDisplay_Err();
  3025  0B52  3184  2C10         	ljmp	l2339
  3026  0B54                     l33492:	
  3027                           ;Function.c: 64: }
  3028                           
  3029                           
  3030                           ;Function.c: 65: else
  3031                           ;Function.c: 66: {
  3032                           ;Function.c: 67: LcdDisplay_CurTemp();
  3033  0B54  2E85               	ljmp	l32468
  3034  0B55                     __end_of_CallProc:	
  3035  0B55                     __ptext1968:	
  3036 ;; =============== function _ReadTData ends ============
  3037                           
  3038                           
  3039 ;; *************** function _InteractServer *****************
  3040 ;; Defined at:
  3041 ;;		line 112 in file "F:\work\WYP\NBIoT\Function.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  j               2   28[BANK0 ] int 
  3046 ;;  i               2   26[BANK0 ] int 
  3047 ;;  i               2   24[BANK0 ] int 
  3048 ;;  t               2   32[BANK0 ] struct .
  3049 ;;  txLen           2   30[BANK0 ] unsigned int 
  3050 ;;  i               1   37[BANK0 ] unsigned char 
  3051 ;;  k               1   36[BANK0 ] unsigned char 
  3052 ;;  j               1   35[BANK0 ] unsigned char 
  3053 ;;  addr            1   34[BANK0 ] unsigned char 
  3054 ;;  res             1   23[BANK0 ] unsigned char 
  3055 ;;  retry           1   22[BANK0 ] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 1F/0
  3062 ;;		On exit  : 1F/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3065 ;;      Params:         0       0       0       0       0       0       0       0
  3066 ;;      Locals:         0      16       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0
  3068 ;;      Totals:         0      16       0       0       0       0       0       0
  3069 ;;Total ram usage:       16 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; Hardware stack levels required when called:    6
  3072 ;; This function calls:
  3073 ;;		_Uart1_PutString
  3074 ;;		_Uart1_PutString_Hex
  3075 ;;		_Uart1_PutHex
  3076 ;;		_MakeTxTemperature
  3077 ;;		___lwdiv
  3078 ;;		_Uart1_PutChar
  3079 ;;		___lwmod
  3080 ;;		___bmul
  3081 ;;		_eeprom_read
  3082 ;;		_strcpy
  3083 ;;		_ATCommand_WaitData
  3084 ;;		___delay_20ms
  3085 ;; This function is called by:
  3086 ;;		_CallSend
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089  0B55                     _InteractServer:	
  3090                           
  3091                           ;Function.c: 114: unsigned char retry,i,j,k,addr;
  3092                           ;Function.c: 115: uint t;
  3093                           ;Function.c: 116: unsigned int txLen;
  3094                           ;Function.c: 117: retry=1;
  3095                           
  3096                           ; Regs used in _InteractServer: [wreg-btemp+0+pclath+cstack]
  3097  0B55  01B6               	clrf	InteractServer@retry
  3098  0B56  0AB6               	incf	InteractServer@retry,f
  3099                           
  3100                           ;Function.c: 118: res=ATACK_Null;
  3101  0B57  01B7               	clrf	InteractServer@res
  3102  0B58                     l33342:	
  3103                           ;Function.c: 119: while(retry!=0)
  3104                           
  3105  0B58  08B6               	movf	InteractServer@retry,f
  3106  0B59  1903               	btfsc	3,2
  3107  0B5A  2D7C               	goto	l33344
  3108                           
  3109                           ;Function.c: 120: {
  3110                           ;Function.c: 121: if(gFlags.bFirst)
  3111  0B5B  1D65               	btfss	_gFlags,2
  3112  0B5C  2B9F               	goto	l8684
  3113                           
  3114                           ;Function.c: 122: {
  3115                           ;Function.c: 123: Uart1_PutString("AT+NSOSD=1,32,\0");
  3116  0B5D  306E               	movlw	low (STR_3| (0+32768))
  3117  0B5E  00A1               	movwf	?_Uart1_PutString
  3118  0B5F  3090               	movlw	high (STR_3| (0+32768))
  3119  0B60  00A2               	movwf	?_Uart1_PutString+1
  3120  0B61  260D  3188         	fcall	_Uart1_PutString
  3121                           
  3122                           ;Function.c: 124: Uart1_PutString_Hex("@#pt#1#\0");
  3123  0B63  30BB               	movlw	low (STR_4| (0+32768))
  3124  0B64  00A3               	movwf	?_Uart1_PutString_Hex
  3125  0B65  3090               	movlw	high (STR_4| (0+32768))
  3126  0B66  00A4               	movwf	?_Uart1_PutString_Hex+1
  3127  0B67  259D  3188         	fcall	_Uart1_PutString_Hex
  3128                           
  3129                           ;Function.c: 125: Uart1_PutString_Hex(ICCID);
  3130  0B69  30A0               	movlw	_ICCID& (0+255)
  3131  0B6A  00A3               	movwf	?_Uart1_PutString_Hex
  3132  0B6B  01A4               	clrf	?_Uart1_PutString_Hex+1
  3133  0B6C  259D  3188         	fcall	_Uart1_PutString_Hex
  3134                           
  3135                           ;Function.c: 126: Uart1_PutHex('#');
  3136  0B6E  3023               	movlw	35
  3137  0B6F  257E  3188         	fcall	_Uart1_PutHex
  3138                           
  3139                           ;Function.c: 127: if(RomParams.bWinter==0)
  3140  0B71  0020               	movlb	0	; select bank0
  3141  0B72  08E7               	movf	_RomParams+1,f
  3142  0B73  1D03               	skipz
  3143  0B74  2B79               	goto	l33102
  3144                           
  3145                           ;Function.c: 128: {
  3146                           ;Function.c: 129: Uart1_PutString_Hex("60#\0");
  3147  0B75  3005               	movlw	low (STR_5| (0+32768))
  3148  0B76  00A3               	movwf	?_Uart1_PutString_Hex
  3149  0B77  3091               	movlw	high (STR_5| (0+32768))
  3150  0B78  2B7C               	goto	L1
  3151  0B79                     l33102:	
  3152                           ;Function.c: 130: }
  3153                           
  3154                           
  3155                           ;Function.c: 131: else
  3156                           ;Function.c: 132: {
  3157                           ;Function.c: 133: Uart1_PutString_Hex("10#\0");
  3158  0B79  3000               	movlw	low (STR_6| (0+32768))
  3159  0B7A  00A3               	movwf	?_Uart1_PutString_Hex
  3160  0B7B  3091               	movlw	high (STR_6| (0+32768))
  3161  0B7C                     L1:	
  3162  0B7C  00A4               	movwf	?_Uart1_PutString_Hex+1
  3163  0B7D  259D  3188         	fcall	_Uart1_PutString_Hex
  3164                           
  3165                           ;Function.c: 134: }
  3166                           ;Function.c: 135: MakeTxTemperature(CurTemp);
  3167  0B7F  0857               	movf	_CurTemp+1,w
  3168  0B80  00A1               	movwf	?_MakeTxTemperature+1
  3169  0B81  0856               	movf	_CurTemp,w
  3170  0B82  00A0               	movwf	?_MakeTxTemperature
  3171  0B83  25AD  3188         	fcall	_MakeTxTemperature
  3172                           
  3173                           ;Function.c: 136: for(int i=0;i<4;i++)
  3174  0B85  01B8               	clrf	InteractServer@i_10573
  3175  0B86  01B9               	clrf	InteractServer@i_10573+1
  3176  0B87                     l33112:	
  3177                           
  3178                           ;Function.c: 137: {
  3179                           ;Function.c: 138: Uart1_PutHex(TxTemperature[i]);
  3180  0B87  0020               	movlb	0	; select bank0
  3181  0B88  0838               	movf	InteractServer@i_10573,w
  3182  0B89  3E4E               	addlw	_TxTemperature& (0+255)
  3183  0B8A  0086               	movwf	6
  3184  0B8B  0187               	clrf	7
  3185  0B8C  0801               	movf	1,w
  3186  0B8D  257E  3188         	fcall	_Uart1_PutHex
  3187  0B8F  0020               	movlb	0	; select bank0
  3188  0B90  0AB8               	incf	InteractServer@i_10573,f
  3189  0B91  1903               	skipnz
  3190  0B92  0AB9               	incf	InteractServer@i_10573+1,f
  3191  0B93  0839               	movf	InteractServer@i_10573+1,w
  3192  0B94  3A80               	xorlw	128
  3193  0B95  00FE               	movwf	126
  3194  0B96  3080               	movlw	128
  3195  0B97  027E               	subwf	126,w
  3196  0B98  1D03               	skipz
  3197  0B99  2B9C               	goto	u8235
  3198  0B9A  3004               	movlw	4
  3199  0B9B  0238               	subwf	InteractServer@i_10573,w
  3200  0B9C                     u8235:	
  3201  0B9C  1803               	btfsc	3,0
  3202  0B9D  2D4E               	goto	l33320
  3203  0B9E  2B87               	goto	l33112
  3204  0B9F                     l8684:	
  3205                           
  3206                           ;Function.c: 141: else if(gFlags.bNotify)
  3207  0B9F  1C65               	btfss	_gFlags,0
  3208  0BA0  2BE3               	goto	l33142
  3209                           
  3210                           ;Function.c: 142: {
  3211                           ;Function.c: 143: Uart1_PutString("AT+NSOSD=1,32,\0");
  3212  0BA1  306E               	movlw	low (STR_3| (0+32768))
  3213  0BA2  00A1               	movwf	?_Uart1_PutString
  3214  0BA3  3090               	movlw	high (STR_3| (0+32768))
  3215  0BA4  00A2               	movwf	?_Uart1_PutString+1
  3216  0BA5  260D  3188         	fcall	_Uart1_PutString
  3217                           
  3218                           ;Function.c: 144: Uart1_PutString_Hex("@#pt#3#\0");
  3219  0BA7  30CD               	movlw	low (STR_8| (0+32768))
  3220  0BA8  00A3               	movwf	?_Uart1_PutString_Hex
  3221  0BA9  3090               	movlw	high (STR_8| (0+32768))
  3222  0BAA  00A4               	movwf	?_Uart1_PutString_Hex+1
  3223  0BAB  259D  3188         	fcall	_Uart1_PutString_Hex
  3224                           
  3225                           ;Function.c: 145: Uart1_PutString_Hex(ICCID);
  3226  0BAD  30A0               	movlw	_ICCID& (0+255)
  3227  0BAE  00A3               	movwf	?_Uart1_PutString_Hex
  3228  0BAF  01A4               	clrf	?_Uart1_PutString_Hex+1
  3229  0BB0  259D  3188         	fcall	_Uart1_PutString_Hex
  3230                           
  3231                           ;Function.c: 146: Uart1_PutHex('#');
  3232  0BB2  3023               	movlw	35
  3233  0BB3  257E  3188         	fcall	_Uart1_PutHex
  3234                           
  3235                           ;Function.c: 147: if(RomParams.bWinter==0)
  3236  0BB5  0020               	movlb	0	; select bank0
  3237  0BB6  08E7               	movf	_RomParams+1,f
  3238  0BB7  1D03               	skipz
  3239  0BB8  2BBD               	goto	l33126
  3240                           
  3241                           ;Function.c: 148: {
  3242                           ;Function.c: 149: Uart1_PutString_Hex("60#\0");
  3243  0BB9  3005               	movlw	low (STR_5| (0+32768))
  3244  0BBA  00A3               	movwf	?_Uart1_PutString_Hex
  3245  0BBB  3091               	movlw	high (STR_5| (0+32768))
  3246  0BBC  2BC0               	goto	L2
  3247  0BBD                     l33126:	
  3248                           ;Function.c: 150: }
  3249                           
  3250                           
  3251                           ;Function.c: 151: else
  3252                           ;Function.c: 152: {
  3253                           ;Function.c: 153: Uart1_PutString_Hex("10#\0");
  3254  0BBD  3000               	movlw	low (STR_6| (0+32768))
  3255  0BBE  00A3               	movwf	?_Uart1_PutString_Hex
  3256  0BBF  3091               	movlw	high (STR_6| (0+32768))
  3257  0BC0                     L2:	
  3258  0BC0  00A4               	movwf	?_Uart1_PutString_Hex+1
  3259  0BC1  259D  3188         	fcall	_Uart1_PutString_Hex
  3260                           
  3261                           ;Function.c: 154: }
  3262                           ;Function.c: 155: MakeTxTemperature(CurTemp);
  3263  0BC3  0857               	movf	_CurTemp+1,w
  3264  0BC4  00A1               	movwf	?_MakeTxTemperature+1
  3265  0BC5  0856               	movf	_CurTemp,w
  3266  0BC6  00A0               	movwf	?_MakeTxTemperature
  3267  0BC7  25AD  3188         	fcall	_MakeTxTemperature
  3268                           
  3269                           ;Function.c: 156: for(int i=0;i<4;i++)
  3270  0BC9  01BA               	clrf	InteractServer@i_10578
  3271  0BCA  01BB               	clrf	InteractServer@i_10578+1
  3272  0BCB                     l33136:	
  3273                           
  3274                           ;Function.c: 157: {
  3275                           ;Function.c: 158: Uart1_PutHex(TxTemperature[i]);
  3276  0BCB  0020               	movlb	0	; select bank0
  3277  0BCC  083A               	movf	InteractServer@i_10578,w
  3278  0BCD  3E4E               	addlw	_TxTemperature& (0+255)
  3279  0BCE  0086               	movwf	6
  3280  0BCF  0187               	clrf	7
  3281  0BD0  0801               	movf	1,w
  3282  0BD1  257E  3188         	fcall	_Uart1_PutHex
  3283  0BD3  0020               	movlb	0	; select bank0
  3284  0BD4  0ABA               	incf	InteractServer@i_10578,f
  3285  0BD5  1903               	skipnz
  3286  0BD6  0ABB               	incf	InteractServer@i_10578+1,f
  3287  0BD7  083B               	movf	InteractServer@i_10578+1,w
  3288  0BD8  3A80               	xorlw	128
  3289  0BD9  00FE               	movwf	126
  3290  0BDA  3080               	movlw	128
  3291  0BDB  027E               	subwf	126,w
  3292  0BDC  1D03               	skipz
  3293  0BDD  2BE0               	goto	u8265
  3294  0BDE  3004               	movlw	4
  3295  0BDF  023A               	subwf	InteractServer@i_10578,w
  3296  0BE0                     u8265:	
  3297  0BE0  1803               	btfsc	3,0
  3298  0BE1  2D4E               	goto	l33320
  3299  0BE2  2BCB               	goto	l33136
  3300  0BE3                     l33142:	
  3301                           
  3302                           ;Function.c: 161: else
  3303                           ;Function.c: 162: {
  3304                           ;Function.c: 163: if(TxErrDataIndex!=0xff)
  3305  0BE3  0868               	movf	_TxErrDataIndex,w
  3306  0BE4  3AFF               	xorlw	255
  3307  0BE5  1903               	skipnz
  3308  0BE6  2C4C               	goto	l33166
  3309                           
  3310                           ;Function.c: 164: {
  3311                           ;Function.c: 165: if(gFlags.bErrFull)
  3312  0BE7  1DE5               	btfss	_gFlags,3
  3313  0BE8  2BED               	goto	l33148
  3314                           
  3315                           ;Function.c: 166: {
  3316                           ;Function.c: 167: Uart1_PutString("AT+NSOSD=1,687,\0");
  3317  0BE9  305D               	movlw	low (STR_11| (0+32768))
  3318  0BEA  00A1               	movwf	?_Uart1_PutString
  3319  0BEB  3090               	movlw	high (STR_11| (0+32768))
  3320  0BEC  2C4F               	goto	L3
  3321  0BED                     l33148:	
  3322                           ;Function.c: 168: }
  3323                           
  3324                           
  3325                           ;Function.c: 169: else
  3326                           ;Function.c: 170: {
  3327                           ;Function.c: 171: Uart1_PutString("AT+NSOSD=1,\0");
  3328  0BED  308E               	movlw	low (STR_12| (0+32768))
  3329  0BEE  00A1               	movwf	?_Uart1_PutString
  3330  0BEF  3090               	movlw	high (STR_12| (0+32768))
  3331  0BF0  00A2               	movwf	?_Uart1_PutString+1
  3332  0BF1  260D  3188         	fcall	_Uart1_PutString
  3333                           
  3334                           ;Function.c: 172: txLen=28;
  3335  0BF3  301C               	movlw	28
  3336  0BF4  00BE               	movwf	InteractServer@txLen
  3337  0BF5  01BF               	clrf	InteractServer@txLen+1
  3338                           
  3339                           ;Function.c: 173: for(i=0;i<TxErrDataIndex;i++)
  3340  0BF6  01C5               	clrf	InteractServer@i
  3341  0BF7                     l33158:	
  3342  0BF7  0868               	movf	_TxErrDataIndex,w
  3343  0BF8  0245               	subwf	InteractServer@i,w
  3344  0BF9  1803               	btfsc	3,0
  3345  0BFA  2C01               	goto	l33160
  3346                           
  3347                           ;Function.c: 174: {
  3348                           ;Function.c: 175: txLen+=60;
  3349  0BFB  303C               	movlw	60
  3350  0BFC  07BE               	addwf	InteractServer@txLen,f
  3351  0BFD  1803               	skipnc
  3352  0BFE  0ABF               	incf	InteractServer@txLen+1,f
  3353  0BFF  0AC5               	incf	InteractServer@i,f
  3354  0C00  2BF7               	goto	l33158
  3355  0C01                     l33160:	
  3356                           
  3357                           ;Function.c: 176: }
  3358                           ;Function.c: 177: txLen+=59;
  3359  0C01  303B               	movlw	59
  3360  0C02  07BE               	addwf	InteractServer@txLen,f
  3361  0C03  1803               	skipnc
  3362  0C04  0ABF               	incf	InteractServer@txLen+1,f
  3363                           
  3364                           ;Function.c: 178: if(txLen/100!=0)
  3365  0C05  3064               	movlw	100
  3366  0C06  00A0               	movwf	?___lwdiv
  3367  0C07  01A1               	clrf	?___lwdiv+1
  3368  0C08  083F               	movf	InteractServer@txLen+1,w
  3369  0C09  00A3               	movwf	?___lwdiv+3
  3370  0C0A  083E               	movf	InteractServer@txLen,w
  3371  0C0B  00A2               	movwf	?___lwdiv+2
  3372  0C0C  2640  3188         	fcall	___lwdiv
  3373  0C0E  0821               	movf	?___lwdiv+1,w
  3374  0C0F  0420               	iorwf	?___lwdiv,w
  3375                           
  3376                           ;Function.c: 179: Uart1_PutChar('0'+txLen/100);
  3377  0C10  3064               	movlw	100
  3378  0C11  1903               	skipnz
  3379  0C12  2C20               	goto	L5
  3380  0C13  00A0               	movwf	?___lwdiv
  3381  0C14  01A1               	clrf	?___lwdiv+1
  3382  0C15  083F               	movf	InteractServer@txLen+1,w
  3383  0C16  00A3               	movwf	?___lwdiv+3
  3384  0C17  083E               	movf	InteractServer@txLen,w
  3385  0C18  00A2               	movwf	?___lwdiv+2
  3386  0C19  2640  3188         	fcall	___lwdiv
  3387  0C1B  0820               	movf	?___lwdiv,w
  3388  0C1C  3E30               	addlw	48
  3389  0C1D  2603  3188         	fcall	_Uart1_PutChar
  3390                           
  3391                           ;Function.c: 180: txLen=txLen%100;
  3392  0C1F  3064               	movlw	100
  3393  0C20                     L5:	
  3394  0C20  0020               	movlb	0	; select bank0
  3395  0C21  00A0               	movwf	?___lwmod
  3396  0C22  01A1               	clrf	?___lwmod+1
  3397  0C23  083F               	movf	InteractServer@txLen+1,w
  3398  0C24  00A3               	movwf	?___lwmod+3
  3399  0C25  083E               	movf	InteractServer@txLen,w
  3400  0C26  00A2               	movwf	?___lwmod+2
  3401  0C27  2665  3188         	fcall	___lwmod
  3402  0C29  0821               	movf	?___lwmod+1,w
  3403  0C2A  00BF               	movwf	InteractServer@txLen+1
  3404  0C2B  0820               	movf	?___lwmod,w
  3405  0C2C  00BE               	movwf	InteractServer@txLen
  3406                           
  3407                           ;Function.c: 181: Uart1_PutChar('0'+txLen/10);
  3408  0C2D  300A               	movlw	10
  3409  0C2E  00A0               	movwf	?___lwdiv
  3410  0C2F  01A1               	clrf	?___lwdiv+1
  3411  0C30  083F               	movf	InteractServer@txLen+1,w
  3412  0C31  00A3               	movwf	?___lwdiv+3
  3413  0C32  083E               	movf	InteractServer@txLen,w
  3414  0C33  00A2               	movwf	?___lwdiv+2
  3415  0C34  2640  3188         	fcall	___lwdiv
  3416  0C36  0820               	movf	?___lwdiv,w
  3417  0C37  3E30               	addlw	48
  3418  0C38  2603  3188         	fcall	_Uart1_PutChar
  3419                           
  3420                           ;Function.c: 182: Uart1_PutChar('0'+txLen%10);
  3421  0C3A  300A               	movlw	10
  3422  0C3B  0020               	movlb	0	; select bank0
  3423  0C3C  00A0               	movwf	?___lwmod
  3424  0C3D  01A1               	clrf	?___lwmod+1
  3425  0C3E  083F               	movf	InteractServer@txLen+1,w
  3426  0C3F  00A3               	movwf	?___lwmod+3
  3427  0C40  083E               	movf	InteractServer@txLen,w
  3428  0C41  00A2               	movwf	?___lwmod+2
  3429  0C42  2665  3188         	fcall	___lwmod
  3430  0C44  0820               	movf	?___lwmod,w
  3431  0C45  3E30               	addlw	48
  3432  0C46  2603  3188         	fcall	_Uart1_PutChar
  3433                           
  3434                           ;Function.c: 183: Uart1_PutChar(',');
  3435  0C48  302C               	movlw	44
  3436  0C49  2603  3188         	fcall	_Uart1_PutChar
  3437  0C4B  2C52               	goto	l8703
  3438  0C4C                     l33166:	
  3439                           
  3440                           ;Function.c: 186: else
  3441                           ;Function.c: 187: {
  3442                           ;Function.c: 188: Uart1_PutString("AT+NSOSD=1,87,\0");
  3443  0C4C  307E               	movlw	low (STR_13| (0+32768))
  3444  0C4D  00A1               	movwf	?_Uart1_PutString
  3445  0C4E  3090               	movlw	high (STR_13| (0+32768))
  3446  0C4F                     L3:	
  3447  0C4F  00A2               	movwf	?_Uart1_PutString+1
  3448  0C50  260D  3188         	fcall	_Uart1_PutString
  3449  0C52                     l8703:	
  3450                           
  3451                           ;Function.c: 189: }
  3452                           ;Function.c: 190: Uart1_PutString_Hex("@#pt#2#\0");
  3453  0C52  30C4               	movlw	low (STR_14| (0+32768))
  3454  0C53  0020               	movlb	0	; select bank0
  3455  0C54  00A3               	movwf	?_Uart1_PutString_Hex
  3456  0C55  3090               	movlw	high (STR_14| (0+32768))
  3457  0C56  00A4               	movwf	?_Uart1_PutString_Hex+1
  3458  0C57  259D  3188         	fcall	_Uart1_PutString_Hex
  3459                           
  3460                           ;Function.c: 191: Uart1_PutString_Hex(ICCID);
  3461  0C59  30A0               	movlw	_ICCID& (0+255)
  3462  0C5A  00A3               	movwf	?_Uart1_PutString_Hex
  3463  0C5B  01A4               	clrf	?_Uart1_PutString_Hex+1
  3464  0C5C  259D  3188         	fcall	_Uart1_PutString_Hex
  3465                           
  3466                           ;Function.c: 192: Uart1_PutHex('#');
  3467  0C5E  3023               	movlw	35
  3468  0C5F  257E  3188         	fcall	_Uart1_PutHex
  3469                           
  3470                           ;Function.c: 193: if(RomParams.bWinter==0)
  3471  0C61  0020               	movlb	0	; select bank0
  3472  0C62  08E7               	movf	_RomParams+1,f
  3473  0C63  1D03               	skipz
  3474  0C64  2C69               	goto	l33174
  3475                           
  3476                           ;Function.c: 194: {
  3477                           ;Function.c: 195: Uart1_PutString_Hex("60#\0");
  3478  0C65  3005               	movlw	low (STR_5| (0+32768))
  3479  0C66  00A3               	movwf	?_Uart1_PutString_Hex
  3480  0C67  3091               	movlw	high (STR_5| (0+32768))
  3481  0C68  2C6C               	goto	L4
  3482  0C69                     l33174:	
  3483                           ;Function.c: 196: }
  3484                           
  3485                           
  3486                           ;Function.c: 197: else
  3487                           ;Function.c: 198: {
  3488                           ;Function.c: 199: Uart1_PutString_Hex("10#\0");
  3489  0C69  3000               	movlw	low (STR_6| (0+32768))
  3490  0C6A  00A3               	movwf	?_Uart1_PutString_Hex
  3491  0C6B  3091               	movlw	high (STR_6| (0+32768))
  3492  0C6C                     L4:	
  3493  0C6C  00A4               	movwf	?_Uart1_PutString_Hex+1
  3494  0C6D  259D  3188         	fcall	_Uart1_PutString_Hex
  3495                           
  3496                           ;Function.c: 200: }
  3497                           ;Function.c: 201: if(TxErrDataIndex!=0xff)
  3498  0C6F  0868               	movf	_TxErrDataIndex,w
  3499  0C70  3AFF               	xorlw	255
  3500  0C71  1903               	skipnz
  3501  0C72  2D1A               	goto	l33292
  3502                           
  3503                           ;Function.c: 202: {
  3504                           ;Function.c: 203: if(gFlags.bErrFull)
  3505  0C73  1DE5               	btfss	_gFlags,3
  3506  0C74  2CE4               	goto	l33256
  3507                           
  3508                           ;Function.c: 204: {
  3509                           ;Function.c: 205: for(i=(TxErrDataIndex-1);i<10;i--)
  3510  0C75  0868               	movf	_TxErrDataIndex,w
  3511  0C76  3EFF               	addlw	255
  3512  0C77  00C5               	movwf	InteractServer@i
  3513  0C78                     l33182:	
  3514  0C78  300A               	movlw	10
  3515  0C79  0245               	subwf	InteractServer@i,w
  3516  0C7A  1803               	btfsc	3,0
  3517  0C7B  2CAD               	goto	l33220
  3518                           
  3519                           ;Function.c: 206: {
  3520                           ;Function.c: 207: for(j=0;j<12;j++)
  3521  0C7C  01C3               	clrf	InteractServer@j
  3522  0C7D                     l33192:	
  3523                           
  3524                           ;Function.c: 208: {
  3525                           ;Function.c: 209: addr=(i)*12;
  3526  0C7D  300C               	movlw	12
  3527  0C7E  00A0               	movwf	?___bmul
  3528  0C7F  0845               	movf	InteractServer@i,w
  3529  0C80  261E  3188         	fcall	___bmul
  3530  0C82  00C2               	movwf	InteractServer@addr
  3531                           
  3532                           ;Function.c: 210: addr+=16;
  3533  0C83  3010               	movlw	16
  3534  0C84  07C2               	addwf	InteractServer@addr,f
  3535                           
  3536                           ;Function.c: 211: addr+=(j<<1);
  3537  0C85  3543               	lslf	InteractServer@j,w
  3538  0C86  07C2               	addwf	InteractServer@addr,f
  3539                           
  3540                           ;Function.c: 212: t.u8s[0]=eeprom_read(addr);
  3541  0C87  0842               	movf	InteractServer@addr,w
  3542  0C88  25EC  3188         	fcall	_eeprom_read
  3543  0C8A  0020               	movlb	0	; select bank0
  3544  0C8B  00C0               	movwf	InteractServer@t
  3545                           
  3546                           ;Function.c: 213: t.u8s[1]=eeprom_read(addr+1);
  3547  0C8C  0A42               	incf	InteractServer@addr,w
  3548  0C8D  25EC  3188         	fcall	_eeprom_read
  3549  0C8F  0020               	movlb	0	; select bank0
  3550  0C90  00C1               	movwf	InteractServer@t+1
  3551                           
  3552                           ;Function.c: 214: MakeTxTemperature(t);
  3553  0C91  00A1               	movwf	?_MakeTxTemperature+1
  3554  0C92  0840               	movf	InteractServer@t,w
  3555  0C93  00A0               	movwf	?_MakeTxTemperature
  3556  0C94  25AD  3188         	fcall	_MakeTxTemperature
  3557                           
  3558                           ;Function.c: 215: for(k=0;k<4;k++)
  3559  0C96  01C4               	clrf	InteractServer@k
  3560  0C97                     l33204:	
  3561                           
  3562                           ;Function.c: 216: {
  3563                           ;Function.c: 217: Uart1_PutHex(TxTemperature[k]);
  3564  0C97  0844               	movf	InteractServer@k,w
  3565  0C98  3E4E               	addlw	_TxTemperature& (0+255)
  3566  0C99  0086               	movwf	6
  3567  0C9A  0187               	clrf	7
  3568  0C9B  0801               	movf	1,w
  3569  0C9C  257E  3188         	fcall	_Uart1_PutHex
  3570  0C9E  0020               	movlb	0	; select bank0
  3571  0C9F  0AC4               	incf	InteractServer@k,f
  3572  0CA0  3004               	movlw	4
  3573  0CA1  0244               	subwf	InteractServer@k,w
  3574  0CA2  1C03               	skipc
  3575  0CA3  2C97               	goto	l33204
  3576                           
  3577                           ;Function.c: 218: }
  3578                           ;Function.c: 219: Uart1_PutHex('|');
  3579  0CA4  307C               	movlw	124
  3580  0CA5  257E  3188         	fcall	_Uart1_PutHex
  3581  0CA7  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3582  0CA9  1C03               	skipc
  3583  0CAA  2C7D               	goto	l33192
  3584  0CAB  03C5               	decf	InteractServer@i,f
  3585  0CAC  2C78               	goto	l33182
  3586  0CAD                     l33220:	
  3587                           
  3588                           ;Function.c: 220: }
  3589                           ;Function.c: 221: }
  3590                           ;Function.c: 222: for(i=9;i>TxErrDataIndex;i--)
  3591  0CAD  3009               	movlw	9
  3592  0CAE  00C5               	movwf	InteractServer@i
  3593  0CAF                     l33254:	
  3594  0CAF  0845               	movf	InteractServer@i,w
  3595  0CB0  0268               	subwf	_TxErrDataIndex,w
  3596  0CB1  1803               	btfsc	3,0
  3597  0CB2  2D1A               	goto	l33292
  3598                           
  3599                           ;Function.c: 223: {
  3600                           ;Function.c: 224: for(j=0;j<12;j++)
  3601  0CB3  01C3               	clrf	InteractServer@j
  3602  0CB4                     l33228:	
  3603                           
  3604                           ;Function.c: 225: {
  3605                           ;Function.c: 226: addr=(i)*12;
  3606  0CB4  300C               	movlw	12
  3607  0CB5  00A0               	movwf	?___bmul
  3608  0CB6  0845               	movf	InteractServer@i,w
  3609  0CB7  261E  3188         	fcall	___bmul
  3610  0CB9  00C2               	movwf	InteractServer@addr
  3611                           
  3612                           ;Function.c: 227: addr+=16;
  3613  0CBA  3010               	movlw	16
  3614  0CBB  07C2               	addwf	InteractServer@addr,f
  3615                           
  3616                           ;Function.c: 228: addr+=(j<<1);
  3617  0CBC  3543               	lslf	InteractServer@j,w
  3618  0CBD  07C2               	addwf	InteractServer@addr,f
  3619                           
  3620                           ;Function.c: 229: t.u8s[0]=eeprom_read(addr);
  3621  0CBE  0842               	movf	InteractServer@addr,w
  3622  0CBF  25EC  3188         	fcall	_eeprom_read
  3623  0CC1  0020               	movlb	0	; select bank0
  3624  0CC2  00C0               	movwf	InteractServer@t
  3625                           
  3626                           ;Function.c: 230: t.u8s[1]=eeprom_read(addr+1);
  3627  0CC3  0A42               	incf	InteractServer@addr,w
  3628  0CC4  25EC  3188         	fcall	_eeprom_read
  3629  0CC6  0020               	movlb	0	; select bank0
  3630  0CC7  00C1               	movwf	InteractServer@t+1
  3631                           
  3632                           ;Function.c: 231: MakeTxTemperature(t);
  3633  0CC8  00A1               	movwf	?_MakeTxTemperature+1
  3634  0CC9  0840               	movf	InteractServer@t,w
  3635  0CCA  00A0               	movwf	?_MakeTxTemperature
  3636  0CCB  25AD  3188         	fcall	_MakeTxTemperature
  3637                           
  3638                           ;Function.c: 232: for(k=0;k<4;k++)
  3639  0CCD  01C4               	clrf	InteractServer@k
  3640  0CCE                     l33240:	
  3641                           
  3642                           ;Function.c: 233: {
  3643                           ;Function.c: 234: Uart1_PutHex(TxTemperature[k]);
  3644  0CCE  0844               	movf	InteractServer@k,w
  3645  0CCF  3E4E               	addlw	_TxTemperature& (0+255)
  3646  0CD0  0086               	movwf	6
  3647  0CD1  0187               	clrf	7
  3648  0CD2  0801               	movf	1,w
  3649  0CD3  257E  3188         	fcall	_Uart1_PutHex
  3650  0CD5  0020               	movlb	0	; select bank0
  3651  0CD6  0AC4               	incf	InteractServer@k,f
  3652  0CD7  3004               	movlw	4
  3653  0CD8  0244               	subwf	InteractServer@k,w
  3654  0CD9  1C03               	skipc
  3655  0CDA  2CCE               	goto	l33240
  3656                           
  3657                           ;Function.c: 235: }
  3658                           ;Function.c: 236: Uart1_PutHex('|');
  3659  0CDB  307C               	movlw	124
  3660  0CDC  257E  3188         	fcall	_Uart1_PutHex
  3661  0CDE  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3662  0CE0  1C03               	skipc
  3663  0CE1  2CB4               	goto	l33228
  3664  0CE2  03C5               	decf	InteractServer@i,f
  3665  0CE3  2CAF               	goto	l33254
  3666  0CE4                     l33256:	
  3667                           
  3668                           ;Function.c: 240: else
  3669                           ;Function.c: 241: {
  3670                           ;Function.c: 242: for(i=0;i<TxErrDataIndex;i++)
  3671  0CE4  01C5               	clrf	InteractServer@i
  3672  0CE5                     l33290:	
  3673  0CE5  0868               	movf	_TxErrDataIndex,w
  3674  0CE6  0245               	subwf	InteractServer@i,w
  3675  0CE7  1803               	btfsc	3,0
  3676  0CE8  2D1A               	goto	l33292
  3677                           
  3678                           ;Function.c: 243: {
  3679                           ;Function.c: 244: for(j=0;j<12;j++)
  3680  0CE9  01C3               	clrf	InteractServer@j
  3681  0CEA                     l33264:	
  3682                           
  3683                           ;Function.c: 245: {
  3684                           ;Function.c: 246: addr=i*12;
  3685  0CEA  300C               	movlw	12
  3686  0CEB  00A0               	movwf	?___bmul
  3687  0CEC  0845               	movf	InteractServer@i,w
  3688  0CED  261E  3188         	fcall	___bmul
  3689  0CEF  00C2               	movwf	InteractServer@addr
  3690                           
  3691                           ;Function.c: 247: addr+=16;
  3692  0CF0  3010               	movlw	16
  3693  0CF1  07C2               	addwf	InteractServer@addr,f
  3694                           
  3695                           ;Function.c: 248: addr+=(j<<1);
  3696  0CF2  3543               	lslf	InteractServer@j,w
  3697  0CF3  07C2               	addwf	InteractServer@addr,f
  3698                           
  3699                           ;Function.c: 249: t.u8s[0]=eeprom_read(addr);
  3700  0CF4  0842               	movf	InteractServer@addr,w
  3701  0CF5  25EC  3188         	fcall	_eeprom_read
  3702  0CF7  0020               	movlb	0	; select bank0
  3703  0CF8  00C0               	movwf	InteractServer@t
  3704                           
  3705                           ;Function.c: 250: t.u8s[1]=eeprom_read(addr+1);
  3706  0CF9  0A42               	incf	InteractServer@addr,w
  3707  0CFA  25EC  3188         	fcall	_eeprom_read
  3708  0CFC  0020               	movlb	0	; select bank0
  3709  0CFD  00C1               	movwf	InteractServer@t+1
  3710                           
  3711                           ;Function.c: 251: MakeTxTemperature(t);
  3712  0CFE  00A1               	movwf	?_MakeTxTemperature+1
  3713  0CFF  0840               	movf	InteractServer@t,w
  3714  0D00  00A0               	movwf	?_MakeTxTemperature
  3715  0D01  25AD  3188         	fcall	_MakeTxTemperature
  3716                           
  3717                           ;Function.c: 252: for(k=0;k<4;k++)
  3718  0D03  01C4               	clrf	InteractServer@k
  3719  0D04                     l33276:	
  3720                           
  3721                           ;Function.c: 253: {
  3722                           ;Function.c: 254: Uart1_PutHex(TxTemperature[k]);
  3723  0D04  0844               	movf	InteractServer@k,w
  3724  0D05  3E4E               	addlw	_TxTemperature& (0+255)
  3725  0D06  0086               	movwf	6
  3726  0D07  0187               	clrf	7
  3727  0D08  0801               	movf	1,w
  3728  0D09  257E  3188         	fcall	_Uart1_PutHex
  3729  0D0B  0020               	movlb	0	; select bank0
  3730  0D0C  0AC4               	incf	InteractServer@k,f
  3731  0D0D  3004               	movlw	4
  3732  0D0E  0244               	subwf	InteractServer@k,w
  3733  0D0F  1C03               	skipc
  3734  0D10  2D04               	goto	l33276
  3735                           
  3736                           ;Function.c: 255: }
  3737                           ;Function.c: 256: Uart1_PutHex('|');
  3738  0D11  307C               	movlw	124
  3739  0D12  257E  3188         	fcall	_Uart1_PutHex
  3740  0D14  27EB  3188         	fcall	PL5	;call to abstracted procedure
  3741  0D16  1C03               	skipc
  3742  0D17  2CEA               	goto	l33264
  3743  0D18  0AC5               	incf	InteractServer@i,f
  3744  0D19  2CE5               	goto	l33290
  3745  0D1A                     l33292:	
  3746                           
  3747                           ;Function.c: 257: }
  3748                           ;Function.c: 258: }
  3749                           ;Function.c: 259: }
  3750                           ;Function.c: 260: }
  3751                           ;Function.c: 261: for(i=0;i<12;i++)
  3752  0D1A  01C5               	clrf	InteractServer@i
  3753  0D1B                     l33294:	
  3754  0D1B  300C               	movlw	12
  3755  0D1C  0245               	subwf	InteractServer@i,w
  3756  0D1D  1803               	btfsc	3,0
  3757  0D1E  2D4E               	goto	l33320
  3758                           
  3759                           ;Function.c: 262: {
  3760                           ;Function.c: 263: MakeTxTemperature(TList.T[i]);
  3761  0D1F  3545               	lslf	InteractServer@i,w
  3762  0D20  3E20               	addlw	_TList& (0+255)
  3763  0D21  0086               	movwf	6
  3764  0D22  3001               	movlw	1	; select bank2/3
  3765  0D23  0087               	movwf	7
  3766  0D24  3F40               	moviw [0]fsr1
  3767  0D25  00A0               	movwf	?_MakeTxTemperature
  3768  0D26  3F41               	moviw [1]fsr1
  3769  0D27  00A1               	movwf	?_MakeTxTemperature+1
  3770  0D28  25AD  3188         	fcall	_MakeTxTemperature
  3771                           
  3772                           ;Function.c: 264: for(int j=0;j<4;j++)
  3773  0D2A  01BC               	clrf	InteractServer@j_10585
  3774  0D2B  01BD               	clrf	InteractServer@j_10585+1
  3775  0D2C                     l33306:	
  3776                           
  3777                           ;Function.c: 265: {
  3778                           ;Function.c: 266: Uart1_PutHex(TxTemperature[j]);
  3779  0D2C  0020               	movlb	0	; select bank0
  3780  0D2D  083C               	movf	InteractServer@j_10585,w
  3781  0D2E  3E4E               	addlw	_TxTemperature& (0+255)
  3782  0D2F  0086               	movwf	6
  3783  0D30  0187               	clrf	7
  3784  0D31  0801               	movf	1,w
  3785  0D32  257E  3188         	fcall	_Uart1_PutHex
  3786  0D34  0020               	movlb	0	; select bank0
  3787  0D35  0ABC               	incf	InteractServer@j_10585,f
  3788  0D36  1903               	skipnz
  3789  0D37  0ABD               	incf	InteractServer@j_10585+1,f
  3790  0D38  083D               	movf	InteractServer@j_10585+1,w
  3791  0D39  3A80               	xorlw	128
  3792  0D3A  00FE               	movwf	126
  3793  0D3B  3080               	movlw	128
  3794  0D3C  027E               	subwf	126,w
  3795  0D3D  1D03               	skipz
  3796  0D3E  2D41               	goto	u8445
  3797  0D3F  3004               	movlw	4
  3798  0D40  023C               	subwf	InteractServer@j_10585,w
  3799  0D41                     u8445:	
  3800  0D41  1C03               	skipc
  3801  0D42  2D2C               	goto	l33306
  3802                           
  3803                           ;Function.c: 267: }
  3804                           ;Function.c: 268: if(i!=(12-1))
  3805  0D43  0020               	movlb	0	; select bank0
  3806  0D44  0845               	movf	InteractServer@i,w
  3807  0D45  3A0B               	xorlw	11
  3808  0D46  1903               	skipnz
  3809  0D47  2D4B               	goto	l33316
  3810                           
  3811                           ;Function.c: 269: {
  3812                           ;Function.c: 270: Uart1_PutHex('|');
  3813  0D48  307C               	movlw	124
  3814  0D49  257E  3188         	fcall	_Uart1_PutHex
  3815  0D4B                     l33316:	
  3816  0D4B  0020               	movlb	0	; select bank0
  3817  0D4C  0AC5               	incf	InteractServer@i,f
  3818  0D4D  2D1B               	goto	l33294
  3819  0D4E                     l33320:	
  3820                           
  3821                           ;Function.c: 271: }
  3822                           ;Function.c: 272: }
  3823                           ;Function.c: 273: }
  3824                           ;Function.c: 274: Uart1_PutHex('#');
  3825  0D4E  3023               	movlw	35
  3826  0D4F  257E  3188         	fcall	_Uart1_PutHex
  3827                           
  3828                           ;Function.c: 275: Uart1_PutHex('@');
  3829  0D51  3040               	movlw	64
  3830  0D52  257E  3188         	fcall	_Uart1_PutHex
  3831                           
  3832                           ;Function.c: 276: ATCommand_WaitACKTimes=400;
  3833  0D54  3090               	movlw	144
  3834  0D55  0020               	movlb	0	; select bank0
  3835  0D56  00D4               	movwf	_ATCommand_WaitACKTimes
  3836  0D57  3001               	movlw	1
  3837  0D58  00D5               	movwf	_ATCommand_WaitACKTimes+1
  3838                           
  3839                           ;Function.c: 277: strcpy(ATCommand_OkString,"NSONMI");
  3840  0D59  30E7               	movlw	low (STR_17| (0+32768))
  3841  0D5A  00A0               	movwf	?_strcpy
  3842  0D5B  3090               	movlw	high (STR_17| (0+32768))
  3843  0D5C  00A1               	movwf	?_strcpy+1
  3844  0D5D  30C4               	movlw	_ATCommand_OkString& (0+255)
  3845  0D5E  262A  3188         	fcall	_strcpy
  3846                           
  3847                           ;Function.c: 278: strcpy(ATCommand_ErrString,"ERROR");
  3848  0D60  30FA               	movlw	low (STR_18| (0+32768))
  3849  0D61  00A0               	movwf	?_strcpy
  3850  0D62  3090               	movlw	high (STR_18| (0+32768))
  3851  0D63  00A1               	movwf	?_strcpy+1
  3852  0D64  30B5               	movlw	_ATCommand_ErrString& (0+255)
  3853  0D65  262A  3188         	fcall	_strcpy
  3854                           
  3855                           ;Function.c: 279: ATCommand_Clear='+';
  3856  0D67  302B               	movlw	43
  3857  0D68  00F9               	movwf	_ATCommand_Clear
  3858                           
  3859                           ;Function.c: 280: Uart1_PutString("\r\0");
  3860  0D69  3016               	movlw	low (STR_19| (0+32768))
  3861  0D6A  00A1               	movwf	?_Uart1_PutString
  3862  0D6B  3091               	movlw	high (STR_19| (0+32768))
  3863  0D6C  00A2               	movwf	?_Uart1_PutString+1
  3864  0D6D  260D               	fcall	_Uart1_PutString
  3865                           
  3866                           ;Function.c: 281: res=ATCommand_WaitData();
  3867  0D6E  3185  2529  3188   	fcall	_ATCommand_WaitData
  3868  0D71  00B7               	movwf	InteractServer@res
  3869                           
  3870                           ;Function.c: 282: if(res!=ATACK_Null)
  3871  0D72  0837               	movf	InteractServer@res,w
  3872  0D73  1D03               	skipz
  3873  0D74  2D7C               	goto	l33344
  3874                           
  3875                           ;Function.c: 284: __delay_20ms(100);;
  3876  0D75  3064               	movlw	100
  3877  0D76  00A0               	movwf	?___delay_20ms
  3878  0D77  01A1               	clrf	?___delay_20ms+1
  3879  0D78  22C4  3188         	fcall	___delay_20ms
  3880                           
  3881                           ;Function.c: 285: retry--;
  3882  0D7A  03B6               	decf	InteractServer@retry,f
  3883  0D7B  2B58               	goto	l33342
  3884  0D7C                     l33344:	
  3885                           
  3886                           ;Function.c: 286: }
  3887                           ;Function.c: 287: return res;
  3888  0D7C  0837               	movf	InteractServer@res,w
  3889  0D7D  0008               	return
  3890  0D7E                     __end_of_InteractServer:	
  3891  0D7E                     __ptext1991:	
  3892 ;; =============== function _strstr ends ============
  3893                           
  3894                           
  3895 ;; *************** function _Uart1_PutHex *****************
  3896 ;; Defined at:
  3897 ;;		line 88 in file "F:\work\WYP\NBIoT\Uart.c"
  3898 ;; Parameters:    Size  Location     Type
  3899 ;;  c               1    wreg     unsigned char 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  c               1    1[BANK0 ] unsigned char 
  3902 ;;  b               1    2[BANK0 ] unsigned char 
  3903 ;; Return value:  Size  Location     Type
  3904 ;;		None               void
  3905 ;; Registers used:
  3906 ;;		wreg, status,2, status,0, pclath, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 0/0
  3909 ;;		On exit  : 1F/3
  3910 ;;		Unchanged: FFFE0/0
  3911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3912 ;;      Params:         0       0       0       0       0       0       0       0
  3913 ;;      Locals:         0       2       0       0       0       0       0       0
  3914 ;;      Temps:          0       0       0       0       0       0       0       0
  3915 ;;      Totals:         0       2       0       0       0       0       0       0
  3916 ;;Total ram usage:        2 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    4
  3919 ;; This function calls:
  3920 ;;		_Uart1_PutChar
  3921 ;; This function is called by:
  3922 ;;		_InteractServer
  3923 ;;		_Uart1_PutString_Hex
  3924 ;; This function uses a non-reentrant model
  3925 ;;
  3926  0D7E                     _Uart1_PutHex:	
  3927                           
  3928                           ; Regs used in _Uart1_PutHex: [wreg+status,2+status,0+pclath+cstack]
  3929                           ;Uart1_PutHex@c stored from wreg
  3930  0D7E  0020               	movlb	0	; select bank0
  3931  0D7F  00A1               	movwf	Uart1_PutHex@c
  3932                           
  3933                           ;Uart.c: 89: unsigned char b;
  3934                           ;Uart.c: 90: b=(c>>4);
  3935  0D80  0E21               	swapf	Uart1_PutHex@c,w
  3936  0D81  390F               	andlw	15
  3937  0D82  00A2               	movwf	Uart1_PutHex@b
  3938                           
  3939                           ;Uart.c: 91: if (b>9)
  3940  0D83  300A               	movlw	10
  3941  0D84  0222               	subwf	Uart1_PutHex@b,w
  3942  0D85  1C03               	skipc
  3943  0D86  2D89               	goto	l32570
  3944                           
  3945                           ;Uart.c: 92: b += 'A'-10;
  3946  0D87  3037               	movlw	55
  3947  0D88  2D8A               	goto	L6
  3948  0D89                     l32570:	
  3949                           
  3950                           ;Uart.c: 93: else
  3951                           ;Uart.c: 94: b += '0';
  3952  0D89  3030               	movlw	48
  3953  0D8A                     L6:	
  3954  0D8A  07A2               	addwf	Uart1_PutHex@b,f
  3955                           
  3956                           ;Uart.c: 95: Uart1_PutChar(b);
  3957  0D8B  0822               	movf	Uart1_PutHex@b,w
  3958  0D8C  2603  3188         	fcall	_Uart1_PutChar
  3959                           
  3960                           ;Uart.c: 96: b=(c&0x0F);
  3961  0D8E  0020               	movlb	0	; select bank0
  3962  0D8F  0821               	movf	Uart1_PutHex@c,w
  3963  0D90  00A2               	movwf	Uart1_PutHex@b
  3964  0D91  300F               	movlw	15
  3965  0D92  05A2               	andwf	Uart1_PutHex@b,f
  3966                           
  3967                           ;Uart.c: 97: if (b>9)
  3968  0D93  300A               	movlw	10
  3969  0D94  0222               	subwf	Uart1_PutHex@b,w
  3970  0D95  1C03               	skipc
  3971  0D96  2D99               	goto	l32582
  3972                           
  3973                           ;Uart.c: 98: b += 'A'-10;
  3974  0D97  3037               	movlw	55
  3975  0D98  2D9A               	goto	L7
  3976  0D99                     l32582:	
  3977                           
  3978                           ;Uart.c: 99: else
  3979                           ;Uart.c: 100: b += '0';
  3980  0D99  3030               	movlw	48
  3981  0D9A                     L7:	
  3982  0D9A  07A2               	addwf	Uart1_PutHex@b,f
  3983                           
  3984                           ;Uart.c: 101: Uart1_PutChar(b);
  3985  0D9B  0822               	movf	Uart1_PutHex@b,w
  3986  0D9C  2E03               	ljmp	_Uart1_PutChar
  3987  0D9D                     __end_of_Uart1_PutHex:	
  3988  0D9D                     __ptext1974:	
  3989 ;; =============== function _ATCommand_WaitData ends ============
  3990                           
  3991                           
  3992 ;; *************** function _Uart1_PutString_Hex *****************
  3993 ;; Defined at:
  3994 ;;		line 75 in file "F:\work\WYP\NBIoT\Uart.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  pString         2    3[BANK0 ] PTR const unsigned char 
  3997 ;;		 -> STR_16(5), STR_15(5), STR_14(9), STR_10(5), 
  3998 ;;		 -> STR_9(5), STR_8(9), STR_6(5), STR_5(5), 
  3999 ;;		 -> ICCID(21), STR_4(9), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  c               1    5[BANK0 ] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;		None               void
  4004 ;; Registers used:
  4005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 1F/0
  4008 ;;		On exit  : 1F/0
  4009 ;;		Unchanged: FFFE0/0
  4010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4011 ;;      Params:         0       2       0       0       0       0       0       0
  4012 ;;      Locals:         0       1       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0
  4014 ;;      Totals:         0       3       0       0       0       0       0       0
  4015 ;;Total ram usage:        3 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    5
  4018 ;; This function calls:
  4019 ;;		_Uart1_PutHex
  4020 ;; This function is called by:
  4021 ;;		_InteractServer
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024  0D9D                     _Uart1_PutString_Hex:	
  4025  0D9D                     l23345:	
  4026                           ; Regs used in _Uart1_PutString_Hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4027                           ;Uart.c: 76: char c;
  4028                           ;Uart.c: 77: while(1)
  4029                           
  4030                           
  4031                           ;Uart.c: 78: {
  4032                           ;Uart.c: 79: c=*pString;
  4033  0D9D  0823               	movf	Uart1_PutString_Hex@pString,w
  4034  0D9E  0084               	movwf	4
  4035  0D9F  0824               	movf	Uart1_PutString_Hex@pString+1,w
  4036  0DA0  0085               	movwf	5
  4037  0DA1  0800               	movf	0,w	;code access
  4038  0DA2  00A5               	movwf	Uart1_PutString_Hex@c
  4039                           
  4040                           ;Uart.c: 80: if(c=='\0')
  4041  0DA3  08A5               	movf	Uart1_PutString_Hex@c,f
  4042  0DA4  1903               	btfsc	3,2
  4043  0DA5  0008               	return
  4044                           
  4045                           ;Uart.c: 82: Uart1_PutHex(c);
  4046  0DA6  257E  3188         	fcall	_Uart1_PutHex
  4047                           
  4048                           ;Uart.c: 83: pString++;
  4049  0DA8  0020               	movlb	0	; select bank0
  4050  0DA9  0AA3               	incf	Uart1_PutString_Hex@pString,f
  4051  0DAA  1903               	skipnz
  4052  0DAB  0AA4               	incf	Uart1_PutString_Hex@pString+1,f
  4053  0DAC  2D9D               	goto	l23345
  4054  0DAD                     __end_of_Uart1_PutString_Hex:	
  4055  0DAD                     __ptext2019:	
  4056 ;; =============== function _Uart1_PutChar ends ============
  4057                           
  4058                           
  4059 ;; *************** function _MakeTxTemperature *****************
  4060 ;; Defined at:
  4061 ;;		line 290 in file "F:\work\WYP\NBIoT\Function.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  T               2    0[BANK0 ] struct .
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  x               1    2[BANK0 ] unsigned char 
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0
  4070 ;; Tracked objects:
  4071 ;;		On entry : 1F/0
  4072 ;;		On exit  : 1F/0
  4073 ;;		Unchanged: FFFE0/0
  4074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4075 ;;      Params:         0       2       0       0       0       0       0       0
  4076 ;;      Locals:         0       1       0       0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0
  4078 ;;      Totals:         0       3       0       0       0       0       0       0
  4079 ;;Total ram usage:        3 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    3
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_InteractServer
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088  0DAD                     _MakeTxTemperature:	
  4089                           
  4090                           ;Function.c: 291: unsigned char x;
  4091                           ;Function.c: 292: x=(T.u8H>>4);
  4092                           
  4093                           ; Regs used in _MakeTxTemperature: [wreg+status,2+status,0]
  4094  0DAD  0E21               	swapf	MakeTxTemperature@T+1,w
  4095  0DAE  390F               	andlw	15
  4096  0DAF  00A2               	movwf	MakeTxTemperature@x
  4097                           
  4098                           ;Function.c: 293: if(x>9)
  4099  0DB0  300A               	movlw	10
  4100  0DB1  0222               	subwf	MakeTxTemperature@x,w
  4101  0DB2  1C03               	skipc
  4102  0DB3  2DB8               	goto	l32284
  4103                           
  4104                           ;Function.c: 294: {
  4105                           ;Function.c: 295: x=x-10;
  4106  0DB4  30F6               	movlw	246
  4107  0DB5  07A2               	addwf	MakeTxTemperature@x,f
  4108                           
  4109                           ;Function.c: 296: x=x+0x41;
  4110  0DB6  3041               	movlw	65
  4111  0DB7  2DB9               	goto	L11
  4112  0DB8                     l32284:	
  4113                           ;Function.c: 298: }
  4114                           
  4115                           
  4116                           ;Function.c: 299: else
  4117                           ;Function.c: 300: {
  4118                           ;Function.c: 301: x=x+'0';
  4119  0DB8  3030               	movlw	48
  4120  0DB9                     L11:	
  4121  0DB9  07A2               	addwf	MakeTxTemperature@x,f
  4122                           
  4123                           ;Function.c: 297: TxTemperature[0]=x;
  4124  0DBA  0822               	movf	MakeTxTemperature@x,w
  4125  0DBB  00CE               	movwf	_TxTemperature
  4126                           
  4127                           ;Function.c: 303: }
  4128                           ;Function.c: 304: x=(T.u8H&0x0F);
  4129  0DBC  0821               	movf	MakeTxTemperature@T+1,w
  4130  0DBD  00A2               	movwf	MakeTxTemperature@x
  4131  0DBE  300F               	movlw	15
  4132  0DBF  05A2               	andwf	MakeTxTemperature@x,f
  4133                           
  4134                           ;Function.c: 305: if(x>9)
  4135  0DC0  300A               	movlw	10
  4136  0DC1  0222               	subwf	MakeTxTemperature@x,w
  4137  0DC2  1C03               	skipc
  4138  0DC3  2DC8               	goto	l32296
  4139                           
  4140                           ;Function.c: 306: {
  4141                           ;Function.c: 307: x=x-10;
  4142  0DC4  30F6               	movlw	246
  4143  0DC5  07A2               	addwf	MakeTxTemperature@x,f
  4144                           
  4145                           ;Function.c: 308: x=x+0x41;
  4146  0DC6  3041               	movlw	65
  4147  0DC7  2DC9               	goto	L12
  4148  0DC8                     l32296:	
  4149                           ;Function.c: 310: }
  4150                           
  4151                           
  4152                           ;Function.c: 311: else
  4153                           ;Function.c: 312: {
  4154                           ;Function.c: 313: x=x+'0';
  4155  0DC8  3030               	movlw	48
  4156  0DC9                     L12:	
  4157  0DC9  07A2               	addwf	MakeTxTemperature@x,f
  4158                           
  4159                           ;Function.c: 309: TxTemperature[1]=x;
  4160  0DCA  0822               	movf	MakeTxTemperature@x,w
  4161  0DCB  00CF               	movwf	_TxTemperature+1
  4162                           
  4163                           ;Function.c: 315: }
  4164                           ;Function.c: 316: x=(T.u8L>>4);
  4165  0DCC  0E20               	swapf	MakeTxTemperature@T,w
  4166  0DCD  390F               	andlw	15
  4167  0DCE  00A2               	movwf	MakeTxTemperature@x
  4168                           
  4169                           ;Function.c: 317: if(x>9)
  4170  0DCF  300A               	movlw	10
  4171  0DD0  0222               	subwf	MakeTxTemperature@x,w
  4172  0DD1  1C03               	skipc
  4173  0DD2  2DD7               	goto	l32306
  4174                           
  4175                           ;Function.c: 318: {
  4176                           ;Function.c: 319: x=x-10;
  4177  0DD3  30F6               	movlw	246
  4178  0DD4  07A2               	addwf	MakeTxTemperature@x,f
  4179                           
  4180                           ;Function.c: 320: x=x+0x41;
  4181  0DD5  3041               	movlw	65
  4182  0DD6  2DD8               	goto	L13
  4183  0DD7                     l32306:	
  4184                           ;Function.c: 322: }
  4185                           
  4186                           
  4187                           ;Function.c: 323: else
  4188                           ;Function.c: 324: {
  4189                           ;Function.c: 325: x=x+'0';
  4190  0DD7  3030               	movlw	48
  4191  0DD8                     L13:	
  4192  0DD8  07A2               	addwf	MakeTxTemperature@x,f
  4193                           
  4194                           ;Function.c: 321: TxTemperature[2]=x;
  4195  0DD9  0822               	movf	MakeTxTemperature@x,w
  4196  0DDA  00D0               	movwf	_TxTemperature+2
  4197                           
  4198                           ;Function.c: 327: }
  4199                           ;Function.c: 328: x=(T.u8L&0x0F);
  4200  0DDB  0820               	movf	MakeTxTemperature@T,w
  4201  0DDC  00A2               	movwf	MakeTxTemperature@x
  4202  0DDD  300F               	movlw	15
  4203  0DDE  05A2               	andwf	MakeTxTemperature@x,f
  4204                           
  4205                           ;Function.c: 329: if(x>9)
  4206  0DDF  300A               	movlw	10
  4207  0DE0  0222               	subwf	MakeTxTemperature@x,w
  4208  0DE1  1C03               	skipc
  4209  0DE2  2DEA               	goto	l32318
  4210                           
  4211                           ;Function.c: 330: {
  4212                           ;Function.c: 331: x=x-10;
  4213  0DE3  30F6               	movlw	246
  4214  0DE4  07A2               	addwf	MakeTxTemperature@x,f
  4215                           
  4216                           ;Function.c: 332: x=x+0x41;
  4217  0DE5  3041               	movlw	65
  4218  0DE6                     L10:	
  4219  0DE6  07A2               	addwf	MakeTxTemperature@x,f
  4220                           
  4221                           ;Function.c: 333: TxTemperature[3]=x;
  4222  0DE7  0822               	movf	MakeTxTemperature@x,w
  4223  0DE8  00D1               	movwf	_TxTemperature+3
  4224                           
  4225                           ;Function.c: 334: }
  4226  0DE9  0008               	return
  4227  0DEA                     l32318:	
  4228                           
  4229                           ;Function.c: 335: else
  4230                           ;Function.c: 336: {
  4231                           ;Function.c: 337: x=x+'0';
  4232  0DEA  3030               	movlw	48
  4233  0DEB  2DE6               	goto	L10
  4234  0DEC                     __end_of_MakeTxTemperature:	
  4235  0DEC                     __ptext2017:	
  4236 ;; =============== function _strcpy ends ============
  4237                           
  4238                           
  4239 ;; *************** function _eeprom_read *****************
  4240 ;; Defined at:
  4241 ;;		line 8 in file "eeread.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;  addr            1    wreg     unsigned char 
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;  addr            1    2[BANK0 ] unsigned char 
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      unsigned char 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2, status,0
  4250 ;; Tracked objects:
  4251 ;;		On entry : 1F/0
  4252 ;;		On exit  : 1F/3
  4253 ;;		Unchanged: FFFE0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4255 ;;      Params:         0       0       0       0       0       0       0       0
  4256 ;;      Locals:         0       1       0       0       0       0       0       0
  4257 ;;      Temps:          0       2       0       0       0       0       0       0
  4258 ;;      Totals:         0       3       0       0       0       0       0       0
  4259 ;;Total ram usage:        3 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    3
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_InteractServer
  4266 ;;		_GetRomData
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269  0DEC                     _eeprom_read:	
  4270                           
  4271                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4272                           ;eeprom_read@addr stored from wreg
  4273  0DEC  00A2               	movwf	eeprom_read@addr
  4274  0DED                     l27510:	
  4275  0DED  0064               	clrwdt	;#
  4276  0DEE  0023               	movlb	3	; select bank3
  4277  0DEF  1895               	btfsc	21,1
  4278  0DF0  2DED               	goto	l27510
  4279  0DF1  0020               	movlb	0	; select bank0
  4280  0DF2  0822               	movf	eeprom_read@addr,w
  4281  0DF3  0023               	movlb	3	; select bank3
  4282  0DF4  0091               	movwf	17	;volatile
  4283  0DF5  303F               	movlw	63
  4284  0DF6  0595               	andwf	21,f	;volatile
  4285  0DF7  1415               	bsf	21,0
  4286  0DF8  1003               	clrc
  4287  0DF9  1815               	btfsc	21,0
  4288  0DFA  1403               	setc
  4289  0DFB  3000               	movlw	0
  4290  0DFC  3D09               	addwfc	9,w
  4291  0DFD  0020               	movlb	0	; select bank0
  4292  0DFE  00A0               	movwf	??_eeprom_read
  4293  0DFF  01A1               	clrf	??_eeprom_read+1
  4294  0E00  0023               	movlb	3	; select bank3
  4295  0E01  0813               	movf	19,w	;volatile
  4296  0E02  0008               	return
  4297  0E03                     __end_of_eeprom_read:	
  4298  0E03                     __ptext2018:	
  4299 ;; =============== function _eeprom_read ends ============
  4300                           
  4301                           
  4302 ;; *************** function _Uart1_PutChar *****************
  4303 ;; Defined at:
  4304 ;;		line 47 in file "F:\work\WYP\NBIoT\Uart.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;  c               1    wreg     unsigned char 
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  c               1    0[BANK0 ] unsigned char 
  4309 ;; Return value:  Size  Location     Type
  4310 ;;		None               void
  4311 ;; Registers used:
  4312 ;;		wreg
  4313 ;; Tracked objects:
  4314 ;;		On entry : 1C/0
  4315 ;;		On exit  : 1F/3
  4316 ;;		Unchanged: FFFE0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4318 ;;      Params:         0       0       0       0       0       0       0       0
  4319 ;;      Locals:         0       1       0       0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0
  4321 ;;      Totals:         0       1       0       0       0       0       0       0
  4322 ;;Total ram usage:        1 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    3
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_InteractServer
  4329 ;;		_Uart1_PutString
  4330 ;;		_Uart1_PutHex
  4331 ;; This function uses a non-reentrant model
  4332 ;;
  4333  0E03                     _Uart1_PutChar:	
  4334                           
  4335                           ; Regs used in _Uart1_PutChar: [wreg]
  4336                           ;Uart1_PutChar@c stored from wreg
  4337  0E03  0020               	movlb	0	; select bank0
  4338  0E04  00A0               	movwf	Uart1_PutChar@c
  4339  0E05                     l23326:	
  4340                           ;Uart.c: 48: while(TRMT==0);
  4341                           
  4342  0E05  0023               	movlb	3	; select bank3
  4343  0E06  1C9E               	btfss	30,1
  4344  0E07  2E05               	goto	l23326
  4345                           
  4346                           ;Uart.c: 52: TXREG=c;
  4347  0E08  0020               	movlb	0	; select bank0
  4348  0E09  0820               	movf	Uart1_PutChar@c,w
  4349  0E0A  0023               	movlb	3	; select bank3
  4350  0E0B  009A               	movwf	26	;volatile
  4351  0E0C  0008               	return
  4352  0E0D                     __end_of_Uart1_PutChar:	
  4353  0E0D                     __ptext1992:	
  4354 ;; =============== function _Uart1_PutHex ends ============
  4355                           
  4356                           
  4357 ;; *************** function _Uart1_PutString *****************
  4358 ;; Defined at:
  4359 ;;		line 63 in file "F:\work\WYP\NBIoT\Uart.c"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;  pString         2    1[BANK0 ] PTR const unsigned char 
  4362 ;;		 -> STR_31(3), STR_27(11), STR_25(8), STR_23(10), 
  4363 ;;		 -> STR_22(9), STR_21(6), STR_20(4), STR_19(3), 
  4364 ;;		 -> STR_13(16), STR_12(13), STR_11(17), STR_7(16), 
  4365 ;;		 -> STR_3(16), STR_2(36), STR_1(23), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;  c               1    3[BANK0 ] unsigned char 
  4368 ;; Return value:  Size  Location     Type
  4369 ;;		None               void
  4370 ;; Registers used:
  4371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : 1F/0
  4374 ;;		On exit  : 1F/0
  4375 ;;		Unchanged: FFFE0/0
  4376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4377 ;;      Params:         0       2       0       0       0       0       0       0
  4378 ;;      Locals:         0       1       0       0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0
  4380 ;;      Totals:         0       3       0       0       0       0       0       0
  4381 ;;Total ram usage:        3 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    4
  4384 ;; This function calls:
  4385 ;;		_Uart1_PutChar
  4386 ;; This function is called by:
  4387 ;;		_InteractServer
  4388 ;;		_ATCommand_SendCmd
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391  0E0D                     _Uart1_PutString:	
  4392  0E0D                     l23338:	
  4393                           ; Regs used in _Uart1_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4394                           ;Uart.c: 64: char c;
  4395                           ;Uart.c: 65: while(1)
  4396                           
  4397                           
  4398                           ;Uart.c: 66: {
  4399                           ;Uart.c: 67: c=*pString;
  4400  0E0D  0821               	movf	Uart1_PutString@pString,w
  4401  0E0E  0084               	movwf	4
  4402  0E0F  0822               	movf	Uart1_PutString@pString+1,w
  4403  0E10  0085               	movwf	5
  4404  0E11  0800               	movf	0,w	;code access
  4405  0E12  00A3               	movwf	Uart1_PutString@c
  4406                           
  4407                           ;Uart.c: 68: if(c=='\0')
  4408  0E13  08A3               	movf	Uart1_PutString@c,f
  4409  0E14  1903               	btfsc	3,2
  4410  0E15  0008               	return
  4411                           
  4412                           ;Uart.c: 70: Uart1_PutChar(c);
  4413  0E16  0823               	movf	Uart1_PutString@c,w
  4414  0E17  2603  3188         	fcall	_Uart1_PutChar
  4415                           
  4416                           ;Uart.c: 71: pString++;
  4417  0E19  0020               	movlb	0	; select bank0
  4418  0E1A  0AA1               	incf	Uart1_PutString@pString,f
  4419  0E1B  1903               	skipnz
  4420  0E1C  0AA2               	incf	Uart1_PutString@pString+1,f
  4421  0E1D  2E0D               	goto	l23338
  4422  0E1E                     __end_of_Uart1_PutString:	
  4423  0E1E                     __ptext2008:	
  4424 ;; =============== function ___wmul ends ============
  4425                           
  4426                           
  4427 ;; *************** function ___bmul *****************
  4428 ;; Defined at:
  4429 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\bmul.c"
  4430 ;; Parameters:    Size  Location     Type
  4431 ;;  multiplier      1    wreg     unsigned char 
  4432 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4435 ;;  product         1    1[BANK0 ] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, status,0
  4440 ;; Tracked objects:
  4441 ;;		On entry : 1F/0
  4442 ;;		On exit  : 1F/0
  4443 ;;		Unchanged: FFFE0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4445 ;;      Params:         0       1       0       0       0       0       0       0
  4446 ;;      Locals:         0       2       0       0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0
  4448 ;;      Totals:         0       3       0       0       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    3
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;;		_InteractServer
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459  0E1E                     ___bmul:	
  4460                           
  4461                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4462                           ;___bmul@multiplier stored from wreg
  4463  0E1E  00A2               	movwf	___bmul@multiplier
  4464  0E1F  01A1               	clrf	___bmul@product
  4465  0E20                     l32342:	
  4466  0E20  0820               	movf	___bmul@multiplicand,w
  4467  0E21  1822               	btfsc	___bmul@multiplier,0
  4468  0E22  07A1               	addwf	___bmul@product,f
  4469  0E23  35A0               	lslf	___bmul@multiplicand,f
  4470  0E24  36A2               	lsrf	___bmul@multiplier,f
  4471  0E25  08A2               	movf	___bmul@multiplier,f
  4472  0E26  1D03               	skipz
  4473  0E27  2E20               	goto	l32342
  4474  0E28  0821               	movf	___bmul@product,w
  4475  0E29  0008               	return
  4476  0E2A                     __end_of___bmul:	
  4477  0E2A                     __ptext2016:	
  4478 ;; =============== function _GetVerify_Sum ends ============
  4479                           
  4480                           
  4481 ;; *************** function _strcpy *****************
  4482 ;; Defined at:
  4483 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strcpy.c"
  4484 ;; Parameters:    Size  Location     Type
  4485 ;;  to              1    wreg     PTR unsigned char 
  4486 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4487 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4488 ;;		 -> STR_35(6), STR_34(3), STR_33(6), STR_32(3), 
  4489 ;;		 -> STR_30(6), STR_29(3), STR_18(6), STR_17(7), 
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4492 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4493 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  4494 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      PTR unsigned char 
  4497 ;; Registers used:
  4498 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4499 ;; Tracked objects:
  4500 ;;		On entry : 1F/0
  4501 ;;		On exit  : 1F/0
  4502 ;;		Unchanged: FFFE0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4504 ;;      Params:         0       2       0       0       0       0       0       0
  4505 ;;      Locals:         0       2       0       0       0       0       0       0
  4506 ;;      Temps:          0       2       0       0       0       0       0       0
  4507 ;;      Totals:         0       6       0       0       0       0       0       0
  4508 ;;Total ram usage:        6 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    3
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_InteractServer
  4515 ;;		_ATCommand_Init
  4516 ;;		_ATCommand_SendCmd
  4517 ;;		_ATCommand_WaitData
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520  0E2A                     _strcpy:	
  4521                           
  4522                           ; Regs used in _strcpy: [wreg-status,0+pclath]
  4523                           ;strcpy@to stored from wreg
  4524  0E2A  00A4               	movwf	strcpy@to
  4525  0E2B  00A5               	movwf	strcpy@cp
  4526  0E2C                     l30588:	
  4527  0E2C  0825               	movf	strcpy@cp,w
  4528  0E2D  0086               	movwf	6
  4529  0E2E  0187               	clrf	7
  4530  0E2F  0AA5               	incf	strcpy@cp,f
  4531  0E30  0821               	movf	strcpy@from+1,w
  4532  0E31  00A3               	movwf	??_strcpy+1
  4533  0E32  0820               	movf	strcpy@from,w
  4534  0E33  00A2               	movwf	??_strcpy
  4535  0E34  0AA0               	incf	strcpy@from,f
  4536  0E35  1903               	skipnz
  4537  0E36  0AA1               	incf	strcpy@from+1,f
  4538  0E37  0084               	movwf	4
  4539  0E38  0823               	movf	??_strcpy+1,w
  4540  0E39  0085               	movwf	5
  4541  0E3A  0800               	movf	0,w	;code access
  4542  0E3B  3FC0               	movwi [0]fsr1
  4543  0E3C  0889               	movf	9,f
  4544  0E3D  1903               	btfsc	3,2
  4545  0E3E  0008               	return
  4546  0E3F  2E2C               	goto	l30588
  4547  0E40                     __end_of_strcpy:	
  4548  0E40                     __ptext2006:	
  4549 ;; =============== function ___lwmod ends ============
  4550                           
  4551                           
  4552 ;; *************** function ___lwdiv *****************
  4553 ;; Defined at:
  4554 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  divisor         2    0[BANK0 ] unsigned int 
  4557 ;;  dividend        2    2[BANK0 ] unsigned int 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;  quotient        2    5[BANK0 ] unsigned int 
  4560 ;;  counter         1    4[BANK0 ] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2    0[BANK0 ] unsigned int 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0
  4565 ;; Tracked objects:
  4566 ;;		On entry : 1F/0
  4567 ;;		On exit  : 1F/0
  4568 ;;		Unchanged: FFFE0/0
  4569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4570 ;;      Params:         0       4       0       0       0       0       0       0
  4571 ;;      Locals:         0       3       0       0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0
  4573 ;;      Totals:         0       7       0       0       0       0       0       0
  4574 ;;Total ram usage:        7 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    3
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_InteractServer
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583  0E40                     ___lwdiv:	
  4584                           
  4585                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4586  0E40  01A5               	clrf	___lwdiv@quotient
  4587  0E41  01A6               	clrf	___lwdiv@quotient+1
  4588  0E42  0821               	movf	___lwdiv@divisor+1,w
  4589  0E43  0420               	iorwf	___lwdiv@divisor,w
  4590  0E44  1903               	skipnz
  4591  0E45  2E60               	goto	l32394
  4592  0E46  01A4               	clrf	___lwdiv@counter
  4593  0E47                     L9:	
  4594  0E47  0AA4               	incf	___lwdiv@counter,f
  4595  0E48  1BA1               	btfsc	___lwdiv@divisor+1,7
  4596  0E49  2E4D               	goto	l32382
  4597  0E4A  35A0               	lslf	___lwdiv@divisor,f
  4598  0E4B  0DA1               	rlf	___lwdiv@divisor+1,f
  4599  0E4C  2E47               	goto	L9
  4600  0E4D                     l32382:	
  4601  0E4D  35A5               	lslf	___lwdiv@quotient,f
  4602  0E4E  0DA6               	rlf	___lwdiv@quotient+1,f
  4603  0E4F  0821               	movf	___lwdiv@divisor+1,w
  4604  0E50  0223               	subwf	___lwdiv@dividend+1,w
  4605  0E51  1D03               	skipz
  4606  0E52  2E55               	goto	u7075
  4607  0E53  0820               	movf	___lwdiv@divisor,w
  4608  0E54  0222               	subwf	___lwdiv@dividend,w
  4609  0E55                     u7075:	
  4610  0E55  1C03               	skipc
  4611  0E56  2E5C               	goto	l32390
  4612  0E57  0820               	movf	___lwdiv@divisor,w
  4613  0E58  02A2               	subwf	___lwdiv@dividend,f
  4614  0E59  0821               	movf	___lwdiv@divisor+1,w
  4615  0E5A  3BA3               	subwfb	___lwdiv@dividend+1,f
  4616  0E5B  1425               	bsf	___lwdiv@quotient,0
  4617  0E5C                     l32390:	
  4618  0E5C  36A1               	lsrf	___lwdiv@divisor+1,f
  4619  0E5D  0CA0               	rrf	___lwdiv@divisor,f
  4620  0E5E  0BA4               	decfsz	___lwdiv@counter,f
  4621  0E5F  2E4D               	goto	l32382
  4622  0E60                     l32394:	
  4623  0E60  0826               	movf	___lwdiv@quotient+1,w
  4624  0E61  00A1               	movwf	?___lwdiv+1
  4625  0E62  0825               	movf	___lwdiv@quotient,w
  4626  0E63  00A0               	movwf	?___lwdiv
  4627  0E64  0008               	return
  4628  0E65                     __end_of___lwdiv:	
  4629  0E65                     __ptext2005:	
  4630 ;; =============== function ___lbdiv ends ============
  4631                           
  4632                           
  4633 ;; *************** function ___lwmod *****************
  4634 ;; Defined at:
  4635 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  divisor         2    0[BANK0 ] unsigned int 
  4638 ;;  dividend        2    2[BANK0 ] unsigned int 
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;  counter         1    4[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  2    0[BANK0 ] unsigned int 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0
  4645 ;; Tracked objects:
  4646 ;;		On entry : 1F/0
  4647 ;;		On exit  : 1F/0
  4648 ;;		Unchanged: FFFE0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4650 ;;      Params:         0       4       0       0       0       0       0       0
  4651 ;;      Locals:         0       1       0       0       0       0       0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0
  4653 ;;      Totals:         0       5       0       0       0       0       0       0
  4654 ;;Total ram usage:        5 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    3
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_InteractServer
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663  0E65                     ___lwmod:	
  4664                           
  4665                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4666  0E65  0821               	movf	___lwmod@divisor+1,w
  4667  0E66  0420               	iorwf	___lwmod@divisor,w
  4668  0E67  1903               	skipnz
  4669  0E68  2E80               	goto	l32414
  4670  0E69  01A4               	clrf	___lwmod@counter
  4671  0E6A                     L8:	
  4672  0E6A  0AA4               	incf	___lwmod@counter,f
  4673  0E6B  1BA1               	btfsc	___lwmod@divisor+1,7
  4674  0E6C  2E70               	goto	l32406
  4675  0E6D  35A0               	lslf	___lwmod@divisor,f
  4676  0E6E  0DA1               	rlf	___lwmod@divisor+1,f
  4677  0E6F  2E6A               	goto	L8
  4678  0E70                     l32406:	
  4679  0E70  0821               	movf	___lwmod@divisor+1,w
  4680  0E71  0223               	subwf	___lwmod@dividend+1,w
  4681  0E72  1D03               	skipz
  4682  0E73  2E76               	goto	u7115
  4683  0E74  0820               	movf	___lwmod@divisor,w
  4684  0E75  0222               	subwf	___lwmod@dividend,w
  4685  0E76                     u7115:	
  4686  0E76  1C03               	skipc
  4687  0E77  2E7C               	goto	l32410
  4688  0E78  0820               	movf	___lwmod@divisor,w
  4689  0E79  02A2               	subwf	___lwmod@dividend,f
  4690  0E7A  0821               	movf	___lwmod@divisor+1,w
  4691  0E7B  3BA3               	subwfb	___lwmod@dividend+1,f
  4692  0E7C                     l32410:	
  4693  0E7C  36A1               	lsrf	___lwmod@divisor+1,f
  4694  0E7D  0CA0               	rrf	___lwmod@divisor,f
  4695  0E7E  0BA4               	decfsz	___lwmod@counter,f
  4696  0E7F  2E70               	goto	l32406
  4697  0E80                     l32414:	
  4698  0E80  0823               	movf	___lwmod@dividend+1,w
  4699  0E81  00A1               	movwf	?___lwmod+1
  4700  0E82  0822               	movf	___lwmod@dividend,w
  4701  0E83  00A0               	movwf	?___lwmod
  4702  0E84  0008               	return
  4703  0E85                     __end_of___lwmod:	
  4704  0E85                     __ptext2000:	
  4705 ;; =============== function _LcdDisplay_Err ends ============
  4706                           
  4707                           
  4708 ;; *************** function _LcdDisplay_CurTemp *****************
  4709 ;; Defined at:
  4710 ;;		line 340 in file "F:\work\WYP\NBIoT\Display.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  t2              1    8[BANK0 ] unsigned char 
  4715 ;;  t1              1    7[BANK0 ] unsigned char 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 1F/0
  4722 ;;		On exit  : 1F/F
  4723 ;;		Unchanged: FFFE0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4725 ;;      Params:         0       0       0       0       0       0       0       0
  4726 ;;      Locals:         0       2       0       0       0       0       0       0
  4727 ;;      Temps:          0       2       0       0       0       0       0       0
  4728 ;;      Totals:         0       4       0       0       0       0       0       0
  4729 ;;Total ram usage:        4 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    4
  4732 ;; This function calls:
  4733 ;;		___lbdiv
  4734 ;;		___lbmod
  4735 ;;		_LcdDisplayNum
  4736 ;; This function is called by:
  4737 ;;		_ReadTData
  4738 ;;		_CallProc
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741  0E85                     _LcdDisplay_CurTemp:	
  4742  0E85                     l32468:	
  4743                           ; Regs used in _LcdDisplay_CurTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4744                           
  4745                           
  4746                           ;Display.c: 341: unsigned char t1,t2;
  4747                           ;Display.c: 345: if(CurTemp.u16==0xf000)
  4748  0E85  0857               	movf	_CurTemp+1,w
  4749  0E86  3AF0               	xorlw	240
  4750  0E87  0456               	iorwf	_CurTemp,w
  4751  0E88  1D03               	skipz
  4752  0E89  2E98               	goto	l2333
  4753                           
  4754                           ;Display.c: 346: {
  4755                           ;Display.c: 347: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  4756  0E8A  3079               	movlw	121
  4757  0E8B  00E9               	movwf	_DpyNum
  4758                           
  4759                           ;Display.c: 348: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20;
  4760  0E8C  303F               	movlw	63
  4761  0E8D  00EA               	movwf	_DpyNum+1
  4762                           
  4763                           ;Display.c: 349: DpyNum[2]=0x02 | 0x04;
  4764  0E8E  3006               	movlw	6
  4765  0E8F  00EB               	movwf	_DpyNum+2
  4766  0E90                     l2326:	
  4767                           ;Display.c: 350: while(WA==0);
  4768                           
  4769  0E90  002F               	movlb	15	; select bank15
  4770  0E91  1E12               	btfss	18,4
  4771  0E92  2E90               	goto	l2326
  4772                           
  4773                           ;Display.c: 351: SEG21COM2=1;
  4774  0E93  16A8               	bsf	40,5
  4775  0E94                     l2329:	
  4776                           ;Display.c: 352: while(WA==0);
  4777                           
  4778  0E94  1E12               	btfss	18,4
  4779  0E95  2E94               	goto	l2329
  4780                           
  4781                           ;Display.c: 353: SEG5COM3=0;
  4782  0E96  12A9               	bcf	41,5
  4783                           
  4784                           ;Display.c: 354: }
  4785  0E97  2ED2               	goto	l32488
  4786  0E98                     l2333:	
  4787  0E98  002F               	movlb	15	; select bank15
  4788  0E99  1E12               	btfss	18,4
  4789  0E9A  2E98               	goto	l2333
  4790                           
  4791                           ;Display.c: 358: SEG5COM3=1;
  4792  0E9B  16A9               	bsf	41,5
  4793                           
  4794                           ;Display.c: 359: t1=CurTemp.u16>>4;
  4795  0E9C  0020               	movlb	0	; select bank0
  4796  0E9D  0857               	movf	_CurTemp+1,w
  4797  0E9E  00A6               	movwf	??_LcdDisplay_CurTemp+1
  4798  0E9F  0856               	movf	_CurTemp,w
  4799  0EA0  00A5               	movwf	??_LcdDisplay_CurTemp
  4800  0EA1  3004               	movlw	4
  4801  0EA2                     u7545:	
  4802  0EA2  36A6               	lsrf	??_LcdDisplay_CurTemp+1,f
  4803  0EA3  0CA5               	rrf	??_LcdDisplay_CurTemp,f
  4804  0EA4  0B89               	decfsz	9,f
  4805  0EA5  2EA2               	goto	u7545
  4806  0EA6  0825               	movf	??_LcdDisplay_CurTemp,w
  4807  0EA7  00A7               	movwf	LcdDisplay_CurTemp@t1
  4808                           
  4809                           ;Display.c: 360: t2=CurTemp.u16&0x0f;
  4810  0EA8  0856               	movf	_CurTemp,w
  4811  0EA9  00A8               	movwf	LcdDisplay_CurTemp@t2
  4812  0EAA  300F               	movlw	15
  4813  0EAB  05A8               	andwf	LcdDisplay_CurTemp@t2,f
  4814                           
  4815                           ;Display.c: 361: t2=DS18X20_ToDecicel[t2];
  4816  0EAC  0828               	movf	LcdDisplay_CurTemp@t2,w
  4817  0EAD  3E12               	addlw	low (_DS18X20_ToDecicel| (0+32768))
  4818  0EAE  0084               	movwf	4
  4819  0EAF  3090               	movlw	high (_DS18X20_ToDecicel| (0+32768))
  4820  0EB0  1803               	skipnc
  4821  0EB1  3E01               	addlw	1
  4822  0EB2  0085               	movwf	5
  4823  0EB3  0800               	movf	0,w	;code access
  4824  0EB4  00A8               	movwf	LcdDisplay_CurTemp@t2
  4825                           
  4826                           ;Display.c: 362: DpyNum[0]=SegCode[t1/10];
  4827  0EB5  300A               	movlw	10
  4828  0EB6  00A0               	movwf	?___lbdiv
  4829  0EB7  0827               	movf	LcdDisplay_CurTemp@t1,w
  4830  0EB8  275F  3188         	fcall	___lbdiv
  4831  0EBA  3E01               	addlw	low (_SegCode| (0+32768))
  4832  0EBB  0084               	movwf	4
  4833  0EBC  3090               	movlw	high (_SegCode| (0+32768))
  4834  0EBD  1803               	skipnc
  4835  0EBE  3E01               	addlw	1
  4836  0EBF  0085               	movwf	5
  4837  0EC0  0800               	movf	0,w	;code access
  4838  0EC1  00E9               	movwf	_DpyNum
  4839                           
  4840                           ;Display.c: 363: DpyNum[1]=SegCode[t1%10];
  4841  0EC2  300A               	movlw	10
  4842  0EC3  00A0               	movwf	?___lbmod
  4843  0EC4  0827               	movf	LcdDisplay_CurTemp@t1,w
  4844  0EC5  2792               	fcall	___lbmod
  4845  0EC6  3184  2430         	fcall	PL4	;call to abstracted procedure
  4846                           
  4847                           ;Display.c: 364: DpyNum[1] |= 0x80;
  4848  0EC8  17EA               	bsf	_DpyNum+1,7
  4849                           
  4850                           ;Display.c: 365: DpyNum[2]=SegCode[t2];
  4851  0EC9  0828               	movf	LcdDisplay_CurTemp@t2,w
  4852  0ECA  3E01               	addlw	low (_SegCode| (0+32768))
  4853  0ECB  0084               	movwf	4
  4854  0ECC  3090               	movlw	high (_SegCode| (0+32768))
  4855  0ECD  1803               	skipnc
  4856  0ECE  3E01               	addlw	1
  4857  0ECF  0085               	movwf	5
  4858  0ED0  0800               	movf	0,w	;code access
  4859  0ED1  00EB               	movwf	_DpyNum+2
  4860  0ED2                     l32488:	
  4861                           
  4862                           ;Display.c: 366: }
  4863                           ;Display.c: 367: LcdDisplayNum();
  4864  0ED2  3183  2B07         	ljmp	l32102
  4865  0ED4                     __end_of_LcdDisplay_CurTemp:	
  4866  0ED4                     __ptext2020:	
  4867 ;; =============== function _MakeTxTemperature ends ============
  4868                           
  4869                           
  4870 ;; *************** function _eeprom_write *****************
  4871 ;; Defined at:
  4872 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\eewrite.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  addr            1    wreg     unsigned char 
  4875 ;;  value           1    0[BANK0 ] unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  addr            1    1[BANK0 ] unsigned char 
  4878 ;; Return value:  Size  Location     Type
  4879 ;;		None               void
  4880 ;; Registers used:
  4881 ;;		wreg, status,2, status,0
  4882 ;; Tracked objects:
  4883 ;;		On entry : 1F/0
  4884 ;;		On exit  : 1F/3
  4885 ;;		Unchanged: FFFE0/0
  4886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4887 ;;      Params:         0       1       0       0       0       0       0       0
  4888 ;;      Locals:         0       1       0       0       0       0       0       0
  4889 ;;      Temps:          0       0       0       0       0       0       0       0
  4890 ;;      Totals:         0       2       0       0       0       0       0       0
  4891 ;;Total ram usage:        2 bytes
  4892 ;; Hardware stack levels used:    1
  4893 ;; Hardware stack levels required when called:    3
  4894 ;; This function calls:
  4895 ;;		Nothing
  4896 ;; This function is called by:
  4897 ;;		_main
  4898 ;;		_SaveRomData
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901  0ED4                     _eeprom_write:	
  4902                           
  4903                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  4904                           ;eeprom_write@addr stored from wreg
  4905  0ED4  00A1               	movwf	eeprom_write@addr
  4906  0ED5                     l27532:	
  4907  0ED5  0023               	movlb	3	; select bank3
  4908  0ED6  1895               	btfsc	21,1
  4909  0ED7  2ED5               	goto	l27532
  4910  0ED8  0020               	movlb	0	; select bank0
  4911  0ED9  0821               	movf	eeprom_write@addr,w
  4912  0EDA  0023               	movlb	3	; select bank3
  4913  0EDB  0091               	movwf	17	;volatile
  4914  0EDC  0020               	movlb	0	; select bank0
  4915  0EDD  0820               	movf	eeprom_write@value,w
  4916  0EDE  0023               	movlb	3	; select bank3
  4917  0EDF  0093               	movwf	19	;volatile
  4918  0EE0  303F               	movlw	63
  4919  0EE1  0595               	andwf	21,f	;volatile
  4920  0EE2  1003               	bcf	3,0
  4921  0EE3  1B8B               	btfsc	11,7
  4922  0EE4  1403               	bsf	3,0
  4923  0EE5  138B               	bcf	11,7
  4924  0EE6  1515               	bsf	21,2
  4925  0EE7  3055               	movlw	85
  4926  0EE8  0096               	movwf	22	;volatile
  4927  0EE9  30AA               	movlw	170
  4928  0EEA  0096               	movwf	22	;volatile
  4929  0EEB  1495               	bsf	21,1
  4930  0EEC  1115               	bcf	21,2
  4931  0EED  1803               	btfsc	3,0
  4932  0EEE  178B               	bsf	11,7
  4933  0EEF  0008               	return
  4934  0EF0                     __end_of_eeprom_write:	
  4935  0EF0                     __ptext2011:	
  4936 ;; =============== function _strncmp ends ============
  4937                           
  4938                           
  4939 ;; *************** function _strlen *****************
  4940 ;; Defined at:
  4941 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strlen.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  4944 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  4945 ;;		 -> ATCommand_OkString(15), 
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  4948 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  4949 ;;		 -> ATCommand_OkString(15), 
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  2    0[BANK0 ] unsigned int 
  4952 ;; Registers used:
  4953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4954 ;; Tracked objects:
  4955 ;;		On entry : 1F/0
  4956 ;;		On exit  : 1F/0
  4957 ;;		Unchanged: FFFE0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4959 ;;      Params:         0       2       0       0       0       0       0       0
  4960 ;;      Locals:         0       2       0       0       0       0       0       0
  4961 ;;      Temps:          0       2       0       0       0       0       0       0
  4962 ;;      Totals:         0       6       0       0       0       0       0       0
  4963 ;;Total ram usage:        6 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; Hardware stack levels required when called:    3
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_strstr
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972  0EF0                     _strlen:	
  4973                           
  4974                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  4975  0EF0  0821               	movf	strlen@s+1,w
  4976  0EF1  00A5               	movwf	strlen@cp+1
  4977  0EF2  0820               	movf	strlen@s,w
  4978  0EF3  00A4               	movwf	strlen@cp
  4979  0EF4                     l30662:	
  4980  0EF4  0825               	movf	strlen@cp+1,w
  4981  0EF5  00A3               	movwf	??_strlen+1
  4982  0EF6  0824               	movf	strlen@cp,w
  4983  0EF7  00A2               	movwf	??_strlen
  4984  0EF8  0AA4               	incf	strlen@cp,f
  4985  0EF9  1903               	skipnz
  4986  0EFA  0AA5               	incf	strlen@cp+1,f
  4987  0EFB  0084               	movwf	4
  4988  0EFC  0823               	movf	??_strlen+1,w
  4989  0EFD  0085               	movwf	5
  4990  0EFE  0800               	movf	0,w	;code access
  4991  0EFF  3800               	iorlw	0
  4992  0F00  1D03               	skipz
  4993  0F01  2EF4               	goto	l30662
  4994  0F02  0820               	movf	strlen@s,w
  4995  0F03  0224               	subwf	strlen@cp,w
  4996  0F04  00A2               	movwf	??_strlen
  4997  0F05  0821               	movf	strlen@s+1,w
  4998  0F06  3B25               	subwfb	strlen@cp+1,w
  4999  0F07  00A3               	movwf	??_strlen+1
  5000  0F08  0822               	movf	??_strlen,w
  5001  0F09  3EFF               	addlw	255
  5002  0F0A  00A0               	movwf	?_strlen
  5003  0F0B  30FF               	movlw	255
  5004  0F0C  3D23               	addwfc	??_strlen+1,w
  5005  0F0D  00A1               	movwf	?_strlen+1
  5006  0F0E  0008               	return
  5007  0F0F                     __end_of_strlen:	
  5008  0F0F                     __ptext2010:	
  5009 ;; =============== function _strchr ends ============
  5010                           
  5011                           
  5012 ;; *************** function _strncmp *****************
  5013 ;; Defined at:
  5014 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strncmp.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  5017 ;;		 -> ATCommand_RxList(100), RAM(128), 
  5018 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  5019 ;;		 -> STR_28(11), STR_26(6), STR_24(5), ATCommand_ErrString(15), 
  5020 ;;		 -> ATCommand_OkString(15), 
  5021 ;;  len             2   10[BANK0 ] unsigned int 
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  2    6[BANK0 ] int 
  5026 ;; Registers used:
  5027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5028 ;; Tracked objects:
  5029 ;;		On entry : 1F/0
  5030 ;;		On exit  : 1F/0
  5031 ;;		Unchanged: FFFE0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5033 ;;      Params:         0       6       0       0       0       0       0       0
  5034 ;;      Locals:         0       0       0       0       0       0       0       0
  5035 ;;      Temps:          0       1       0       0       0       0       0       0
  5036 ;;      Totals:         0       7       0       0       0       0       0       0
  5037 ;;Total ram usage:        7 bytes
  5038 ;; Hardware stack levels used:    1
  5039 ;; Hardware stack levels required when called:    3
  5040 ;; This function calls:
  5041 ;;		Nothing
  5042 ;; This function is called by:
  5043 ;;		_strstr
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046  0F0F                     _strncmp:	
  5047  0F0F                     l30680:	
  5048                           ; Regs used in _strncmp: [wreg-status,0+pclath]
  5049                           
  5050  0F0F  3001               	movlw	1
  5051  0F10  02AA               	subwf	strncmp@len,f
  5052  0F11  3000               	movlw	0
  5053  0F12  3BAB               	subwfb	strncmp@len+1,f
  5054  0F13  0A2A               	incf	strncmp@len,w
  5055  0F14  1903               	skipnz
  5056  0F15  0A2B               	incf	strncmp@len+1,w
  5057  0F16  1903               	btfsc	3,2
  5058  0F17  2F44               	goto	l30682
  5059  0F18  0826               	movf	strncmp@s1,w
  5060  0F19  0086               	movwf	6
  5061  0F1A  0827               	movf	strncmp@s1+1,w
  5062  0F1B  0087               	movwf	7
  5063  0F1C  0801               	movf	1,w
  5064  0F1D  3A00               	xorlw	0
  5065  0F1E  1903               	skipnz
  5066  0F1F  2F2E               	goto	l30674
  5067  0F20  0828               	movf	strncmp@s2,w
  5068  0F21  0084               	movwf	4
  5069  0F22  0829               	movf	strncmp@s2+1,w
  5070  0F23  0085               	movwf	5
  5071  0F24  0800               	movf	0,w	;code access
  5072  0F25  00AC               	movwf	??_strncmp
  5073  0F26  0826               	movf	strncmp@s1,w
  5074  0F27  0086               	movwf	6
  5075  0F28  0827               	movf	strncmp@s1+1,w
  5076  0F29  0087               	movwf	7
  5077  0F2A  0801               	movf	1,w
  5078  0F2B  062C               	xorwf	??_strncmp,w
  5079  0F2C  1903               	skipnz
  5080  0F2D  2F3D               	goto	l30678
  5081  0F2E                     l30674:	
  5082  0F2E  0826               	movf	strncmp@s1,w
  5083  0F2F  0086               	movwf	6
  5084  0F30  0827               	movf	strncmp@s1+1,w
  5085  0F31  0087               	movwf	7
  5086  0F32  0828               	movf	strncmp@s2,w
  5087  0F33  0084               	movwf	4
  5088  0F34  0829               	movf	strncmp@s2+1,w
  5089  0F35  0085               	movwf	5
  5090  0F36  0800               	movf	0,w	;code access
  5091  0F37  0201               	subwf	1,w
  5092  0F38  00A6               	movwf	?_strncmp
  5093  0F39  01A7               	clrf	?_strncmp+1
  5094  0F3A  1C03               	skipc
  5095  0F3B  03A7               	decf	?_strncmp+1,f
  5096  0F3C  0008               	return
  5097  0F3D                     l30678:	
  5098  0F3D  0AA6               	incf	strncmp@s1,f
  5099  0F3E  1903               	skipnz
  5100  0F3F  0AA7               	incf	strncmp@s1+1,f
  5101  0F40  0AA8               	incf	strncmp@s2,f
  5102  0F41  1903               	skipnz
  5103  0F42  0AA9               	incf	strncmp@s2+1,f
  5104  0F43  2F0F               	goto	l30680
  5105  0F44                     l30682:	
  5106  0F44  01A6               	clrf	?_strncmp
  5107  0F45  01A7               	clrf	?_strncmp+1
  5108  0F46  0008               	return
  5109  0F47                     __end_of_strncmp:	
  5110  0F47                     __ptext2009:	
  5111 ;; =============== function ___bmul ends ============
  5112                           
  5113                           
  5114 ;; *************** function _strchr *****************
  5115 ;; Defined at:
  5116 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strchr.c"
  5117 ;; Parameters:    Size  Location     Type
  5118 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  5119 ;;		 -> ATCommand_RxList(100), RAM(128), 
  5120 ;;  chr             2    2[BANK0 ] int 
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  2    wreg      PTR unsigned char 
  5125 ;; Registers used:
  5126 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5127 ;; Tracked objects:
  5128 ;;		On entry : 1F/0
  5129 ;;		On exit  : 1F/0
  5130 ;;		Unchanged: FFFE0/0
  5131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5132 ;;      Params:         0       4       0       0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0
  5134 ;;      Temps:          0       2       0       0       0       0       0       0
  5135 ;;      Totals:         0       6       0       0       0       0       0       0
  5136 ;;Total ram usage:        6 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    3
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_strstr
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145  0F47                     _strchr:	
  5146  0F47                     l27925:	
  5147                           ; Regs used in _strchr: [wreg+fsr1l-status,0]
  5148                           
  5149  0F47  0820               	movf	strchr@ptr,w
  5150  0F48  0086               	movwf	6
  5151  0F49  0821               	movf	strchr@ptr+1,w
  5152  0F4A  0087               	movwf	7
  5153  0F4B  0801               	movf	1,w
  5154  0F4C  0622               	xorwf	strchr@chr,w
  5155  0F4D  1903               	btfsc	3,2
  5156  0F4E  0008               	return
  5157  0F4F  0821               	movf	strchr@ptr+1,w
  5158  0F50  00A5               	movwf	??_strchr+1
  5159  0F51  0820               	movf	strchr@ptr,w
  5160  0F52  00A4               	movwf	??_strchr
  5161  0F53  0AA0               	incf	strchr@ptr,f
  5162  0F54  1903               	skipnz
  5163  0F55  0AA1               	incf	strchr@ptr+1,f
  5164  0F56  0086               	movwf	6
  5165  0F57  0825               	movf	??_strchr+1,w
  5166  0F58  0087               	movwf	7
  5167  0F59  0881               	movf	1,f
  5168  0F5A  1D03               	skipz
  5169  0F5B  2F47               	goto	l27925
  5170  0F5C  01A0               	clrf	?_strchr
  5171  0F5D  01A1               	clrf	?_strchr+1
  5172  0F5E  0008               	return
  5173  0F5F                     __end_of_strchr:	
  5174  0F5F                     __ptext2004:	
  5175 ;; =============== function ___lbmod ends ============
  5176                           
  5177                           
  5178 ;; *************** function ___lbdiv *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbdiv.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  dividend        1    wreg     unsigned char 
  5183 ;;  divisor         1    0[BANK0 ] unsigned char 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  dividend        1    1[BANK0 ] unsigned char 
  5186 ;;  quotient        1    3[BANK0 ] unsigned char 
  5187 ;;  counter         1    2[BANK0 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, status,2, status,0
  5192 ;; Tracked objects:
  5193 ;;		On entry : 1F/0
  5194 ;;		On exit  : 1F/0
  5195 ;;		Unchanged: FFFE0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5197 ;;      Params:         0       1       0       0       0       0       0       0
  5198 ;;      Locals:         0       3       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       4       0       0       0       0       0       0
  5201 ;;Total ram usage:        4 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    3
  5204 ;; This function calls:
  5205 ;;		Nothing
  5206 ;; This function is called by:
  5207 ;;		_LcdDisplay_CSQ
  5208 ;;		_LcdDisplay_CurTemp
  5209 ;;		_LcdDisplay_Err
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212  0F5F                     ___lbdiv:	
  5213                           
  5214                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5215                           ;___lbdiv@dividend stored from wreg
  5216  0F5F  00A1               	movwf	___lbdiv@dividend
  5217  0F60  01A3               	clrf	___lbdiv@quotient
  5218  0F61  0820               	movf	___lbdiv@divisor,w
  5219  0F62  1903               	btfsc	3,2
  5220  0F63  2F75               	goto	l32438
  5221  0F64  01A2               	clrf	___lbdiv@counter
  5222  0F65                     l32424:	
  5223  0F65  0AA2               	incf	___lbdiv@counter,f
  5224  0F66  1BA0               	btfsc	___lbdiv@divisor,7
  5225  0F67  2F6A               	goto	l27623
  5226  0F68  35A0               	lslf	___lbdiv@divisor,f
  5227  0F69  2F65               	goto	l32424
  5228  0F6A                     l27623:	
  5229  0F6A  35A3               	lslf	___lbdiv@quotient,f
  5230  0F6B  0820               	movf	___lbdiv@divisor,w
  5231  0F6C  0221               	subwf	___lbdiv@dividend,w
  5232  0F6D  1C03               	skipc
  5233  0F6E  2F72               	goto	l32434
  5234  0F6F  0820               	movf	___lbdiv@divisor,w
  5235  0F70  02A1               	subwf	___lbdiv@dividend,f
  5236  0F71  1423               	bsf	___lbdiv@quotient,0
  5237  0F72                     l32434:	
  5238  0F72  36A0               	lsrf	___lbdiv@divisor,f
  5239  0F73  0BA2               	decfsz	___lbdiv@counter,f
  5240  0F74  2F6A               	goto	l27623
  5241  0F75                     l32438:	
  5242  0F75  0823               	movf	___lbdiv@quotient,w
  5243  0F76  0008               	return
  5244  0F77                     __end_of___lbdiv:	
  5245  0F77                     __ptext2001:	
  5246 ;; =============== function _LcdDisplay_CurTemp ends ============
  5247                           
  5248                           
  5249 ;; *************** function _LcdDisplay_CSQ *****************
  5250 ;; Defined at:
  5251 ;;		line 327 in file "F:\work\WYP\NBIoT\Display.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  t2              1    6[BANK0 ] unsigned char 
  5256 ;;  t1              1    5[BANK0 ] unsigned char 
  5257 ;; Return value:  Size  Location     Type
  5258 ;;		None               void
  5259 ;; Registers used:
  5260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5261 ;; Tracked objects:
  5262 ;;		On entry : 1F/0
  5263 ;;		On exit  : 1F/F
  5264 ;;		Unchanged: FFFE0/0
  5265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5266 ;;      Params:         0       0       0       0       0       0       0       0
  5267 ;;      Locals:         0       2       0       0       0       0       0       0
  5268 ;;      Temps:          0       0       0       0       0       0       0       0
  5269 ;;      Totals:         0       2       0       0       0       0       0       0
  5270 ;;Total ram usage:        2 bytes
  5271 ;; Hardware stack levels used:    1
  5272 ;; Hardware stack levels required when called:    4
  5273 ;; This function calls:
  5274 ;;		___lbdiv
  5275 ;;		___lbmod
  5276 ;;		_LcdDisplayNum
  5277 ;; This function is called by:
  5278 ;;		_InitGPRS
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281  0F77                     _LcdDisplay_CSQ:	
  5282                           
  5283                           ;Display.c: 328: unsigned char t1,t2;
  5284                           ;Display.c: 332: t1=CSQ/10;
  5285                           
  5286                           ; Regs used in _LcdDisplay_CSQ: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5287  0F77  300A               	movlw	10
  5288  0F78  00A0               	movwf	?___lbdiv
  5289  0F79  0861               	movf	_CSQ,w
  5290  0F7A  275F  3188         	fcall	___lbdiv
  5291  0F7C  00A5               	movwf	LcdDisplay_CSQ@t1
  5292                           
  5293                           ;Display.c: 333: t2=CSQ%10;
  5294  0F7D  300A               	movlw	10
  5295  0F7E  00A0               	movwf	?___lbmod
  5296  0F7F  0861               	movf	_CSQ,w
  5297  0F80  2792               	fcall	___lbmod
  5298  0F81  00A6               	movwf	LcdDisplay_CSQ@t2
  5299                           
  5300                           ;Display.c: 334: DpyNum[0]=0x01 | 0x02 | 0x10 | 0x20 | 0x40;
  5301  0F82  3073               	movlw	115
  5302  0F83  00E9               	movwf	_DpyNum
  5303                           
  5304                           ;Display.c: 335: DpyNum[1]=SegCode[t1];
  5305  0F84  0825               	movf	LcdDisplay_CSQ@t1,w
  5306  0F85  3184  2430         	fcall	PL4	;call to abstracted procedure
  5307                           
  5308                           ;Display.c: 336: DpyNum[2]=SegCode[t2];
  5309  0F87  0826               	movf	LcdDisplay_CSQ@t2,w
  5310  0F88  3E01               	addlw	low (_SegCode| (0+32768))
  5311  0F89  0084               	movwf	4
  5312  0F8A  3090               	movlw	high (_SegCode| (0+32768))
  5313  0F8B  1803               	skipnc
  5314  0F8C  3E01               	addlw	1
  5315  0F8D  0085               	movwf	5
  5316  0F8E  0800               	movf	0,w	;code access
  5317  0F8F  00EB               	movwf	_DpyNum+2
  5318                           
  5319                           ;Display.c: 337: LcdDisplayNum();
  5320  0F90  3183  2B07         	ljmp	l32102
  5321  0F92                     __end_of_LcdDisplay_CSQ:	
  5322  0F92                     __ptext2003:	
  5323 ;; =============== function _LcdDisplayAll ends ============
  5324                           
  5325                           
  5326 ;; *************** function ___lbmod *****************
  5327 ;; Defined at:
  5328 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbmod.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  dividend        1    wreg     unsigned char 
  5331 ;;  divisor         1    0[BANK0 ] unsigned char 
  5332 ;; Auto vars:     Size  Location     Type
  5333 ;;  dividend        1    2[BANK0 ] unsigned char 
  5334 ;;  rem             1    4[BANK0 ] unsigned char 
  5335 ;;  counter         1    3[BANK0 ] unsigned char 
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      unsigned char 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0
  5340 ;; Tracked objects:
  5341 ;;		On entry : 1F/0
  5342 ;;		On exit  : 1F/0
  5343 ;;		Unchanged: FFFE0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5345 ;;      Params:         0       1       0       0       0       0       0       0
  5346 ;;      Locals:         0       3       0       0       0       0       0       0
  5347 ;;      Temps:          0       1       0       0       0       0       0       0
  5348 ;;      Totals:         0       5       0       0       0       0       0       0
  5349 ;;Total ram usage:        5 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    3
  5352 ;; This function calls:
  5353 ;;		Nothing
  5354 ;; This function is called by:
  5355 ;;		_LcdDisplay_CSQ
  5356 ;;		_LcdDisplay_CurTemp
  5357 ;;		_LcdDisplay_Err
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360  0F92                     ___lbmod:	
  5361                           
  5362                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5363                           ;___lbmod@dividend stored from wreg
  5364  0F92  00A2               	movwf	___lbmod@dividend
  5365  0F93  3008               	movlw	8
  5366  0F94  00A3               	movwf	___lbmod@counter
  5367  0F95  01A4               	clrf	___lbmod@rem
  5368  0F96                     l30802:	
  5369  0F96  0822               	movf	___lbmod@dividend,w
  5370  0F97  00A1               	movwf	??___lbmod
  5371  0F98  3007               	movlw	7
  5372  0F99                     u4335:	
  5373  0F99  36A1               	lsrf	??___lbmod,f
  5374  0F9A  0B89               	decfsz	9,f
  5375  0F9B  2F99               	goto	u4335
  5376  0F9C  3524               	lslf	___lbmod@rem,w
  5377  0F9D  0421               	iorwf	??___lbmod,w
  5378  0F9E  00A4               	movwf	___lbmod@rem
  5379  0F9F  35A2               	lslf	___lbmod@dividend,f
  5380  0FA0  0820               	movf	___lbmod@divisor,w
  5381  0FA1  0224               	subwf	___lbmod@rem,w
  5382  0FA2  1C03               	skipc
  5383  0FA3  2FA6               	goto	l30810
  5384  0FA4  0820               	movf	___lbmod@divisor,w
  5385  0FA5  02A4               	subwf	___lbmod@rem,f
  5386  0FA6                     l30810:	
  5387  0FA6  0BA3               	decfsz	___lbmod@counter,f
  5388  0FA7  2F96               	goto	l30802
  5389  0FA8  0824               	movf	___lbmod@rem,w
  5390  0FA9  0008               	return
  5391  0FAA                     __end_of___lbmod:	
  5392  0FAA                     __ptext1978:	
  5393 ;; =============== function _TCN75_ReadReg ends ============
  5394                           
  5395                           
  5396 ;; *************** function _TCN75_SetConfig *****************
  5397 ;; Defined at:
  5398 ;;		line 47 in file "F:\work\WYP\NBIoT\TCN75.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;		None
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  bRight          1    4[BANK0 ] unsigned char 
  5403 ;;  ErrTimes        1    3[BANK0 ] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      unsigned char 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0, pclath, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 1F/0
  5410 ;;		On exit  : 1F/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5413 ;;      Params:         0       0       0       0       0       0       0       0
  5414 ;;      Locals:         0       2       0       0       0       0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0
  5416 ;;      Totals:         0       2       0       0       0       0       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used:    1
  5419 ;; Hardware stack levels required when called:    4
  5420 ;; This function calls:
  5421 ;;		_SimI2C_Start
  5422 ;;		_SimI2C_SendByte
  5423 ;;		_SimI2C_RecAck
  5424 ;;		_SimI2C_Stop
  5425 ;; This function is called by:
  5426 ;;		_InitSystem
  5427 ;;		_ReadTData
  5428 ;; This function uses a non-reentrant model
  5429 ;;
  5430  0FAA                     _TCN75_SetConfig:	
  5431                           
  5432                           ;TCN75.c: 48: unsigned char ErrTimes=2;
  5433                           
  5434                           ; Regs used in _TCN75_SetConfig: [wreg+status,2+status,0+pclath+cstack]
  5435  0FAA  3002               	movlw	2
  5436  0FAB  00A3               	movwf	TCN75_SetConfig@ErrTimes
  5437                           
  5438                           ;TCN75.c: 49: unsigned char bRight=0;
  5439  0FAC  01A4               	clrf	TCN75_SetConfig@bRight
  5440  0FAD                     l32726:	
  5441                           ;TCN75.c: 63: break;
  5442                           
  5443                           ;TCN75.c: 50: while(ErrTimes--)
  5444                           
  5445  0FAD  03A3               	decf	TCN75_SetConfig@ErrTimes,f
  5446  0FAE  0823               	movf	TCN75_SetConfig@ErrTimes,w
  5447  0FAF  3AFF               	xorlw	255
  5448  0FB0  1903               	btfsc	3,2
  5449  0FB1  2FD3               	goto	l32728
  5450                           
  5451                           ;TCN75.c: 51: {
  5452                           ;TCN75.c: 52: SimI2C_Start();
  5453  0FB2  27D8               	fcall	_SimI2C_Start
  5454                           
  5455                           ;TCN75.c: 53: SimI2C_SendByte(0b10010000&0xfe);
  5456  0FB3  3090               	movlw	144
  5457  0FB4  3184  2471  3188   	fcall	_SimI2C_SendByte
  5458                           
  5459                           ;TCN75.c: 54: if(SimI2C_RecAck())
  5460  0FB7  3184  2492  3188   	fcall	_SimI2C_RecAck
  5461  0FBA  3A00               	xorlw	0
  5462  0FBB  1D03               	btfss	3,2
  5463  0FBC  2FAD               	goto	l32726
  5464                           
  5465                           ;TCN75.c: 56: SimI2C_SendByte(0x01);
  5466  0FBD  3001               	movlw	1
  5467  0FBE  3184  2471  3188   	fcall	_SimI2C_SendByte
  5468                           
  5469                           ;TCN75.c: 57: if(SimI2C_RecAck())
  5470  0FC1  3184  2492  3188   	fcall	_SimI2C_RecAck
  5471  0FC4  3A00               	xorlw	0
  5472  0FC5  1D03               	btfss	3,2
  5473  0FC6  2FAD               	goto	l32726
  5474                           
  5475                           ;TCN75.c: 59: SimI2C_SendByte(TCN75_Config.AllFlag);
  5476  0FC7  0863               	movf	_TCN75_Config,w
  5477  0FC8  3184  2471  3188   	fcall	_SimI2C_SendByte
  5478                           
  5479                           ;TCN75.c: 60: if(SimI2C_RecAck())
  5480  0FCB  3184  2492  3188   	fcall	_SimI2C_RecAck
  5481  0FCE  3A00               	xorlw	0
  5482  0FCF  1D03               	btfss	3,2
  5483  0FD0  2FAD               	goto	l32726
  5484                           
  5485                           ;TCN75.c: 62: bRight=1;
  5486  0FD1  01A4               	clrf	TCN75_SetConfig@bRight
  5487  0FD2  0AA4               	incf	TCN75_SetConfig@bRight,f
  5488  0FD3                     l32728:	
  5489                           
  5490                           ;TCN75.c: 64: }
  5491                           ;TCN75.c: 65: SimI2C_Stop();
  5492  0FD3  3184  24D9         	fcall	_SimI2C_Stop
  5493                           
  5494                           ;TCN75.c: 66: return bRight;
  5495  0FD5  0020               	movlb	0	; select bank0
  5496  0FD6  0824               	movf	TCN75_SetConfig@bRight,w
  5497  0FD7  0008               	return
  5498  0FD8                     __end_of_TCN75_SetConfig:	
  5499  0FD8                     __ptext1986:	
  5500 ;; =============== function _SimI2C_SendByte ends ============
  5501                           
  5502                           
  5503 ;; *************** function _SimI2C_Start *****************
  5504 ;; Defined at:
  5505 ;;		line 19 in file "F:\work\WYP\NBIoT\SimI2C.c"
  5506 ;; Parameters:    Size  Location     Type
  5507 ;;		None
  5508 ;; Auto vars:     Size  Location     Type
  5509 ;;		None
  5510 ;; Return value:  Size  Location     Type
  5511 ;;		None               void
  5512 ;; Registers used:
  5513 ;;		None
  5514 ;; Tracked objects:
  5515 ;;		On entry : 1F/0
  5516 ;;		On exit  : 1F/2
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5519 ;;      Params:         0       0       0       0       0       0       0       0
  5520 ;;      Locals:         0       0       0       0       0       0       0       0
  5521 ;;      Temps:          0       0       0       0       0       0       0       0
  5522 ;;      Totals:         0       0       0       0       0       0       0       0
  5523 ;;Total ram usage:        0 bytes
  5524 ;; Hardware stack levels used:    1
  5525 ;; Hardware stack levels required when called:    3
  5526 ;; This function calls:
  5527 ;;		Nothing
  5528 ;; This function is called by:
  5529 ;;		_TCN75_ReadReg
  5530 ;;		_TCN75_SetConfig
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533  0FD8                     _SimI2C_Start:	
  5534                           
  5535                           ;SimI2C.c: 20: LATD6=1;
  5536                           
  5537                           ; Regs used in _SimI2C_Start: []
  5538  0FD8  0022               	movlb	2	; select bank2
  5539  0FD9  170F               	bsf	15,6
  5540                           
  5541                           ;SimI2C.c: 21: LATD7=1;
  5542  0FDA  178F               	bsf	15,7
  5543                           
  5544                           ;SimI2C.c: 22: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  5545  0FDB  0064               	clrwdt
  5546                           
  5547                           ;SimI2C.c: 23: LATD6=0;
  5548  0FDC  0022               	movlb	2	; select bank2
  5549  0FDD  130F               	bcf	15,6
  5550                           
  5551                           ;SimI2C.c: 24: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  5552  0FDE  0064               	clrwdt
  5553                           
  5554                           ;SimI2C.c: 25: LATD7=0;
  5555  0FDF  0022               	movlb	2	; select bank2
  5556  0FE0  138F               	bcf	15,7
  5557  0FE1  0008               	return
  5558  0FE2                     __end_of_SimI2C_Start:	
  5559  0FE2                     __ptext1971:	
  5560 ;; =============== function _DS18X20_ReadMeas ends ============
  5561                           
  5562                           
  5563 ;; *************** function _DS18X20_StartMeas *****************
  5564 ;; Defined at:
  5565 ;;		line 133 in file "F:\work\WYP\NBIoT\DS18x20.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1    wreg      unsigned char 
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0, pclath, cstack
  5574 ;; Tracked objects:
  5575 ;;		On entry : 10/0
  5576 ;;		On exit  : 1F/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5579 ;;      Params:         0       0       0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    5
  5586 ;; This function calls:
  5587 ;;		_OneWire_Reset
  5588 ;;		_OneWire_Command
  5589 ;; This function is called by:
  5590 ;;		_ReadTData
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593  0FE2                     _DS18X20_StartMeas:	
  5594                           
  5595                           ;DS18x20.c: 134: if(OneWire_Reset())
  5596                           
  5597                           ; Regs used in _DS18X20_StartMeas: [wreg+status,2+status,0+pclath+cstack]
  5598  0FE2  3181  21AB  3188   	fcall	_OneWire_Reset
  5599  0FE5  3A00               	xorlw	0
  5600  0FE6  1D03               	btfss	3,2
  5601                           
  5602                           ;DS18x20.c: 135: return 0x01;
  5603  0FE7  3401               	retlw	1
  5604                           
  5605                           ;DS18x20.c: 136: return OneWire_Command( 0x44);
  5606  0FE8  3044               	movlw	68
  5607  0FE9  3180  28B3         	ljmp	_OneWire_Command
  5608  0FEB                     __end_of_DS18X20_StartMeas:	
  5609  0FEB                     PL5:	
  5610  0FEB  0020               	movlb	0	; select bank0
  5611  0FEC  0AC3               	incf	InteractServer@j,f
  5612  0FED  300C               	movlw	12
  5613  0FEE  0243               	subwf	InteractServer@j,w
  5614  0FEF  0008               	return
  5615  0FF0                     __ptext1976:	
  5616 ;; =============== function _ATCommand_SendCmd ends ============
  5617                           
  5618                           
  5619 ;; *************** function _PowerON *****************
  5620 ;; Defined at:
  5621 ;;		line 7 in file "F:\work\WYP\NBIoT\Function.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;		None
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;		None               void
  5628 ;; Registers used:
  5629 ;;		wreg, status,2, status,0, pclath, cstack
  5630 ;; Tracked objects:
  5631 ;;		On entry : 1F/0
  5632 ;;		On exit  : 1F/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5635 ;;      Params:         0       0       0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    4
  5642 ;; This function calls:
  5643 ;;		___delay_20ms
  5644 ;; This function is called by:
  5645 ;;		_InitGPRS
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648  0FF0                     _PowerON:	
  5649                           
  5650                           ;Function.c: 8: LATD5=1;
  5651                           
  5652                           ; Regs used in _PowerON: [wreg+status,2+status,0+pclath+cstack]
  5653  0FF0  0022               	movlb	2	; select bank2
  5654  0FF1  168F               	bsf	15,5
  5655                           
  5656                           ;Function.c: 9: __delay_20ms(5);
  5657  0FF2  3005               	movlw	5
  5658  0FF3  0020               	movlb	0	; select bank0
  5659  0FF4  00A0               	movwf	?___delay_20ms
  5660  0FF5  01A1               	clrf	?___delay_20ms+1
  5661  0FF6  22C4  3188         	fcall	___delay_20ms
  5662                           
  5663                           ;Function.c: 10: LATD5=0;
  5664  0FF8  0022               	movlb	2	; select bank2
  5665  0FF9  128F               	bcf	15,5
  5666                           
  5667                           ;Function.c: 11: __delay_20ms(500);
  5668  0FFA  30F4               	movlw	244
  5669  0FFB  0020               	movlb	0	; select bank0
  5670  0FFC  00A0               	movwf	?___delay_20ms
  5671  0FFD  3001               	movlw	1
  5672  0FFE  00A1               	movwf	?___delay_20ms+1
  5673  0FFF  2AC4               	ljmp	l12896
  5674  1000                     __end_of_PowerON:	
  5675                           
  5676                           	psect	bssCOMMON
  5677  0077                     __pbssCOMMON:	
  5678  0077                     _RunTick:	
  5679  0077                     	ds	2
  5680  0079                     _ATCommand_Clear:	
  5681  0079                     	ds	1
  5682  007A                     _ATCommand_Flags:	
  5683  007A                     	ds	1
  5684  007B                     _ATCommand_RxCount:	
  5685  007B                     	ds	1
  5686                           
  5687                           	psect	bssBANK0
  5688  004E                     __pbssBANK0:	
  5689  004E                     _TxTemperature:	
  5690  004E                     	ds	4
  5691  0052                     _ATCommand_WaitACKTick:	
  5692  0052                     	ds	2
  5693  0054                     _ATCommand_WaitACKTimes:	
  5694  0054                     	ds	2
  5695  0056                     _CurTemp:	
  5696  0056                     	ds	2
  5697  0058                     _MeasurementTick:	
  5698  0058                     	ds	2
  5699  005A                     _NeedMeasurementTick:	
  5700  005A                     	ds	2
  5701  005C                     _SystemTick:	
  5702  005C                     	ds	2
  5703  005E                     _TCN75_RegReadResualt:	
  5704  005E                     	ds	2
  5705  0060                     _ATCommand_RetryTimes:	
  5706  0060                     	ds	1
  5707  0061                     _CSQ:	
  5708  0061                     	ds	1
  5709  0062                     _ErrState:	
  5710  0062                     	ds	1
  5711  0063                     _TCN75_Config:	
  5712  0063                     	ds	1
  5713  0064                     _TListIndex:	
  5714  0064                     	ds	1
  5715  0065                     _gFlags:	
  5716  0065                     	ds	1
  5717  0066                     _RomParams:	
  5718  0066                     	ds	2
  5719  0068                     _TxErrDataIndex:	
  5720  0068                     	ds	1
  5721                           
  5722                           	psect	dataBANK0
  5723  0069                     __pdataBANK0:	
  5724  0069                     _DpyNum:	
  5725  0069                     	ds	6
  5726                           
  5727                           	psect	bssBANK1
  5728  00A0                     __pbssBANK1:	
  5729  00A0                     _ICCID:	
  5730  00A0                     	ds	21
  5731  00B5                     _ATCommand_ErrString:	
  5732  00B5                     	ds	15
  5733  00C4                     _ATCommand_OkString:	
  5734  00C4                     	ds	15
  5735  00D3                     _DS18X20_Scratchpad:	
  5736  00D3                     	ds	9
  5737                           
  5738                           	psect	bssBANK2
  5739  0120                     __pbssBANK2:	
  5740  0120                     _TList:	
  5741  0120                     	ds	24
  5742                           
  5743                           	psect	clrtext
  5744  0612                     clear_ram:	
  5745                           ;	Called with FSR0 containing the base address, and
  5746                           ;	btemp/btemp+1 has the size to clear
  5747                           
  5748  0612  0064               	clrwdt	;clear the watchdog before getting into this loop
  5749  0613                     clrloop:	
  5750  0613  0180               	clrf	0	;clear RAM location pointed to by FSR
  5751  0614  3101               	addfsr 0,1
  5752  0615  3001               	movlw	1
  5753  0616  02FE               	subwf	126,f
  5754  0617  3000               	movlw	0
  5755  0618  3BFF               	subwfb	127,f
  5756  0619  087F               	movf	127,w
  5757  061A  047E               	iorwf	126,w
  5758  061B  1903               	btfsc	3,2
  5759  061C  3400               	retlw	0	;all done for this memory range, return
  5760  061D  2E13               	goto	clrloop	;have we reached the end yet?
  5761                           
  5762                           	psect	cstackCOMMON
  5763  0070                     __pcstackCOMMON:	
  5764  0070                     ?_SaveRomData:	
  5765  0070                     ?_ATCommand_Init:	
  5766                           ; 0 bytes @ 0x0
  5767                           
  5768  0070                     ?_TCN75_Init:	
  5769                           ; 0 bytes @ 0x0
  5770                           
  5771  0070                     ?_ReadTData:	
  5772                           ; 0 bytes @ 0x0
  5773                           
  5774  0070                     ?_TestProc:	
  5775                           ; 0 bytes @ 0x0
  5776                           
  5777  0070                     ?_CallProc:	
  5778                           ; 0 bytes @ 0x0
  5779                           
  5780  0070                     ?_ATCommand_ProcRx:	
  5781                           ; 0 bytes @ 0x0
  5782                           
  5783  0070                     ?_CallSend:	
  5784                           ; 0 bytes @ 0x0
  5785                           
  5786  0070                     ?_InitGPRS:	
  5787                           ; 0 bytes @ 0x0
  5788                           
  5789  0070                     ?_Uart1_PutHex:	
  5790                           ; 0 bytes @ 0x0
  5791                           
  5792  0070                     ?_Uart1_PutChar:	
  5793                           ; 0 bytes @ 0x0
  5794                           
  5795  0070                     ?_isgraph:	
  5796                           ; 0 bytes @ 0x0
  5797                           
  5798  0070                     ??_isgraph:	
  5799                           ; 1 bit 
  5800                           
  5801  0070                     ?_OneWire_WriteByte:	
  5802                           ; 0 bytes @ 0x0
  5803                           
  5804  0070                     ?_SimI2C_Init:	
  5805                           ; 0 bytes @ 0x0
  5806                           
  5807  0070                     ?_SimI2C_Start:	
  5808                           ; 0 bytes @ 0x0
  5809                           
  5810  0070                     ?_SimI2C_SendByte:	
  5811                           ; 0 bytes @ 0x0
  5812                           
  5813  0070                     ?_SimI2C_Ack:	
  5814                           ; 0 bytes @ 0x0
  5815                           
  5816  0070                     ?_SimI2C_NoAck:	
  5817                           ; 0 bytes @ 0x0
  5818                           
  5819  0070                     ?_SimI2C_Stop:	
  5820                           ; 0 bytes @ 0x0
  5821                           
  5822  0070                     ?_isdigit:	
  5823                           ; 0 bytes @ 0x0
  5824                           
  5825  0070                     ?_LcdDisplayNum:	
  5826                           ; 1 bit 
  5827                           
  5828  0070                     ?_LcdDisplayAll:	
  5829                           ; 0 bytes @ 0x0
  5830                           
  5831  0070                     ?_LcdDisplay_CSQ:	
  5832                           ; 0 bytes @ 0x0
  5833                           
  5834  0070                     ?_LcdDisplay_CurTemp:	
  5835                           ; 0 bytes @ 0x0
  5836                           
  5837  0070                     ?_LcdDisplay_Err:	
  5838                           ; 0 bytes @ 0x0
  5839                           
  5840  0070                     ?_DisplayInit:	
  5841                           ; 0 bytes @ 0x0
  5842                           
  5843  0070                     ?_InitMCU:	
  5844                           ; 0 bytes @ 0x0
  5845                           
  5846  0070                     ?_InitVariable:	
  5847                           ; 0 bytes @ 0x0
  5848                           
  5849  0070                     ?_InitSystem:	
  5850                           ; 0 bytes @ 0x0
  5851                           
  5852  0070                     ?_main:	
  5853                           ; 0 bytes @ 0x0
  5854                           
  5855  0070                     ?_highISR:	
  5856                           ; 0 bytes @ 0x0
  5857                           
  5858  0070                     ?_PowerON:	
  5859                           ; 0 bytes @ 0x0
  5860                           
  5861  0070                     ?_GetRomData:	
  5862                           ; 0 bytes @ 0x0
  5863                           
  5864  0070                     ?_OneWire_Reset:	
  5865                           ; 1 bytes @ 0x0
  5866                           
  5867  0070                     ?_TCN75_SetConfig:	
  5868                           ; 1 bytes @ 0x0
  5869                           
  5870  0070                     ?_DS18X20_StartMeas:	
  5871                           ; 1 bytes @ 0x0
  5872                           
  5873  0070                     ?_DS18X20_ReadMeas:	
  5874                           ; 1 bytes @ 0x0
  5875                           
  5876  0070                     ?_TCN75_ReadReg:	
  5877                           ; 1 bytes @ 0x0
  5878                           
  5879  0070                     ?_InteractServer:	
  5880                           ; 1 bytes @ 0x0
  5881                           
  5882  0070                     ?_eeprom_read:	
  5883                           ; 1 bytes @ 0x0
  5884                           
  5885  0070                     ?_ATCommand_WaitData:	
  5886                           ; 1 bytes @ 0x0
  5887                           
  5888  0070                     ?_OneWire_Command:	
  5889                           ; 1 bytes @ 0x0
  5890                           
  5891  0070                     ?_OneWire_ReadByte:	
  5892                           ; 1 bytes @ 0x0
  5893                           
  5894  0070                     ?_SimI2C_RecAck:	
  5895                           ; 1 bytes @ 0x0
  5896                           
  5897  0070                     ?_SimI2C_ReadByte:	
  5898                           ; 1 bytes @ 0x0
  5899                           
  5900  0070                     _isgraph$31766:	
  5901                           ; 1 bytes @ 0x0
  5902                           
  5903                           
  5904                           ; 1 bytes @ 0x0
  5905  0070                     	ds	1
  5906  0071                     isgraph@c:	
  5907                           
  5908                           ; 1 bytes @ 0x1
  5909  0071                     	ds	1
  5910  0072                     ??_ATCommand_ProcRx:	
  5911                           
  5912                           ; 0 bytes @ 0x2
  5913  0072                     	ds	3
  5914  0075                     ATCommand_ProcRx@rx:	
  5915                           
  5916                           ; 1 bytes @ 0x5
  5917  0075                     	ds	1
  5918  0076                     ??_highISR:	
  5919  0076                     highISR@rx:	
  5920                           ; 0 bytes @ 0x6
  5921                           
  5922                           
  5923                           ; 1 bytes @ 0x6
  5924  0076                     	ds	1
  5925                           
  5926                           	psect	cstackBANK0
  5927  0020                     __pcstackBANK0:	
  5928  0020                     ??_OneWire_Reset:	
  5929  0020                     ??_TCN75_Init:	
  5930                           ; 0 bytes @ 0x0
  5931                           
  5932  0020                     ?___delay_20ms:	
  5933                           ; 0 bytes @ 0x0
  5934                           
  5935  0020                     ?_eeprom_write:	
  5936                           ; 0 bytes @ 0x0
  5937                           
  5938  0020                     ?_MakeTxTemperature:	
  5939                           ; 0 bytes @ 0x0
  5940                           
  5941  0020                     ??_Uart1_PutChar:	
  5942                           ; 0 bytes @ 0x0
  5943                           
  5944  0020                     ??_eeprom_read:	
  5945                           ; 0 bytes @ 0x0
  5946                           
  5947  0020                     ??_OneWire_ReadByte:	
  5948                           ; 0 bytes @ 0x0
  5949                           
  5950  0020                     ??_OneWire_WriteByte:	
  5951                           ; 0 bytes @ 0x0
  5952                           
  5953  0020                     ??_SimI2C_Init:	
  5954                           ; 0 bytes @ 0x0
  5955                           
  5956  0020                     ??_SimI2C_Start:	
  5957                           ; 0 bytes @ 0x0
  5958                           
  5959  0020                     ??_SimI2C_SendByte:	
  5960                           ; 0 bytes @ 0x0
  5961                           
  5962  0020                     ??_SimI2C_RecAck:	
  5963                           ; 0 bytes @ 0x0
  5964                           
  5965  0020                     ??_SimI2C_ReadByte:	
  5966                           ; 0 bytes @ 0x0
  5967                           
  5968  0020                     ??_SimI2C_Ack:	
  5969                           ; 0 bytes @ 0x0
  5970                           
  5971  0020                     ??_SimI2C_NoAck:	
  5972                           ; 0 bytes @ 0x0
  5973                           
  5974  0020                     ??_SimI2C_Stop:	
  5975                           ; 0 bytes @ 0x0
  5976                           
  5977  0020                     ??_isdigit:	
  5978                           ; 0 bytes @ 0x0
  5979                           
  5980  0020                     ??_LcdDisplayNum:	
  5981                           ; 0 bytes @ 0x0
  5982                           
  5983  0020                     ??_LcdDisplayAll:	
  5984                           ; 0 bytes @ 0x0
  5985                           
  5986  0020                     ??_DisplayInit:	
  5987                           ; 0 bytes @ 0x0
  5988                           
  5989  0020                     ??_InitMCU:	
  5990                           ; 0 bytes @ 0x0
  5991                           
  5992  0020                     ?_strcpy:	
  5993                           ; 0 bytes @ 0x0
  5994                           
  5995  0020                     ?_GetVerify_Sum:	
  5996                           ; 1 bytes @ 0x0
  5997                           
  5998  0020                     ?_GetVerify_CRC8:	
  5999                           ; 1 bytes @ 0x0
  6000                           
  6001  0020                     ?___bmul:	
  6002                           ; 1 bytes @ 0x0
  6003                           
  6004  0020                     ?___lbdiv:	
  6005                           ; 1 bytes @ 0x0
  6006                           
  6007  0020                     ?___lbmod:	
  6008                           ; 1 bytes @ 0x0
  6009                           
  6010  0020                     ?_strlen:	
  6011                           ; 1 bytes @ 0x0
  6012                           
  6013  0020                     ?_strchr:	
  6014                           ; 2 bytes @ 0x0
  6015                           
  6016  0020                     ?___wmul:	
  6017                           ; 2 bytes @ 0x0
  6018                           
  6019  0020                     ?___lwdiv:	
  6020                           ; 2 bytes @ 0x0
  6021                           
  6022  0020                     ?___lwmod:	
  6023                           ; 2 bytes @ 0x0
  6024                           
  6025  0020                     LcdDisplayAll@x:	
  6026                           ; 2 bytes @ 0x0
  6027                           
  6028  0020                     Uart1_PutChar@c:	
  6029                           ; 1 bytes @ 0x0
  6030                           
  6031  0020                     SimI2C_RecAck@t:	
  6032                           ; 1 bytes @ 0x0
  6033                           
  6034  0020                     SimI2C_SendByte@data:	
  6035                           ; 1 bytes @ 0x0
  6036                           
  6037  0020                     SimI2C_ReadByte@data:	
  6038                           ; 1 bytes @ 0x0
  6039                           
  6040  0020                     eeprom_write@value:	
  6041                           ; 1 bytes @ 0x0
  6042                           
  6043  0020                     _isdigit$31763:	
  6044                           ; 1 bytes @ 0x0
  6045                           
  6046  0020                     ___bmul@multiplicand:	
  6047                           ; 1 bytes @ 0x0
  6048                           
  6049  0020                     ___lbdiv@divisor:	
  6050                           ; 1 bytes @ 0x0
  6051                           
  6052  0020                     ___lbmod@divisor:	
  6053                           ; 1 bytes @ 0x0
  6054                           
  6055  0020                     MakeTxTemperature@T:	
  6056                           ; 1 bytes @ 0x0
  6057                           
  6058  0020                     ___delay_20ms@x:	
  6059                           ; 2 bytes @ 0x0
  6060                           
  6061  0020                     GetVerify_Sum@Count:	
  6062                           ; 2 bytes @ 0x0
  6063                           
  6064  0020                     GetVerify_CRC8@Count:	
  6065                           ; 2 bytes @ 0x0
  6066                           
  6067  0020                     strcpy@from:	
  6068                           ; 2 bytes @ 0x0
  6069                           
  6070  0020                     ___wmul@multiplier:	
  6071                           ; 2 bytes @ 0x0
  6072                           
  6073  0020                     ___lwdiv@divisor:	
  6074                           ; 2 bytes @ 0x0
  6075                           
  6076  0020                     ___lwmod@divisor:	
  6077                           ; 2 bytes @ 0x0
  6078                           
  6079  0020                     strchr@ptr:	
  6080                           ; 2 bytes @ 0x0
  6081                           
  6082  0020                     strlen@s:	
  6083                           ; 2 bytes @ 0x0
  6084                           
  6085                           
  6086                           ; 2 bytes @ 0x0
  6087  0020                     	ds	1
  6088  0021                     ??_eeprom_write:	
  6089  0021                     ?_Uart1_PutString:	
  6090                           ; 0 bytes @ 0x1
  6091                           
  6092  0021                     ??_Uart1_PutHex:	
  6093                           ; 0 bytes @ 0x1
  6094                           
  6095  0021                     ??___bmul:	
  6096                           ; 0 bytes @ 0x1
  6097                           
  6098  0021                     ??___lbdiv:	
  6099                           ; 0 bytes @ 0x1
  6100                           
  6101  0021                     ??___lbmod:	
  6102                           ; 0 bytes @ 0x1
  6103                           
  6104  0021                     OneWire_Reset@Retry:	
  6105                           ; 0 bytes @ 0x1
  6106                           
  6107  0021                     OneWire_WriteByte@val:	
  6108                           ; 1 bytes @ 0x1
  6109                           
  6110  0021                     OneWire_ReadByte@b:	
  6111                           ; 1 bytes @ 0x1
  6112                           
  6113  0021                     Uart1_PutHex@c:	
  6114                           ; 1 bytes @ 0x1
  6115                           
  6116  0021                     SimI2C_SendByte@t:	
  6117                           ; 1 bytes @ 0x1
  6118                           
  6119  0021                     SimI2C_ReadByte@i:	
  6120                           ; 1 bytes @ 0x1
  6121                           
  6122  0021                     eeprom_write@addr:	
  6123                           ; 1 bytes @ 0x1
  6124                           
  6125  0021                     isdigit@c:	
  6126                           ; 1 bytes @ 0x1
  6127                           
  6128  0021                     ___bmul@product:	
  6129                           ; 1 bytes @ 0x1
  6130                           
  6131  0021                     ___lbdiv@dividend:	
  6132                           ; 1 bytes @ 0x1
  6133                           
  6134  0021                     Uart1_PutString@pString:	
  6135                           ; 1 bytes @ 0x1
  6136                           
  6137                           
  6138                           ; 2 bytes @ 0x1
  6139  0021                     	ds	1
  6140  0022                     ??___delay_20ms:	
  6141  0022                     ??_MakeTxTemperature:	
  6142                           ; 0 bytes @ 0x2
  6143                           
  6144  0022                     ??_strcpy:	
  6145                           ; 0 bytes @ 0x2
  6146                           
  6147  0022                     ??_GetVerify_Sum:	
  6148                           ; 0 bytes @ 0x2
  6149                           
  6150  0022                     ??_GetVerify_CRC8:	
  6151                           ; 0 bytes @ 0x2
  6152                           
  6153  0022                     ??_strlen:	
  6154                           ; 0 bytes @ 0x2
  6155                           
  6156  0022                     MakeTxTemperature@x:	
  6157                           ; 0 bytes @ 0x2
  6158                           
  6159  0022                     OneWire_Reset@r:	
  6160                           ; 1 bytes @ 0x2
  6161                           
  6162  0022                     OneWire_WriteByte@temp:	
  6163                           ; 1 bytes @ 0x2
  6164                           
  6165  0022                     OneWire_ReadByte@value:	
  6166                           ; 1 bytes @ 0x2
  6167                           
  6168  0022                     Uart1_PutHex@b:	
  6169                           ; 1 bytes @ 0x2
  6170                           
  6171  0022                     SimI2C_SendByte@i:	
  6172                           ; 1 bytes @ 0x2
  6173                           
  6174  0022                     eeprom_read@addr:	
  6175                           ; 1 bytes @ 0x2
  6176                           
  6177  0022                     ___bmul@multiplier:	
  6178                           ; 1 bytes @ 0x2
  6179                           
  6180  0022                     ___lbdiv@counter:	
  6181                           ; 1 bytes @ 0x2
  6182                           
  6183  0022                     ___lbmod@dividend:	
  6184                           ; 1 bytes @ 0x2
  6185                           
  6186  0022                     ___wmul@multiplicand:	
  6187                           ; 1 bytes @ 0x2
  6188                           
  6189  0022                     ___lwdiv@dividend:	
  6190                           ; 2 bytes @ 0x2
  6191                           
  6192  0022                     ___lwmod@dividend:	
  6193                           ; 2 bytes @ 0x2
  6194                           
  6195  0022                     strchr@chr:	
  6196                           ; 2 bytes @ 0x2
  6197                           
  6198                           
  6199                           ; 2 bytes @ 0x2
  6200  0022                     	ds	1
  6201  0023                     ??_TCN75_SetConfig:	
  6202  0023                     ??_TCN75_ReadReg:	
  6203                           ; 0 bytes @ 0x3
  6204                           
  6205  0023                     ??_Uart1_PutString:	
  6206                           ; 0 bytes @ 0x3
  6207                           
  6208  0023                     ?_Uart1_PutString_Hex:	
  6209                           ; 0 bytes @ 0x3
  6210                           
  6211  0023                     OneWire_WriteByte@i:	
  6212                           ; 0 bytes @ 0x3
  6213                           
  6214  0023                     OneWire_ReadByte@i:	
  6215                           ; 1 bytes @ 0x3
  6216                           
  6217  0023                     TCN75_ReadReg@RegPoint:	
  6218                           ; 1 bytes @ 0x3
  6219                           
  6220  0023                     TCN75_SetConfig@ErrTimes:	
  6221                           ; 1 bytes @ 0x3
  6222                           
  6223  0023                     Uart1_PutString@c:	
  6224                           ; 1 bytes @ 0x3
  6225                           
  6226  0023                     GetVerify_CRC8@pBuff:	
  6227                           ; 1 bytes @ 0x3
  6228                           
  6229  0023                     ___lbdiv@quotient:	
  6230                           ; 1 bytes @ 0x3
  6231                           
  6232  0023                     ___lbmod@counter:	
  6233                           ; 1 bytes @ 0x3
  6234                           
  6235  0023                     Uart1_PutString_Hex@pString:	
  6236                           ; 1 bytes @ 0x3
  6237                           
  6238                           
  6239                           ; 2 bytes @ 0x3
  6240  0023                     	ds	1
  6241  0024                     ??_OneWire_Command:	
  6242  0024                     ??_strchr:	
  6243                           ; 0 bytes @ 0x4
  6244                           
  6245  0024                     ??_PowerON:	
  6246                           ; 0 bytes @ 0x4
  6247                           
  6248  0024                     ??___wmul:	
  6249                           ; 0 bytes @ 0x4
  6250                           
  6251  0024                     ??___lwdiv:	
  6252                           ; 0 bytes @ 0x4
  6253                           
  6254  0024                     ??___lwmod:	
  6255                           ; 0 bytes @ 0x4
  6256                           
  6257  0024                     OneWire_Command@command:	
  6258                           ; 0 bytes @ 0x4
  6259                           
  6260  0024                     TCN75_ReadReg@ErrTimes:	
  6261                           ; 1 bytes @ 0x4
  6262                           
  6263  0024                     TCN75_SetConfig@bRight:	
  6264                           ; 1 bytes @ 0x4
  6265                           
  6266  0024                     GetVerify_Sum@pBuff:	
  6267                           ; 1 bytes @ 0x4
  6268                           
  6269  0024                     GetVerify_CRC8@bit_counter:	
  6270                           ; 1 bytes @ 0x4
  6271                           
  6272  0024                     strcpy@to:	
  6273                           ; 1 bytes @ 0x4
  6274                           
  6275  0024                     ___lwdiv@counter:	
  6276                           ; 1 bytes @ 0x4
  6277                           
  6278  0024                     ___lwmod@counter:	
  6279                           ; 1 bytes @ 0x4
  6280                           
  6281  0024                     ___lbmod@rem:	
  6282                           ; 1 bytes @ 0x4
  6283                           
  6284  0024                     ___wmul@product:	
  6285                           ; 1 bytes @ 0x4
  6286                           
  6287  0024                     strlen@cp:	
  6288                           ; 2 bytes @ 0x4
  6289                           
  6290                           
  6291                           ; 2 bytes @ 0x4
  6292  0024                     	ds	1
  6293  0025                     ??_DS18X20_StartMeas:	
  6294  0025                     ??_Uart1_PutString_Hex:	
  6295                           ; 0 bytes @ 0x5
  6296                           
  6297  0025                     ??_LcdDisplay_CSQ:	
  6298                           ; 0 bytes @ 0x5
  6299                           
  6300  0025                     ??_LcdDisplay_CurTemp:	
  6301                           ; 0 bytes @ 0x5
  6302                           
  6303  0025                     ??_LcdDisplay_Err:	
  6304                           ; 0 bytes @ 0x5
  6305                           
  6306  0025                     LcdDisplay_CSQ@t1:	
  6307                           ; 0 bytes @ 0x5
  6308                           
  6309  0025                     TCN75_ReadReg@bRight:	
  6310                           ; 1 bytes @ 0x5
  6311                           
  6312  0025                     Uart1_PutString_Hex@c:	
  6313                           ; 1 bytes @ 0x5
  6314                           
  6315  0025                     GetVerify_Sum@sum:	
  6316                           ; 1 bytes @ 0x5
  6317                           
  6318  0025                     GetVerify_CRC8@data:	
  6319                           ; 1 bytes @ 0x5
  6320                           
  6321  0025                     strcpy@cp:	
  6322                           ; 1 bytes @ 0x5
  6323                           
  6324  0025                     ___lwdiv@quotient:	
  6325                           ; 1 bytes @ 0x5
  6326                           
  6327                           
  6328                           ; 2 bytes @ 0x5
  6329  0025                     	ds	1
  6330  0026                     ??_ATCommand_Init:	
  6331  0026                     ?_atoi:	
  6332                           ; 0 bytes @ 0x6
  6333                           
  6334  0026                     ?_strncmp:	
  6335                           ; 2 bytes @ 0x6
  6336                           
  6337  0026                     LcdDisplay_CSQ@t2:	
  6338                           ; 2 bytes @ 0x6
  6339                           
  6340  0026                     GetVerify_Sum@i:	
  6341                           ; 1 bytes @ 0x6
  6342                           
  6343  0026                     GetVerify_CRC8@i:	
  6344                           ; 1 bytes @ 0x6
  6345                           
  6346  0026                     atoi@s:	
  6347                           ; 2 bytes @ 0x6
  6348                           
  6349  0026                     strncmp@s1:	
  6350                           ; 2 bytes @ 0x6
  6351                           
  6352                           
  6353                           ; 2 bytes @ 0x6
  6354  0026                     	ds	1
  6355  0027                     ??_GetRomData:	
  6356  0027                     ??_SaveRomData:	
  6357                           ; 0 bytes @ 0x7
  6358                           
  6359  0027                     LcdDisplay_CurTemp@t1:	
  6360                           ; 0 bytes @ 0x7
  6361                           
  6362  0027                     GetRomData@i:	
  6363                           ; 1 bytes @ 0x7
  6364                           
  6365  0027                     SaveRomData@i:	
  6366                           ; 1 bytes @ 0x7
  6367                           
  6368                           
  6369                           ; 1 bytes @ 0x7
  6370  0027                     	ds	1
  6371  0028                     ??_atoi:	
  6372  0028                     ??_InitVariable:	
  6373                           ; 0 bytes @ 0x8
  6374                           
  6375  0028                     LcdDisplay_CurTemp@t2:	
  6376                           ; 0 bytes @ 0x8
  6377                           
  6378  0028                     GetVerify_CRC8@feedback_bit:	
  6379                           ; 1 bytes @ 0x8
  6380                           
  6381  0028                     strncmp@s2:	
  6382                           ; 1 bytes @ 0x8
  6383                           
  6384                           
  6385                           ; 2 bytes @ 0x8
  6386  0028                     	ds	1
  6387  0029                     GetVerify_CRC8@crc:	
  6388                           
  6389                           ; 1 bytes @ 0x9
  6390  0029                     	ds	1
  6391  002A                     ??_DS18X20_ReadMeas:	
  6392  002A                     DS18X20_ReadMeas@bVerify:	
  6393                           ; 0 bytes @ 0xA
  6394                           
  6395  002A                     strncmp@len:	
  6396                           ; 1 bytes @ 0xA
  6397                           
  6398                           
  6399                           ; 2 bytes @ 0xA
  6400  002A                     	ds	1
  6401  002B                     DS18X20_ReadMeas@i:	
  6402                           
  6403                           ; 1 bytes @ 0xB
  6404  002B                     	ds	1
  6405  002C                     ??_ReadTData:	
  6406  002C                     ??_strncmp:	
  6407                           ; 0 bytes @ 0xC
  6408                           
  6409  002C                     ReadTData@retry:	
  6410                           ; 0 bytes @ 0xC
  6411                           
  6412  002C                     atoi@sign:	
  6413                           ; 1 bytes @ 0xC
  6414                           
  6415                           
  6416                           ; 1 bytes @ 0xC
  6417  002C                     	ds	1
  6418  002D                     ??_InitSystem:	
  6419  002D                     ?_strstr:	
  6420                           ; 0 bytes @ 0xD
  6421                           
  6422  002D                     InitSystem@x:	
  6423                           ; 2 bytes @ 0xD
  6424                           
  6425  002D                     atoi@a:	
  6426                           ; 1 bytes @ 0xD
  6427                           
  6428  002D                     strstr@s1:	
  6429                           ; 2 bytes @ 0xD
  6430                           
  6431                           
  6432                           ; 2 bytes @ 0xD
  6433  002D                     	ds	2
  6434  002F                     strstr@s2:	
  6435                           
  6436                           ; 2 bytes @ 0xF
  6437  002F                     	ds	2
  6438  0031                     ??_ATCommand_WaitData:	
  6439  0031                     ??_strstr:	
  6440                           ; 0 bytes @ 0x11
  6441                           
  6442  0031                     ?_ATCommand_SendCmd:	
  6443                           ; 0 bytes @ 0x11
  6444                           
  6445  0031                     ATCommand_SendCmd@cmd:	
  6446                           ; 1 bytes @ 0x11
  6447                           
  6448                           
  6449                           ; 2 bytes @ 0x11
  6450  0031                     	ds	2
  6451  0033                     ??_ATCommand_SendCmd:	
  6452  0033                     ATCommand_WaitData@res:	
  6453                           ; 0 bytes @ 0x13
  6454                           
  6455                           
  6456                           ; 1 bytes @ 0x13
  6457  0033                     	ds	1
  6458  0034                     ATCommand_WaitData@strx:	
  6459                           
  6460                           ; 2 bytes @ 0x14
  6461  0034                     	ds	1
  6462  0035                     ATCommand_SendCmd@retry:	
  6463                           
  6464                           ; 1 bytes @ 0x15
  6465  0035                     	ds	1
  6466  0036                     ??_InteractServer:	
  6467  0036                     InteractServer@retry:	
  6468                           ; 0 bytes @ 0x16
  6469                           
  6470  0036                     ATCommand_SendCmd@strx:	
  6471                           ; 1 bytes @ 0x16
  6472                           
  6473                           
  6474                           ; 2 bytes @ 0x16
  6475  0036                     	ds	1
  6476  0037                     InteractServer@res:	
  6477                           
  6478                           ; 1 bytes @ 0x17
  6479  0037                     	ds	1
  6480  0038                     ATCommand_SendCmd@res:	
  6481  0038                     InteractServer@i_10573:	
  6482                           ; 1 bytes @ 0x18
  6483                           
  6484                           
  6485                           ; 2 bytes @ 0x18
  6486  0038                     	ds	1
  6487  0039                     ??_InitGPRS:	
  6488                           
  6489                           ; 0 bytes @ 0x19
  6490  0039                     	ds	1
  6491  003A                     InteractServer@i_10578:	
  6492                           
  6493                           ; 2 bytes @ 0x1A
  6494  003A                     	ds	1
  6495  003B                     InitGPRS@i:	
  6496                           
  6497                           ; 1 bytes @ 0x1B
  6498  003B                     	ds	1
  6499  003C                     InteractServer@j_10585:	
  6500  003C                     InitGPRS@strx:	
  6501                           ; 2 bytes @ 0x1C
  6502                           
  6503                           
  6504                           ; 2 bytes @ 0x1C
  6505  003C                     	ds	2
  6506  003E                     InitGPRS@retry:	
  6507  003E                     InteractServer@txLen:	
  6508                           ; 1 bytes @ 0x1E
  6509                           
  6510                           
  6511                           ; 2 bytes @ 0x1E
  6512  003E                     	ds	2
  6513  0040                     InteractServer@t:	
  6514                           
  6515                           ; 2 bytes @ 0x20
  6516  0040                     	ds	2
  6517  0042                     InteractServer@addr:	
  6518                           
  6519                           ; 1 bytes @ 0x22
  6520  0042                     	ds	1
  6521  0043                     InteractServer@j:	
  6522                           
  6523                           ; 1 bytes @ 0x23
  6524  0043                     	ds	1
  6525  0044                     InteractServer@k:	
  6526                           
  6527                           ; 1 bytes @ 0x24
  6528  0044                     	ds	1
  6529  0045                     InteractServer@i:	
  6530                           
  6531                           ; 1 bytes @ 0x25
  6532  0045                     	ds	1
  6533  0046                     ??_CallSend:	
  6534  0046                     CallSend@ret:	
  6535                           ; 0 bytes @ 0x26
  6536                           
  6537                           
  6538                           ; 1 bytes @ 0x26
  6539  0046                     	ds	1
  6540  0047                     ??_CallProc:	
  6541  0047                     CallProc@retry:	
  6542                           ; 0 bytes @ 0x27
  6543                           
  6544                           
  6545                           ; 1 bytes @ 0x27
  6546  0047                     	ds	1
  6547  0048                     ??_TestProc:	
  6548                           
  6549                           ; 0 bytes @ 0x28
  6550  0048                     	ds	2
  6551  004A                     ??_main:	
  6552                           
  6553                           ; 0 bytes @ 0x2A
  6554  004A                     	ds	2
  6555  004C                     main@addr:	
  6556                           
  6557                           ; 1 bytes @ 0x2C
  6558  004C                     	ds	1
  6559  004D                     main@i:	
  6560                           
  6561                           ; 1 bytes @ 0x2D
  6562  004D                     	ds	1
  6563                           
  6564                           	psect	text1963
  6565  0244                     __ptext1963:	
  6566 ;; =============== function _main ends ============
  6567                           
  6568                           
  6569 ;; *************** function _TestProc *****************
  6570 ;; Defined at:
  6571 ;;		line 9 in file "F:\work\WYP\NBIoT\TestProc.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;		None
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;		None
  6576 ;; Return value:  Size  Location     Type
  6577 ;;		None               void
  6578 ;; Registers used:
  6579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6580 ;; Tracked objects:
  6581 ;;		On entry : 1F/0
  6582 ;;		On exit  : 1F/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6585 ;;      Params:         0       0       0       0       0       0       0       0
  6586 ;;      Locals:         0       0       0       0       0       0       0       0
  6587 ;;      Temps:          0       2       0       0       0       0       0       0
  6588 ;;      Totals:         0       2       0       0       0       0       0       0
  6589 ;;Total ram usage:        2 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; Hardware stack levels required when called:    9
  6592 ;; This function calls:
  6593 ;;		_LcdDisplayAll
  6594 ;;		___delay_20ms
  6595 ;;		_ReadTData
  6596 ;;		_LcdDisplay_Err
  6597 ;;		_CallProc
  6598 ;; This function is called by:
  6599 ;;		_main
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602  0244                     _TestProc:	
  6603                           
  6604                           ;TestProc.c: 10: if(RB7==0)
  6605                           
  6606                           ; Regs used in _TestProc: [wreg-btemp+0+pclath+cstack]
  6607  0244  1B8D               	btfsc	13,7
  6608  0245  0008               	return
  6609                           
  6610                           ;TestProc.c: 11: {
  6611                           ;TestProc.c: 12: _delay((unsigned long)((20)*(4000000/4000.0)));
  6612  0246  301A               	movlw	26
  6613  0247  00C9               	movwf	??_TestProc+1
  6614  0248  30F8               	movlw	248
  6615  0249  00C8               	movwf	??_TestProc
  6616  024A                     u8977:	
  6617  024A  0BC8               	decfsz	??_TestProc,f
  6618  024B  2A4A               	goto	u8977
  6619  024C  0BC9               	decfsz	??_TestProc+1,f
  6620  024D  2A4A               	goto	u8977
  6621  024E  0064               	clrwdt
  6622                           
  6623                           ;TestProc.c: 13: if(RB7==0)
  6624  024F  0020               	movlb	0	; select bank0
  6625  0250  1B8D               	btfsc	13,7
  6626  0251  0008               	return
  6627                           
  6628                           ;TestProc.c: 14: {
  6629                           ;TestProc.c: 15: LcdDisplayAll(0);
  6630  0252  3000               	movlw	0
  6631  0253  228F               	fcall	_LcdDisplayAll
  6632                           
  6633                           ;TestProc.c: 16: __delay_20ms(150);
  6634  0254  3096               	movlw	150
  6635  0255  0020               	movlb	0	; select bank0
  6636  0256  00A0               	movwf	?___delay_20ms
  6637  0257  01A1               	clrf	?___delay_20ms+1
  6638  0258  318A  22C4  3182   	fcall	___delay_20ms
  6639                           
  6640                           ;TestProc.c: 17: LcdDisplayAll(1);
  6641  025B  3001               	movlw	1
  6642  025C  228F               	fcall	_LcdDisplayAll
  6643                           
  6644                           ;TestProc.c: 18: ReadTData();
  6645  025D  3188  20DF  3182   	fcall	_ReadTData
  6646                           
  6647                           ;TestProc.c: 19: if(CurTemp.u16==0xf000)
  6648  0260  0020               	movlb	0	; select bank0
  6649  0261  0857               	movf	_CurTemp+1,w
  6650  0262  3AF0               	xorlw	240
  6651  0263  0456               	iorwf	_CurTemp,w
  6652  0264  1D03               	skipz
  6653  0265  2A6F               	goto	l33510
  6654                           
  6655                           ;TestProc.c: 20: {
  6656                           ;TestProc.c: 21: LATA4=0;
  6657  0266  0022               	movlb	2	; select bank2
  6658  0267  120C               	bcf	12,4
  6659                           
  6660                           ;TestProc.c: 22: LATA3=1;
  6661  0268  158C               	bsf	12,3
  6662                           
  6663                           ;TestProc.c: 23: ErrState=MissT;
  6664  0269  0020               	movlb	0	; select bank0
  6665  026A  01E2               	clrf	_ErrState
  6666  026B  0AE2               	incf	_ErrState,f
  6667  026C                     l33508:	
  6668                           
  6669                           ;TestProc.c: 24: LcdDisplay_Err();
  6670  026C  2410  3182         	fcall	_LcdDisplay_Err
  6671                           
  6672                           ;TestProc.c: 25: }
  6673  026E  2A81               	goto	l33522
  6674  026F                     l33510:	
  6675                           
  6676                           ;TestProc.c: 26: else
  6677                           ;TestProc.c: 27: {
  6678                           ;TestProc.c: 28: ErrState=NoErr;
  6679  026F  01E2               	clrf	_ErrState
  6680                           
  6681                           ;TestProc.c: 29: CallProc();
  6682  0270  318B  2313  3182   	fcall	_CallProc
  6683                           
  6684                           ;TestProc.c: 30: if(ErrState!=NoErr)
  6685  0273  0020               	movlb	0	; select bank0
  6686  0274  0862               	movf	_ErrState,w
  6687  0275  1903               	btfsc	3,2
  6688  0276  2A7B               	goto	l10839
  6689                           
  6690                           ;TestProc.c: 31: {
  6691                           ;TestProc.c: 32: LATA4=0;
  6692  0277  0022               	movlb	2	; select bank2
  6693  0278  120C               	bcf	12,4
  6694                           
  6695                           ;TestProc.c: 33: LATA3=1;
  6696  0279  158C               	bsf	12,3
  6697  027A  2A6C               	goto	l33508
  6698  027B                     l10839:	
  6699                           
  6700                           ;TestProc.c: 36: else
  6701                           ;TestProc.c: 37: {
  6702                           ;TestProc.c: 38: LATA4=1;
  6703  027B  0022               	movlb	2	; select bank2
  6704  027C  160C               	bsf	12,4
  6705                           
  6706                           ;TestProc.c: 39: LATA3=0;
  6707  027D  118C               	bcf	12,3
  6708                           
  6709                           ;TestProc.c: 40: LcdDisplayAll(2);
  6710  027E  3002               	movlw	2
  6711  027F  228F  3182         	fcall	_LcdDisplayAll
  6712  0281                     l33522:	
  6713                           
  6714                           ;TestProc.c: 44: {
  6715                           ;TestProc.c: 45: if(ErrState!=NoErr)
  6716  0281  0020               	movlb	0	; select bank0
  6717  0282  0862               	movf	_ErrState,w
  6718  0283  1903               	btfsc	3,2
  6719  0284  2A81               	goto	l33522
  6720                           
  6721                           ;TestProc.c: 46: {
  6722                           ;TestProc.c: 47: __delay_20ms(20);
  6723  0285  3014               	movlw	20
  6724  0286  00A0               	movwf	?___delay_20ms
  6725  0287  01A1               	clrf	?___delay_20ms+1
  6726  0288  318A  22C4  3182   	fcall	___delay_20ms
  6727                           
  6728                           ;TestProc.c: 48: LATA3=!LATA3;
  6729  028B  3008               	movlw	8
  6730  028C  0022               	movlb	2	; select bank2
  6731  028D  068C               	xorwf	12,f
  6732  028E  2A81               	goto	l33522
  6733  028F                     __end_of_TestProc:	
  6734  028F                     __ptext2002:	
  6735 ;; =============== function _LcdDisplay_CSQ ends ============
  6736                           
  6737                           
  6738 ;; *************** function _LcdDisplayAll *****************
  6739 ;; Defined at:
  6740 ;;		line 240 in file "F:\work\WYP\NBIoT\Display.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  x               1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  x               1    0[BANK0 ] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 1D/0
  6751 ;;		On exit  : 10/0
  6752 ;;		Unchanged: FFFE0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6754 ;;      Params:         0       0       0       0       0       0       0       0
  6755 ;;      Locals:         0       1       0       0       0       0       0       0
  6756 ;;      Temps:          0       0       0       0       0       0       0       0
  6757 ;;      Totals:         0       1       0       0       0       0       0       0
  6758 ;;Total ram usage:        1 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    4
  6761 ;; This function calls:
  6762 ;;		_LcdDisplayNum
  6763 ;; This function is called by:
  6764 ;;		_TestProc
  6765 ;; This function uses a non-reentrant model
  6766 ;;
  6767  028F                     _LcdDisplayAll:	
  6768                           
  6769                           ; Regs used in _LcdDisplayAll: [wreg+status,2+status,0+pclath+cstack]
  6770                           ;LcdDisplayAll@x stored from wreg
  6771  028F  0020               	movlb	0	; select bank0
  6772  0290  00A0               	movwf	LcdDisplayAll@x
  6773                           
  6774                           ;Display.c: 244: if(x==0)
  6775  0291  08A0               	movf	LcdDisplayAll@x,f
  6776  0292  1D03               	skipz
  6777  0293  2AB9               	goto	l32448
  6778                           
  6779                           ;Display.c: 245: {
  6780                           ;Display.c: 246: DpyNum[0]=0xff;
  6781  0294  30FF               	movlw	255
  6782  0295  00E9               	movwf	_DpyNum
  6783                           
  6784                           ;Display.c: 247: DpyNum[1]=0xff;
  6785  0296  00EA               	movwf	_DpyNum+1
  6786                           
  6787                           ;Display.c: 248: DpyNum[2]=0xff;
  6788  0297  00EB               	movwf	_DpyNum+2
  6789                           
  6790                           ;Display.c: 249: LcdDisplayNum();
  6791  0298  2307  3182         	fcall	_LcdDisplayNum
  6792  029A                     l2225:	
  6793                           ;Display.c: 250: while(WA==0);
  6794                           
  6795  029A  1E12               	btfss	18,4
  6796  029B  2A9A               	goto	l2225
  6797                           
  6798                           ;Display.c: 251: SEG5COM0=1;
  6799  029C  16A0               	bsf	32,5
  6800  029D                     l2228:	
  6801                           ;Display.c: 252: while(WA==0);
  6802                           
  6803  029D  1E12               	btfss	18,4
  6804  029E  2A9D               	goto	l2228
  6805                           
  6806                           ;Display.c: 253: SEG5COM1=1;
  6807  029F  16A3               	bsf	35,5
  6808  02A0                     l2231:	
  6809                           ;Display.c: 254: while(WA==0);
  6810                           
  6811  02A0  1E12               	btfss	18,4
  6812  02A1  2AA0               	goto	l2231
  6813                           
  6814                           ;Display.c: 255: SEG5COM2=1;
  6815  02A2  16A6               	bsf	38,5
  6816  02A3                     l2234:	
  6817                           ;Display.c: 256: while(WA==0);
  6818                           
  6819  02A3  1E12               	btfss	18,4
  6820  02A4  2AA3               	goto	l2234
  6821                           
  6822                           ;Display.c: 257: SEG5COM3=1;
  6823  02A5  16A9               	bsf	41,5
  6824  02A6                     l2237:	
  6825                           ;Display.c: 258: while(WA==0);
  6826                           
  6827  02A6  1E12               	btfss	18,4
  6828  02A7  2AA6               	goto	l2237
  6829                           
  6830                           ;Display.c: 259: SEG22COM3=1;
  6831  02A8  172B               	bsf	43,6
  6832  02A9                     l2240:	
  6833                           ;Display.c: 260: while(WA==0);
  6834                           
  6835  02A9  1E12               	btfss	18,4
  6836  02AA  2AA9               	goto	l2240
  6837                           
  6838                           ;Display.c: 261: SEG3COM3=1;
  6839  02AB  15A9               	bsf	41,3
  6840  02AC                     l2243:	
  6841                           ;Display.c: 262: while(WA==0);
  6842                           
  6843  02AC  1E12               	btfss	18,4
  6844  02AD  2AAC               	goto	l2243
  6845                           
  6846                           ;Display.c: 263: SEG21COM3=1;
  6847  02AE  16AB               	bsf	43,5
  6848  02AF                     l2246:	
  6849                           ;Display.c: 264: while(WA==0);
  6850                           
  6851  02AF  1E12               	btfss	18,4
  6852  02B0  2AAF               	goto	l2246
  6853                           
  6854                           ;Display.c: 265: SEG21COM2=1;
  6855  02B1  16A8               	bsf	40,5
  6856  02B2                     l2249:	
  6857                           ;Display.c: 266: while(WA==0);
  6858                           
  6859  02B2  1E12               	btfss	18,4
  6860  02B3  2AB2               	goto	l2249
  6861                           
  6862                           ;Display.c: 267: SEG21COM1=1;
  6863  02B4  16A5               	bsf	37,5
  6864  02B5                     l2252:	
  6865                           ;Display.c: 268: while(WA==0);
  6866                           
  6867  02B5  1E12               	btfss	18,4
  6868  02B6  2AB5               	goto	l2252
  6869                           
  6870                           ;Display.c: 269: SEG21COM0=1;
  6871  02B7  16A2               	bsf	34,5
  6872                           
  6873                           ;Display.c: 270: }
  6874  02B8  0008               	return
  6875  02B9                     l32448:	
  6876                           
  6877                           ;Display.c: 271: else if(x==1)
  6878  02B9  0B20               	decfsz	LcdDisplayAll@x,w
  6879  02BA  2ADF               	goto	l32454
  6880                           
  6881                           ;Display.c: 272: {
  6882                           ;Display.c: 273: DpyNum[0]=0;
  6883  02BB  01E9               	clrf	_DpyNum
  6884                           
  6885                           ;Display.c: 274: DpyNum[1]=0;
  6886  02BC  01EA               	clrf	_DpyNum+1
  6887                           
  6888                           ;Display.c: 275: DpyNum[2]=0;
  6889  02BD  01EB               	clrf	_DpyNum+2
  6890                           
  6891                           ;Display.c: 276: LcdDisplayNum();
  6892  02BE  2307  3182         	fcall	_LcdDisplayNum
  6893  02C0                     l2257:	
  6894                           ;Display.c: 277: while(WA==0);
  6895                           
  6896  02C0  1E12               	btfss	18,4
  6897  02C1  2AC0               	goto	l2257
  6898                           
  6899                           ;Display.c: 278: SEG5COM0=0;
  6900  02C2  12A0               	bcf	32,5
  6901  02C3                     l2260:	
  6902                           ;Display.c: 279: while(WA==0);
  6903                           
  6904  02C3  1E12               	btfss	18,4
  6905  02C4  2AC3               	goto	l2260
  6906                           
  6907                           ;Display.c: 280: SEG5COM1=0;
  6908  02C5  12A3               	bcf	35,5
  6909  02C6                     l2263:	
  6910                           ;Display.c: 281: while(WA==0);
  6911                           
  6912  02C6  1E12               	btfss	18,4
  6913  02C7  2AC6               	goto	l2263
  6914                           
  6915                           ;Display.c: 282: SEG5COM2=0;
  6916  02C8  12A6               	bcf	38,5
  6917  02C9                     l2266:	
  6918                           ;Display.c: 283: while(WA==0);
  6919                           
  6920  02C9  1E12               	btfss	18,4
  6921  02CA  2AC9               	goto	l2266
  6922                           
  6923                           ;Display.c: 284: SEG5COM3=0;
  6924  02CB  12A9               	bcf	41,5
  6925  02CC                     l2269:	
  6926                           ;Display.c: 285: while(WA==0);
  6927                           
  6928  02CC  1E12               	btfss	18,4
  6929  02CD  2ACC               	goto	l2269
  6930                           
  6931                           ;Display.c: 286: SEG22COM3=0;
  6932  02CE  132B               	bcf	43,6
  6933  02CF                     l2272:	
  6934                           ;Display.c: 287: while(WA==0);
  6935                           
  6936  02CF  1E12               	btfss	18,4
  6937  02D0  2ACF               	goto	l2272
  6938                           
  6939                           ;Display.c: 288: SEG3COM3=0;
  6940  02D1  11A9               	bcf	41,3
  6941  02D2                     l2275:	
  6942                           ;Display.c: 289: while(WA==0);
  6943                           
  6944  02D2  1E12               	btfss	18,4
  6945  02D3  2AD2               	goto	l2275
  6946                           
  6947                           ;Display.c: 290: SEG21COM3=0;
  6948  02D4  12AB               	bcf	43,5
  6949  02D5                     l2278:	
  6950                           ;Display.c: 291: while(WA==0);
  6951                           
  6952  02D5  1E12               	btfss	18,4
  6953  02D6  2AD5               	goto	l2278
  6954                           
  6955                           ;Display.c: 292: SEG21COM2=0;
  6956  02D7  12A8               	bcf	40,5
  6957  02D8                     l2281:	
  6958                           ;Display.c: 293: while(WA==0);
  6959                           
  6960  02D8  1E12               	btfss	18,4
  6961  02D9  2AD8               	goto	l2281
  6962                           
  6963                           ;Display.c: 294: SEG21COM1=0;
  6964  02DA  12A5               	bcf	37,5
  6965  02DB                     l2284:	
  6966                           ;Display.c: 295: while(WA==0);
  6967                           
  6968  02DB  1E12               	btfss	18,4
  6969  02DC  2ADB               	goto	l2284
  6970  02DD                     l2286:	
  6971                           
  6972                           ;Display.c: 296: SEG21COM0=0;
  6973  02DD  12A2               	bcf	34,5
  6974                           
  6975                           ;Display.c: 297: }
  6976  02DE  0008               	return
  6977  02DF                     l32454:	
  6978                           
  6979                           ;Display.c: 298: else if(x==2)
  6980  02DF  0820               	movf	LcdDisplayAll@x,w
  6981  02E0  3A02               	xorlw	2
  6982  02E1  1D03               	skipz
  6983  02E2  0008               	return
  6984                           
  6985                           ;Display.c: 299: {
  6986                           ;Display.c: 300: DpyNum[0]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6987  02E3  3077               	movlw	119
  6988  02E4  00E9               	movwf	_DpyNum
  6989                           
  6990                           ;Display.c: 301: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6991  02E5  00EA               	movwf	_DpyNum+1
  6992                           
  6993                           ;Display.c: 302: DpyNum[2]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6994  02E6  00EB               	movwf	_DpyNum+2
  6995                           
  6996                           ;Display.c: 303: LcdDisplayNum();
  6997  02E7  2307  3182         	fcall	_LcdDisplayNum
  6998  02E9                     l2289:	
  6999                           ;Display.c: 304: while(WA==0);
  7000                           
  7001  02E9  1E12               	btfss	18,4
  7002  02EA  2AE9               	goto	l2289
  7003                           
  7004                           ;Display.c: 305: SEG5COM0=0;
  7005  02EB  12A0               	bcf	32,5
  7006  02EC                     l2292:	
  7007                           ;Display.c: 306: while(WA==0);
  7008                           
  7009  02EC  1E12               	btfss	18,4
  7010  02ED  2AEC               	goto	l2292
  7011                           
  7012                           ;Display.c: 307: SEG5COM1=0;
  7013  02EE  12A3               	bcf	35,5
  7014  02EF                     l2295:	
  7015                           ;Display.c: 308: while(WA==0);
  7016                           
  7017  02EF  1E12               	btfss	18,4
  7018  02F0  2AEF               	goto	l2295
  7019                           
  7020                           ;Display.c: 309: SEG5COM2=0;
  7021  02F1  12A6               	bcf	38,5
  7022  02F2                     l2298:	
  7023                           ;Display.c: 310: while(WA==0);
  7024                           
  7025  02F2  1E12               	btfss	18,4
  7026  02F3  2AF2               	goto	l2298
  7027                           
  7028                           ;Display.c: 311: SEG5COM3=0;
  7029  02F4  12A9               	bcf	41,5
  7030  02F5                     l2301:	
  7031                           ;Display.c: 312: while(WA==0);
  7032                           
  7033  02F5  1E12               	btfss	18,4
  7034  02F6  2AF5               	goto	l2301
  7035                           
  7036                           ;Display.c: 313: SEG22COM3=0;
  7037  02F7  132B               	bcf	43,6
  7038  02F8                     l2304:	
  7039                           ;Display.c: 314: while(WA==0);
  7040                           
  7041  02F8  1E12               	btfss	18,4
  7042  02F9  2AF8               	goto	l2304
  7043                           
  7044                           ;Display.c: 315: SEG3COM3=0;
  7045  02FA  11A9               	bcf	41,3
  7046  02FB                     l2307:	
  7047                           ;Display.c: 316: while(WA==0);
  7048                           
  7049  02FB  1E12               	btfss	18,4
  7050  02FC  2AFB               	goto	l2307
  7051                           
  7052                           ;Display.c: 317: SEG21COM3=0;
  7053  02FD  12AB               	bcf	43,5
  7054  02FE                     l2310:	
  7055                           ;Display.c: 318: while(WA==0);
  7056                           
  7057  02FE  1E12               	btfss	18,4
  7058  02FF  2AFE               	goto	l2310
  7059                           
  7060                           ;Display.c: 319: SEG21COM2=0;
  7061  0300  12A8               	bcf	40,5
  7062  0301                     l2313:	
  7063                           ;Display.c: 320: while(WA==0);
  7064                           
  7065  0301  1E12               	btfss	18,4
  7066  0302  2B01               	goto	l2313
  7067                           
  7068                           ;Display.c: 321: SEG21COM1=0;
  7069  0303  12A5               	bcf	37,5
  7070  0304                     l2316:	
  7071                           ;Display.c: 322: while(WA==0);
  7072                           
  7073  0304  1A12               	btfsc	18,4
  7074  0305  2ADD               	goto	l2286
  7075  0306  2B04               	goto	l2316
  7076  0307                     __end_of_LcdDisplayAll:	
  7077  0307                     __ptext2023:	
  7078 ;; =============== function _DisplayInit ends ============
  7079                           
  7080                           
  7081 ;; *************** function _LcdDisplayNum *****************
  7082 ;; Defined at:
  7083 ;;		line 12 in file "F:\work\WYP\NBIoT\Display.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;		None
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;		None
  7088 ;; Return value:  Size  Location     Type
  7089 ;;		None               void
  7090 ;; Registers used:
  7091 ;;		None
  7092 ;; Tracked objects:
  7093 ;;		On entry : 10/0
  7094 ;;		On exit  : 1F/F
  7095 ;;		Unchanged: FFFE0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7097 ;;      Params:         0       0       0       0       0       0       0       0
  7098 ;;      Locals:         0       0       0       0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0
  7100 ;;      Totals:         0       0       0       0       0       0       0       0
  7101 ;;Total ram usage:        0 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    3
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_LcdDisplayAll
  7108 ;;		_LcdDisplay_CSQ
  7109 ;;		_LcdDisplay_CurTemp
  7110 ;;		_LcdDisplay_Err
  7111 ;; This function uses a non-reentrant model
  7112 ;;
  7113  0307                     _LcdDisplayNum:	
  7114  0307                     l32102:	
  7115                           ; Regs used in _LcdDisplayNum: []
  7116                           
  7117                           
  7118                           ;Display.c: 16: if(DpyNum[0]&0x01)
  7119  0307  0020               	movlb	0	; select bank0
  7120  0308  1C69               	btfss	_DpyNum,0
  7121  0309  2B0F               	goto	l2050
  7122  030A                     l2046:	
  7123  030A  002F               	movlb	15	; select bank15
  7124  030B  1E12               	btfss	18,4
  7125  030C  2B0A               	goto	l2046
  7126                           
  7127                           ;Display.c: 19: SEG23COM0 = 1;
  7128  030D  17A2               	bsf	34,7
  7129                           
  7130                           ;Display.c: 20: }
  7131  030E  2B13               	goto	l2049
  7132  030F                     l2050:	
  7133  030F  002F               	movlb	15	; select bank15
  7134  0310  1E12               	btfss	18,4
  7135  0311  2B0F               	goto	l2050
  7136                           
  7137                           ;Display.c: 24: SEG23COM0 = 0;
  7138  0312  13A2               	bcf	34,7
  7139  0313                     l2049:	
  7140                           
  7141                           ;Display.c: 25: }
  7142                           ;Display.c: 26: if(DpyNum[0]&0x02)
  7143  0313  0020               	movlb	0	; select bank0
  7144  0314  1CE9               	btfss	_DpyNum,1
  7145  0315  2B1B               	goto	l2058
  7146  0316                     l2054:	
  7147  0316  002F               	movlb	15	; select bank15
  7148  0317  1E12               	btfss	18,4
  7149  0318  2B16               	goto	l2054
  7150                           
  7151                           ;Display.c: 29: SEG23COM1 = 1;
  7152  0319  17A5               	bsf	37,7
  7153                           
  7154                           ;Display.c: 30: }
  7155  031A  2B1F               	goto	l2057
  7156  031B                     l2058:	
  7157  031B  002F               	movlb	15	; select bank15
  7158  031C  1E12               	btfss	18,4
  7159  031D  2B1B               	goto	l2058
  7160                           
  7161                           ;Display.c: 34: SEG23COM1 = 0;
  7162  031E  13A5               	bcf	37,7
  7163  031F                     l2057:	
  7164                           
  7165                           ;Display.c: 35: }
  7166                           ;Display.c: 36: if(DpyNum[0]&0x04)
  7167  031F  0020               	movlb	0	; select bank0
  7168  0320  1D69               	btfss	_DpyNum,2
  7169  0321  2B27               	goto	l2066
  7170  0322                     l2062:	
  7171  0322  002F               	movlb	15	; select bank15
  7172  0323  1E12               	btfss	18,4
  7173  0324  2B22               	goto	l2062
  7174                           
  7175                           ;Display.c: 39: SEG23COM2 = 1;
  7176  0325  17A8               	bsf	40,7
  7177                           
  7178                           ;Display.c: 40: }
  7179  0326  2B2B               	goto	l2065
  7180  0327                     l2066:	
  7181  0327  002F               	movlb	15	; select bank15
  7182  0328  1E12               	btfss	18,4
  7183  0329  2B27               	goto	l2066
  7184                           
  7185                           ;Display.c: 44: SEG23COM2 = 0;
  7186  032A  13A8               	bcf	40,7
  7187  032B                     l2065:	
  7188                           
  7189                           ;Display.c: 45: }
  7190                           ;Display.c: 46: if(DpyNum[0]&0x08)
  7191  032B  0020               	movlb	0	; select bank0
  7192  032C  1DE9               	btfss	_DpyNum,3
  7193  032D  2B33               	goto	l2074
  7194  032E                     l2070:	
  7195  032E  002F               	movlb	15	; select bank15
  7196  032F  1E12               	btfss	18,4
  7197  0330  2B2E               	goto	l2070
  7198                           
  7199                           ;Display.c: 49: SEG23COM3 = 1;
  7200  0331  17AB               	bsf	43,7
  7201                           
  7202                           ;Display.c: 50: }
  7203  0332  2B37               	goto	l2073
  7204  0333                     l2074:	
  7205  0333  002F               	movlb	15	; select bank15
  7206  0334  1E12               	btfss	18,4
  7207  0335  2B33               	goto	l2074
  7208                           
  7209                           ;Display.c: 54: SEG23COM3 = 0;
  7210  0336  13AB               	bcf	43,7
  7211  0337                     l2073:	
  7212                           
  7213                           ;Display.c: 55: }
  7214                           ;Display.c: 56: if(DpyNum[0]&0x10)
  7215  0337  0020               	movlb	0	; select bank0
  7216  0338  1E69               	btfss	_DpyNum,4
  7217  0339  2B3F               	goto	l2082
  7218  033A                     l2078:	
  7219  033A  002F               	movlb	15	; select bank15
  7220  033B  1E12               	btfss	18,4
  7221  033C  2B3A               	goto	l2078
  7222                           
  7223                           ;Display.c: 59: SEG22COM2 = 1;
  7224  033D  1728               	bsf	40,6
  7225                           
  7226                           ;Display.c: 60: }
  7227  033E  2B43               	goto	l2081
  7228  033F                     l2082:	
  7229  033F  002F               	movlb	15	; select bank15
  7230  0340  1E12               	btfss	18,4
  7231  0341  2B3F               	goto	l2082
  7232                           
  7233                           ;Display.c: 64: SEG22COM2 = 0;
  7234  0342  1328               	bcf	40,6
  7235  0343                     l2081:	
  7236                           
  7237                           ;Display.c: 65: }
  7238                           ;Display.c: 66: if(DpyNum[0]&0x20)
  7239  0343  0020               	movlb	0	; select bank0
  7240  0344  1EE9               	btfss	_DpyNum,5
  7241  0345  2B4B               	goto	l2090
  7242  0346                     l2086:	
  7243  0346  002F               	movlb	15	; select bank15
  7244  0347  1E12               	btfss	18,4
  7245  0348  2B46               	goto	l2086
  7246                           
  7247                           ;Display.c: 69: SEG22COM0 = 1;
  7248  0349  1722               	bsf	34,6
  7249                           
  7250                           ;Display.c: 70: }
  7251  034A  2B4F               	goto	l2089
  7252  034B                     l2090:	
  7253  034B  002F               	movlb	15	; select bank15
  7254  034C  1E12               	btfss	18,4
  7255  034D  2B4B               	goto	l2090
  7256                           
  7257                           ;Display.c: 74: SEG22COM0 = 0;
  7258  034E  1322               	bcf	34,6
  7259  034F                     l2089:	
  7260                           
  7261                           ;Display.c: 75: }
  7262                           ;Display.c: 76: if(DpyNum[0]&0x40)
  7263  034F  0020               	movlb	0	; select bank0
  7264  0350  1F69               	btfss	_DpyNum,6
  7265  0351  2B57               	goto	l2098
  7266  0352                     l2094:	
  7267  0352  002F               	movlb	15	; select bank15
  7268  0353  1E12               	btfss	18,4
  7269  0354  2B52               	goto	l2094
  7270                           
  7271                           ;Display.c: 79: SEG22COM1 = 1;
  7272  0355  1725               	bsf	37,6
  7273                           
  7274                           ;Display.c: 80: }
  7275  0356  2B5B               	goto	l2097
  7276  0357                     l2098:	
  7277  0357  002F               	movlb	15	; select bank15
  7278  0358  1E12               	btfss	18,4
  7279  0359  2B57               	goto	l2098
  7280                           
  7281                           ;Display.c: 84: SEG22COM1 = 0;
  7282  035A  1325               	bcf	37,6
  7283  035B                     l2097:	
  7284                           
  7285                           ;Display.c: 85: }
  7286                           ;Display.c: 87: if(DpyNum[1]&0x01)
  7287  035B  0020               	movlb	0	; select bank0
  7288  035C  1C6A               	btfss	_DpyNum+1,0
  7289  035D  2B63               	goto	l2106
  7290  035E                     l2102:	
  7291  035E  002F               	movlb	15	; select bank15
  7292  035F  1E12               	btfss	18,4
  7293  0360  2B5E               	goto	l2102
  7294                           
  7295                           ;Display.c: 90: SEG6COM0 = 1;
  7296  0361  1720               	bsf	32,6
  7297                           
  7298                           ;Display.c: 91: }
  7299  0362  2B67               	goto	l2105
  7300  0363                     l2106:	
  7301  0363  002F               	movlb	15	; select bank15
  7302  0364  1E12               	btfss	18,4
  7303  0365  2B63               	goto	l2106
  7304                           
  7305                           ;Display.c: 95: SEG6COM0 = 0;
  7306  0366  1320               	bcf	32,6
  7307  0367                     l2105:	
  7308                           
  7309                           ;Display.c: 96: }
  7310                           ;Display.c: 97: if(DpyNum[1]&0x02)
  7311  0367  0020               	movlb	0	; select bank0
  7312  0368  1CEA               	btfss	_DpyNum+1,1
  7313  0369  2B6F               	goto	l2114
  7314  036A                     l2110:	
  7315  036A  002F               	movlb	15	; select bank15
  7316  036B  1E12               	btfss	18,4
  7317  036C  2B6A               	goto	l2110
  7318                           
  7319                           ;Display.c: 100: SEG6COM1 = 1;
  7320  036D  1723               	bsf	35,6
  7321                           
  7322                           ;Display.c: 101: }
  7323  036E  2B73               	goto	l2113
  7324  036F                     l2114:	
  7325  036F  002F               	movlb	15	; select bank15
  7326  0370  1E12               	btfss	18,4
  7327  0371  2B6F               	goto	l2114
  7328                           
  7329                           ;Display.c: 105: SEG6COM1 = 0;
  7330  0372  1323               	bcf	35,6
  7331  0373                     l2113:	
  7332                           
  7333                           ;Display.c: 106: }
  7334                           ;Display.c: 107: if(DpyNum[1]&0x04)
  7335  0373  0020               	movlb	0	; select bank0
  7336  0374  1D6A               	btfss	_DpyNum+1,2
  7337  0375  2B7B               	goto	l2122
  7338  0376                     l2118:	
  7339  0376  002F               	movlb	15	; select bank15
  7340  0377  1E12               	btfss	18,4
  7341  0378  2B76               	goto	l2118
  7342                           
  7343                           ;Display.c: 110: SEG6COM2 = 1;
  7344  0379  1726               	bsf	38,6
  7345                           
  7346                           ;Display.c: 111: }
  7347  037A  2B7F               	goto	l2121
  7348  037B                     l2122:	
  7349  037B  002F               	movlb	15	; select bank15
  7350  037C  1E12               	btfss	18,4
  7351  037D  2B7B               	goto	l2122
  7352                           
  7353                           ;Display.c: 115: SEG6COM2 = 0;
  7354  037E  1326               	bcf	38,6
  7355  037F                     l2121:	
  7356                           
  7357                           ;Display.c: 116: }
  7358                           ;Display.c: 117: if(DpyNum[1]&0x08)
  7359  037F  0020               	movlb	0	; select bank0
  7360  0380  1DEA               	btfss	_DpyNum+1,3
  7361  0381  2B87               	goto	l2130
  7362  0382                     l2126:	
  7363  0382  002F               	movlb	15	; select bank15
  7364  0383  1E12               	btfss	18,4
  7365  0384  2B82               	goto	l2126
  7366                           
  7367                           ;Display.c: 120: SEG6COM3 = 1;
  7368  0385  1729               	bsf	41,6
  7369                           
  7370                           ;Display.c: 121: }
  7371  0386  2B8B               	goto	l2129
  7372  0387                     l2130:	
  7373  0387  002F               	movlb	15	; select bank15
  7374  0388  1E12               	btfss	18,4
  7375  0389  2B87               	goto	l2130
  7376                           
  7377                           ;Display.c: 125: SEG6COM3 = 0;
  7378  038A  1329               	bcf	41,6
  7379  038B                     l2129:	
  7380                           
  7381                           ;Display.c: 126: }
  7382                           ;Display.c: 127: if(DpyNum[1]&0x10)
  7383  038B  0020               	movlb	0	; select bank0
  7384  038C  1E6A               	btfss	_DpyNum+1,4
  7385  038D  2B93               	goto	l2138
  7386  038E                     l2134:	
  7387  038E  002F               	movlb	15	; select bank15
  7388  038F  1E12               	btfss	18,4
  7389  0390  2B8E               	goto	l2134
  7390                           
  7391                           ;Display.c: 130: SEG3COM2 = 1;
  7392  0391  15A6               	bsf	38,3
  7393                           
  7394                           ;Display.c: 131: }
  7395  0392  2B97               	goto	l2137
  7396  0393                     l2138:	
  7397  0393  002F               	movlb	15	; select bank15
  7398  0394  1E12               	btfss	18,4
  7399  0395  2B93               	goto	l2138
  7400                           
  7401                           ;Display.c: 135: SEG3COM2 = 0;
  7402  0396  11A6               	bcf	38,3
  7403  0397                     l2137:	
  7404                           
  7405                           ;Display.c: 136: }
  7406                           ;Display.c: 137: if(DpyNum[1]&0x20)
  7407  0397  0020               	movlb	0	; select bank0
  7408  0398  1EEA               	btfss	_DpyNum+1,5
  7409  0399  2B9F               	goto	l2146
  7410  039A                     l2142:	
  7411  039A  002F               	movlb	15	; select bank15
  7412  039B  1E12               	btfss	18,4
  7413  039C  2B9A               	goto	l2142
  7414                           
  7415                           ;Display.c: 140: SEG3COM0 = 1;
  7416  039D  15A0               	bsf	32,3
  7417                           
  7418                           ;Display.c: 141: }
  7419  039E  2BA3               	goto	l2145
  7420  039F                     l2146:	
  7421  039F  002F               	movlb	15	; select bank15
  7422  03A0  1E12               	btfss	18,4
  7423  03A1  2B9F               	goto	l2146
  7424                           
  7425                           ;Display.c: 145: SEG3COM0 = 0;
  7426  03A2  11A0               	bcf	32,3
  7427  03A3                     l2145:	
  7428                           
  7429                           ;Display.c: 146: }
  7430                           ;Display.c: 147: if(DpyNum[1]&0x40)
  7431  03A3  0020               	movlb	0	; select bank0
  7432  03A4  1F6A               	btfss	_DpyNum+1,6
  7433  03A5  2BAB               	goto	l2154
  7434  03A6                     l2150:	
  7435  03A6  002F               	movlb	15	; select bank15
  7436  03A7  1E12               	btfss	18,4
  7437  03A8  2BA6               	goto	l2150
  7438                           
  7439                           ;Display.c: 150: SEG3COM1 = 1;
  7440  03A9  15A3               	bsf	35,3
  7441                           
  7442                           ;Display.c: 151: }
  7443  03AA  2BAF               	goto	l2153
  7444  03AB                     l2154:	
  7445  03AB  002F               	movlb	15	; select bank15
  7446  03AC  1E12               	btfss	18,4
  7447  03AD  2BAB               	goto	l2154
  7448                           
  7449                           ;Display.c: 155: SEG3COM1 = 0;
  7450  03AE  11A3               	bcf	35,3
  7451  03AF                     l2153:	
  7452                           
  7453                           ;Display.c: 156: }
  7454                           ;Display.c: 157: if(DpyNum[1]&0x80)
  7455  03AF  0020               	movlb	0	; select bank0
  7456  03B0  1FEA               	btfss	_DpyNum+1,7
  7457  03B1  2BB7               	goto	l2162
  7458  03B2                     l2158:	
  7459  03B2  002F               	movlb	15	; select bank15
  7460  03B3  1E12               	btfss	18,4
  7461  03B4  2BB2               	goto	l2158
  7462                           
  7463                           ;Display.c: 160: SEG16COM3 = 1;
  7464  03B5  142B               	bsf	43,0
  7465                           
  7466                           ;Display.c: 161: }
  7467  03B6  2BBB               	goto	l2161
  7468  03B7                     l2162:	
  7469  03B7  002F               	movlb	15	; select bank15
  7470  03B8  1E12               	btfss	18,4
  7471  03B9  2BB7               	goto	l2162
  7472                           
  7473                           ;Display.c: 165: SEG16COM3 = 0;
  7474  03BA  102B               	bcf	43,0
  7475  03BB                     l2161:	
  7476                           
  7477                           ;Display.c: 166: }
  7478                           ;Display.c: 168: if(DpyNum[2]&0x01)
  7479  03BB  0020               	movlb	0	; select bank0
  7480  03BC  1C6B               	btfss	_DpyNum+2,0
  7481  03BD  2BC3               	goto	l2170
  7482  03BE                     l2166:	
  7483  03BE  002F               	movlb	15	; select bank15
  7484  03BF  1E12               	btfss	18,4
  7485  03C0  2BBE               	goto	l2166
  7486                           
  7487                           ;Display.c: 171: SEG11COM0 = 1;
  7488  03C1  15A1               	bsf	33,3
  7489                           
  7490                           ;Display.c: 172: }
  7491  03C2  2BC7               	goto	l2169
  7492  03C3                     l2170:	
  7493  03C3  002F               	movlb	15	; select bank15
  7494  03C4  1E12               	btfss	18,4
  7495  03C5  2BC3               	goto	l2170
  7496                           
  7497                           ;Display.c: 176: SEG11COM0 = 0;
  7498  03C6  11A1               	bcf	33,3
  7499  03C7                     l2169:	
  7500                           
  7501                           ;Display.c: 177: }
  7502                           ;Display.c: 178: if(DpyNum[2]&0x02)
  7503  03C7  0020               	movlb	0	; select bank0
  7504  03C8  1CEB               	btfss	_DpyNum+2,1
  7505  03C9  2BCF               	goto	l2178
  7506  03CA                     l2174:	
  7507  03CA  002F               	movlb	15	; select bank15
  7508  03CB  1E12               	btfss	18,4
  7509  03CC  2BCA               	goto	l2174
  7510                           
  7511                           ;Display.c: 181: SEG11COM1 = 1;
  7512  03CD  15A4               	bsf	36,3
  7513                           
  7514                           ;Display.c: 182: }
  7515  03CE  2BD3               	goto	l2177
  7516  03CF                     l2178:	
  7517  03CF  002F               	movlb	15	; select bank15
  7518  03D0  1E12               	btfss	18,4
  7519  03D1  2BCF               	goto	l2178
  7520                           
  7521                           ;Display.c: 186: SEG11COM1 = 0;
  7522  03D2  11A4               	bcf	36,3
  7523  03D3                     l2177:	
  7524                           
  7525                           ;Display.c: 187: }
  7526                           ;Display.c: 188: if(DpyNum[2]&0x04)
  7527  03D3  0020               	movlb	0	; select bank0
  7528  03D4  1D6B               	btfss	_DpyNum+2,2
  7529  03D5  2BDB               	goto	l2186
  7530  03D6                     l2182:	
  7531  03D6  002F               	movlb	15	; select bank15
  7532  03D7  1E12               	btfss	18,4
  7533  03D8  2BD6               	goto	l2182
  7534                           
  7535                           ;Display.c: 191: SEG11COM2 = 1;
  7536  03D9  15A7               	bsf	39,3
  7537                           
  7538                           ;Display.c: 192: }
  7539  03DA  2BDF               	goto	l2185
  7540  03DB                     l2186:	
  7541  03DB  002F               	movlb	15	; select bank15
  7542  03DC  1E12               	btfss	18,4
  7543  03DD  2BDB               	goto	l2186
  7544                           
  7545                           ;Display.c: 196: SEG11COM2 = 0;
  7546  03DE  11A7               	bcf	39,3
  7547  03DF                     l2185:	
  7548                           
  7549                           ;Display.c: 197: }
  7550                           ;Display.c: 198: if(DpyNum[2]&0x08)
  7551  03DF  0020               	movlb	0	; select bank0
  7552  03E0  1DEB               	btfss	_DpyNum+2,3
  7553  03E1  2BE7               	goto	l2194
  7554  03E2                     l2190:	
  7555  03E2  002F               	movlb	15	; select bank15
  7556  03E3  1E12               	btfss	18,4
  7557  03E4  2BE2               	goto	l2190
  7558                           
  7559                           ;Display.c: 201: SEG11COM3 = 1;
  7560  03E5  15AA               	bsf	42,3
  7561                           
  7562                           ;Display.c: 202: }
  7563  03E6  2BEB               	goto	l2193
  7564  03E7                     l2194:	
  7565  03E7  002F               	movlb	15	; select bank15
  7566  03E8  1E12               	btfss	18,4
  7567  03E9  2BE7               	goto	l2194
  7568                           
  7569                           ;Display.c: 206: SEG11COM3 = 0;
  7570  03EA  11AA               	bcf	42,3
  7571  03EB                     l2193:	
  7572                           
  7573                           ;Display.c: 207: }
  7574                           ;Display.c: 208: if(DpyNum[2]&0x10)
  7575  03EB  0020               	movlb	0	; select bank0
  7576  03EC  1E6B               	btfss	_DpyNum+2,4
  7577  03ED  2BF3               	goto	l2202
  7578  03EE                     l2198:	
  7579  03EE  002F               	movlb	15	; select bank15
  7580  03EF  1E12               	btfss	18,4
  7581  03F0  2BEE               	goto	l2198
  7582                           
  7583                           ;Display.c: 211: SEG16COM2 = 1;
  7584  03F1  1428               	bsf	40,0
  7585                           
  7586                           ;Display.c: 212: }
  7587  03F2  2BF7               	goto	l2201
  7588  03F3                     l2202:	
  7589  03F3  002F               	movlb	15	; select bank15
  7590  03F4  1E12               	btfss	18,4
  7591  03F5  2BF3               	goto	l2202
  7592                           
  7593                           ;Display.c: 216: SEG16COM2 = 0;
  7594  03F6  1028               	bcf	40,0
  7595  03F7                     l2201:	
  7596                           
  7597                           ;Display.c: 217: }
  7598                           ;Display.c: 218: if(DpyNum[2]&0x20)
  7599  03F7  0020               	movlb	0	; select bank0
  7600  03F8  1EEB               	btfss	_DpyNum+2,5
  7601  03F9  2BFF               	goto	l2210
  7602  03FA                     l2206:	
  7603  03FA  002F               	movlb	15	; select bank15
  7604  03FB  1E12               	btfss	18,4
  7605  03FC  2BFA               	goto	l2206
  7606                           
  7607                           ;Display.c: 221: SEG16COM0 = 1;
  7608  03FD  1422               	bsf	34,0
  7609                           
  7610                           ;Display.c: 222: }
  7611  03FE  2C03               	goto	l2209
  7612  03FF                     l2210:	
  7613  03FF  002F               	movlb	15	; select bank15
  7614  0400  1E12               	btfss	18,4
  7615  0401  2BFF               	goto	l2210
  7616                           
  7617                           ;Display.c: 226: SEG16COM0 = 0;
  7618  0402  1022               	bcf	34,0
  7619  0403                     l2209:	
  7620                           
  7621                           ;Display.c: 227: }
  7622                           ;Display.c: 228: if(DpyNum[2]&0x40)
  7623  0403  0020               	movlb	0	; select bank0
  7624  0404  1F6B               	btfss	_DpyNum+2,6
  7625  0405  2C0B               	goto	l2218
  7626  0406                     l2214:	
  7627  0406  002F               	movlb	15	; select bank15
  7628  0407  1E12               	btfss	18,4
  7629  0408  2C06               	goto	l2214
  7630                           
  7631                           ;Display.c: 231: SEG16COM1 = 1;
  7632  0409  1425               	bsf	37,0
  7633                           
  7634                           ;Display.c: 232: }
  7635  040A  0008               	return
  7636  040B                     l2218:	
  7637  040B  002F               	movlb	15	; select bank15
  7638  040C  1E12               	btfss	18,4
  7639  040D  2C0B               	goto	l2218
  7640                           
  7641                           ;Display.c: 236: SEG16COM1 = 0;
  7642  040E  1025               	bcf	37,0
  7643  040F  0008               	return
  7644  0410                     __end_of_LcdDisplayNum:	
  7645  0410                     __ptext1999:	
  7646 ;; =============== function _GetRomData ends ============
  7647                           
  7648                           
  7649 ;; *************** function _LcdDisplay_Err *****************
  7650 ;; Defined at:
  7651 ;;		line 370 in file "F:\work\WYP\NBIoT\Display.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;		None               void
  7658 ;; Registers used:
  7659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 1D/0
  7662 ;;		On exit  : 1F/F
  7663 ;;		Unchanged: FFFE0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7665 ;;      Params:         0       0       0       0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    4
  7672 ;; This function calls:
  7673 ;;		___lbdiv
  7674 ;;		___lbmod
  7675 ;;		_LcdDisplayNum
  7676 ;; This function is called by:
  7677 ;;		_CallProc
  7678 ;;		_TestProc
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681  0410                     _LcdDisplay_Err:	
  7682  0410                     l2339:	
  7683                           ;Display.c: 374: while(WA==0);
  7684                           
  7685                           ; Regs used in _LcdDisplay_Err: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7686                           
  7687  0410  002F               	movlb	15	; select bank15
  7688  0411  1E12               	btfss	18,4
  7689  0412  2C10               	goto	l2339
  7690                           
  7691                           ;Display.c: 375: SEG5COM3=0;
  7692  0413  12A9               	bcf	41,5
  7693  0414                     l2342:	
  7694                           ;Display.c: 376: while(WA==0);
  7695                           
  7696  0414  1E12               	btfss	18,4
  7697  0415  2C14               	goto	l2342
  7698                           
  7699                           ;Display.c: 377: SEG21COM2=1;
  7700  0416  16A8               	bsf	40,5
  7701                           
  7702                           ;Display.c: 378: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  7703  0417  3079               	movlw	121
  7704  0418  0020               	movlb	0	; select bank0
  7705  0419  00E9               	movwf	_DpyNum
  7706                           
  7707                           ;Display.c: 379: DpyNum[1]=SegCode[ErrState/10];
  7708  041A  300A               	movlw	10
  7709  041B  00A0               	movwf	?___lbdiv
  7710  041C  0862               	movf	_ErrState,w
  7711  041D  318F  275F  3182   	fcall	___lbdiv
  7712  0420  2430               	fcall	PL4	;call to abstracted procedure
  7713                           
  7714                           ;Display.c: 380: DpyNum[2]=SegCode[ErrState%10];
  7715  0421  300A               	movlw	10
  7716  0422  00A0               	movwf	?___lbmod
  7717  0423  0862               	movf	_ErrState,w
  7718  0424  318F  2792  3182   	fcall	___lbmod
  7719  0427  3E01               	addlw	low (_SegCode| (0+32768))
  7720  0428  0084               	movwf	4
  7721  0429  3090               	movlw	high (_SegCode| (0+32768))
  7722  042A  1803               	skipnc
  7723  042B  3E01               	addlw	1
  7724  042C  0085               	movwf	5
  7725  042D  0800               	movf	0,w	;code access
  7726  042E  00EB               	movwf	_DpyNum+2
  7727                           
  7728                           ;Display.c: 381: LcdDisplayNum();
  7729  042F  2B07               	ljmp	l32102
  7730  0430                     __end_of_LcdDisplay_Err:	
  7731  0430                     PL4:	
  7732  0430  3E01               	addlw	low (_SegCode| (0+32768))
  7733  0431  0084               	movwf	4
  7734  0432  3090               	movlw	high (_SegCode| (0+32768))
  7735  0433  1803               	skipnc
  7736  0434  3E01               	addlw	1
  7737  0435  0085               	movwf	5
  7738  0436  0800               	movf	0,w	;code access
  7739  0437  00EA               	movwf	_DpyNum+1
  7740  0438  0008               	return
  7741                           
  7742                           	psect	text1970
  7743  002C                     __ptext1970:	
  7744 ;; =============== function _InitGPRS ends ============
  7745                           
  7746                           
  7747 ;; *************** function _DS18X20_ReadMeas *****************
  7748 ;; Defined at:
  7749 ;;		line 144 in file "F:\work\WYP\NBIoT\DS18x20.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  bVerify         1    wreg     unsigned char 
  7752 ;; Auto vars:     Size  Location     Type
  7753 ;;  bVerify         1   10[BANK0 ] unsigned char 
  7754 ;;  i               1   11[BANK0 ] unsigned char 
  7755 ;; Return value:  Size  Location     Type
  7756 ;;                  1    wreg      unsigned char 
  7757 ;; Registers used:
  7758 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7759 ;; Tracked objects:
  7760 ;;		On entry : 1F/0
  7761 ;;		On exit  : 1E/0
  7762 ;;		Unchanged: 0/0
  7763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7764 ;;      Params:         0       0       0       0       0       0       0       0
  7765 ;;      Locals:         0       2       0       0       0       0       0       0
  7766 ;;      Temps:          0       0       0       0       0       0       0       0
  7767 ;;      Totals:         0       2       0       0       0       0       0       0
  7768 ;;Total ram usage:        2 bytes
  7769 ;; Hardware stack levels used:    1
  7770 ;; Hardware stack levels required when called:    5
  7771 ;; This function calls:
  7772 ;;		_OneWire_Reset
  7773 ;;		_OneWire_Command
  7774 ;;		_OneWire_ReadByte
  7775 ;;		_GetVerify_CRC8
  7776 ;; This function is called by:
  7777 ;;		_ReadTData
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780  002C                     _DS18X20_ReadMeas:	
  7781                           
  7782                           ; Regs used in _DS18X20_ReadMeas: [wreg+fsr1l-status,0+pclath+cstack]
  7783                           ;DS18X20_ReadMeas@bVerify stored from wreg
  7784  002C  00AA               	movwf	DS18X20_ReadMeas@bVerify
  7785                           
  7786                           ;DS18x20.c: 145: unsigned char i;
  7787                           ;DS18x20.c: 146: if(OneWire_Reset())
  7788  002D  21AB  3180         	fcall	_OneWire_Reset
  7789  002F  3A00               	xorlw	0
  7790  0030  1D03               	btfss	3,2
  7791                           
  7792                           ;DS18x20.c: 147: return 0x01;
  7793  0031  3401               	retlw	1
  7794                           
  7795                           ;DS18x20.c: 148: if(OneWire_Command(0xBE))
  7796  0032  30BE               	movlw	190
  7797  0033  20B3  3180         	fcall	_OneWire_Command
  7798  0035  3A00               	xorlw	0
  7799  0036  1D03               	btfss	3,2
  7800  0037  3401               	retlw	1
  7801                           
  7802                           ;DS18x20.c: 150: if(bVerify)
  7803  0038  082A               	movf	DS18X20_ReadMeas@bVerify,w
  7804  0039  1903               	btfsc	3,2
  7805  003A  2853               	goto	l32956
  7806                           
  7807                           ;DS18x20.c: 151: {
  7808                           ;DS18x20.c: 152: for ( i=0 ; i< 9; i++ )
  7809  003B  01AB               	clrf	DS18X20_ReadMeas@i
  7810  003C                     l32938:	
  7811                           
  7812                           ;DS18x20.c: 153: DS18X20_Scratchpad[i]=OneWire_ReadByte();
  7813  003C  082B               	movf	DS18X20_ReadMeas@i,w
  7814  003D  3ED3               	addlw	_DS18X20_Scratchpad& (0+255)
  7815  003E  0086               	movwf	6
  7816  003F  0187               	clrf	7
  7817  0040  205B  3180         	fcall	_OneWire_ReadByte
  7818  0042  0081               	movwf	1
  7819  0043  0AAB               	incf	DS18X20_ReadMeas@i,f
  7820  0044  3009               	movlw	9
  7821  0045  022B               	subwf	DS18X20_ReadMeas@i,w
  7822  0046  1C03               	skipc
  7823  0047  283C               	goto	l32938
  7824                           
  7825                           ;DS18x20.c: 154: if ( GetVerify_CRC8( DS18X20_Scratchpad, 9-1 )!=DS18X20_Scratchpad[9-1]
      +                           )
  7826  0048  3008               	movlw	8
  7827  0049  00A0               	movwf	?_GetVerify_CRC8
  7828  004A  01A1               	clrf	?_GetVerify_CRC8+1
  7829  004B  30D3               	movlw	_DS18X20_Scratchpad& (0+255)
  7830  004C  2087  3180         	fcall	_GetVerify_CRC8
  7831  004E  0021               	movlb	1	; select bank1
  7832  004F  065B               	xorwf	(_DS18X20_Scratchpad^(0+128)+8),w
  7833  0050  1D03               	btfss	3,2
  7834                           
  7835                           ;DS18x20.c: 155: return 0x03;
  7836  0051  3403               	retlw	3
  7837                           
  7838                           ;DS18x20.c: 156: return 0x00;
  7839  0052  3400               	retlw	0
  7840  0053                     l32956:	
  7841                           
  7842                           ;DS18x20.c: 158: else
  7843                           ;DS18x20.c: 159: {
  7844                           ;DS18x20.c: 160: DS18X20_Scratchpad[0]=OneWire_ReadByte();
  7845  0053  205B  3180         	fcall	_OneWire_ReadByte
  7846  0055  0021               	movlb	1	; select bank1
  7847  0056  00D3               	movwf	_DS18X20_Scratchpad^(0+128)
  7848                           
  7849                           ;DS18x20.c: 161: DS18X20_Scratchpad[1]=OneWire_ReadByte();
  7850  0057  205B               	fcall	_OneWire_ReadByte
  7851  0058  0021               	movlb	1	; select bank1
  7852  0059  00D4               	movwf	(_DS18X20_Scratchpad^(0+128)+1)
  7853  005A  3400               	retlw	0
  7854  005B                     __end_of_DS18X20_ReadMeas:	
  7855  005B                     __ptext1988:	
  7856 ;; =============== function _OneWire_WriteByte ends ============
  7857                           
  7858                           
  7859 ;; *************** function _OneWire_ReadByte *****************
  7860 ;; Defined at:
  7861 ;;		line 190 in file "F:\work\WYP\NBIoT\OneWire.c"
  7862 ;; Parameters:    Size  Location     Type
  7863 ;;		None
  7864 ;; Auto vars:     Size  Location     Type
  7865 ;;  i               1    3[BANK0 ] unsigned char 
  7866 ;;  value           1    2[BANK0 ] unsigned char 
  7867 ;;  b               1    1[BANK0 ] unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      unsigned char 
  7870 ;; Registers used:
  7871 ;;		wreg, status,2, status,0
  7872 ;; Tracked objects:
  7873 ;;		On entry : 1E/0
  7874 ;;		On exit  : 1F/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7877 ;;      Params:         0       0       0       0       0       0       0       0
  7878 ;;      Locals:         0       3       0       0       0       0       0       0
  7879 ;;      Temps:          0       1       0       0       0       0       0       0
  7880 ;;      Totals:         0       4       0       0       0       0       0       0
  7881 ;;Total ram usage:        4 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    3
  7884 ;; This function calls:
  7885 ;;		Nothing
  7886 ;; This function is called by:
  7887 ;;		_DS18X20_ReadMeas
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890  005B                     _OneWire_ReadByte:	
  7891                           
  7892                           ;OneWire.c: 191: unsigned char i;
  7893                           ;OneWire.c: 192: unsigned char b;
  7894                           ;OneWire.c: 193: unsigned char value=0;
  7895                           
  7896                           ; Regs used in _OneWire_ReadByte: [wreg+status,2+status,0]
  7897  005B  0020               	movlb	0	; select bank0
  7898  005C  01A2               	clrf	OneWire_ReadByte@value
  7899                           
  7900                           ;OneWire.c: 194: for(i=0;i<8;i++)
  7901  005D  01A3               	clrf	OneWire_ReadByte@i
  7902  005E                     l19192:	
  7903                           
  7904                           ;OneWire.c: 195: {
  7905                           ;OneWire.c: 196: (GIE = 0);
  7906  005E  138B               	bcf	11,7
  7907                           
  7908                           ;OneWire.c: 197: TRISB1 = 0;LATB1=0;
  7909  005F  0021               	movlb	1	; select bank1
  7910  0060  108D               	bcf	13,1
  7911  0061  0022               	movlb	2	; select bank2
  7912  0062  108D               	bcf	13,1
  7913                           
  7914                           ;OneWire.c: 198: _delay((unsigned long)((2)*(4000000/4000000.0)));
  7915  0063  2864               	nop2	;2 cycle nop
  7916                           
  7917                           ;OneWire.c: 200: TRISB1=1;
  7918  0064  0021               	movlb	1	; select bank1
  7919  0065  148D               	bsf	13,1
  7920                           
  7921                           ;OneWire.c: 201: _delay((unsigned long)((15-3-9)*(4000000/4000000.0)));
  7922  0066  2867               	nop2	;2 cycle nop
  7923  0067  0064               	clrwdt
  7924                           
  7925                           ;OneWire.c: 202: b=RB1;
  7926  0068  3000               	movlw	0
  7927  0069  0020               	movlb	0	; select bank0
  7928  006A  188D               	btfsc	13,1
  7929  006B  3001               	movlw	1
  7930  006C  00A1               	movwf	OneWire_ReadByte@b
  7931                           
  7932                           ;OneWire.c: 203: (GIE = 1);
  7933  006D  178B               	bsf	11,7
  7934                           
  7935                           ;OneWire.c: 204: _delay((unsigned long)((60)*(4000000/4000000.0)));
  7936  006E  3013               	movlw	19
  7937  006F  00A0               	movwf	??_OneWire_ReadByte
  7938  0070                     u8997:	
  7939  0070  0BA0               	decfsz	??_OneWire_ReadByte,f
  7940  0071  2870               	goto	u8997
  7941  0072  2873               	nop2	;nop
  7942                           
  7943                           ;OneWire.c: 206: if(b)
  7944  0073  0020               	movlb	0	; select bank0
  7945  0074  0821               	movf	OneWire_ReadByte@b,w
  7946  0075  1903               	btfsc	3,2
  7947  0076  2880               	goto	l31052
  7948                           
  7949                           ;OneWire.c: 207: {
  7950                           ;OneWire.c: 208: value|=(0x01<<i);
  7951  0077  3001               	movlw	1
  7952  0078  00A0               	movwf	??_OneWire_ReadByte
  7953  0079  0A23               	incf	OneWire_ReadByte@i,w
  7954  007A  287C               	goto	u4964
  7955  007B                     u4965:	
  7956  007B  35A0               	lslf	??_OneWire_ReadByte,f
  7957  007C                     u4964:	
  7958  007C  0B89               	decfsz	9,f
  7959  007D  287B               	goto	u4965
  7960  007E  0820               	movf	??_OneWire_ReadByte,w
  7961  007F  04A2               	iorwf	OneWire_ReadByte@value,f
  7962  0080                     l31052:	
  7963  0080  0AA3               	incf	OneWire_ReadByte@i,f
  7964  0081  3008               	movlw	8
  7965  0082  0223               	subwf	OneWire_ReadByte@i,w
  7966  0083  1C03               	skipc
  7967  0084  285E               	goto	l19192
  7968                           
  7969                           ;OneWire.c: 210: }
  7970                           ;OneWire.c: 211: }
  7971                           ;OneWire.c: 212: return(value);
  7972  0085  0822               	movf	OneWire_ReadByte@value,w
  7973  0086  0008               	return
  7974  0087                     __end_of_OneWire_ReadByte:	
  7975  0087                     __ptext2014:	
  7976 ;; =============== function _SimI2C_Init ends ============
  7977                           
  7978                           
  7979 ;; *************** function _GetVerify_CRC8 *****************
  7980 ;; Defined at:
  7981 ;;		line 90 in file "F:\work\WYP\NBIoT\Verify.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;  pBuff           1    wreg     PTR unsigned char 
  7984 ;;		 -> DS18X20_Scratchpad(9), 
  7985 ;;  Count           2    0[BANK0 ] unsigned int 
  7986 ;; Auto vars:     Size  Location     Type
  7987 ;;  pBuff           1    3[BANK0 ] PTR unsigned char 
  7988 ;;		 -> DS18X20_Scratchpad(9), 
  7989 ;;  i               2    6[BANK0 ] unsigned int 
  7990 ;;  crc             1    9[BANK0 ] unsigned char 
  7991 ;;  feedback_bit    1    8[BANK0 ] unsigned char 
  7992 ;;  data            1    5[BANK0 ] unsigned char 
  7993 ;;  bit_counter     1    4[BANK0 ] unsigned char 
  7994 ;; Return value:  Size  Location     Type
  7995 ;;                  1    wreg      unsigned char 
  7996 ;; Registers used:
  7997 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7998 ;; Tracked objects:
  7999 ;;		On entry : 1F/0
  8000 ;;		On exit  : 1F/0
  8001 ;;		Unchanged: FFFE0/0
  8002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8003 ;;      Params:         0       2       0       0       0       0       0       0
  8004 ;;      Locals:         0       7       0       0       0       0       0       0
  8005 ;;      Temps:          0       1       0       0       0       0       0       0
  8006 ;;      Totals:         0      10       0       0       0       0       0       0
  8007 ;;Total ram usage:       10 bytes
  8008 ;; Hardware stack levels used:    1
  8009 ;; Hardware stack levels required when called:    3
  8010 ;; This function calls:
  8011 ;;		Nothing
  8012 ;; This function is called by:
  8013 ;;		_DS18X20_ReadMeas
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016  0087                     _GetVerify_CRC8:	
  8017                           
  8018                           ; Regs used in _GetVerify_CRC8: [wreg+fsr1l-status,0]
  8019                           ;GetVerify_CRC8@pBuff stored from wreg
  8020  0087  00A3               	movwf	GetVerify_CRC8@pBuff
  8021                           
  8022                           ;Verify.c: 91: unsigned char crc;
  8023                           ;Verify.c: 92: unsigned int i;
  8024                           ;Verify.c: 93: unsigned char bit_counter;
  8025                           ;Verify.c: 94: unsigned char data;
  8026                           ;Verify.c: 95: unsigned char feedback_bit;
  8027                           ;Verify.c: 97: crc = 0x00;
  8028  0088  01A9               	clrf	GetVerify_CRC8@crc
  8029                           
  8030                           ;Verify.c: 99: for(i = 0; i != Count; i++)
  8031  0089  01A6               	clrf	GetVerify_CRC8@i
  8032  008A  01A7               	clrf	GetVerify_CRC8@i+1
  8033  008B                     l30640:	
  8034  008B  0821               	movf	GetVerify_CRC8@Count+1,w
  8035  008C  0627               	xorwf	GetVerify_CRC8@i+1,w
  8036  008D  1D03               	skipz
  8037  008E  2891               	goto	u4085
  8038  008F  0820               	movf	GetVerify_CRC8@Count,w
  8039  0090  0626               	xorwf	GetVerify_CRC8@i,w
  8040  0091                     u4085:	
  8041  0091  1903               	btfsc	3,2
  8042  0092  28B1               	goto	l30642
  8043                           
  8044                           ;Verify.c: 100: {
  8045                           ;Verify.c: 101: data = pBuff[i];
  8046  0093  0826               	movf	GetVerify_CRC8@i,w
  8047  0094  0723               	addwf	GetVerify_CRC8@pBuff,w
  8048  0095  00A2               	movwf	??_GetVerify_CRC8
  8049  0096  0086               	movwf	6
  8050  0097  0187               	clrf	7
  8051  0098  0801               	movf	1,w
  8052  0099  00A5               	movwf	GetVerify_CRC8@data
  8053                           
  8054                           ;Verify.c: 102: bit_counter = 8;
  8055  009A  3008               	movlw	8
  8056  009B  00A4               	movwf	GetVerify_CRC8@bit_counter
  8057  009C                     l30620:	
  8058                           
  8059                           ;Verify.c: 104: {
  8060                           ;Verify.c: 105: feedback_bit = (crc ^ data) & 0x01;
  8061  009C  0829               	movf	GetVerify_CRC8@crc,w
  8062  009D  0625               	xorwf	GetVerify_CRC8@data,w
  8063  009E  00A8               	movwf	GetVerify_CRC8@feedback_bit
  8064  009F  3001               	movlw	1
  8065  00A0  05A8               	andwf	GetVerify_CRC8@feedback_bit,f
  8066                           
  8067                           ;Verify.c: 106: if ( feedback_bit == 0x01 )
  8068  00A1  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8069  00A2  28A5               	goto	l30628
  8070                           
  8071                           ;Verify.c: 107: crc = crc ^ 0x18;
  8072  00A3  3018               	movlw	24
  8073  00A4  06A9               	xorwf	GetVerify_CRC8@crc,f
  8074  00A5                     l30628:	
  8075                           
  8076                           ;Verify.c: 108: crc = (crc >> 1) & 0x7F;
  8077  00A5  36A9               	lsrf	GetVerify_CRC8@crc,f
  8078  00A6  13A9               	bcf	GetVerify_CRC8@crc,7
  8079                           
  8080                           ;Verify.c: 109: if ( feedback_bit == 0x01 )
  8081  00A7  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  8082  00A8  28AA               	goto	l25409
  8083                           
  8084                           ;Verify.c: 110: crc = crc | 0x80;
  8085  00A9  17A9               	bsf	GetVerify_CRC8@crc,7
  8086  00AA                     l25409:	
  8087                           
  8088                           ;Verify.c: 111: data = data >> 1;
  8089  00AA  36A5               	lsrf	GetVerify_CRC8@data,f
  8090                           
  8091                           ;Verify.c: 112: bit_counter--;
  8092  00AB  0BA4               	decfsz	GetVerify_CRC8@bit_counter,f
  8093                           
  8094                           ;Verify.c: 113: }while (bit_counter > 0);
  8095  00AC  289C               	goto	l30620
  8096  00AD  0AA6               	incf	GetVerify_CRC8@i,f
  8097  00AE  1903               	skipnz
  8098  00AF  0AA7               	incf	GetVerify_CRC8@i+1,f
  8099  00B0  288B               	goto	l30640
  8100  00B1                     l30642:	
  8101                           
  8102                           ;Verify.c: 114: }
  8103                           ;Verify.c: 115: return crc;
  8104  00B1  0829               	movf	GetVerify_CRC8@crc,w
  8105  00B2  0008               	return
  8106  00B3                     __end_of_GetVerify_CRC8:	
  8107  00B3                     __ptext1972:	
  8108 ;; =============== function _DS18X20_StartMeas ends ============
  8109                           
  8110                           
  8111 ;; *************** function _OneWire_Command *****************
  8112 ;; Defined at:
  8113 ;;		line 126 in file "F:\work\WYP\NBIoT\OneWire.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;  command         1    wreg     unsigned char 
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;  command         1    4[BANK0 ] unsigned char 
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      unsigned char 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0, pclath, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 1F/0
  8124 ;;		On exit  : 1F/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8127 ;;      Params:         0       0       0       0       0       0       0       0
  8128 ;;      Locals:         0       1       0       0       0       0       0       0
  8129 ;;      Temps:          0       0       0       0       0       0       0       0
  8130 ;;      Totals:         0       1       0       0       0       0       0       0
  8131 ;;Total ram usage:        1 bytes
  8132 ;; Hardware stack levels used:    1
  8133 ;; Hardware stack levels required when called:    4
  8134 ;; This function calls:
  8135 ;;		_OneWire_Reset
  8136 ;;		_OneWire_WriteByte
  8137 ;; This function is called by:
  8138 ;;		_DS18X20_StartMeas
  8139 ;;		_DS18X20_ReadMeas
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142  00B3                     _OneWire_Command:	
  8143                           
  8144                           ; Regs used in _OneWire_Command: [wreg+status,2+status,0+pclath+cstack]
  8145                           ;OneWire_Command@command stored from wreg
  8146  00B3  00A4               	movwf	OneWire_Command@command
  8147                           
  8148                           ;OneWire.c: 127: if(OneWire_Reset())
  8149  00B4  21AB  3180         	fcall	_OneWire_Reset
  8150  00B6  3A00               	xorlw	0
  8151  00B7  1D03               	btfss	3,2
  8152                           
  8153                           ;OneWire.c: 128: return 0x01;
  8154  00B8  3401               	retlw	1
  8155                           
  8156                           ;OneWire.c: 129: OneWire_WriteByte( 0xCC );
  8157  00B9  30CC               	movlw	204
  8158  00BA  20BF  3180         	fcall	_OneWire_WriteByte
  8159                           
  8160                           ;OneWire.c: 130: OneWire_WriteByte( command );
  8161  00BC  0824               	movf	OneWire_Command@command,w
  8162  00BD  20BF               	fcall	_OneWire_WriteByte
  8163                           
  8164                           ;OneWire.c: 131: return 0x00;
  8165  00BE  3400               	retlw	0
  8166  00BF                     __end_of_OneWire_Command:	
  8167  00BF                     __ptext1987:	
  8168 ;; =============== function _SimI2C_Start ends ============
  8169                           
  8170                           
  8171 ;; *************** function _OneWire_WriteByte *****************
  8172 ;; Defined at:
  8173 ;;		line 167 in file "F:\work\WYP\NBIoT\OneWire.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  val             1    wreg     unsigned char 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  val             1    1[BANK0 ] unsigned char 
  8178 ;;  i               1    3[BANK0 ] unsigned char 
  8179 ;;  temp            1    2[BANK0 ] unsigned char 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;		None               void
  8182 ;; Registers used:
  8183 ;;		wreg, status,2, status,0
  8184 ;; Tracked objects:
  8185 ;;		On entry : 1F/0
  8186 ;;		On exit  : 1F/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8189 ;;      Params:         0       0       0       0       0       0       0       0
  8190 ;;      Locals:         0       3       0       0       0       0       0       0
  8191 ;;      Temps:          0       1       0       0       0       0       0       0
  8192 ;;      Totals:         0       4       0       0       0       0       0       0
  8193 ;;Total ram usage:        4 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:    3
  8196 ;; This function calls:
  8197 ;;		Nothing
  8198 ;; This function is called by:
  8199 ;;		_OneWire_Command
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202  00BF                     _OneWire_WriteByte:	
  8203                           
  8204                           ; Regs used in _OneWire_WriteByte: [wreg+status,2+status,0]
  8205                           ;OneWire_WriteByte@val stored from wreg
  8206  00BF  00A1               	movwf	OneWire_WriteByte@val
  8207                           
  8208                           ;OneWire.c: 168: unsigned char i;
  8209                           ;OneWire.c: 169: unsigned char temp;
  8210                           ;OneWire.c: 170: for (i=0;i<8;i++)
  8211  00C0  01A3               	clrf	OneWire_WriteByte@i
  8212  00C1                     l31064:	
  8213                           
  8214                           ;OneWire.c: 171: {
  8215                           ;OneWire.c: 172: temp=val>>i;
  8216  00C1  0821               	movf	OneWire_WriteByte@val,w
  8217  00C2  00A0               	movwf	??_OneWire_WriteByte
  8218  00C3  0A23               	incf	OneWire_WriteByte@i,w
  8219  00C4  28C6               	goto	u4984
  8220  00C5                     u4985:	
  8221  00C5  36A0               	lsrf	??_OneWire_WriteByte,f
  8222  00C6                     u4984:	
  8223  00C6  0B89               	decfsz	9,f
  8224  00C7  28C5               	goto	u4985
  8225  00C8  0820               	movf	??_OneWire_WriteByte,w
  8226  00C9  00A2               	movwf	OneWire_WriteByte@temp
  8227                           
  8228                           ;OneWire.c: 173: temp&=0x01;
  8229  00CA  3001               	movlw	1
  8230  00CB  05A2               	andwf	OneWire_WriteByte@temp,f
  8231                           
  8232                           ;OneWire.c: 174: (GIE = 0);
  8233  00CC  138B               	bcf	11,7
  8234                           
  8235                           ;OneWire.c: 175: TRISB1 = 0;LATB1=0;
  8236  00CD  0021               	movlb	1	; select bank1
  8237  00CE  108D               	bcf	13,1
  8238  00CF  0022               	movlb	2	; select bank2
  8239  00D0  108D               	bcf	13,1
  8240                           
  8241                           ;OneWire.c: 176: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8242  00D1  28D2               	nop2	;2 cycle nop
  8243                           
  8244                           ;OneWire.c: 177: if (temp==1)
  8245  00D2  0020               	movlb	0	; select bank0
  8246  00D3  0322               	decf	OneWire_WriteByte@temp,w
  8247  00D4  1D03               	skipz
  8248  00D5  28D8               	goto	l31078
  8249                           
  8250                           ;OneWire.c: 178: {
  8251                           ;OneWire.c: 179: TRISB1=1;
  8252  00D6  0021               	movlb	1	; select bank1
  8253  00D7  148D               	bsf	13,1
  8254  00D8                     l31078:	
  8255                           
  8256                           ;OneWire.c: 180: }
  8257                           ;OneWire.c: 181: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8258  00D8  3018               	movlw	24
  8259  00D9  0020               	movlb	0	; select bank0
  8260  00DA  00A0               	movwf	??_OneWire_WriteByte
  8261  00DB                     u8987:	
  8262  00DB  0BA0               	decfsz	??_OneWire_WriteByte,f
  8263  00DC  28DB               	goto	u8987
  8264  00DD  28DE               	nop2	;nop
  8265                           
  8266                           ;OneWire.c: 182: TRISB1=1;
  8267  00DE  0021               	movlb	1	; select bank1
  8268  00DF  148D               	bsf	13,1
  8269                           
  8270                           ;OneWire.c: 183: (GIE = 1);
  8271  00E0  178B               	bsf	11,7
  8272  00E1  0020               	movlb	0	; select bank0
  8273  00E2  0AA3               	incf	OneWire_WriteByte@i,f
  8274  00E3  3008               	movlw	8
  8275  00E4  0223               	subwf	OneWire_WriteByte@i,w
  8276  00E5  1803               	btfsc	3,0
  8277  00E6  0008               	return
  8278  00E7  28C1               	goto	l31064
  8279  00E8                     __end_of_OneWire_WriteByte:	
  8280  00E8                     __ptext1965:	
  8281 ;; =============== function _CallProc ends ============
  8282                           
  8283                           
  8284 ;; *************** function _InitSystem *****************
  8285 ;; Defined at:
  8286 ;;		line 73 in file "F:\work\WYP\NBIoT\Init.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  x               1   13[BANK0 ] unsigned char 
  8291 ;; Return value:  Size  Location     Type
  8292 ;;		None               void
  8293 ;; Registers used:
  8294 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8295 ;; Tracked objects:
  8296 ;;		On entry : 17F/0
  8297 ;;		On exit  : 1F/0
  8298 ;;		Unchanged: 0/0
  8299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8300 ;;      Params:         0       0       0       0       0       0       0       0
  8301 ;;      Locals:         0       1       0       0       0       0       0       0
  8302 ;;      Temps:          0       0       0       0       0       0       0       0
  8303 ;;      Totals:         0       1       0       0       0       0       0       0
  8304 ;;Total ram usage:        1 bytes
  8305 ;; Hardware stack levels used:    1
  8306 ;; Hardware stack levels required when called:    7
  8307 ;; This function calls:
  8308 ;;		_InitMCU
  8309 ;;		_InitVariable
  8310 ;;		_DisplayInit
  8311 ;;		_ATCommand_Init
  8312 ;;		_OneWire_Reset
  8313 ;;		_TCN75_Init
  8314 ;;		_TCN75_SetConfig
  8315 ;;		___delay_20ms
  8316 ;;		_ReadTData
  8317 ;; This function is called by:
  8318 ;;		_main
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321  00E8                     _InitSystem:	
  8322                           
  8323                           ;Init.c: 74: unsigned char x;
  8324                           ;Init.c: 75: InitMCU();
  8325                           
  8326                           ; Regs used in _InitSystem: [wreg-status,0+pclath+cstack]
  8327  00E8  2156  3180         	fcall	_InitMCU
  8328                           
  8329                           ;Init.c: 76: InitVariable();
  8330  00EA  21DD  3180         	fcall	_InitVariable
  8331                           
  8332                           ;Init.c: 78: DisplayInit();
  8333  00EC  2129  3180         	fcall	_DisplayInit
  8334                           
  8335                           ;Init.c: 79: if(RomParams.bWinter==0)
  8336  00EE  0020               	movlb	0	; select bank0
  8337  00EF  08E7               	movf	_RomParams+1,f
  8338  00F0  1D03               	skipz
  8339  00F1  28F7               	goto	l4421
  8340  00F2                     l4417:	
  8341  00F2  002F               	movlb	15	; select bank15
  8342  00F3  1E12               	btfss	18,4
  8343  00F4  28F2               	goto	l4417
  8344                           
  8345                           ;Init.c: 82: SEG21COM0=1;
  8346  00F5  16A2               	bsf	34,5
  8347                           
  8348                           ;Init.c: 83: }
  8349  00F6  28FB               	goto	l33430
  8350  00F7                     l4421:	
  8351  00F7  002F               	movlb	15	; select bank15
  8352  00F8  1E12               	btfss	18,4
  8353  00F9  28F7               	goto	l4421
  8354                           
  8355                           ;Init.c: 87: SEG21COM0=0;
  8356  00FA  12A2               	bcf	34,5
  8357  00FB                     l33430:	
  8358                           
  8359                           ;Init.c: 88: }
  8360                           ;Init.c: 90: ATCommand_Init();
  8361  00FB  2194  3180         	fcall	_ATCommand_Init
  8362                           
  8363                           ;Init.c: 92: x=10;
  8364  00FD  300A               	movlw	10
  8365  00FE  00AD               	movwf	InitSystem@x
  8366                           
  8367                           ;Init.c: 93: while(x!=0)
  8368  00FF  2901               	goto	l4424
  8369  0100                     l33438:	
  8370                           ;Init.c: 98: break;
  8371                           
  8372                           
  8373                           ;Init.c: 99: }
  8374                           ;Init.c: 100: x--;
  8375  0100  03AD               	decf	InitSystem@x,f
  8376  0101                     l4424:	
  8377  0101  08AD               	movf	InitSystem@x,f
  8378  0102  1903               	btfsc	3,2
  8379  0103  290A               	goto	l33440
  8380                           
  8381                           ;Init.c: 94: {
  8382                           ;Init.c: 95: if(OneWire_Reset()==0)
  8383  0104  21AB  3180         	fcall	_OneWire_Reset
  8384  0106  3800               	iorlw	0
  8385  0107  1D03               	skipz
  8386  0108  2900               	goto	l33438
  8387                           
  8388                           ;Init.c: 96: {
  8389                           ;Init.c: 97: gFlags.b18B20=1;
  8390  0109  14E5               	bsf	_gFlags,1
  8391  010A                     l33440:	
  8392                           
  8393                           ;Init.c: 101: }
  8394                           ;Init.c: 102: if(x==0)
  8395  010A  08AD               	movf	InitSystem@x,f
  8396  010B  1D03               	skipz
  8397  010C  291B               	goto	l33460
  8398                           
  8399                           ;Init.c: 103: {
  8400                           ;Init.c: 104: gFlags.b18B20=0;
  8401  010D  10E5               	bcf	_gFlags,1
  8402                           
  8403                           ;Init.c: 105: TCN75_Init();
  8404  010E  21DC               	fcall	_TCN75_Init
  8405                           
  8406                           ;Init.c: 106: TCN75_Config.bShutdown=1;
  8407  010F  0020               	movlb	0	; select bank0
  8408  0110  1463               	bsf	_TCN75_Config,0
  8409                           
  8410                           ;Init.c: 107: TCN75_Config.COMP_INT=0;
  8411  0111  10E3               	bcf	_TCN75_Config,1
  8412                           
  8413                           ;Init.c: 108: TCN75_Config.Polarity=0;
  8414  0112  1163               	bcf	_TCN75_Config,2
  8415                           
  8416                           ;Init.c: 109: TCN75_Config.FaultQueue=0b00;
  8417  0113  30E7               	movlw	-25
  8418  0114  05E3               	andwf	_TCN75_Config,f
  8419                           
  8420                           ;Init.c: 110: TCN75_Config.Resolution=0b11;
  8421  0115  3060               	movlw	96
  8422  0116  04E3               	iorwf	_TCN75_Config,f
  8423                           
  8424                           ;Init.c: 111: TCN75_Config.OneShot=0;
  8425  0117  13E3               	bcf	_TCN75_Config,7
  8426                           
  8427                           ;Init.c: 112: TCN75_SetConfig();
  8428  0118  318F  27AA  3180   	fcall	_TCN75_SetConfig
  8429  011B                     l33460:	
  8430                           
  8431                           ;Init.c: 113: }
  8432                           ;Init.c: 114: __delay_20ms(50);
  8433  011B  3032               	movlw	50
  8434  011C  00A0               	movwf	?___delay_20ms
  8435  011D  01A1               	clrf	?___delay_20ms+1
  8436  011E  318A  22C4  3180   	fcall	___delay_20ms
  8437                           
  8438                           ;Init.c: 115: ReadTData();
  8439  0121  3188  20DF         	fcall	_ReadTData
  8440                           
  8441                           ;Init.c: 116: __delay_20ms(250);
  8442  0123  30FA               	movlw	250
  8443  0124  0020               	movlb	0	; select bank0
  8444  0125  00A0               	movwf	?___delay_20ms
  8445  0126  01A1               	clrf	?___delay_20ms+1
  8446  0127  318A  2AC4         	ljmp	l12896
  8447  0129                     __end_of_InitSystem:	
  8448  0129                     __ptext2022:	
  8449 ;; =============== function _InitMCU ends ============
  8450                           
  8451                           
  8452 ;; *************** function _DisplayInit *****************
  8453 ;; Defined at:
  8454 ;;		line 385 in file "F:\work\WYP\NBIoT\Display.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;		None
  8457 ;; Auto vars:     Size  Location     Type
  8458 ;;		None
  8459 ;; Return value:  Size  Location     Type
  8460 ;;		None               void
  8461 ;; Registers used:
  8462 ;;		wreg, status,2
  8463 ;; Tracked objects:
  8464 ;;		On entry : 17F/0
  8465 ;;		On exit  : 17F/F
  8466 ;;		Unchanged: FFE80/0
  8467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8468 ;;      Params:         0       0       0       0       0       0       0       0
  8469 ;;      Locals:         0       0       0       0       0       0       0       0
  8470 ;;      Temps:          0       0       0       0       0       0       0       0
  8471 ;;      Totals:         0       0       0       0       0       0       0       0
  8472 ;;Total ram usage:        0 bytes
  8473 ;; Hardware stack levels used:    1
  8474 ;; Hardware stack levels required when called:    3
  8475 ;; This function calls:
  8476 ;;		Nothing
  8477 ;; This function is called by:
  8478 ;;		_InitSystem
  8479 ;; This function uses a non-reentrant model
  8480 ;;
  8481  0129                     _DisplayInit:	
  8482                           
  8483                           ;Display.c: 389: LCDPS = 0b00000011;
  8484                           
  8485                           ; Regs used in _DisplayInit: [wreg+status,2]
  8486  0129  3003               	movlw	3
  8487  012A  002F               	movlb	15	; select bank15
  8488  012B  0092               	movwf	18	;volatile
  8489                           
  8490                           ;Display.c: 390: LCDSE0 = 0;
  8491  012C  0198               	clrf	24	;volatile
  8492                           
  8493                           ;Display.c: 391: LCDSE1 = 0;
  8494  012D  0199               	clrf	25	;volatile
  8495                           
  8496                           ;Display.c: 392: LCDSE2 = 0;
  8497  012E  019A               	clrf	26	;volatile
  8498                           
  8499                           ;Display.c: 393: SEG21=1;
  8500  012F  169A               	bsf	26,5
  8501                           
  8502                           ;Display.c: 394: SEG5=1;
  8503  0130  1698               	bsf	24,5
  8504                           
  8505                           ;Display.c: 395: SEG11=1;
  8506  0131  1599               	bsf	25,3
  8507                           
  8508                           ;Display.c: 396: SEG16=1;
  8509  0132  141A               	bsf	26,0
  8510                           
  8511                           ;Display.c: 397: SEG6=1;
  8512  0133  1718               	bsf	24,6
  8513                           
  8514                           ;Display.c: 398: SEG3=1;
  8515  0134  1598               	bsf	24,3
  8516                           
  8517                           ;Display.c: 399: SEG23=1;
  8518  0135  179A               	bsf	26,7
  8519                           
  8520                           ;Display.c: 400: SEG22=1;
  8521  0136  171A               	bsf	26,6
  8522                           
  8523                           ;Display.c: 402: LCDCON = 0b00001111;
  8524  0137  300F               	movlw	15
  8525  0138  0091               	movwf	17	;volatile
  8526                           
  8527                           ;Display.c: 403: LCDDATA0=0;
  8528  0139  01A0               	clrf	32	;volatile
  8529                           
  8530                           ;Display.c: 404: LCDDATA1=0;
  8531  013A  01A1               	clrf	33	;volatile
  8532                           
  8533                           ;Display.c: 405: LCDDATA2=0;
  8534  013B  01A2               	clrf	34	;volatile
  8535                           
  8536                           ;Display.c: 406: LCDDATA3=0;
  8537  013C  01A3               	clrf	35	;volatile
  8538                           
  8539                           ;Display.c: 407: LCDDATA4=0;
  8540  013D  01A4               	clrf	36	;volatile
  8541                           
  8542                           ;Display.c: 408: LCDDATA5=0;
  8543  013E  01A5               	clrf	37	;volatile
  8544                           
  8545                           ;Display.c: 409: LCDDATA6=0;
  8546  013F  01A6               	clrf	38	;volatile
  8547                           
  8548                           ;Display.c: 410: LCDDATA7=0;
  8549  0140  01A7               	clrf	39	;volatile
  8550                           
  8551                           ;Display.c: 411: LCDDATA8=0;
  8552  0141  01A8               	clrf	40	;volatile
  8553                           
  8554                           ;Display.c: 412: LCDDATA9=0;
  8555  0142  01A9               	clrf	41	;volatile
  8556                           
  8557                           ;Display.c: 413: LCDDATA10=0;
  8558  0143  01AA               	clrf	42	;volatile
  8559                           
  8560                           ;Display.c: 414: LCDDATA11=0;
  8561  0144  01AB               	clrf	43	;volatile
  8562                           
  8563                           ;Display.c: 416: LCDREF = 0b10100000;
  8564  0145  30A0               	movlw	160
  8565  0146  0093               	movwf	19	;volatile
  8566                           
  8567                           ;Display.c: 417: LCDRL = 0b00110000;
  8568  0147  3030               	movlw	48
  8569  0148  0095               	movwf	21	;volatile
  8570                           
  8571                           ;Display.c: 418: LCDCST = 0b00000000;
  8572  0149  0194               	clrf	20	;volatile
  8573                           
  8574                           ;Display.c: 420: LCDEN=1;
  8575  014A  1791               	bsf	17,7
  8576                           
  8577                           ;Display.c: 440: SEG5COM0=0;
  8578  014B  12A0               	bcf	32,5
  8579                           
  8580                           ;Display.c: 441: SEG5COM1=0;
  8581  014C  12A3               	bcf	35,5
  8582                           
  8583                           ;Display.c: 442: SEG5COM2=0;
  8584  014D  12A6               	bcf	38,5
  8585                           
  8586                           ;Display.c: 443: SEG5COM3=1;
  8587  014E  16A9               	bsf	41,5
  8588                           
  8589                           ;Display.c: 444: SEG22COM3=0;
  8590  014F  132B               	bcf	43,6
  8591                           
  8592                           ;Display.c: 445: SEG3COM3=0;
  8593  0150  11A9               	bcf	41,3
  8594                           
  8595                           ;Display.c: 446: SEG21COM3=0;
  8596  0151  12AB               	bcf	43,5
  8597                           
  8598                           ;Display.c: 447: SEG21COM2=0;
  8599  0152  12A8               	bcf	40,5
  8600                           
  8601                           ;Display.c: 448: SEG21COM1=0;
  8602  0153  12A5               	bcf	37,5
  8603                           
  8604                           ;Display.c: 449: SEG21COM0=0;
  8605  0154  12A2               	bcf	34,5
  8606  0155  0008               	return
  8607  0156                     __end_of_DisplayInit:	
  8608  0156                     __ptext2021:	
  8609 ;; =============== function _eeprom_write ends ============
  8610                           
  8611                           
  8612 ;; *************** function _InitMCU *****************
  8613 ;; Defined at:
  8614 ;;		line 3 in file "F:\work\WYP\NBIoT\Init.c"
  8615 ;; Parameters:    Size  Location     Type
  8616 ;;		None
  8617 ;; Auto vars:     Size  Location     Type
  8618 ;;		None
  8619 ;; Return value:  Size  Location     Type
  8620 ;;		None               void
  8621 ;; Registers used:
  8622 ;;		wreg, status,2
  8623 ;; Tracked objects:
  8624 ;;		On entry : 17F/0
  8625 ;;		On exit  : 17F/0
  8626 ;;		Unchanged: FFE80/0
  8627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8628 ;;      Params:         0       0       0       0       0       0       0       0
  8629 ;;      Locals:         0       0       0       0       0       0       0       0
  8630 ;;      Temps:          0       0       0       0       0       0       0       0
  8631 ;;      Totals:         0       0       0       0       0       0       0       0
  8632 ;;Total ram usage:        0 bytes
  8633 ;; Hardware stack levels used:    1
  8634 ;; Hardware stack levels required when called:    3
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_InitSystem
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641  0156                     _InitMCU:	
  8642                           
  8643                           ;Init.c: 5: ADCON1=0b00111111;
  8644                           
  8645                           ; Regs used in _InitMCU: [wreg+status,2]
  8646  0156  303F               	movlw	63
  8647  0157  0021               	movlb	1	; select bank1
  8648  0158  009E               	movwf	30	;volatile
  8649                           
  8650                           ;Init.c: 7: ANSELA=0;
  8651  0159  0023               	movlb	3	; select bank3
  8652  015A  018C               	clrf	12	;volatile
  8653                           
  8654                           ;Init.c: 8: ANSELB=0;
  8655  015B  018D               	clrf	13	;volatile
  8656                           
  8657                           ;Init.c: 9: ANSELD=0;
  8658  015C  018F               	clrf	15	;volatile
  8659                           
  8660                           ;Init.c: 10: ANSELE=0;
  8661  015D  0190               	clrf	16	;volatile
  8662                           
  8663                           ;Init.c: 12: LATD5=0;
  8664  015E  0022               	movlb	2	; select bank2
  8665  015F  128F               	bcf	15,5
  8666                           
  8667                           ;Init.c: 13: TRISD5=0;
  8668  0160  0021               	movlb	1	; select bank1
  8669  0161  128F               	bcf	15,5
  8670                           
  8671                           ;Init.c: 14: TRISD4=1;
  8672  0162  160F               	bsf	15,4
  8673                           
  8674                           ;Init.c: 16: nWPUEN=0;
  8675  0163  1395               	bcf	21,7
  8676                           
  8677                           ;Init.c: 17: TRISB7=1;
  8678  0164  178D               	bsf	13,7
  8679                           
  8680                           ;Init.c: 18: WPUB7=1;
  8681  0165  0024               	movlb	4	; select bank4
  8682  0166  178D               	bsf	13,7
  8683                           
  8684                           ;Init.c: 20: LATA4=0;
  8685  0167  0022               	movlb	2	; select bank2
  8686  0168  120C               	bcf	12,4
  8687                           
  8688                           ;Init.c: 21: LATA3=0;
  8689  0169  118C               	bcf	12,3
  8690                           
  8691                           ;Init.c: 23: TRISA4=0;
  8692  016A  0021               	movlb	1	; select bank1
  8693  016B  120C               	bcf	12,4
  8694                           
  8695                           ;Init.c: 24: TRISA3=0;
  8696  016C  118C               	bcf	12,3
  8697                           
  8698                           ;Init.c: 26: TRISB2=1;
  8699  016D  150D               	bsf	13,2
  8700                           
  8701                           ;Init.c: 30: T2CON=0b00111011;
  8702  016E  303B               	movlw	59
  8703  016F  0020               	movlb	0	; select bank0
  8704  0170  009C               	movwf	28	;volatile
  8705                           
  8706                           ;Init.c: 31: PR2=227;
  8707  0171  30E3               	movlw	227
  8708  0172  009B               	movwf	27	;volatile
  8709                           
  8710                           ;Init.c: 32: TMR2ON=0;
  8711  0173  111C               	bcf	28,2
  8712                           
  8713                           ;Init.c: 33: TMR2IE=0;
  8714  0174  0021               	movlb	1	; select bank1
  8715  0175  1091               	bcf	17,1
  8716                           
  8717                           ;Init.c: 34: TMR2IF=0;
  8718  0176  0020               	movlb	0	; select bank0
  8719  0177  1091               	bcf	17,1
  8720                           
  8721                           ;Init.c: 38: T1CON=0b01110000;
  8722  0178  3070               	movlw	112
  8723  0179  0098               	movwf	24	;volatile
  8724                           
  8725                           ;Init.c: 39: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
  8726  017A  303C               	movlw	60
  8727  017B  0097               	movwf	23	;volatile
  8728  017C  30B0               	movlw	176
  8729  017D  0096               	movwf	22	;volatile
  8730                           
  8731                           ;Init.c: 40: TMR1ON=1;
  8732  017E  1418               	bsf	24,0
  8733                           
  8734                           ;Init.c: 41: TMR1IE=1;
  8735  017F  0021               	movlb	1	; select bank1
  8736  0180  1411               	bsf	17,0
  8737                           
  8738                           ;Init.c: 42: TMR1IF=0;
  8739  0181  0020               	movlb	0	; select bank0
  8740  0182  1011               	bcf	17,0
  8741                           
  8742                           ;Init.c: 48: TRISC7=1;
  8743  0183  0021               	movlb	1	; select bank1
  8744  0184  178E               	bsf	14,7
  8745                           
  8746                           ;Init.c: 49: TRISC6=1;
  8747  0185  170E               	bsf	14,6
  8748                           
  8749                           ;Init.c: 50: TXSTA=0b00100110;
  8750  0186  3026               	movlw	38
  8751  0187  0023               	movlb	3	; select bank3
  8752  0188  009E               	movwf	30	;volatile
  8753                           
  8754                           ;Init.c: 51: RCSTA=0b10010000;
  8755  0189  3090               	movlw	144
  8756  018A  009D               	movwf	29	;volatile
  8757                           
  8758                           ;Init.c: 52: SPBRG=25;
  8759  018B  3019               	movlw	25
  8760  018C  009B               	movwf	27	;volatile
  8761                           
  8762                           ;Init.c: 53: RCIE=1;
  8763  018D  0021               	movlb	1	; select bank1
  8764  018E  1691               	bsf	17,5
  8765                           
  8766                           ;Init.c: 54: RCIF=0;
  8767  018F  0020               	movlb	0	; select bank0
  8768  0190  1291               	bcf	17,5
  8769                           
  8770                           ;Init.c: 56: PEIE=1;
  8771  0191  170B               	bsf	11,6
  8772                           
  8773                           ;Init.c: 57: GIE=1;
  8774  0192  178B               	bsf	11,7
  8775  0193  0008               	return
  8776  0194                     __end_of_InitMCU:	
  8777  0194                     __ptext1996:	
  8778 ;; =============== function _OneWire_Reset ends ============
  8779                           
  8780                           
  8781 ;; *************** function _ATCommand_Init *****************
  8782 ;; Defined at:
  8783 ;;		line 17 in file "F:\work\WYP\NBIoT\ATCommand.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;		None               void
  8790 ;; Registers used:
  8791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8792 ;; Tracked objects:
  8793 ;;		On entry : 17F/F
  8794 ;;		On exit  : 17F/0
  8795 ;;		Unchanged: FFE80/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8797 ;;      Params:         0       0       0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; Hardware stack levels required when called:    4
  8804 ;; This function calls:
  8805 ;;		_strcpy
  8806 ;; This function is called by:
  8807 ;;		_InitSystem
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810  0194                     _ATCommand_Init:	
  8811                           
  8812                           ;ATCommand.c: 18: ATCommand_WaitACKTimes=50;
  8813                           
  8814                           ; Regs used in _ATCommand_Init: [wreg-status,0+pclath+cstack]
  8815  0194  3032               	movlw	50
  8816  0195  0020               	movlb	0	; select bank0
  8817  0196  00D4               	movwf	_ATCommand_WaitACKTimes
  8818  0197  01D5               	clrf	_ATCommand_WaitACKTimes+1
  8819                           
  8820                           ;ATCommand.c: 19: ATCommand_RetryTimes=3;
  8821  0198  3003               	movlw	3
  8822  0199  00E0               	movwf	_ATCommand_RetryTimes
  8823                           
  8824                           ;ATCommand.c: 20: strcpy(ATCommand_OkString,"OK");
  8825  019A  3013               	movlw	low (STR_29| (0+32768))
  8826  019B  00A0               	movwf	?_strcpy
  8827  019C  3091               	movlw	high (STR_29| (0+32768))
  8828  019D  00A1               	movwf	?_strcpy+1
  8829  019E  30C4               	movlw	_ATCommand_OkString& (0+255)
  8830  019F  318E  262A  3180   	fcall	_strcpy
  8831                           
  8832                           ;ATCommand.c: 21: strcpy(ATCommand_ErrString,"ERROR");
  8833  01A2  30FA               	movlw	low (STR_18| (0+32768))
  8834  01A3  00A0               	movwf	?_strcpy
  8835  01A4  3090               	movlw	high (STR_18| (0+32768))
  8836  01A5  00A1               	movwf	?_strcpy+1
  8837  01A6  30B5               	movlw	_ATCommand_ErrString& (0+255)
  8838  01A7  318E  262A         	fcall	_strcpy
  8839                           
  8840                           ;ATCommand.c: 22: ATCommand_Clear='\0';
  8841  01A9  01F9               	clrf	_ATCommand_Clear
  8842  01AA  0008               	return
  8843  01AB                     __end_of_ATCommand_Init:	
  8844  01AB                     __ptext1995:	
  8845 ;; =============== function _TCN75_Init ends ============
  8846                           
  8847                           
  8848 ;; *************** function _OneWire_Reset *****************
  8849 ;; Defined at:
  8850 ;;		line 6 in file "F:\work\WYP\NBIoT\OneWire.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  r               1    2[BANK0 ] unsigned char 
  8855 ;;  Retry           1    1[BANK0 ] unsigned char 
  8856 ;; Return value:  Size  Location     Type
  8857 ;;                  1    wreg      unsigned char 
  8858 ;; Registers used:
  8859 ;;		wreg, status,2, status,0
  8860 ;; Tracked objects:
  8861 ;;		On entry : 1F/0
  8862 ;;		On exit  : 1F/0
  8863 ;;		Unchanged: 0/0
  8864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8865 ;;      Params:         0       0       0       0       0       0       0       0
  8866 ;;      Locals:         0       2       0       0       0       0       0       0
  8867 ;;      Temps:          0       1       0       0       0       0       0       0
  8868 ;;      Totals:         0       3       0       0       0       0       0       0
  8869 ;;Total ram usage:        3 bytes
  8870 ;; Hardware stack levels used:    1
  8871 ;; Hardware stack levels required when called:    3
  8872 ;; This function calls:
  8873 ;;		Nothing
  8874 ;; This function is called by:
  8875 ;;		_InitSystem
  8876 ;;		_DS18X20_StartMeas
  8877 ;;		_DS18X20_ReadMeas
  8878 ;;		_OneWire_Command
  8879 ;; This function uses a non-reentrant model
  8880 ;;
  8881  01AB                     _OneWire_Reset:	
  8882                           
  8883                           ;OneWire.c: 7: unsigned char r,Retry;
  8884                           ;OneWire.c: 8: r=1;
  8885                           
  8886                           ; Regs used in _OneWire_Reset: [wreg+status,2+status,0]
  8887  01AB  01A2               	clrf	OneWire_Reset@r
  8888  01AC  0AA2               	incf	OneWire_Reset@r,f
  8889                           
  8890                           ;OneWire.c: 9: Retry=5;
  8891  01AD  3005               	movlw	5
  8892  01AE  00A1               	movwf	OneWire_Reset@Retry
  8893  01AF                     l30946:	
  8894                           ;OneWire.c: 10: while(Retry--)
  8895                           
  8896  01AF  03A1               	decf	OneWire_Reset@Retry,f
  8897  01B0  0821               	movf	OneWire_Reset@Retry,w
  8898  01B1  3AFF               	xorlw	255
  8899  01B2  1903               	btfsc	3,2
  8900  01B3  29DA               	goto	l30948
  8901                           
  8902                           ;OneWire.c: 11: {
  8903                           ;OneWire.c: 12: TRISB1 = 0;LATB1=0;
  8904  01B4  0021               	movlb	1	; select bank1
  8905  01B5  108D               	bcf	13,1
  8906  01B6  0022               	movlb	2	; select bank2
  8907  01B7  108D               	bcf	13,1
  8908                           
  8909                           ;OneWire.c: 13: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8910  01B8  309F               	movlw	159
  8911  01B9  0020               	movlb	0	; select bank0
  8912  01BA  00A0               	movwf	??_OneWire_Reset
  8913  01BB                     u9017:	
  8914  01BB  0BA0               	decfsz	??_OneWire_Reset,f
  8915  01BC  29BB               	goto	u9017
  8916  01BD  29BE               	nop2	;nop
  8917                           
  8918                           ;OneWire.c: 14: TRISB1=1;
  8919  01BE  0021               	movlb	1	; select bank1
  8920  01BF  148D               	bsf	13,1
  8921                           
  8922                           ;OneWire.c: 15: (GIE = 0);
  8923  01C0  138B               	bcf	11,7
  8924                           
  8925                           ;OneWire.c: 16: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8926  01C1  3018               	movlw	24
  8927  01C2  0020               	movlb	0	; select bank0
  8928  01C3  00A0               	movwf	??_OneWire_Reset
  8929  01C4                     u9027:	
  8930  01C4  0BA0               	decfsz	??_OneWire_Reset,f
  8931  01C5  29C4               	goto	u9027
  8932  01C6  29C7               	nop2	;nop
  8933                           
  8934                           ;OneWire.c: 17: r=RB1;
  8935  01C7  3000               	movlw	0
  8936  01C8  0020               	movlb	0	; select bank0
  8937  01C9  188D               	btfsc	13,1
  8938  01CA  3001               	movlw	1
  8939  01CB  00A2               	movwf	OneWire_Reset@r
  8940                           
  8941                           ;OneWire.c: 18: (GIE = 1);
  8942  01CC  178B               	bsf	11,7
  8943                           
  8944                           ;OneWire.c: 19: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8945  01CD  309F               	movlw	159
  8946  01CE  00A0               	movwf	??_OneWire_Reset
  8947  01CF                     u9037:	
  8948  01CF  0BA0               	decfsz	??_OneWire_Reset,f
  8949  01D0  29CF               	goto	u9037
  8950  01D1  29D2               	nop2	;nop
  8951                           
  8952                           ;OneWire.c: 20: if(RB1==0)
  8953  01D2  0020               	movlb	0	; select bank0
  8954  01D3  188D               	btfsc	13,1
  8955  01D4  29D7               	goto	l30942
  8956                           
  8957                           ;OneWire.c: 21: r=1;
  8958  01D5  01A2               	clrf	OneWire_Reset@r
  8959  01D6  0AA2               	incf	OneWire_Reset@r,f
  8960  01D7                     l30942:	
  8961                           
  8962                           ;OneWire.c: 22: if(r==0)
  8963  01D7  08A2               	movf	OneWire_Reset@r,f
  8964  01D8  1D03               	skipz
  8965  01D9  29AF               	goto	l30946
  8966  01DA                     l30948:	
  8967                           
  8968                           ;OneWire.c: 24: }
  8969                           ;OneWire.c: 25: return r;
  8970  01DA  0822               	movf	OneWire_Reset@r,w
  8971  01DB  0008               	return
  8972  01DC                     __end_of_OneWire_Reset:	
  8973  01DC                     __ptext1994:	
  8974 ;; =============== function ___delay_20ms ends ============
  8975                           
  8976                           
  8977 ;; *************** function _TCN75_Init *****************
  8978 ;; Defined at:
  8979 ;;		line 16 in file "F:\work\WYP\NBIoT\TCN75.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;		None
  8982 ;; Auto vars:     Size  Location     Type
  8983 ;;		None
  8984 ;; Return value:  Size  Location     Type
  8985 ;;		None               void
  8986 ;; Registers used:
  8987 ;;		status,2, status,0, pclath, cstack
  8988 ;; Tracked objects:
  8989 ;;		On entry : 1F/0
  8990 ;;		On exit  : 1F/2
  8991 ;;		Unchanged: FFFE0/0
  8992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8993 ;;      Params:         0       0       0       0       0       0       0       0
  8994 ;;      Locals:         0       0       0       0       0       0       0       0
  8995 ;;      Temps:          0       0       0       0       0       0       0       0
  8996 ;;      Totals:         0       0       0       0       0       0       0       0
  8997 ;;Total ram usage:        0 bytes
  8998 ;; Hardware stack levels used:    1
  8999 ;; Hardware stack levels required when called:    4
  9000 ;; This function calls:
  9001 ;;		_SimI2C_Init
  9002 ;; This function is called by:
  9003 ;;		_InitSystem
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006  01DC                     _TCN75_Init:	
  9007                           
  9008                           ;TCN75.c: 17: SimI2C_Init();
  9009                           
  9010                           ; Regs used in _TCN75_Init: [status,2+status,0+pclath+cstack]
  9011  01DC  2A24               	ljmp	l32326
  9012  01DD                     __end_of_TCN75_Init:	
  9013  01DD                     __ptext1979:	
  9014 ;; =============== function _TCN75_SetConfig ends ============
  9015                           
  9016                           
  9017 ;; *************** function _InitVariable *****************
  9018 ;; Defined at:
  9019 ;;		line 60 in file "F:\work\WYP\NBIoT\Init.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;		None
  9024 ;; Return value:  Size  Location     Type
  9025 ;;		None               void
  9026 ;; Registers used:
  9027 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 17F/0
  9030 ;;		On exit  : 17F/0
  9031 ;;		Unchanged: FFE80/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9033 ;;      Params:         0       0       0       0       0       0       0       0
  9034 ;;      Locals:         0       0       0       0       0       0       0       0
  9035 ;;      Temps:          0       0       0       0       0       0       0       0
  9036 ;;      Totals:         0       0       0       0       0       0       0       0
  9037 ;;Total ram usage:        0 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:    5
  9040 ;; This function calls:
  9041 ;;		_GetRomData
  9042 ;;		_SaveRomData
  9043 ;; This function is called by:
  9044 ;;		_InitSystem
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047  01DD                     _InitVariable:	
  9048                           
  9049                           ;Init.c: 61: if(GetRomData()==0)
  9050                           
  9051                           ; Regs used in _InitVariable: [wreg+fsr1l-status,0+pclath+cstack]
  9052  01DD  21EE  3180         	fcall	_GetRomData
  9053  01DF  3800               	iorlw	0
  9054  01E0  1D03               	skipz
  9055  01E1  29E5               	goto	l32694
  9056                           
  9057                           ;Init.c: 62: {
  9058                           ;Init.c: 63: RomParams.bWinter=1;
  9059  01E2  01E7               	clrf	_RomParams+1
  9060  01E3  0AE7               	incf	_RomParams+1,f
  9061                           
  9062                           ;Init.c: 64: SaveRomData();
  9063  01E4  222B               	fcall	_SaveRomData
  9064  01E5                     l32694:	
  9065                           
  9066                           ;Init.c: 65: }
  9067                           ;Init.c: 66: gFlags.AllFlag=0;
  9068  01E5  01E5               	clrf	_gFlags
  9069                           
  9070                           ;Init.c: 67: SystemTick=0;
  9071  01E6  01DC               	clrf	_SystemTick
  9072  01E7  01DD               	clrf	_SystemTick+1
  9073                           
  9074                           ;Init.c: 68: NeedMeasurementTick=6000;
  9075  01E8  3070               	movlw	112
  9076  01E9  00DA               	movwf	_NeedMeasurementTick
  9077  01EA  3017               	movlw	23
  9078  01EB  00DB               	movwf	_NeedMeasurementTick+1
  9079                           
  9080                           ;Init.c: 69: TxErrDataIndex=0;
  9081  01EC  01E8               	clrf	_TxErrDataIndex
  9082  01ED  0008               	return
  9083  01EE                     __end_of_InitVariable:	
  9084  01EE                     __ptext1998:	
  9085 ;; =============== function _SaveRomData ends ============
  9086                           
  9087                           
  9088 ;; *************** function _GetRomData *****************
  9089 ;; Defined at:
  9090 ;;		line 125 in file "F:\work\WYP\NBIoT\afx.c"
  9091 ;; Parameters:    Size  Location     Type
  9092 ;;		None
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  i               1    7[BANK0 ] unsigned char 
  9095 ;; Return value:  Size  Location     Type
  9096 ;;                  1    wreg      unsigned char 
  9097 ;; Registers used:
  9098 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9099 ;; Tracked objects:
  9100 ;;		On entry : 17F/0
  9101 ;;		On exit  : 17F/0
  9102 ;;		Unchanged: FFE80/0
  9103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9104 ;;      Params:         0       0       0       0       0       0       0       0
  9105 ;;      Locals:         0       1       0       0       0       0       0       0
  9106 ;;      Temps:          0       0       0       0       0       0       0       0
  9107 ;;      Totals:         0       1       0       0       0       0       0       0
  9108 ;;Total ram usage:        1 bytes
  9109 ;; Hardware stack levels used:    1
  9110 ;; Hardware stack levels required when called:    4
  9111 ;; This function calls:
  9112 ;;		_eeprom_read
  9113 ;;		_GetVerify_Sum
  9114 ;; This function is called by:
  9115 ;;		_InitVariable
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118  01EE                     _GetRomData:	
  9119                           
  9120                           ;afx.c: 126: unsigned char i;
  9121                           ;afx.c: 127: for(i=0;i<2;i++)
  9122                           
  9123                           ; Regs used in _GetRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9124  01EE  01A7               	clrf	GetRomData@i
  9125  01EF                     l32506:	
  9126                           
  9127                           ;afx.c: 128: RomParams.All[i]=eeprom_read(i);
  9128  01EF  0827               	movf	GetRomData@i,w
  9129  01F0  3E66               	addlw	_RomParams& (0+255)
  9130  01F1  0086               	movwf	6
  9131  01F2  0187               	clrf	7
  9132  01F3  0827               	movf	GetRomData@i,w
  9133  01F4  318D  25EC  3180   	fcall	_eeprom_read
  9134  01F7  0081               	movwf	1
  9135  01F8  0020               	movlb	0	; select bank0
  9136  01F9  0AA7               	incf	GetRomData@i,f
  9137  01FA  3002               	movlw	2
  9138  01FB  0227               	subwf	GetRomData@i,w
  9139  01FC  1C03               	skipc
  9140  01FD  29EF               	goto	l32506
  9141                           
  9142                           ;afx.c: 129: i=GetVerify_Sum(&RomParams.All[1],2-1);
  9143  01FE  01A0               	clrf	?_GetVerify_Sum
  9144  01FF  0AA0               	incf	?_GetVerify_Sum,f
  9145  0200  01A1               	clrf	?_GetVerify_Sum+1
  9146  0201  3067               	movlw	(_RomParams+1)& (0+255)
  9147  0202  220B  3180         	fcall	_GetVerify_Sum
  9148  0204  00A7               	movwf	GetRomData@i
  9149                           
  9150                           ;afx.c: 130: i+=1;
  9151  0205  0AA7               	incf	GetRomData@i,f
  9152                           
  9153                           ;afx.c: 131: if(i==RomParams.sum)
  9154  0206  0866               	movf	_RomParams,w
  9155  0207  0627               	xorwf	GetRomData@i,w
  9156  0208  1903               	btfsc	3,2
  9157                           
  9158                           ;afx.c: 132: {
  9159                           ;afx.c: 133: return 1;
  9160  0209  3401               	retlw	1
  9161                           
  9162                           ;afx.c: 135: else
  9163                           ;afx.c: 136: return 0;
  9164  020A  3400               	retlw	0
  9165  020B                     __end_of_GetRomData:	
  9166  020B                     __ptext2015:	
  9167 ;; =============== function _GetVerify_CRC8 ends ============
  9168                           
  9169                           
  9170 ;; *************** function _GetVerify_Sum *****************
  9171 ;; Defined at:
  9172 ;;		line 79 in file "F:\work\WYP\NBIoT\Verify.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  pBuff           1    wreg     PTR unsigned char 
  9175 ;;		 -> RomParams(2), 
  9176 ;;  Count           2    0[BANK0 ] unsigned int 
  9177 ;; Auto vars:     Size  Location     Type
  9178 ;;  pBuff           1    4[BANK0 ] PTR unsigned char 
  9179 ;;		 -> RomParams(2), 
  9180 ;;  i               1    6[BANK0 ] unsigned char 
  9181 ;;  sum             1    5[BANK0 ] unsigned char 
  9182 ;; Return value:  Size  Location     Type
  9183 ;;                  1    wreg      unsigned char 
  9184 ;; Registers used:
  9185 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9186 ;; Tracked objects:
  9187 ;;		On entry : 17F/0
  9188 ;;		On exit  : 17F/0
  9189 ;;		Unchanged: FFE80/0
  9190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9191 ;;      Params:         0       2       0       0       0       0       0       0
  9192 ;;      Locals:         0       3       0       0       0       0       0       0
  9193 ;;      Temps:          0       2       0       0       0       0       0       0
  9194 ;;      Totals:         0       7       0       0       0       0       0       0
  9195 ;;Total ram usage:        7 bytes
  9196 ;; Hardware stack levels used:    1
  9197 ;; Hardware stack levels required when called:    3
  9198 ;; This function calls:
  9199 ;;		Nothing
  9200 ;; This function is called by:
  9201 ;;		_GetRomData
  9202 ;;		_SaveRomData
  9203 ;; This function uses a non-reentrant model
  9204 ;;
  9205  020B                     _GetVerify_Sum:	
  9206                           
  9207                           ; Regs used in _GetVerify_Sum: [wreg+fsr1l-status,0]
  9208                           ;GetVerify_Sum@pBuff stored from wreg
  9209  020B  00A4               	movwf	GetVerify_Sum@pBuff
  9210                           
  9211                           ;Verify.c: 80: unsigned char sum,i;
  9212                           ;Verify.c: 81: sum=0;
  9213  020C  01A5               	clrf	GetVerify_Sum@sum
  9214                           
  9215                           ;Verify.c: 82: for(i=0;i<Count;i++)
  9216  020D  01A6               	clrf	GetVerify_Sum@i
  9217  020E                     l30596:	
  9218  020E  0826               	movf	GetVerify_Sum@i,w
  9219  020F  00A2               	movwf	??_GetVerify_Sum
  9220  0210  01A3               	clrf	??_GetVerify_Sum+1
  9221  0211  0821               	movf	GetVerify_Sum@Count+1,w
  9222  0212  0223               	subwf	??_GetVerify_Sum+1,w
  9223  0213  1D03               	skipz
  9224  0214  2A17               	goto	u4025
  9225  0215  0820               	movf	GetVerify_Sum@Count,w
  9226  0216  0222               	subwf	??_GetVerify_Sum,w
  9227  0217                     u4025:	
  9228  0217  1803               	btfsc	3,0
  9229  0218  2A22               	goto	l30598
  9230                           
  9231                           ;Verify.c: 83: {
  9232                           ;Verify.c: 84: sum=(unsigned char)(sum+pBuff[i]);
  9233  0219  0826               	movf	GetVerify_Sum@i,w
  9234  021A  0724               	addwf	GetVerify_Sum@pBuff,w
  9235  021B  00A2               	movwf	??_GetVerify_Sum
  9236  021C  0086               	movwf	6
  9237  021D  0187               	clrf	7
  9238  021E  0801               	movf	1,w
  9239  021F  07A5               	addwf	GetVerify_Sum@sum,f
  9240  0220  0AA6               	incf	GetVerify_Sum@i,f
  9241  0221  2A0E               	goto	l30596
  9242  0222                     l30598:	
  9243                           
  9244                           ;Verify.c: 85: }
  9245                           ;Verify.c: 86: return sum;
  9246  0222  0825               	movf	GetVerify_Sum@sum,w
  9247  0223  0008               	return
  9248  0224                     __end_of_GetVerify_Sum:	
  9249  0224                     __ptext2013:	
  9250 ;; =============== function _isdigit ends ============
  9251                           
  9252                           
  9253 ;; *************** function _SimI2C_Init *****************
  9254 ;; Defined at:
  9255 ;;		line 3 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9256 ;; Parameters:    Size  Location     Type
  9257 ;;		None
  9258 ;; Auto vars:     Size  Location     Type
  9259 ;;		None
  9260 ;; Return value:  Size  Location     Type
  9261 ;;		None               void
  9262 ;; Registers used:
  9263 ;;		None
  9264 ;; Tracked objects:
  9265 ;;		On entry : 1F/0
  9266 ;;		On exit  : 1F/2
  9267 ;;		Unchanged: FFFE0/0
  9268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9269 ;;      Params:         0       0       0       0       0       0       0       0
  9270 ;;      Locals:         0       0       0       0       0       0       0       0
  9271 ;;      Temps:          0       0       0       0       0       0       0       0
  9272 ;;      Totals:         0       0       0       0       0       0       0       0
  9273 ;;Total ram usage:        0 bytes
  9274 ;; Hardware stack levels used:    1
  9275 ;; Hardware stack levels required when called:    3
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_TCN75_Init
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282  0224                     _SimI2C_Init:	
  9283  0224                     l32326:	
  9284                           ; Regs used in _SimI2C_Init: []
  9285                           
  9286                           
  9287                           ;SimI2C.c: 4: TRISD7=0;
  9288  0224  0021               	movlb	1	; select bank1
  9289  0225  138F               	bcf	15,7
  9290                           
  9291                           ;SimI2C.c: 5: TRISD6=0;
  9292  0226  130F               	bcf	15,6
  9293                           
  9294                           ;SimI2C.c: 13: LATD7=1;
  9295  0227  0022               	movlb	2	; select bank2
  9296  0228  178F               	bsf	15,7
  9297                           
  9298                           ;SimI2C.c: 14: LATD6=1;
  9299  0229  170F               	bsf	15,6
  9300  022A  0008               	return
  9301  022B                     __end_of_SimI2C_Init:	
  9302  022B                     __ptext1997:	
  9303 ;; =============== function _ATCommand_Init ends ============
  9304                           
  9305                           
  9306 ;; *************** function _SaveRomData *****************
  9307 ;; Defined at:
  9308 ;;		line 139 in file "F:\work\WYP\NBIoT\afx.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;		None
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;  i               1    7[BANK0 ] unsigned char 
  9313 ;; Return value:  Size  Location     Type
  9314 ;;		None               void
  9315 ;; Registers used:
  9316 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9317 ;; Tracked objects:
  9318 ;;		On entry : 17F/0
  9319 ;;		On exit  : 17F/0
  9320 ;;		Unchanged: FFE80/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9322 ;;      Params:         0       0       0       0       0       0       0       0
  9323 ;;      Locals:         0       1       0       0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0       0       0       0
  9325 ;;      Totals:         0       1       0       0       0       0       0       0
  9326 ;;Total ram usage:        1 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    4
  9329 ;; This function calls:
  9330 ;;		_GetVerify_Sum
  9331 ;;		_eeprom_write
  9332 ;; This function is called by:
  9333 ;;		_InitVariable
  9334 ;; This function uses a non-reentrant model
  9335 ;;
  9336  022B                     _SaveRomData:	
  9337                           
  9338                           ;afx.c: 140: unsigned char i;
  9339                           ;afx.c: 141: RomParams.sum=GetVerify_Sum(&RomParams.All[1],2-1);
  9340                           
  9341                           ; Regs used in _SaveRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9342  022B  01A0               	clrf	?_GetVerify_Sum
  9343  022C  0AA0               	incf	?_GetVerify_Sum,f
  9344  022D  01A1               	clrf	?_GetVerify_Sum+1
  9345  022E  3067               	movlw	(_RomParams+1)& (0+255)
  9346  022F  220B               	fcall	_GetVerify_Sum
  9347  0230  00E6               	movwf	_RomParams
  9348                           
  9349                           ;afx.c: 142: RomParams.sum+=1;
  9350  0231  0AE6               	incf	_RomParams,f
  9351                           
  9352                           ;afx.c: 143: for(i=0;i<2;i++)
  9353  0232  01A7               	clrf	SaveRomData@i
  9354  0233                     l32538:	
  9355                           
  9356                           ;afx.c: 144: eeprom_write(i,RomParams.All[i]);
  9357  0233  0827               	movf	SaveRomData@i,w
  9358  0234  3E66               	addlw	_RomParams& (0+255)
  9359  0235  0086               	movwf	6
  9360  0236  0187               	clrf	7
  9361  0237  0801               	movf	1,w
  9362  0238  00A0               	movwf	?_eeprom_write
  9363  0239  0827               	movf	SaveRomData@i,w
  9364  023A  318E  26D4  3180   	fcall	_eeprom_write
  9365  023D  0020               	movlb	0	; select bank0
  9366  023E  0AA7               	incf	SaveRomData@i,f
  9367  023F  3002               	movlw	2
  9368  0240  0227               	subwf	SaveRomData@i,w
  9369  0241  1803               	btfsc	3,0
  9370  0242  0008               	return
  9371  0243  2A33               	goto	l32538
  9372  0244                     __end_of_SaveRomData:	
  9373                           
  9374                           	psect	text1977
  9375  0439                     __ptext1977:	
  9376 ;; =============== function _PowerON ends ============
  9377                           
  9378                           
  9379 ;; *************** function _TCN75_ReadReg *****************
  9380 ;; Defined at:
  9381 ;;		line 20 in file "F:\work\WYP\NBIoT\TCN75.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;  RegPoint        1    wreg     unsigned char 
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;  RegPoint        1    3[BANK0 ] unsigned char 
  9386 ;;  bRight          1    5[BANK0 ] unsigned char 
  9387 ;;  ErrTimes        1    4[BANK0 ] unsigned char 
  9388 ;; Return value:  Size  Location     Type
  9389 ;;                  1    wreg      unsigned char 
  9390 ;; Registers used:
  9391 ;;		wreg, status,2, status,0, pclath, cstack
  9392 ;; Tracked objects:
  9393 ;;		On entry : 1F/0
  9394 ;;		On exit  : 1F/0
  9395 ;;		Unchanged: 0/0
  9396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9397 ;;      Params:         0       0       0       0       0       0       0       0
  9398 ;;      Locals:         0       3       0       0       0       0       0       0
  9399 ;;      Temps:          0       0       0       0       0       0       0       0
  9400 ;;      Totals:         0       3       0       0       0       0       0       0
  9401 ;;Total ram usage:        3 bytes
  9402 ;; Hardware stack levels used:    1
  9403 ;; Hardware stack levels required when called:    4
  9404 ;; This function calls:
  9405 ;;		_SimI2C_Start
  9406 ;;		_SimI2C_SendByte
  9407 ;;		_SimI2C_RecAck
  9408 ;;		_SimI2C_ReadByte
  9409 ;;		_SimI2C_Ack
  9410 ;;		_SimI2C_NoAck
  9411 ;;		_SimI2C_Stop
  9412 ;; This function is called by:
  9413 ;;		_ReadTData
  9414 ;; This function uses a non-reentrant model
  9415 ;;
  9416  0439                     _TCN75_ReadReg:	
  9417                           
  9418                           ; Regs used in _TCN75_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  9419                           ;TCN75_ReadReg@RegPoint stored from wreg
  9420  0439  00A3               	movwf	TCN75_ReadReg@RegPoint
  9421                           
  9422                           ;TCN75.c: 21: unsigned char ErrTimes=2;
  9423  043A  3002               	movlw	2
  9424  043B  00A4               	movwf	TCN75_ReadReg@ErrTimes
  9425                           
  9426                           ;TCN75.c: 22: unsigned char bRight=0;
  9427  043C  01A5               	clrf	TCN75_ReadReg@bRight
  9428  043D                     l32768:	
  9429                           ;TCN75.c: 41: break;
  9430                           
  9431                           ;TCN75.c: 23: while(ErrTimes--)
  9432                           
  9433  043D  03A4               	decf	TCN75_ReadReg@ErrTimes,f
  9434  043E  0824               	movf	TCN75_ReadReg@ErrTimes,w
  9435  043F  3AFF               	xorlw	255
  9436  0440  1903               	btfsc	3,2
  9437  0441  2C6D               	goto	l32770
  9438                           
  9439                           ;TCN75.c: 24: {
  9440                           ;TCN75.c: 25: SimI2C_Start();
  9441  0442  318F  27D8  3184   	fcall	_SimI2C_Start
  9442                           
  9443                           ;TCN75.c: 26: SimI2C_SendByte(0b10010000&0xfe);
  9444  0445  3090               	movlw	144
  9445  0446  2471  3184         	fcall	_SimI2C_SendByte
  9446                           
  9447                           ;TCN75.c: 27: if(SimI2C_RecAck())
  9448  0448  2492  3184         	fcall	_SimI2C_RecAck
  9449  044A  3A00               	xorlw	0
  9450  044B  1D03               	btfss	3,2
  9451  044C  2C3D               	goto	l32768
  9452                           
  9453                           ;TCN75.c: 29: SimI2C_SendByte(RegPoint);
  9454  044D  0823               	movf	TCN75_ReadReg@RegPoint,w
  9455  044E  2471  3184         	fcall	_SimI2C_SendByte
  9456                           
  9457                           ;TCN75.c: 30: if(SimI2C_RecAck())
  9458  0450  2492  3184         	fcall	_SimI2C_RecAck
  9459  0452  3A00               	xorlw	0
  9460  0453  1D03               	btfss	3,2
  9461  0454  2C3D               	goto	l32768
  9462                           
  9463                           ;TCN75.c: 32: SimI2C_Start();
  9464  0455  318F  27D8  3184   	fcall	_SimI2C_Start
  9465                           
  9466                           ;TCN75.c: 33: SimI2C_SendByte(0b10010000|0x01);
  9467  0458  3091               	movlw	145
  9468  0459  2471  3184         	fcall	_SimI2C_SendByte
  9469                           
  9470                           ;TCN75.c: 34: if(SimI2C_RecAck())
  9471  045B  2492  3184         	fcall	_SimI2C_RecAck
  9472  045D  3A00               	xorlw	0
  9473  045E  1D03               	btfss	3,2
  9474  045F  2C3D               	goto	l32768
  9475                           
  9476                           ;TCN75.c: 36: TCN75_RegReadResualt.u8H=SimI2C_ReadByte();
  9477  0460  24A6  3184         	fcall	_SimI2C_ReadByte
  9478  0462  00DF               	movwf	_TCN75_RegReadResualt+1
  9479                           
  9480                           ;TCN75.c: 37: SimI2C_Ack();
  9481  0463  24C6  3184         	fcall	_SimI2C_Ack
  9482                           
  9483                           ;TCN75.c: 38: TCN75_RegReadResualt.u8L=SimI2C_ReadByte();
  9484  0465  24A6  3184         	fcall	_SimI2C_ReadByte
  9485  0467  00DE               	movwf	_TCN75_RegReadResualt
  9486                           
  9487                           ;TCN75.c: 39: SimI2C_NoAck();
  9488  0468  24D2  3184         	fcall	_SimI2C_NoAck
  9489                           
  9490                           ;TCN75.c: 40: bRight=1;
  9491  046A  0020               	movlb	0	; select bank0
  9492  046B  01A5               	clrf	TCN75_ReadReg@bRight
  9493  046C  0AA5               	incf	TCN75_ReadReg@bRight,f
  9494  046D                     l32770:	
  9495                           
  9496                           ;TCN75.c: 42: }
  9497                           ;TCN75.c: 43: SimI2C_Stop();
  9498  046D  24D9               	fcall	_SimI2C_Stop
  9499                           
  9500                           ;TCN75.c: 44: return bRight;
  9501  046E  0020               	movlb	0	; select bank0
  9502  046F  0825               	movf	TCN75_ReadReg@bRight,w
  9503  0470  0008               	return
  9504  0471                     __end_of_TCN75_ReadReg:	
  9505  0471                     __ptext1985:	
  9506 ;; =============== function _SimI2C_RecAck ends ============
  9507                           
  9508                           
  9509 ;; *************** function _SimI2C_SendByte *****************
  9510 ;; Defined at:
  9511 ;;		line 71 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9512 ;; Parameters:    Size  Location     Type
  9513 ;;  data            1    wreg     unsigned char 
  9514 ;; Auto vars:     Size  Location     Type
  9515 ;;  data            1    0[BANK0 ] unsigned char 
  9516 ;;  i               1    2[BANK0 ] unsigned char 
  9517 ;;  t               1    1[BANK0 ] unsigned char 
  9518 ;; Return value:  Size  Location     Type
  9519 ;;		None               void
  9520 ;; Registers used:
  9521 ;;		wreg, status,2, status,0
  9522 ;; Tracked objects:
  9523 ;;		On entry : 1D/2
  9524 ;;		On exit  : 1F/2
  9525 ;;		Unchanged: 0/0
  9526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9527 ;;      Params:         0       0       0       0       0       0       0       0
  9528 ;;      Locals:         0       3       0       0       0       0       0       0
  9529 ;;      Temps:          0       0       0       0       0       0       0       0
  9530 ;;      Totals:         0       3       0       0       0       0       0       0
  9531 ;;Total ram usage:        3 bytes
  9532 ;; Hardware stack levels used:    1
  9533 ;; Hardware stack levels required when called:    3
  9534 ;; This function calls:
  9535 ;;		Nothing
  9536 ;; This function is called by:
  9537 ;;		_TCN75_ReadReg
  9538 ;;		_TCN75_SetConfig
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541  0471                     _SimI2C_SendByte:	
  9542                           
  9543                           ; Regs used in _SimI2C_SendByte: [wreg+status,2+status,0]
  9544                           ;SimI2C_SendByte@data stored from wreg
  9545  0471  0020               	movlb	0	; select bank0
  9546  0472  00A0               	movwf	SimI2C_SendByte@data
  9547                           
  9548                           ;SimI2C.c: 72: unsigned char i;
  9549                           ;SimI2C.c: 73: unsigned char t;
  9550                           ;SimI2C.c: 74: for(i=0;i<8;i++)
  9551  0473  01A2               	clrf	SimI2C_SendByte@i
  9552  0474                     l27487:	
  9553                           
  9554                           ;SimI2C.c: 75: {
  9555                           ;SimI2C.c: 76: LATD7=0;
  9556  0474  0022               	movlb	2	; select bank2
  9557  0475  138F               	bcf	15,7
  9558                           
  9559                           ;SimI2C.c: 77: t=data&0x80;
  9560  0476  0020               	movlb	0	; select bank0
  9561  0477  0820               	movf	SimI2C_SendByte@data,w
  9562  0478  00A1               	movwf	SimI2C_SendByte@t
  9563  0479  3080               	movlw	128
  9564  047A  05A1               	andwf	SimI2C_SendByte@t,f
  9565                           
  9566                           ;SimI2C.c: 78: if(t==0x00)
  9567  047B  08A1               	movf	SimI2C_SendByte@t,f
  9568  047C  1D03               	skipz
  9569  047D  2C81               	goto	l27489
  9570                           
  9571                           ;SimI2C.c: 79: LATD6=0;
  9572  047E  0022               	movlb	2	; select bank2
  9573  047F  130F               	bcf	15,6
  9574  0480  2C83               	goto	l27490
  9575  0481                     l27489:	
  9576                           
  9577                           ;SimI2C.c: 80: else
  9578                           ;SimI2C.c: 81: LATD6=1;
  9579  0481  0022               	movlb	2	; select bank2
  9580  0482  170F               	bsf	15,6
  9581  0483                     l27490:	
  9582                           
  9583                           ;SimI2C.c: 82: data<<=1;
  9584  0483  0020               	movlb	0	; select bank0
  9585  0484  35A0               	lslf	SimI2C_SendByte@data,f
  9586                           
  9587                           ;SimI2C.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9588  0485  0064               	clrwdt
  9589                           
  9590                           ;SimI2C.c: 84: LATD7=1;
  9591  0486  0022               	movlb	2	; select bank2
  9592  0487  178F               	bsf	15,7
  9593                           
  9594                           ;SimI2C.c: 85: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9595  0488  0064               	clrwdt
  9596  0489  0020               	movlb	0	; select bank0
  9597  048A  0AA2               	incf	SimI2C_SendByte@i,f
  9598  048B  3008               	movlw	8
  9599  048C  0222               	subwf	SimI2C_SendByte@i,w
  9600  048D  1C03               	skipc
  9601  048E  2C74               	goto	l27487
  9602                           
  9603                           ;SimI2C.c: 86: }
  9604                           ;SimI2C.c: 87: LATD7=0;
  9605  048F  0022               	movlb	2	; select bank2
  9606  0490  138F               	bcf	15,7
  9607  0491  0008               	return
  9608  0492                     __end_of_SimI2C_SendByte:	
  9609  0492                     __ptext1984:	
  9610 ;; =============== function _SimI2C_ReadByte ends ============
  9611                           
  9612                           
  9613 ;; *************** function _SimI2C_RecAck *****************
  9614 ;; Defined at:
  9615 ;;		line 39 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9616 ;; Parameters:    Size  Location     Type
  9617 ;;		None
  9618 ;; Auto vars:     Size  Location     Type
  9619 ;;  t               1    0[BANK0 ] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg
  9624 ;; Tracked objects:
  9625 ;;		On entry : 1F/2
  9626 ;;		On exit  : 1F/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9629 ;;      Params:         0       0       0       0       0       0       0       0
  9630 ;;      Locals:         0       1       0       0       0       0       0       0
  9631 ;;      Temps:          0       0       0       0       0       0       0       0
  9632 ;;      Totals:         0       1       0       0       0       0       0       0
  9633 ;;Total ram usage:        1 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    3
  9636 ;; This function calls:
  9637 ;;		Nothing
  9638 ;; This function is called by:
  9639 ;;		_TCN75_ReadReg
  9640 ;;		_TCN75_SetConfig
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643  0492                     _SimI2C_RecAck:	
  9644                           
  9645                           ;SimI2C.c: 40: unsigned char t;
  9646                           ;SimI2C.c: 41: TRISD6=1;
  9647                           
  9648                           ; Regs used in _SimI2C_RecAck: [wreg]
  9649  0492  0021               	movlb	1	; select bank1
  9650  0493  170F               	bsf	15,6
  9651                           
  9652                           ;SimI2C.c: 42: LATD7=0;
  9653  0494  0022               	movlb	2	; select bank2
  9654  0495  138F               	bcf	15,7
  9655                           
  9656                           ;SimI2C.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9657  0496  0064               	clrwdt
  9658                           
  9659                           ;SimI2C.c: 44: LATD7=1;
  9660  0497  0022               	movlb	2	; select bank2
  9661  0498  178F               	bsf	15,7
  9662                           
  9663                           ;SimI2C.c: 45: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9664  0499  0064               	clrwdt
  9665                           
  9666                           ;SimI2C.c: 46: t=RD6;
  9667  049A  3000               	movlw	0
  9668  049B  0020               	movlb	0	; select bank0
  9669  049C  1B0F               	btfsc	15,6
  9670  049D  3001               	movlw	1
  9671  049E  00A0               	movwf	SimI2C_RecAck@t
  9672                           
  9673                           ;SimI2C.c: 47: LATD7=0;
  9674  049F  0022               	movlb	2	; select bank2
  9675  04A0  138F               	bcf	15,7
  9676                           
  9677                           ;SimI2C.c: 48: TRISD6=0;
  9678  04A1  0021               	movlb	1	; select bank1
  9679  04A2  130F               	bcf	15,6
  9680                           
  9681                           ;SimI2C.c: 49: return t;
  9682  04A3  0020               	movlb	0	; select bank0
  9683  04A4  0820               	movf	SimI2C_RecAck@t,w
  9684  04A5  0008               	return
  9685  04A6                     __end_of_SimI2C_RecAck:	
  9686  04A6                     __ptext1983:	
  9687 ;; =============== function _SimI2C_Ack ends ============
  9688                           
  9689                           
  9690 ;; *************** function _SimI2C_ReadByte *****************
  9691 ;; Defined at:
  9692 ;;		line 90 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  i               1    1[BANK0 ] unsigned char 
  9697 ;;  data            1    0[BANK0 ] unsigned char 
  9698 ;; Return value:  Size  Location     Type
  9699 ;;                  1    wreg      unsigned char 
  9700 ;; Registers used:
  9701 ;;		wreg, status,2, status,0
  9702 ;; Tracked objects:
  9703 ;;		On entry : 1D/0
  9704 ;;		On exit  : 1F/0
  9705 ;;		Unchanged: 0/0
  9706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9707 ;;      Params:         0       0       0       0       0       0       0       0
  9708 ;;      Locals:         0       2       0       0       0       0       0       0
  9709 ;;      Temps:          0       0       0       0       0       0       0       0
  9710 ;;      Totals:         0       2       0       0       0       0       0       0
  9711 ;;Total ram usage:        2 bytes
  9712 ;; Hardware stack levels used:    1
  9713 ;; Hardware stack levels required when called:    3
  9714 ;; This function calls:
  9715 ;;		Nothing
  9716 ;; This function is called by:
  9717 ;;		_TCN75_ReadReg
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720  04A6                     _SimI2C_ReadByte:	
  9721                           
  9722                           ;SimI2C.c: 91: unsigned char data,i;
  9723                           ;SimI2C.c: 92: TRISD6=1;
  9724                           
  9725                           ; Regs used in _SimI2C_ReadByte: [wreg+status,2+status,0]
  9726  04A6  0021               	movlb	1	; select bank1
  9727  04A7  170F               	bsf	15,6
  9728                           
  9729                           ;SimI2C.c: 93: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9730  04A8  0064               	clrwdt
  9731                           
  9732                           ;SimI2C.c: 94: LATD7=0;
  9733  04A9  0022               	movlb	2	; select bank2
  9734  04AA  138F               	bcf	15,7
  9735                           
  9736                           ;SimI2C.c: 95: data=0;
  9737  04AB  0020               	movlb	0	; select bank0
  9738  04AC  01A0               	clrf	SimI2C_ReadByte@data
  9739                           
  9740                           ;SimI2C.c: 96: for(i=0;i<8;i++)
  9741  04AD  01A1               	clrf	SimI2C_ReadByte@i
  9742  04AE                     l27494:	
  9743                           
  9744                           ;SimI2C.c: 97: {
  9745                           ;SimI2C.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9746  04AE  0064               	clrwdt
  9747                           
  9748                           ;SimI2C.c: 99: LATD7=1;
  9749  04AF  0022               	movlb	2	; select bank2
  9750  04B0  178F               	bsf	15,7
  9751                           
  9752                           ;SimI2C.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9753  04B1  0064               	clrwdt
  9754                           
  9755                           ;SimI2C.c: 101: data=data<<1;
  9756  04B2  0020               	movlb	0	; select bank0
  9757  04B3  35A0               	lslf	SimI2C_ReadByte@data,f
  9758                           
  9759                           ;SimI2C.c: 102: if(RD6)
  9760  04B4  1B0F               	btfsc	15,6
  9761                           
  9762                           ;SimI2C.c: 103: data=data|0x01;
  9763  04B5  1420               	bsf	SimI2C_ReadByte@data,0
  9764                           
  9765                           ;SimI2C.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9766  04B6  0064               	clrwdt
  9767                           
  9768                           ;SimI2C.c: 105: LATD7=0;
  9769  04B7  0022               	movlb	2	; select bank2
  9770  04B8  138F               	bcf	15,7
  9771                           
  9772                           ;SimI2C.c: 106: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9773  04B9  0064               	clrwdt
  9774  04BA  0020               	movlb	0	; select bank0
  9775  04BB  0AA1               	incf	SimI2C_ReadByte@i,f
  9776  04BC  3008               	movlw	8
  9777  04BD  0221               	subwf	SimI2C_ReadByte@i,w
  9778  04BE  1C03               	skipc
  9779  04BF  2CAE               	goto	l27494
  9780                           
  9781                           ;SimI2C.c: 107: }
  9782                           ;SimI2C.c: 108: TRISD6=0;
  9783  04C0  0021               	movlb	1	; select bank1
  9784  04C1  130F               	bcf	15,6
  9785                           
  9786                           ;SimI2C.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9787  04C2  0064               	clrwdt
  9788                           
  9789                           ;SimI2C.c: 110: return data;
  9790  04C3  0020               	movlb	0	; select bank0
  9791  04C4  0820               	movf	SimI2C_ReadByte@data,w
  9792  04C5  0008               	return
  9793  04C6                     __end_of_SimI2C_ReadByte:	
  9794  04C6                     __ptext1982:	
  9795 ;; =============== function _SimI2C_NoAck ends ============
  9796                           
  9797                           
  9798 ;; *************** function _SimI2C_Ack *****************
  9799 ;; Defined at:
  9800 ;;		line 53 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;		None
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;		None               void
  9807 ;; Registers used:
  9808 ;;		None
  9809 ;; Tracked objects:
  9810 ;;		On entry : 1F/0
  9811 ;;		On exit  : 1F/2
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9814 ;;      Params:         0       0       0       0       0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0
  9816 ;;      Temps:          0       0       0       0       0       0       0       0
  9817 ;;      Totals:         0       0       0       0       0       0       0       0
  9818 ;;Total ram usage:        0 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    3
  9821 ;; This function calls:
  9822 ;;		Nothing
  9823 ;; This function is called by:
  9824 ;;		_TCN75_ReadReg
  9825 ;; This function uses a non-reentrant model
  9826 ;;
  9827  04C6                     _SimI2C_Ack:	
  9828                           
  9829                           ;SimI2C.c: 54: LATD6=0;
  9830                           
  9831                           ; Regs used in _SimI2C_Ack: []
  9832  04C6  0022               	movlb	2	; select bank2
  9833  04C7  130F               	bcf	15,6
  9834                           
  9835                           ;SimI2C.c: 55: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9836  04C8  0064               	clrwdt
  9837                           
  9838                           ;SimI2C.c: 56: LATD7=1;
  9839  04C9  0022               	movlb	2	; select bank2
  9840  04CA  178F               	bsf	15,7
  9841                           
  9842                           ;SimI2C.c: 57: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9843  04CB  0064               	clrwdt
  9844                           
  9845                           ;SimI2C.c: 58: LATD7=0;
  9846  04CC  0022               	movlb	2	; select bank2
  9847  04CD  138F               	bcf	15,7
  9848                           
  9849                           ;SimI2C.c: 59: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9850  04CE  0064               	clrwdt
  9851                           
  9852                           ;SimI2C.c: 60: LATD6=1;
  9853  04CF  0022               	movlb	2	; select bank2
  9854  04D0  170F               	bsf	15,6
  9855  04D1  0008               	return
  9856  04D2                     __end_of_SimI2C_Ack:	
  9857  04D2                     __ptext1981:	
  9858 ;; =============== function _SimI2C_Stop ends ============
  9859                           
  9860                           
  9861 ;; *************** function _SimI2C_NoAck *****************
  9862 ;; Defined at:
  9863 ;;		line 64 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9864 ;; Parameters:    Size  Location     Type
  9865 ;;		None
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;		None
  9868 ;; Return value:  Size  Location     Type
  9869 ;;		None               void
  9870 ;; Registers used:
  9871 ;;		None
  9872 ;; Tracked objects:
  9873 ;;		On entry : 1F/0
  9874 ;;		On exit  : 1F/2
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9877 ;;      Params:         0       0       0       0       0       0       0       0
  9878 ;;      Locals:         0       0       0       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0       0
  9880 ;;      Totals:         0       0       0       0       0       0       0       0
  9881 ;;Total ram usage:        0 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    3
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_TCN75_ReadReg
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890  04D2                     _SimI2C_NoAck:	
  9891                           
  9892                           ;SimI2C.c: 65: LATD7=1;
  9893                           
  9894                           ; Regs used in _SimI2C_NoAck: []
  9895  04D2  0022               	movlb	2	; select bank2
  9896  04D3  178F               	bsf	15,7
  9897                           
  9898                           ;SimI2C.c: 66: LATD6=1;
  9899  04D4  170F               	bsf	15,6
  9900                           
  9901                           ;SimI2C.c: 67: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9902  04D5  0064               	clrwdt
  9903                           
  9904                           ;SimI2C.c: 68: LATD7=0;
  9905  04D6  0022               	movlb	2	; select bank2
  9906  04D7  138F               	bcf	15,7
  9907  04D8  0008               	return
  9908  04D9                     __end_of_SimI2C_NoAck:	
  9909  04D9                     __ptext1980:	
  9910 ;; =============== function _InitVariable ends ============
  9911                           
  9912                           
  9913 ;; *************** function _SimI2C_Stop *****************
  9914 ;; Defined at:
  9915 ;;		line 29 in file "F:\work\WYP\NBIoT\SimI2C.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;		None               void
  9922 ;; Registers used:
  9923 ;;		None
  9924 ;; Tracked objects:
  9925 ;;		On entry : 1F/0
  9926 ;;		On exit  : 1F/2
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9929 ;;      Params:         0       0       0       0       0       0       0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0
  9932 ;;      Totals:         0       0       0       0       0       0       0       0
  9933 ;;Total ram usage:        0 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    3
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_TCN75_ReadReg
  9940 ;;		_TCN75_SetConfig
  9941 ;; This function uses a non-reentrant model
  9942 ;;
  9943  04D9                     _SimI2C_Stop:	
  9944                           
  9945                           ;SimI2C.c: 30: LATD7=0;
  9946                           
  9947                           ; Regs used in _SimI2C_Stop: []
  9948  04D9  0022               	movlb	2	; select bank2
  9949  04DA  138F               	bcf	15,7
  9950                           
  9951                           ;SimI2C.c: 31: LATD6=0;
  9952  04DB  130F               	bcf	15,6
  9953                           
  9954                           ;SimI2C.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9955  04DC  0064               	clrwdt
  9956                           
  9957                           ;SimI2C.c: 33: LATD7=1;
  9958  04DD  0022               	movlb	2	; select bank2
  9959  04DE  178F               	bsf	15,7
  9960                           
  9961                           ;SimI2C.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9962  04DF  0064               	clrwdt
  9963                           
  9964                           ;SimI2C.c: 35: LATD6=1;
  9965  04E0  0022               	movlb	2	; select bank2
  9966  04E1  170F               	bsf	15,6
  9967  04E2  0008               	return
  9968  04E3                     __end_of_SimI2C_Stop:	
  9969                           
  9970                           	psect	text1989
  9971  0589                     __ptext1989:	
  9972 ;; =============== function _OneWire_ReadByte ends ============
  9973                           
  9974                           
  9975 ;; *************** function _atoi *****************
  9976 ;; Defined at:
  9977 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\atoi.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  9980 ;;		 -> ATCommand_RxList(100), RAM(128), 
  9981 ;; Auto vars:     Size  Location     Type
  9982 ;;  a               2   13[BANK0 ] int 
  9983 ;;  sign            1   12[BANK0 ] unsigned char 
  9984 ;; Return value:  Size  Location     Type
  9985 ;;                  2    6[BANK0 ] int 
  9986 ;; Registers used:
  9987 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9988 ;; Tracked objects:
  9989 ;;		On entry : 1F/0
  9990 ;;		On exit  : 1F/0
  9991 ;;		Unchanged: FFFE0/0
  9992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9993 ;;      Params:         0       2       0       0       0       0       0       0
  9994 ;;      Locals:         0       3       0       0       0       0       0       0
  9995 ;;      Temps:          0       4       0       0       0       0       0       0
  9996 ;;      Totals:         0       9       0       0       0       0       0       0
  9997 ;;Total ram usage:        9 bytes
  9998 ;; Hardware stack levels used:    1
  9999 ;; Hardware stack levels required when called:    4
 10000 ;; This function calls:
 10001 ;;		___wmul
 10002 ;;		_isdigit
 10003 ;; This function is called by:
 10004 ;;		_InitGPRS
 10005 ;; This function uses a non-reentrant model
 10006 ;;
 10007  0589                     _atoi:	
 10008  0589                     l32606:	
 10009                           ; Regs used in _atoi: [wreg+fsr1l-status,0+pclath+cstack]
 10010                           
 10011  0589  0826               	movf	atoi@s,w
 10012  058A  0086               	movwf	6
 10013  058B  0827               	movf	atoi@s+1,w
 10014  058C  0087               	movwf	7
 10015  058D  0801               	movf	1,w
 10016  058E  3A20               	xorlw	32
 10017  058F  1D03               	btfss	3,2
 10018  0590  2D95               	goto	l32608
 10019  0591                     l32604:	
 10020  0591  0AA6               	incf	atoi@s,f
 10021  0592  1903               	skipnz
 10022  0593  0AA7               	incf	atoi@s+1,f
 10023  0594  2D89               	goto	l32606
 10024  0595                     l32608:	
 10025  0595  0826               	movf	atoi@s,w
 10026  0596  0086               	movwf	6
 10027  0597  0827               	movf	atoi@s+1,w
 10028  0598  0087               	movwf	7
 10029  0599  0801               	movf	1,w
 10030  059A  3A09               	xorlw	9
 10031  059B  1903               	skipnz
 10032  059C  2D91               	goto	l32604
 10033  059D  01AD               	clrf	atoi@a
 10034  059E  01AE               	clrf	atoi@a+1
 10035  059F  01AC               	clrf	atoi@sign
 10036  05A0  0826               	movf	atoi@s,w
 10037  05A1  0086               	movwf	6
 10038  05A2  0827               	movf	atoi@s+1,w
 10039  05A3  0087               	movwf	7
 10040  05A4  0801               	movf	1,w
 10041  05A5  3A2D               	xorlw	45
 10042  05A6  1D03               	skipz
 10043  05A7  2DAA               	goto	l32616
 10044  05A8  0AAC               	incf	atoi@sign,f
 10045  05A9  2DD7               	goto	l32618
 10046  05AA                     l32616:	
 10047  05AA  0826               	movf	atoi@s,w
 10048  05AB  0086               	movwf	6
 10049  05AC  0827               	movf	atoi@s+1,w
 10050  05AD  0087               	movwf	7
 10051  05AE  0801               	movf	1,w
 10052  05AF  3A2B               	xorlw	43
 10053  05B0  1903               	btfsc	3,2
 10054  05B1  2DD7               	goto	l32618
 10055  05B2                     l32624:	
 10056  05B2  0826               	movf	atoi@s,w
 10057  05B3  0086               	movwf	6
 10058  05B4  0827               	movf	atoi@s+1,w
 10059  05B5  0087               	movwf	7
 10060  05B6  0801               	movf	1,w
 10061  05B7  25EF  3185         	fcall	_isdigit
 10062  05B9  1C03               	btfss	3,0
 10063  05BA  2DDB               	goto	l32626
 10064  05BB  0826               	movf	atoi@s,w
 10065  05BC  0086               	movwf	6
 10066  05BD  0827               	movf	atoi@s+1,w
 10067  05BE  0087               	movwf	7
 10068  05BF  0801               	movf	1,w
 10069  05C0  00A8               	movwf	??_atoi
 10070  05C1  01A9               	clrf	??_atoi+1
 10071  05C2  082E               	movf	atoi@a+1,w
 10072  05C3  00A1               	movwf	?___wmul+1
 10073  05C4  082D               	movf	atoi@a,w
 10074  05C5  00A0               	movwf	?___wmul
 10075  05C6  300A               	movlw	10
 10076  05C7  00A2               	movwf	?___wmul+2
 10077  05C8  01A3               	clrf	?___wmul+3
 10078  05C9  25FD  3185         	fcall	___wmul
 10079  05CB  0828               	movf	??_atoi,w
 10080  05CC  0720               	addwf	?___wmul,w
 10081  05CD  00AA               	movwf	??_atoi+2
 10082  05CE  0829               	movf	??_atoi+1,w
 10083  05CF  3D21               	addwfc	?___wmul+1,w
 10084  05D0  00AB               	movwf	??_atoi+3
 10085  05D1  082A               	movf	??_atoi+2,w
 10086  05D2  3ED0               	addlw	208
 10087  05D3  00AD               	movwf	atoi@a
 10088  05D4  30FF               	movlw	255
 10089  05D5  3D2B               	addwfc	??_atoi+3,w
 10090  05D6  00AE               	movwf	atoi@a+1
 10091  05D7                     l32618:	
 10092  05D7  0AA6               	incf	atoi@s,f
 10093  05D8  1903               	skipnz
 10094  05D9  0AA7               	incf	atoi@s+1,f
 10095  05DA  2DB2               	goto	l32624
 10096  05DB                     l32626:	
 10097  05DB  082C               	movf	atoi@sign,w
 10098  05DC  1903               	btfsc	3,2
 10099  05DD  2DEA               	goto	l32632
 10100  05DE  092D               	comf	atoi@a,w
 10101  05DF  00A8               	movwf	??_atoi
 10102  05E0  092E               	comf	atoi@a+1,w
 10103  05E1  00A9               	movwf	??_atoi+1
 10104  05E2  0AA8               	incf	??_atoi,f
 10105  05E3  1903               	skipnz
 10106  05E4  0AA9               	incf	??_atoi+1,f
 10107  05E5  0828               	movf	??_atoi,w
 10108  05E6  00A6               	movwf	?_atoi
 10109  05E7  0829               	movf	??_atoi+1,w
 10110  05E8  00A7               	movwf	?_atoi+1
 10111  05E9  0008               	return
 10112  05EA                     l32632:	
 10113  05EA  082E               	movf	atoi@a+1,w
 10114  05EB  00A7               	movwf	?_atoi+1
 10115  05EC  082D               	movf	atoi@a,w
 10116  05ED  00A6               	movwf	?_atoi
 10117  05EE  0008               	return
 10118  05EF                     __end_of_atoi:	
 10119  05EF                     __ptext2012:	
 10120 ;; =============== function _strlen ends ============
 10121                           
 10122                           
 10123 ;; *************** function _isdigit *****************
 10124 ;; Defined at:
 10125 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isdigit.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  c               1    wreg     unsigned char 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  c               1    1[BANK0 ] unsigned char 
 10130 ;; Return value:  Size  Location     Type
 10131 ;;		None               void
 10132 ;; Registers used:
 10133 ;;		wreg, status,2, status,0
 10134 ;; Tracked objects:
 10135 ;;		On entry : 1F/0
 10136 ;;		On exit  : 1F/0
 10137 ;;		Unchanged: FFFE0/0
 10138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10139 ;;      Params:         0       0       0       0       0       0       0       0
 10140 ;;      Locals:         0       2       0       0       0       0       0       0
 10141 ;;      Temps:          0       0       0       0       0       0       0       0
 10142 ;;      Totals:         0       2       0       0       0       0       0       0
 10143 ;;Total ram usage:        2 bytes
 10144 ;; Hardware stack levels used:    1
 10145 ;; Hardware stack levels required when called:    3
 10146 ;; This function calls:
 10147 ;;		Nothing
 10148 ;; This function is called by:
 10149 ;;		_atoi
 10150 ;; This function uses a non-reentrant model
 10151 ;;
 10152  05EF                     _isdigit:	
 10153                           
 10154                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10155                           ;isdigit@c stored from wreg
 10156  05EF  00A1               	movwf	isdigit@c
 10157  05F0  01A0               	clrf	_isdigit$31763
 10158  05F1  303A               	movlw	58
 10159  05F2  0221               	subwf	isdigit@c,w
 10160  05F3  1803               	skipnc
 10161  05F4  2DFB               	goto	l32336
 10162  05F5  3030               	movlw	48
 10163  05F6  0221               	subwf	isdigit@c,w
 10164  05F7  1C03               	skipc
 10165  05F8  2DFB               	goto	l32336
 10166  05F9  01A0               	clrf	_isdigit$31763
 10167  05FA  0AA0               	incf	_isdigit$31763,f
 10168  05FB                     l32336:	
 10169  05FB  0C20               	rrf	_isdigit$31763,w
 10170  05FC  0008               	return
 10171  05FD                     __end_of_isdigit:	
 10172  05FD                     __ptext2007:	
 10173 ;; =============== function ___lwdiv ends ============
 10174                           
 10175                           
 10176 ;; *************** function ___wmul *****************
 10177 ;; Defined at:
 10178 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\wmul.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10181 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;  product         2    4[BANK0 ] unsigned int 
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  2    0[BANK0 ] unsigned int 
 10186 ;; Registers used:
 10187 ;;		wreg, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 1F/0
 10190 ;;		On exit  : 1F/0
 10191 ;;		Unchanged: FFFE0/0
 10192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10193 ;;      Params:         0       4       0       0       0       0       0       0
 10194 ;;      Locals:         0       2       0       0       0       0       0       0
 10195 ;;      Temps:          0       0       0       0       0       0       0       0
 10196 ;;      Totals:         0       6       0       0       0       0       0       0
 10197 ;;Total ram usage:        6 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; Hardware stack levels required when called:    3
 10200 ;; This function calls:
 10201 ;;		Nothing
 10202 ;; This function is called by:
 10203 ;;		_atoi
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206  05FD                     ___wmul:	
 10207                           
 10208                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10209  05FD  01A4               	clrf	___wmul@product
 10210  05FE  01A5               	clrf	___wmul@product+1
 10211  05FF                     l32358:	
 10212  05FF  1C20               	btfss	___wmul@multiplier,0
 10213  0600  2E05               	goto	l32362
 10214  0601  0822               	movf	___wmul@multiplicand,w
 10215  0602  07A4               	addwf	___wmul@product,f
 10216  0603  0823               	movf	___wmul@multiplicand+1,w
 10217  0604  3DA5               	addwfc	___wmul@product+1,f
 10218  0605                     l32362:	
 10219  0605  35A2               	lslf	___wmul@multiplicand,f
 10220  0606  0DA3               	rlf	___wmul@multiplicand+1,f
 10221  0607  36A1               	lsrf	___wmul@multiplier+1,f
 10222  0608  0CA0               	rrf	___wmul@multiplier,f
 10223  0609  0821               	movf	___wmul@multiplier+1,w
 10224  060A  0420               	iorwf	___wmul@multiplier,w
 10225  060B  1D03               	skipz
 10226  060C  2DFF               	goto	l32358
 10227  060D  0825               	movf	___wmul@product+1,w
 10228  060E  00A1               	movwf	?___wmul+1
 10229  060F  0824               	movf	___wmul@product,w
 10230  0610  00A0               	movwf	?___wmul
 10231  0611  0008               	return
 10232  0612                     __end_of___wmul:	
 10233                           
 10234                           	psect	intentry
 10235  0004                     __pintentry:	
 10236 ;; =============== function _LcdDisplayNum ends ============
 10237                           
 10238                           
 10239 ;; *************** function _highISR *****************
 10240 ;; Defined at:
 10241 ;;		line 83 in file "F:\work\WYP\NBIoT\Main.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;		None
 10244 ;; Auto vars:     Size  Location     Type
 10245 ;;  rx              1    6[COMMON] unsigned char 
 10246 ;; Return value:  Size  Location     Type
 10247 ;;		None               void
 10248 ;; Registers used:
 10249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
 10250 ;; Tracked objects:
 10251 ;;		On entry : 0/0
 10252 ;;		On exit  : 1E/0
 10253 ;;		Unchanged: FFFE0/0
 10254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10255 ;;      Params:         0       0       0       0       0       0       0       0
 10256 ;;      Locals:         1       0       0       0       0       0       0       0
 10257 ;;      Temps:          0       0       0       0       0       0       0       0
 10258 ;;      Totals:         1       0       0       0       0       0       0       0
 10259 ;;Total ram usage:        1 bytes
 10260 ;; Hardware stack levels used:    1
 10261 ;; Hardware stack levels required when called:    2
 10262 ;; This function calls:
 10263 ;;		_ATCommand_ProcRx
 10264 ;; This function is called by:
 10265 ;;		Interrupt level 1
 10266 ;; This function uses a non-reentrant model
 10267 ;;
 10268  0004                     _highISR:	
 10269                           
 10270                           ; Regs used in _highISR: [allreg]
 10271  0004  3180               	pagesel	$
 10272                           
 10273                           ;Main.c: 84: unsigned char rx;
 10274                           ;Main.c: 85: if(RCIE&&RCIF)
 10275  0005  0021               	movlb	1	; select bank1
 10276  0006  1E91               	btfss	17,5
 10277  0007  2818               	goto	i1l30482
 10278  0008  0020               	movlb	0	; select bank0
 10279  0009  1E91               	btfss	17,5
 10280  000A  2818               	goto	i1l30482
 10281                           
 10282                           ;Main.c: 86: {
 10283                           ;Main.c: 87: RCIF=0;
 10284  000B  1291               	bcf	17,5
 10285                           
 10286                           ;Main.c: 88: if(OERR==1)
 10287  000C  0023               	movlb	3	; select bank3
 10288  000D  1C9D               	btfss	29,1
 10289  000E  2812               	goto	i1l30478
 10290                           
 10291                           ;Main.c: 89: {
 10292                           ;Main.c: 90: CREN=0;
 10293  000F  121D               	bcf	29,4
 10294                           
 10295                           ;Main.c: 91: OERR=0;
 10296  0010  109D               	bcf	29,1
 10297                           
 10298                           ;Main.c: 92: CREN=1;
 10299  0011  161D               	bsf	29,4
 10300  0012                     i1l30478:	
 10301                           
 10302                           ;Main.c: 93: }
 10303                           ;Main.c: 94: rx=RCREG;
 10304  0012  0819               	movf	25,w	;volatile
 10305  0013  00F6               	movwf	highISR@rx
 10306                           
 10307                           ;Main.c: 95: ATCommand_ProcRx(rx);
 10308  0014  0876               	movf	highISR@rx,w
 10309  0015  3184  24E3  3180   	fcall	_ATCommand_ProcRx
 10310  0018                     i1l30482:	
 10311                           
 10312                           ;Main.c: 96: }
 10313                           ;Main.c: 97: if(TMR1IF&& TMR1IE)
 10314  0018  0020               	movlb	0	; select bank0
 10315  0019  1C11               	btfss	17,0
 10316  001A  0009               	retfie
 10317  001B  0021               	movlb	1	; select bank1
 10318  001C  1C11               	btfss	17,0
 10319  001D  0009               	retfie
 10320  001E  0064               	clrwdt	;#
 10321                           
 10322                           ;Main.c: 100: TMR1IF=0;
 10323  001F  0020               	movlb	0	; select bank0
 10324  0020  1011               	bcf	17,0
 10325                           
 10326                           ;Main.c: 101: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
 10327  0021  303C               	movlw	60
 10328  0022  0097               	movwf	23	;volatile
 10329  0023  30B0               	movlw	176
 10330  0024  0096               	movwf	22	;volatile
 10331                           
 10332                           ;Main.c: 102: SystemTick++;
 10333  0025  0ADC               	incf	_SystemTick,f
 10334  0026  1903               	skipnz
 10335  0027  0ADD               	incf	_SystemTick+1,f
 10336  0028  0009               	retfie
 10337  0029                     __end_of_highISR:	
 10338                           
 10339                           	psect	text2025
 10340  04E3                     __ptext2025:	
 10341 ;; =============== function _highISR ends ============
 10342                           
 10343                           
 10344 ;; *************** function _ATCommand_ProcRx *****************
 10345 ;; Defined at:
 10346 ;;		line 27 in file "F:\work\WYP\NBIoT\ATCommand.c"
 10347 ;; Parameters:    Size  Location     Type
 10348 ;;  rx              1    wreg     unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  rx              1    5[COMMON] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;		None               void
 10353 ;; Registers used:
 10354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 1F/3
 10357 ;;		On exit  : 1F/3
 10358 ;;		Unchanged: FFFE0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10360 ;;      Params:         0       0       0       0       0       0       0       0
 10361 ;;      Locals:         1       0       0       0       0       0       0       0
 10362 ;;      Temps:          3       0       0       0       0       0       0       0
 10363 ;;      Totals:         4       0       0       0       0       0       0       0
 10364 ;;Total ram usage:        4 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    1
 10367 ;; This function calls:
 10368 ;;		_isgraph
 10369 ;; This function is called by:
 10370 ;;		_highISR
 10371 ;; This function uses a non-reentrant model
 10372 ;;
 10373  04E3                     _ATCommand_ProcRx:	
 10374                           
 10375                           ; Regs used in _ATCommand_ProcRx: [wreg+fsr1l-status,0+pclath+cstack]
 10376                           ;ATCommand_ProcRx@rx stored from wreg
 10377  04E3  00F5               	movwf	ATCommand_ProcRx@rx
 10378                           
 10379                           ;ATCommand.c: 28: if(ATCommand_Flags.bRx)
 10380  04E4  18FA               	btfsc	_ATCommand_Flags,1
 10381  04E5  0008               	return
 10382                           
 10383                           ;ATCommand.c: 30: if(ATCommand_Clear!='\0')
 10384  04E6  0879               	movf	_ATCommand_Clear,w
 10385  04E7  1903               	btfsc	3,2
 10386  04E8  2CF0               	goto	i1l15025
 10387                           
 10388                           ;ATCommand.c: 31: {
 10389                           ;ATCommand.c: 32: if(rx==ATCommand_Clear)
 10390  04E9  0875               	movf	ATCommand_ProcRx@rx,w
 10391  04EA  0679               	xorwf	_ATCommand_Clear,w
 10392  04EB  1D03               	skipz
 10393  04EC  2CF0               	goto	i1l15025
 10394  04ED                     i1l30498:	
 10395                           
 10396                           ;ATCommand.c: 33: {
 10397                           ;ATCommand.c: 34: ATCommand_RxCount=0;
 10398  04ED  01FB               	clrf	_ATCommand_RxCount
 10399  04EE                     i1l30500:	
 10400                           
 10401                           ;ATCommand.c: 35: ATCommand_RxList[ATCommand_RxCount]='\0';
 10402  04EE  2580               	fcall	PL2	;call to abstracted procedure
 10403  04EF  0008               	return
 10404  04F0                     i1l15025:	
 10405                           
 10406                           ;ATCommand.c: 37: }
 10407                           ;ATCommand.c: 38: }
 10408                           ;ATCommand.c: 39: if(ATCommand_Flags.bChar)
 10409  04F0  1C7A               	btfss	_ATCommand_Flags,0
 10410  04F1  2CFD               	goto	i1l30518
 10411                           
 10412                           ;ATCommand.c: 40: {
 10413                           ;ATCommand.c: 41: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10414  04F2  0875               	movf	ATCommand_ProcRx@rx,w
 10415                           
 10416                           ;ATCommand.c: 42: if(ATCommand_RxCount>=100)
 10417  04F3  2517  3184         	fcall	PL3	;call to abstracted procedure
 10418  04F5  1C03               	skipc
 10419  04F6  2CF9               	goto	i1l30512
 10420                           
 10421                           ;ATCommand.c: 43: {
 10422                           ;ATCommand.c: 44: ATCommand_RxCount=0;
 10423  04F7  01FB               	clrf	_ATCommand_RxCount
 10424                           
 10425                           ;ATCommand.c: 45: }
 10426  04F8  2CFA               	goto	i1l30514
 10427  04F9                     i1l30512:	
 10428                           
 10429                           ;ATCommand.c: 46: else
 10430                           ;ATCommand.c: 47: {
 10431                           ;ATCommand.c: 48: ATCommand_RxList[ATCommand_RxCount]='\0';
 10432  04F9  2580               	fcall	PL2	;call to abstracted procedure
 10433  04FA                     i1l30514:	
 10434                           
 10435                           ;ATCommand.c: 49: }
 10436                           ;ATCommand.c: 50: if(!ATCommand_Flags.bWaitData)
 10437  04FA  1D7A               	btfss	_ATCommand_Flags,2
 10438                           
 10439                           ;ATCommand.c: 51: {
 10440                           ;ATCommand.c: 52: ;;
 10441                           ;ATCommand.c: 53: ATCommand_RxCount=0;
 10442  04FB  01FB               	clrf	_ATCommand_RxCount
 10443  04FC  0008               	return
 10444  04FD                     i1l30518:	
 10445                           
 10446                           ;ATCommand.c: 56: else
 10447                           ;ATCommand.c: 57: {
 10448                           ;ATCommand.c: 58: if(isgraph(rx)==1)
 10449  04FD  0875               	movf	ATCommand_ProcRx@rx,w
 10450  04FE  2509  3184         	fcall	_isgraph
 10451  0500  1C03               	btfss	3,0
 10452  0501  0008               	return
 10453                           
 10454                           ;ATCommand.c: 59: {
 10455                           ;ATCommand.c: 60: ATCommand_Flags.bChar=1;
 10456  0502  147A               	bsf	_ATCommand_Flags,0
 10457                           
 10458                           ;ATCommand.c: 61: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10459  0503  0875               	movf	ATCommand_ProcRx@rx,w
 10460                           
 10461                           ;ATCommand.c: 62: if(ATCommand_RxCount>=100)
 10462  0504  2517  3184         	fcall	PL3	;call to abstracted procedure
 10463  0506  1803               	btfsc	3,0
 10464  0507  2CED               	goto	i1l30498
 10465  0508  2CEE               	goto	i1l30500
 10466  0509                     __end_of_ATCommand_ProcRx:	
 10467  0509                     __ptext2026:	
 10468 ;; =============== function _ATCommand_ProcRx ends ============
 10469                           
 10470                           
 10471 ;; *************** function _isgraph *****************
 10472 ;; Defined at:
 10473 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isgraph.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  c               1    wreg     unsigned char 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;  c               1    1[COMMON] unsigned char 
 10478 ;; Return value:  Size  Location     Type
 10479 ;;		None               void
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 1F/3
 10484 ;;		On exit  : 1F/3
 10485 ;;		Unchanged: FFFE0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10487 ;;      Params:         0       0       0       0       0       0       0       0
 10488 ;;      Locals:         2       0       0       0       0       0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0
 10490 ;;      Totals:         2       0       0       0       0       0       0       0
 10491 ;;Total ram usage:        2 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_ATCommand_ProcRx
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499  0509                     _isgraph:	
 10500                           
 10501                           ; Regs used in _isgraph: [wreg+status,2+status,0]
 10502                           ;isgraph@c stored from wreg
 10503  0509  00F1               	movwf	isgraph@c
 10504  050A  01F0               	clrf	_isgraph$31766
 10505  050B  307F               	movlw	127
 10506  050C  0271               	subwf	isgraph@c,w
 10507  050D  1803               	skipnc
 10508  050E  2D15               	goto	i1l30610
 10509  050F  3021               	movlw	33
 10510  0510  0271               	subwf	isgraph@c,w
 10511  0511  1C03               	skipc
 10512  0512  2D15               	goto	i1l30610
 10513  0513  01F0               	clrf	_isgraph$31766
 10514  0514  0AF0               	incf	_isgraph$31766,f
 10515  0515                     i1l30610:	
 10516  0515  0C70               	rrf	_isgraph$31766,w
 10517  0516  0008               	return
 10518  0517                     __end_of_isgraph:	
 10519  0517                     PL3:	
 10520  0517  00F2               	movwf	??_ATCommand_ProcRx
 10521  0518  087B               	movf	_ATCommand_RxCount,w
 10522  0519  3E8C               	addlw	140
 10523  051A  00F3               	movwf	??_ATCommand_ProcRx+1
 10524  051B  3021               	movlw	33
 10525  051C  1803               	skipnc
 10526  051D  3022               	movlw	34
 10527  051E  00F4               	movwf	??_ATCommand_ProcRx+2
 10528  051F  0873               	movf	??_ATCommand_ProcRx+1,w
 10529  0520  0086               	movwf	6
 10530  0521  0874               	movf	??_ATCommand_ProcRx+2,w
 10531  0522  0087               	movwf	7
 10532  0523  0872               	movf	??_ATCommand_ProcRx,w
 10533  0524  0081               	movwf	1
 10534  0525  0AFB               	incf	_ATCommand_RxCount,f
 10535  0526  3064               	movlw	100
 10536  0527  027B               	subwf	_ATCommand_RxCount,w
 10537  0528  0008               	return
 10538  0529                     __ptext1973:	
 10539 ;; =============== function _OneWire_Command ends ============
 10540                           
 10541                           
 10542 ;; *************** function _ATCommand_WaitData *****************
 10543 ;; Defined at:
 10544 ;;		line 125 in file "F:\work\WYP\NBIoT\ATCommand.c"
 10545 ;; Parameters:    Size  Location     Type
 10546 ;;		None
 10547 ;; Auto vars:     Size  Location     Type
 10548 ;;  strx            2   20[BANK0 ] PTR unsigned char 
 10549 ;;		 -> ATCommand_RxList(100), RAM(128), 
 10550 ;;  res             1   19[BANK0 ] unsigned char 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  1    wreg      unsigned char 
 10553 ;; Registers used:
 10554 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10555 ;; Tracked objects:
 10556 ;;		On entry : 1F/0
 10557 ;;		On exit  : 1F/0
 10558 ;;		Unchanged: FFFE0/0
 10559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10560 ;;      Params:         0       0       0       0       0       0       0       0
 10561 ;;      Locals:         0       3       0       0       0       0       0       0
 10562 ;;      Temps:          0       2       0       0       0       0       0       0
 10563 ;;      Totals:         0       5       0       0       0       0       0       0
 10564 ;;Total ram usage:        5 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; Hardware stack levels required when called:    5
 10567 ;; This function calls:
 10568 ;;		_strstr
 10569 ;;		_strcpy
 10570 ;; This function is called by:
 10571 ;;		_InteractServer
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574  0529                     _ATCommand_WaitData:	
 10575                           
 10576                           ;ATCommand.c: 126: unsigned char res=0;
 10577                           
 10578                           ; Regs used in _ATCommand_WaitData: [wreg-status,0+pclath+cstack]
 10579  0529  01B3               	clrf	ATCommand_WaitData@res
 10580                           
 10581                           ;ATCommand.c: 128: res=ATACK_Null;
 10582  052A  01B3               	clrf	ATCommand_WaitData@res
 10583                           
 10584                           ;ATCommand.c: 129: ATCommand_Flags.bRx=0;
 10585  052B  10FA               	bcf	_ATCommand_Flags,1
 10586                           
 10587                           ;ATCommand.c: 130: ATCommand_Flags.bChar=0;
 10588  052C  107A               	bcf	_ATCommand_Flags,0
 10589                           
 10590                           ;ATCommand.c: 131: ATCommand_WaitACKTick=SystemTick;
 10591  052D  085D               	movf	_SystemTick+1,w
 10592  052E  00D3               	movwf	_ATCommand_WaitACKTick+1
 10593  052F  085C               	movf	_SystemTick,w
 10594  0530  00D2               	movwf	_ATCommand_WaitACKTick
 10595                           
 10596                           ;ATCommand.c: 132: ATCommand_RxCount=0;
 10597  0531  01FB               	clrf	_ATCommand_RxCount
 10598                           
 10599                           ;ATCommand.c: 133: ATCommand_Flags.bWaitData=1;
 10600  0532  157A               	bsf	_ATCommand_Flags,2
 10601                           
 10602                           ;ATCommand.c: 134: ATCommand_RxList[ATCommand_RxCount]='\0';
 10603  0533  2580               	fcall	PL2	;call to abstracted procedure
 10604  0534                     l32866:	
 10605                           
 10606                           ;ATCommand.c: 136: {
 10607                           ;ATCommand.c: 137: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
 10608  0534  308C               	movlw	140
 10609  0535  00AD               	movwf	?_strstr
 10610  0536  3021               	movlw	33
 10611  0537  00AE               	movwf	?_strstr+1
 10612  0538  30C4               	movlw	_ATCommand_OkString& (0+255)
 10613  0539  00AF               	movwf	?_strstr+2
 10614  053A  01B0               	clrf	?_strstr+3
 10615  053B  318A  22D8  3184   	fcall	_strstr
 10616  053E  082E               	movf	?_strstr+1,w
 10617  053F  00B5               	movwf	ATCommand_WaitData@strx+1
 10618  0540  082D               	movf	?_strstr,w
 10619  0541  00B4               	movwf	ATCommand_WaitData@strx
 10620                           
 10621                           ;ATCommand.c: 138: if(strx!=0)
 10622  0542  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10623  0543  1903               	skipnz
 10624  0544  2D48               	goto	l32874
 10625                           
 10626                           ;ATCommand.c: 139: {
 10627                           ;ATCommand.c: 140: res=ATACK_OK;
 10628  0545  01B3               	clrf	ATCommand_WaitData@res
 10629  0546  0AB3               	incf	ATCommand_WaitData@res,f
 10630  0547  2D5B               	goto	l32880
 10631  0548                     l32874:	
 10632                           ;ATCommand.c: 142: break;
 10633                           
 10634                           ;ATCommand.c: 141: ATCommand_Flags.bRx=1;
 10635                           
 10636                           
 10637                           ;ATCommand.c: 144: else
 10638                           ;ATCommand.c: 145: {
 10639                           ;ATCommand.c: 146: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
 10640  0548  308C               	movlw	140
 10641  0549  00AD               	movwf	?_strstr
 10642  054A  3021               	movlw	33
 10643  054B  00AE               	movwf	?_strstr+1
 10644  054C  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10645  054D  00AF               	movwf	?_strstr+2
 10646  054E  01B0               	clrf	?_strstr+3
 10647  054F  318A  22D8  3184   	fcall	_strstr
 10648  0552  082E               	movf	?_strstr+1,w
 10649  0553  00B5               	movwf	ATCommand_WaitData@strx+1
 10650  0554  082D               	movf	?_strstr,w
 10651  0555  00B4               	movwf	ATCommand_WaitData@strx
 10652                           
 10653                           ;ATCommand.c: 147: if(strx!=0)
 10654  0556  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10655  0557  1903               	skipnz
 10656  0558  2D5D               	goto	l32882
 10657                           
 10658                           ;ATCommand.c: 148: {
 10659                           ;ATCommand.c: 149: res=ATACK_Err;
 10660  0559  3002               	movlw	2
 10661  055A  00B3               	movwf	ATCommand_WaitData@res
 10662  055B                     l32880:	
 10663                           
 10664                           ;ATCommand.c: 150: ATCommand_Flags.bRx=1;
 10665  055B  14FA               	bsf	_ATCommand_Flags,1
 10666                           
 10667                           ;ATCommand.c: 151: break;
 10668  055C  2D6A               	goto	l15052
 10669  055D                     l32882:	
 10670                           
 10671                           ;ATCommand.c: 152: }
 10672                           ;ATCommand.c: 153: }
 10673                           ;ATCommand.c: 154: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
 10674  055D  0852               	movf	_ATCommand_WaitACKTick,w
 10675  055E  025C               	subwf	_SystemTick,w
 10676  055F  00B1               	movwf	??_ATCommand_WaitData
 10677  0560  0853               	movf	_ATCommand_WaitACKTick+1,w
 10678  0561  3B5D               	subwfb	_SystemTick+1,w
 10679  0562  00B2               	movwf	??_ATCommand_WaitData+1
 10680  0563  0255               	subwf	_ATCommand_WaitACKTimes+1,w
 10681  0564  1D03               	skipz
 10682  0565  2D68               	goto	u7935
 10683  0566  0831               	movf	??_ATCommand_WaitData,w
 10684  0567  0254               	subwf	_ATCommand_WaitACKTimes,w
 10685  0568                     u7935:	
 10686  0568  1803               	skipnc
 10687  0569  2D34               	goto	l32866
 10688  056A                     l15052:	
 10689                           
 10690                           ;ATCommand.c: 156: }
 10691                           ;ATCommand.c: 157: ATCommand_Flags.bWaitData=0;
 10692  056A  117A               	bcf	_ATCommand_Flags,2
 10693                           
 10694                           ;ATCommand.c: 158: strcpy(ATCommand_OkString,"OK");
 10695  056B  3013               	movlw	low (STR_29| (0+32768))
 10696  056C  00A0               	movwf	?_strcpy
 10697  056D  3091               	movlw	high (STR_29| (0+32768))
 10698  056E  00A1               	movwf	?_strcpy+1
 10699  056F  30C4               	movlw	_ATCommand_OkString& (0+255)
 10700  0570  318E  262A  3184   	fcall	_strcpy
 10701                           
 10702                           ;ATCommand.c: 159: strcpy(ATCommand_ErrString,"ERROR");
 10703  0573  30FA               	movlw	low (STR_18| (0+32768))
 10704  0574  00A0               	movwf	?_strcpy
 10705  0575  3090               	movlw	high (STR_18| (0+32768))
 10706  0576  00A1               	movwf	?_strcpy+1
 10707  0577  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10708  0578  318E  262A         	fcall	_strcpy
 10709                           
 10710                           ;ATCommand.c: 160: ATCommand_Clear='\0';
 10711  057A  01F9               	clrf	_ATCommand_Clear
 10712                           
 10713                           ;ATCommand.c: 162: ATCommand_WaitACKTimes=50;
 10714  057B  3032               	movlw	50
 10715  057C  00D4               	movwf	_ATCommand_WaitACKTimes
 10716  057D  01D5               	clrf	_ATCommand_WaitACKTimes+1
 10717                           
 10718                           ;ATCommand.c: 163: return res;
 10719  057E  0833               	movf	ATCommand_WaitData@res,w
 10720  057F  0008               	return
 10721  0580                     __end_of_ATCommand_WaitData:	
 10722  0580                     PL2:	
 10723  0580  087B               	movf	_ATCommand_RxCount,w
 10724  0581  3E8C               	addlw	140
 10725  0582  0086               	movwf	6
 10726  0583  3021               	movlw	33
 10727  0584  1803               	skipnc
 10728  0585  3022               	movlw	34
 10729  0586  0087               	movwf	7
 10730  0587  0181               	clrf	1
 10731  0588  0008               	return
 10732                           
 10733                           	psect	text2027
 10734  0000                     __ptext2027:	
 10735 ;; =============== function _isgraph ends ============
 10736                           
 10737  007E                     btemp	set	126	;btemp
 10738  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Thu Jan 03 13:32:12 2019

              ___bmul@product 0021                            _RD 0CA8                            _WA 3C94  
                          _WR 0CA9           ___wmul@multiplicand 0022                           _GIE 005F  
                         _RB1 0069                           _RB2 006A                           _RB7 006F  
                         _CSQ 0061                           _RD6 007E                           _PR2 001B  
     __end_of_TCN75_SetConfig 0FD8             DS18X20_ReadMeas@i 002B              SimI2C_SendByte@i 0022  
            SimI2C_SendByte@t 0021                           wreg 0009         ATCommand_WaitData@res 0033  
                 ?_TCN75_Init 0070                          l2110 036A                          l2102 035E  
                        l2201 03F7                          l2121 037F                          l2113 0373  
                        l2105 0367                          l2210 03FF                          l2202 03F3  
                        l2130 0387                          l2122 037B                          l2114 036F  
                        l2106 0363                          l2050 030F                          l2301 02F5  
                        l2214 0406                          l2206 03FA                          l2150 03A6  
                        l2142 039A                          l2134 038E                          l2126 0382  
                        l2118 0376                          l2070 032E                          l2062 0322  
                        l2054 0316                          l2046 030A                          l2310 02FE  
                        l2231 02A0                          l2304 02F8                          l2240 02A9  
                        l2209 0403                          l2161 03BB                          l2153 03AF  
                        l2145 03A3                          l2137 0397                          l2129 038B  
                        l2081 0343                          l2073 0337                          l2065 032B  
                        l2057 031F                          l2049 0313                          l2313 0301  
                        l2225 029A                          l2218 040B                          l2170 03C3  
                        l2162 03B7                          l2154 03AB                          l2146 039F  
                        l2138 0393                          l2090 034B                          l2082 033F  
                        l2074 0333                          l2066 0327                          l2058 031B  
                        l2234 02A3                          l2322 0000                          l2307 02FB  
                        l2243 02AC                          l2316 0304                          l2260 02C3  
                        l2252 02B5                          l2228 029D                          l2237 02A6  
                        l2333 0E98                          l2190 03E2                          l2182 03D6  
                        l2174 03CA                          l2166 03BE                          l2158 03B2  
                        l2094 0352                          l2086 0346                          l2078 033A  
                        l2246 02AF                          l2326 0E90                          l2342 0414  
                        l2263 02C6                          l2272 02CF                          l2336 0000  
                        l2193 03EB                          l2185 03DF                          l2177 03D3  
                        l2169 03C7                          l2097 035B                          l2089 034F  
                        l2281 02D8                          l2257 02C0                          l2249 02B2  
                        l2329 0E94                          l2345 0000                          l2194 03E7  
                        l2186 03DB                          l2178 03CF                          l2098 0357  
                        l2266 02C9                          l2275 02D2                          l2339 0410  
                        l2348 0000                          l2292 02EC                          l2284 02DB  
                        l2269 02CC                          l2198 03EE                          l2286 02DD  
                        l2278 02D5                          l2295 02EF                          l2289 02E9  
                        l2298 02F2                          l4413 0000                          l4421 00F7  
                        l4424 0101                          l4409 0000                          l4417 00F2  
                        l4429 0000                          l6502 0881                          l6525 0909  
                        l6526 08E4                          l6539 0000                          l8630 0000  
                        l8703 0C52                          l8633 0B13                          l8642 0B1D  
                        l8660 0B45                          l8636 0B17                          l8646 0B23  
                        l8663 0B48                          l8639 0B1A                          l8736 0000  
                        l8657 0B41                          l8649 0B27                          l8666 0B4B  
                        l8684 0B9F                          l8677 0946                          STR_1 1046  
                        STR_2 1022                          STR_3 106E                          STR_4 10BB  
                        STR_5 1105                          STR_6 1100                          STR_7 106E  
                        STR_8 10CD                          STR_9 1105                          _CREN 0CEC  
                        u4025 0217                          u4085 0091                          u4335 0F99  
                        _PEIE 005E                          _SEG3 3CC3                          _SEG5 3CC5  
                        _SEG6 3CC6                          u7115 0E76                          _RCIE 048D  
                        _RCIF 008D                          u7075 0E55                          u9007 0AD2  
                        u9017 01BB                          _OERR 0CE9                          u9027 01C4  
                        u8235 0B9C                          u4964 007C                          u9037 01CF  
                        u4965 007B                          u4984 00C6                          u7545 0EA2  
                        u4985 00C5                          u8265 0BE0                          u8445 0D41  
                        u7935 0568                          u7875 0AA2                          u8895 0892  
                        u8967 0861                          u8977 024A                          u8987 00DB  
                        u8997 0070                          _WERR 3C8D                          _TRMT 0CF1  
                        _WREN 0CAA                ??_eeprom_write 0021                 _SimI2C_RecAck 0492  
                        _atoi 0589                          _main 0845                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               ?_SimI2C_NoAck 0070                          start 0029                 ??_SimI2C_Init 0020  
               ?_SimI2C_Start 0070                 ??_SimI2C_Stop 0020             ___bmul@multiplier 0022  
      ATCommand_WaitData@strx 0034               __end_of_InitMCU 0194                  InitGPRS@strx 003C  
               ?_InitVariable 0070         __end_of_LcdDisplayAll 0307         __end_of_LcdDisplayNum 0410  
                  _GetRomData 01EE               __end_of_PowerON 1000           __end_of_DisplayInit 0156  
                       l15020 0000                         l21254 0000                         l21263 0000  
                       l10839 027B                         l31040 0000                         l21272 0000  
                       l15040 0AA4                         l31050 0000                         l31052 0080  
                       l15052 056A                         l32102 0307                         l31046 0000  
                       l31070 0000                         l15038 0A70                         l15047 0000  
                       l32200 0000                         l31048 0000                         l31080 0000  
                       l31072 0000                         l31064 00C1                         l15057 0000  
                       l32210 0000                         l32202 0000                         l31082 0000  
                       l31074 0000                         l31066 0000                         l31058 0000  
                       l33010 09BB                         l33002 0000                         l32220 0000  
                       l32212 0000                         l32204 0000                         l30620 009C  
                       l31084 0000                         l31068 0000                         l33012 0000  
                       l33020 0997                         l32150 0000                         l32230 0000  
                       l32222 0000                         l32214 0000                         l32206 0000  
                       l23326 0E05                         l30630 0000                         l30622 0000  
                       l30614 0000                         l31086 0000                         l31078 00D8  
                       l33022 0000                         l33014 0000                         l33102 0B79  
                       l32160 0000                         l32152 0000                         l32240 0000  
                       l32232 0000                         l32224 0000                         l32216 0000  
                       l32208 0000                         l32312 0000                         l30632 0000  
                       l30624 0000                         l30640 008B                         l30800 0000  
                       l33040 0000                         l33032 0000                         l33024 099D  
                       l33120 0000                         l33112 0B87                         l23329 0000  
                       l23345 0D9D                         l32170 0000                         l32162 0000  
                       l32154 0000                         l32250 0000                         l32242 0000  
                       l32234 0000                         l32226 0000                         l32218 0000  
                       l32306 0DD7                         l32322 0000                         l30642 00B1  
                       l30634 0000                         l30626 0000                         l30618 0000  
                       l32330 0000                         l32410 0E7C                         l30810 0FA6  
                       l30802 0F96                         l23338 0E0D                         l33026 09D7  
                       l33130 0000                         l33122 0000                         l33114 0000  
                       l33106 0000                         l32180 0000                         l32172 0000  
                       l32164 0000                         l32156 0000                         l32148 0000  
                       l32252 0000                         l32244 0000                         l32236 0000  
                       l32228 0000                         l32260 0000                         l30636 0000  
                       l30628 00A5                         l30660 0000                         l32340 0000  
                       l32412 0000                         l32420 0000                         l30812 0000  
                       l30804 0000                         l32500 0000                         l23356 0000  
                       l33036 0000                         l33300 0000                         l33212 0000  
                       l33204 0C97                         l33220 0CAD                         l33140 0000  
                       l33116 0000                         l12949 0000                         l32190 0000  
                       l32182 0000                         l32174 0000                         l32166 0000  
                       l32158 0000                         l32254 0000                         l32246 0000  
                       l32238 0000                         l32270 0000                         l32262 0000  
                       l32318 0DEA                         l30590 0000                         l30638 0000  
                       l32326 0224                         l30662 0EF4                         l32350 0000  
                       l32342 0E20                         l32406 0E70                         l32414 0E80  
                       l32422 0000                         l30806 0000                         l32510 0000  
                       l33038 0000                         l33046 0A12                         l33054 09DC  
                       l33310 0000                         l33230 0000                         l33214 0000  
                       l33206 0000                         l33150 0000                         l33126 0BBD  
                       l33142 0BE3                         l32192 0000                         l32184 0000  
                       l32176 0000                         l32168 0000                         l32248 0000  
                       l32272 0000                         l32336 05FB                         l32328 0000  
                       l30680 0F0F                         l32432 0000                         l32424 0F65  
                       l12896 0AC4                         l33080 0000                         l33072 0A34  
                       l33064 0A23                         l33048 0000                         l33056 0A19  
                       l33240 0CCE                         l33232 0000                         l33208 0000  
                       l33160 0C01                         l33152 0000                         l33136 0BCB  
                       l33320 0D4E                         l33400 0943                         l32194 0000  
                       l32186 0000                         l32178 0000                         l32266 0000  
                       l32258 0000                         l32290 0000                         l30586 0000  
                       l25402 0000                         l30594 0000                         l30682 0F44  
                       l30674 0F2E                         l32362 0605                         l32434 0F72  
                       l32418 0000                         l32450 0000                         l32442 0000  
                       l32514 0000                         l32506 01EF                         l32530 0000  
                       l30930 0000                         l32602 0000                         l33074 0000  
                       l33082 0A25                         l33330 0000                         l33322 0000  
                       l33306 0D2C                         l33250 0000                         l33242 0000  
                       l33234 0000                         l33170 0000                         l33162 0000  
                       l33138 0000                         l33090 0000                         l12899 0000  
                       l32196 0000                         l32188 0000                         l32268 0000  
                       l32284 0DB8                         l32276 0000                         l30588 0E2C  
                       l30596 020E                         l25412 0000                         l30668 0000  
                       l32348 0000                         l32364 0000                         l32356 0000  
                       l32372 0000                         l32436 0000                         l32428 0000  
                       l32452 0000                         l32460 0000                         l32516 0000  
                       l32508 0000                         l32540 0000                         l32532 0000  
                       l30932 0000                         l32612 0000                         l32604 0591  
                       l32700 0000                         l33084 0A4C                         l33340 0000  
                       l33332 0000                         l33324 0000                         l33316 0D4B  
                       l33308 0000                         l33244 0000                         l33228 0CB4  
                       l33156 0000                         l33148 0BED                         l33092 0000  
                       l33404 0000                         l33420 0000                         l32198 0000  
                       l32278 0000                         l30598 0222                         l30678 0F3D  
                       l30686 0000                         l32366 0000                         l32358 05FF  
                       l32390 0E5C                         l32382 0E4D                         l32374 0000  
                       l32438 0F75                         l32454 02DF                         l32446 0000  
                       l32462 0000                         l32542 0000                         l32550 0000  
                       l30942 01D7                         l30934 0000                         l30926 0000  
                       l32606 0589                         l32710 0000                         l32702 0000  
                       l33334 0000                         l33326 0000                         l33270 0000  
                       l33254 0CAF                         l33182 0C78                         l33174 0C69  
                       l33158 0BF7                         l33166 0C4C                         l33342 0B58  
                       l33414 0000                         l33406 0000                         l33430 00FB  
                       l33422 0000                         l33510 026F                         l33502 0000  
                       l32296 0DC8                         l30688 0000                         l32392 0000  
                       l32384 0000                         l32448 02B9                         l32464 0000  
                       l32480 0000                         l32472 0000                         l32528 0000  
                       l32544 0000                         l30936 0000                         l30928 0000  
                       l32552 0000                         l32632 05EA                         l32624 05B2  
                       l32616 05AA                         l32608 0595                         l32704 0000  
                       l32800 0000                         l33344 0D7C                         l33328 0000  
                       l33280 0000                         l33264 0CEA                         l33248 0000  
                       l33192 0C7D                         l33256 0CE4                         l33168 0000  
                       l33096 0000                         l33416 0000                         l33440 010A  
                       l33432 0000                         l33424 0000                         l33520 0000  
                       l33512 0000                         l33504 0000                         l33600 0000  
                       l25409 00AA                         l32394 0E60                         l32458 0000  
                       l32466 0000                         l32482 0000                         l32474 0000  
                       l32490 0000                         l32538 0233                         l32546 0000  
                       l30938 0000                         l30946 01AF                         l32562 0000  
                       l32554 0000                         l32570 0D89                         l32626 05DB  
                       l32618 05D7                         l32650 0000                         l32730 0000  
                       l32722 0000                         l32810 0000                         l32802 0000  
                       l33266 0000                         l33290 0CE5                         l33194 0000  
                       l33098 0000                         l33370 0000                         l33354 08EC  
                       l33450 0000                         l33426 0000                         l33514 0000  
                       l33522 0281                         l33610 08D7                         l33530 0000  
                       l32388 0000                         l32484 0000                         l32476 0000  
                       l32468 0E85                         l32492 0000                         l32548 0000  
                       l30948 01DA                         l32556 0000                         l32564 0000  
                       l32628 0000                         l32636 0000                         l32652 0000  
                       l32644 0000                         l32660 0000                         l32716 0000  
                       l32708 0000                         l32740 0000                         l32820 0000  
                       l33284 0000                         l33276 0D04                         l33268 0000  
                       l33196 0000                         l33292 0D1A                         l33380 0927  
                       l33356 08EF                         l33348 0000                         l33452 0000  
                       l33444 0000                         l33460 011B                         l33524 0000  
                       l33516 0000                         l33508 026C                         l33612 0000  
                       l33604 0000                         l33540 0000                         l33532 0000  
                       l32398 0000                         l30798 0000                         l32486 0000  
                       l32478 0000                         l32494 0000                         l32582 0D99  
                       l32574 0000                         l32566 0000                         l32590 0000  
                       l32646 0000                         l32638 0000                         l32654 0000  
                       l32726 0FAD                         l32742 0000                         l32734 0000  
                       l32830 0AAF                         l32814 0A95                         l33294 0D1B  
                       l33286 0000                         l33278 0000                         l33198 0000  
                       l33366 0902                         l33358 0000                         l33390 0000  
                       l33382 0000                         l33462 0000                         l33454 0000  
                       l33446 0000                         l33438 0100                         l33470 0B2A  
                       l33526 0000                         l33614 08DA                         l33542 0000  
                       l33534 0000                         l32488 0ED2                         l32496 0000  
                       l32576 0000                         l32656 0000                         l32664 0000  
                       l32728 0FD3                         l32736 0000                         l32832 0000  
                       l32824 0AA8                         l32816 0A97                         l32808 0A83  
                       l32904 0000                         l33368 0905                         l33392 0000  
                       l33384 0000                         l33464 0000                         l33456 0000  
                       l33448 0000                         l33480 0B2E                         l33608 0000  
                       l33552 0000                         l33544 085A                         l33536 0000  
                       l33528 0000                         l32498 0000                         l32578 0000  
                       l32594 0B05                         l32586 0000                         l32658 0000  
                       l32674 0000                         l32666 0000                         l32682 0000  
                       l32770 046D                         l32762 0000                         l32754 0000  
                       l32834 0000                         l32826 0000                         l32850 0000  
                       l32842 0000                         l33394 0000                         l33386 0000  
                       l33458 0000                         l33490 0000                         l33482 0000  
                       l33474 0000                         l33466 0000                         l33570 0000  
                       l33554 0000                         l33538 0000                         l32588 0AD9  
                       l32676 0000                         l32684 0000                         l32692 0000  
                       l32772 0000                         l32764 0000                         l32756 0000  
                       l32748 0000                         l32780 0000                         l32836 0000  
                       l32828 0A57                         l32844 0000                         l32860 0000  
                       l32852 0000                         l32908 0000                         l32940 0000  
                       l32932 0000                         l33388 0000                         l33492 0B54  
                       l33484 0000                         l33476 0000                         l33580 0000  
                       l33572 0000                         l33564 0886                         l33556 0000  
                       l33548 0000                         l27510 0DED                         l19174 0000  
                       l32598 0B10                         l32678 0000                         l32686 0000  
                       l32694 01E5                         l32766 0000                         l32838 0000  
                       l32790 0000                         l32782 0000                         l32862 0000  
                       l32854 0000                         l32942 0000                         l32918 0000  
                       l33398 093A                         l33478 0000                         l33486 0B38  
                       l33494 0000                         l33590 0000                         l33582 0000  
                       l33574 0000                         l33558 0870                         l27512 0000  
                       l19192 005E                         l32696 0000                         l32688 0000  
                       l32768 043D                         l32776 0000                         l32792 0000  
                       l32784 0000                         l32880 055B                         l32864 0000  
                       l32856 0000                         l33488 0000                         l33568 0000  
                       l32698 0000                         l32778 0000                         l32794 0000  
                       l32786 0000                         l32890 0000                         l32882 055D  
                       l32874 0548                         l32866 0534                         l32858 0000  
                       l32938 003C                         l32962 0000                         l33498 0000  
                       l33586 08B5                         l33578 0000                         l27531 0000  
                       l19195 0000                         l27532 0ED5                         l32796 0000  
                       l32892 0000                         l32876 0000                         l32868 0000  
                       l32956 0053                         l32972 096D                         l32964 0000  
                       l33596 08BE                         l33588 0000                         l19189 0000  
                       l27606 0000                         l32798 0000                         l32886 0000  
                       l32990 098E                         l32966 0000                         l33598 0000  
                       l27623 0F6A                         l27616 0000                         l27632 0000  
                       l27472 0000                         l32888 0000                         l32896 0000  
                       l27481 0000                         l27626 0000                         l27490 0483  
                       l32986 0000                         l32978 0979                         l27491 0000  
                       l27475 0000                         l27484 0000                         l32996 0994  
                       l32988 097B                         l27469 0000                         l27558 0000  
                       l27590 0000                         l27478 0000                         l27494 04AE  
                       l27487 0474                         l27569 0000                         l27489 0481  
                       l27497 0000                         l27596 0000                         l27925 0F47  
                       l27934 0000                         ?_atoi 0026                         ?_main 0070  
             __end_of___lbdiv 0F77                         STR_10 1100                         STR_11 105D  
                       STR_20 110F                         STR_12 108E                         STR_21 10EE  
                       STR_13 107E                         STR_30 10FA                         STR_22 10D6  
                       STR_14 10C4                         STR_31 1116                         STR_15 1105  
                       STR_23 10B1                         STR_16 1100                         STR_32 1113  
                       STR_24 110A                         STR_33 10FA                         STR_17 10E7  
                       STR_25 10DF                         STR_34 1113                         STR_18 10FA  
                       STR_26 10F4                         STR_35 10FA                         STR_19 1116  
                       STR_27 109B                         STR_28 10A6                         STR_29 1113  
             __end_of___lbmod 0FAA                         _CARRY 0018                         _ICCID 00A0  
                       _LCDEN 3C8F                         _T1CON 0018                         _T2CON 001C  
                       _LATB1 0869                         _LATA3 0863                         _LATA4 0864  
                       _LATD5 087D                         _LATD6 087E                         _LATD7 087F  
                       _LCDRL 0795                         _LCDPS 0792               __end_of___lwdiv 0E65  
                       _SEG11 3CCB                         _SEG21 3CD5                         _SEG22 3CD6  
                       _SEG23 3CD7                         _SEG16 3CD0               __end_of___lwmod 0E85  
                       _RCREG 0199                         _RCSTA 019D                         _TMR1H 0017  
                       _TMR1L 0016                         _SPBRG 019B                    _TListIndex 0064  
             _OneWire_Command 00B3                         _WPUB7 106F                _LcdDisplay_CSQ 0F77  
                       _TXREG 019A                         _TXSTA 019E                _LcdDisplay_Err 0410  
                       _TList 0120               __end_of_highISR 0029               __end_of_isdigit 05FD  
           OneWire_ReadByte@b 0021             OneWire_ReadByte@i 0023               __end_of_isgraph 0517  
                       atoi@a 002D                         atoi@s 0026                         main@i 004D  
__size_of_Uart1_PutString_Hex 0010               InteractServer@i 0045               InteractServer@j 0043  
             InteractServer@k 0044                ?_SimI2C_RecAck 0070               InteractServer@t 0040  
            __end_of_CallSend 095F              __end_of_CallProc 0B55                 Uart1_PutHex@b 0022  
               Uart1_PutHex@c 0021                ??_SimI2C_NoAck 0020                         status 0003  
                       wtemp0 007E               __end_of_strncmp 0F47               ___lbdiv@divisor 0020  
              ??_SimI2C_Start 0020        __size_of_TCN75_ReadReg 0038               ___lbdiv@counter 0022  
                  _SimI2C_Ack 04C6                   InitSystem@x 002D                  __end_of_atoi 05EF  
                __end_of_main 08DF                ??_InitVariable 0028              __end_of_InitGPRS 0A52  
         __size_of_TCN75_Init 0001                    _InitSystem 00E8       __size_of_GetVerify_CRC8 002C  
         __end_of_SimI2C_Init 022B                 InitGPRS@retry 003E           __end_of_SimI2C_Stop 04E3  
               ??_SaveRomData 0027                        ??_atoi 0028                        ??_main 004A  
      __end_of_LcdDisplay_CSQ 0F92           GetVerify_CRC8@Count 0020        __end_of_LcdDisplay_Err 0430  
         GetVerify_CRC8@pBuff 0023              ?_TCN75_SetConfig 0070              __end_of_TestProc 028F  
                      _ADCON1 009E                        _EEADRL 0191                        _EEDATA 0193  
                      _EECON1 0195                        _EECON2 0196                _ATCommand_Init 0194  
              _TxErrDataIndex 0068                        _ANSELA 018C                        _ANSELB 018D  
                      _ANSELD 018F                        _ANSELE 0190                        _LCDCON 0791  
                      _LCDSE0 0798                        _LCDCST 0794                        _LCDSE1 0799  
                      _LCDSE2 079A        __size_of_OneWire_Reset 0031                        _LCDREF 0793  
      OneWire_Command@command 0024             ?_DS18X20_ReadMeas 0070            __size_of_ReadTData 0049  
                      _TMR1IE 0488                        _TMR1IF 0088                        _TMR2IE 0489  
                      _TMR2IF 0089                        _TMR1ON 00C0                        _TMR2ON 00E2  
                      _TRISB1 0469                        _TRISA3 0463                        _TRISB2 046A  
                      _TRISA4 0464                        _TRISB7 046F                        _TRISD4 047C  
                      _TRISC6 0476                        _TRISD5 047D                        _TRISC7 0477  
                      _TRISD6 047E                        _TRISD7 047F            ??_DS18X20_ReadMeas 002A  
 __size_of_ATCommand_WaitData 0057                     ??_InitMCU 0020                        _DpyNum 0069  
            _OneWire_ReadByte 005B          __size_of_eeprom_read 0017                        _gFlags 0065  
                 _DisplayInit 0129                     ??_PowerON 0024                        _nWPUEN 04AF  
                      ___bmul 0E1E         __end_of_GetVerify_Sum 0224                        ___wmul 05FD  
           ?_ATCommand_ProcRx 0070                     ??___lbdiv 0021                     ??___lbmod 0021  
             _SimI2C_ReadByte 04A6                     ??___lwdiv 0024                     ??___lwmod 0024  
     __end_of_OneWire_Command 00BF                   ?_GetRomData 0070            ??_ATCommand_ProcRx 0072  
             _SimI2C_SendByte 0471          __end_of_eeprom_write 0EF0                     ??_highISR 0076  
             ?_LcdDisplay_CSQ 0070                        _strchr 0F47                        clrloop 0613  
                      _strcpy 0E2A                        _strlen 0EF0                        _strstr 0AD8  
             ?_LcdDisplay_Err 0070                 _TCN75_ReadReg 0439           SimI2C_SendByte@data 0020  
                   ??_isdigit 0020                     ??_isgraph 0070        __end_of_ATCommand_Init 01AB  
         __end_of_SaveRomData 0244                Uart1_PutChar@c 0020                GetVerify_Sum@i 0026  
             ??_SimI2C_RecAck 0020         InteractServer@i_10573 0038         InteractServer@i_10578 003A  
       InteractServer@j_10585 003C                     ??_strncmp 002C              ___lbdiv@dividend 0021  
  __end_of_LcdDisplay_CurTemp 0ED4                 ?_Uart1_PutHex 0070          _ATCommand_RetryTimes 0060  
  Uart1_PutString_Hex@pString 0023               ___lbmod@divisor 0020               ___lbmod@counter 0023  
             eeprom_read@addr 0022         TCN75_ReadReg@ErrTimes 0024         TCN75_ReadReg@RegPoint 0023  
          ATCommand_ProcRx@rx 0075                   _SimI2C_Init 0224                   ?_SimI2C_Ack 0070  
         ___bmul@multiplicand 0020                   _SimI2C_Stop 04D9                __pcstackCOMMON 0070  
          MakeTxTemperature@T 0020            MakeTxTemperature@x 0022                  __pidataBANK0 0000  
                 ?_InitSystem 0070                 _OneWire_Reset 01AB                 _isdigit$31763 0020  
             _MeasurementTick 0058              ___lbdiv@quotient 0023             __end_of_ReadTData 0928  
              ?_TCN75_ReadReg 0070          __end_of_SimI2C_NoAck 04D9                     ?_CallSend 0070  
                   ?_CallProc 0070          __end_of_SimI2C_Start 0FE2                    _SystemTick 005C  
           eeprom_write@value 0020               ?_ATCommand_Init 0070                  ??_TCN75_Init 0020  
              ??_Uart1_PutHex 0021          __end_of_InitVariable 01EE            OneWire_Reset@Retry 0021  
     __size_of_InteractServer 0229                    __pbssBANK0 004E                    __pbssBANK1 00A0  
                  __pbssBANK2 0120                     ?_InitGPRS 0070      __size_of_Uart1_PutString 0011  
         __size_of_GetRomData 001D        __size_of_Uart1_PutChar 000A       __end_of_SimI2C_ReadByte 04C6  
                  __pmaintext 0845       __end_of_SimI2C_SendByte 0492                     ?_TestProc 0070  
                     ?___bmul 0020                ?_OneWire_Reset 0070                       ?___wmul 0020  
              _GetVerify_CRC8 0087                    __pintentry 0004            __end_of_TCN75_Init 01DD  
            ?_OneWire_Command 0070           _Uart1_PutString_Hex 0D9D                    __ptext2000 0E85  
                  __ptext2001 0F77                    __ptext2010 0F0F                    __ptext2002 028F  
                  __ptext2011 0EF0                    __ptext2003 0F92                    __ptext2020 0ED4  
                  __ptext2012 05EF                    __ptext2004 0F5F                    __ptext2021 0156  
                  __ptext2013 0224                    __ptext2005 0E65                    __ptext2022 0129  
                  __ptext2014 0087                    __ptext2006 0E40                    __ptext2023 0307  
                  __ptext2015 020B                    __ptext2007 05FD                    __ptext2016 0E2A  
                  __ptext2008 0E1E                    __ptext2025 04E3                    __ptext2017 0DEC  
                  __ptext2009 0F47                    __ptext2026 0509                    __ptext2018 0E03  
                  __ptext2027 0000                    __ptext2019 0DAD               _ATCommand_Clear 0079  
                  __ptext1970 002C                    __ptext1971 0FE2                    __ptext1963 0244  
                  __ptext1980 04D9                    __ptext1972 00B3                    __ptext1964 0B13  
                  __ptext1981 04D2                    __ptext1973 0529                    __ptext1965 00E8  
                  __ptext1990 0AD8                    __ptext1982 04C6                    __ptext1974 0D9D  
                  __ptext1966 0928                    __ptext1991 0D7E                    __ptext1983 04A6  
                  __ptext1975 0A52                    __ptext1967 08DF                    __ptext1992 0E0D  
                  __ptext1984 0492                    __ptext1976 0FF0                    __ptext1968 0B55  
                  __ptext1993 0AC4                    __ptext1985 0471                    __ptext1977 0439  
                  __ptext1969 095F                    __ptext1994 01DC                    __ptext1986 0FD8  
                  __ptext1978 0FAA                    __ptext1995 01AB                    __ptext1987 00BF  
                  __ptext1979 01DD                    __ptext1996 0194                    __ptext1988 005B  
                  __ptext1997 022B                    __ptext1989 0589                    __ptext1998 01EE  
                  __ptext1999 0410               _ATCommand_Flags 007A                   _SaveRomData 022B  
                     ?_strchr 0020                       ?_strcpy 0020                       ?_strlen 0020  
                     ?_strstr 002D                    ??_CallSend 0046                    ??_CallProc 0047  
                     i1l15025 04F0                       i1l30500 04EE                       i1l30512 04F9  
                     i1l30610 0515                       i1l30602 0000                       i1l30522 0000  
                     i1l30514 04FA                       i1l30506 0000                       i1l30604 0000  
                     i1l30524 0000                       i1l30508 0000                       i1l30526 0000  
                     i1l30518 04FD                       i1l30470 0000                       i1l30480 0000  
                     i1l30490 0000                       i1l30482 0018                       i1l30492 0000  
                     i1l30478 0012                       i1l30496 0000                       i1l30488 0000  
                     i1l30498 04ED                       i1l27563 0000             _DS18X20_ToDecicel 1012  
         __size_of_SimI2C_Ack 000C                    __stringtab 1000          ?_Uart1_PutString_Hex 0023  
                  ??_InitGPRS 0039           __size_of_InitSystem 0041                 _isgraph$31766 0070  
                     _CurTemp 0056                       _InitMCU 0156                       _SegCode 1001  
           _ATCommand_SendCmd 0A52        __end_of_GetVerify_CRC8 00B3                       _PowerON 0FF0  
                  ??_TestProc 0048             _ATCommand_RxCount 007B                       _RunTick 0077  
       __size_of_eeprom_write 001C             _DS18X20_StartMeas 0FE2               __size_of___bmul 000C  
                     ___lbdiv 0F5F             _MakeTxTemperature 0DAD                       ___lbmod 0F92  
          ?_ATCommand_SendCmd 0031               __size_of___wmul 0015                       ___lwdiv 0E40  
                     ___lwmod 0E65                     _LCDDATA10 07AA                     _LCDDATA11 07AB  
             ??_TCN75_ReadReg 0023            ?_DS18X20_StartMeas 0070            ?_MakeTxTemperature 0020  
       _ATCommand_WaitACKTick 0052                       _highISR 0004               __size_of_strchr 0018  
             __size_of_strcpy 0016               __size_of_strlen 001F                 _Uart1_PutChar 0E03  
         ??_ATCommand_SendCmd 0033               __size_of_strstr 003B                       _isdigit 05EF  
         ??_DS18X20_StartMeas 0025                       _isgraph 0509      __end_of_OneWire_ReadByte 0087  
         ??_MakeTxTemperature 0022                     _SEG11COM0 3D0B                     _SEG11COM1 3D23  
                   _SEG11COM2 3D3B                     _SEG11COM3 3D53                     _SEG21COM0 3D15  
                   _SEG21COM1 3D2D                     _SEG21COM2 3D45                     _SEG21COM3 3D5D  
                   _SEG22COM0 3D16                     _SEG22COM1 3D2E                     _SEG22COM2 3D46  
                   _SEG22COM3 3D5E                     _SEG23COM0 3D17                     _SEG23COM1 3D2F  
                   _SEG23COM2 3D47                     _SEG23COM3 3D5F                     _SEG16COM0 3D10  
                   _SEG16COM1 3D28                     _SEG16COM2 3D40                     _SEG16COM3 3D58  
       ??_Uart1_PutString_Hex 0025                       _strncmp 0F0F         TCN75_SetConfig@bRight 0024  
        end_of_initialization 0843               GetVerify_CRC8@i 0026        __size_of_LcdDisplayAll 0078  
      __size_of_LcdDisplayNum 0109                  _eeprom_write 0ED4             InteractServer@res 0037  
   __end_of_ATCommand_SendCmd 0AC4              ?_SimI2C_ReadByte 0070             _OneWire_WriteByte 00BF  
   __end_of_DS18X20_StartMeas 0FEB             ??_Uart1_PutString 0023               ??_OneWire_Reset 0020  
   __end_of_MakeTxTemperature 0DEC                  ?_DisplayInit 0070               ?_GetVerify_CRC8 0020  
            ?_SimI2C_SendByte 0070            ?_OneWire_WriteByte 0070              ??_LcdDisplay_CSQ 0025  
            ??_LcdDisplay_Err 0025         __size_of_SimI2C_NoAck 0007                  __pstringtext 1000  
        __end_of_Uart1_PutHex 0D9D                  ??_GetRomData 0027     __size_of_DS18X20_ReadMeas 002F  
       __size_of_SimI2C_Start 000A                       strlen@s 0020           ??_OneWire_WriteByte 0020  
              ?_Uart1_PutChar 0070            OneWire_WriteByte@i 0023         __size_of_InitVariable 0011  
            ___lbmod@dividend 0022                 ?___delay_20ms 0020     __size_of_ATCommand_ProcRx 0026  
              _InteractServer 0B55                     InitGPRS@i 003B    __end_of_ATCommand_WaitData 0580  
    __size_of_TCN75_SetConfig 002E                   ___lbmod@rem 0024            __end_of_GetRomData 020B  
   __end_of_OneWire_WriteByte 00E8                 ??_eeprom_read 0020                  _SimI2C_NoAck 04D2  
                ?_SimI2C_Init 0070                  ??_SimI2C_Ack 0020                  _SimI2C_Start 0FD8  
                ?_SimI2C_Stop 0070            _LcdDisplay_CurTemp 0E85                  ??_InitSystem 002D  
                SaveRomData@i 0027                __end_of___bmul 0E2A                  _InitVariable 01DD  
              __end_of___wmul 0612                 _LcdDisplayAll 028F                 _LcdDisplayNum 0307  
         ?_LcdDisplay_CurTemp 0070              ??_ATCommand_Init 0026                __end_of_strchr 0F5F  
              __end_of_strcpy 0E40                __end_of_strlen 0F0F                __end_of_strstr 0B13  
              ??___delay_20ms 0022           start_initialization 080B                     _ReadTData 08DF  
           __size_of_CallSend 0037             __size_of_CallProc 0042        __end_of_InteractServer 0D7E  
          __end_of_SimI2C_Ack 04D2        __size_of_GetVerify_Sum 0019           _ATCommand_ErrString 00B5  
          GetVerify_CRC8@data 0025         __end_of_SimI2C_RecAck 04A6            __end_of_InitSystem 0129  
        ??_LcdDisplay_CurTemp 0025             __size_of_InitGPRS 00F3    GetVerify_CRC8@feedback_bit 0028  
  __size_of_ATCommand_SendCmd 0072    __size_of_DS18X20_StartMeas 0009                     _RomParams 0066  
  __size_of_MakeTxTemperature 003F          _TCN75_RegReadResualt 005E                      ??___bmul 0021  
                    ??___wmul 0024           __end_of_eeprom_read 0E03                  _TCN75_Config 0063  
              ?_LcdDisplayAll 0070                   __pdataBANK0 0069                ?_LcdDisplayNum 0070  
         _NeedMeasurementTick 005A             __size_of_TestProc 004B               ??_Uart1_PutChar 0020  
                ?_SaveRomData 0070                      ??_strchr 0024                      ??_strcpy 0022  
                    ??_strlen 0022                      ??_strstr 0031                   __pbssBIGRAM 218C  
                 __pbssCOMMON 0077                    ?_ReadTData 0070                 __pcstackBANK0 0020  
             ?_InteractServer 0070                OneWire_Reset@r 0022              eeprom_write@addr 0021  
  __size_of_OneWire_WriteByte 0029                      ?_InitMCU 0070         __size_of_Uart1_PutHex 001F  
            ___lwdiv@dividend 0022             ??_TCN75_SetConfig 0023                      ?_PowerON 0070  
                 CallSend@ret 0046                      ?___lbdiv 0020                      ?___lbmod 0020  
               _GetVerify_Sum 020B                      ?___lwdiv 0020          __size_of_DisplayInit 002D  
                    ?___lwmod 0020              _DS18X20_ReadMeas 002C                      ?_highISR 0070  
              ReadTData@retry 002C                      ?_isdigit 0070                      ?_isgraph 0070  
    __size_of_OneWire_Command 000C             ?_OneWire_ReadByte 0070              _ATCommand_RxList 218C  
            _ATCommand_ProcRx 04E3              ___lwdiv@quotient 0025                      _LCDDATA0 07A0  
                    _LCDDATA1 07A1                      _LCDDATA2 07A2                      _LCDDATA3 07A3  
                    _LCDDATA4 07A4                      _LCDDATA5 07A5                      _LCDDATA6 07A6  
                    _LCDDATA7 07A7                      _LCDDATA8 07A8                      _LCDDATA9 07A9  
          ??_OneWire_ReadByte 0020                      ?_strncmp 0026               _Uart1_PutString 0E0D  
                _Uart1_PutHex 0D7E                 CallProc@retry 0047                ___wmul@product 0024  
            ??_GetVerify_CRC8 0022                      _SEG3COM0 3D03                      _SEG3COM1 3D1B  
                    _SEG3COM2 3D33                      _SEG3COM3 3D4B                      _SEG5COM0 3D05  
                    _SEG5COM1 3D1D                      _SEG5COM2 3D35                      _SEG5COM3 3D4D  
                    _SEG6COM0 3D06                      _SEG6COM1 3D1E                      _SEG6COM2 3D36  
                    _SEG6COM3 3D4E         OneWire_ReadByte@value 0022                   _eeprom_read 0DEC  
              LcdDisplayAll@x 0020          __end_of___delay_20ms 0AD8                     highISR@rx 0076  
             ??_LcdDisplayAll 0020                ?_GetVerify_Sum 0020               ??_LcdDisplayNum 0020  
        __size_of_SimI2C_Init 0007          __size_of_SimI2C_Stop 000A                SimI2C_RecAck@t 0020  
     TCN75_SetConfig@ErrTimes 0023         __end_of_TCN75_ReadReg 0471             ___wmul@multiplier 0020  
                    _CallSend 0928                      _CallProc 0B13   __end_of_Uart1_PutString_Hex 0DAD  
          _DS18X20_Scratchpad 00D3                   ??_ReadTData 002C            GetVerify_Sum@Count 0020  
          GetVerify_Sum@pBuff 0024                      _InitGPRS 095F                      _ErrState 0062  
     DS18X20_ReadMeas@bVerify 002A        Uart1_PutString@pString 0021             GetVerify_CRC8@crc 0029  
          _ATCommand_OkString 00C4              __size_of_InitMCU 003E                      _TestProc 0244  
       __end_of_OneWire_Reset 01DC            _ATCommand_WaitData 0529              __size_of_PowerON 0010  
            __size_of___lbdiv 0018              __size_of___lbmod 0018                 _TxTemperature 004E  
    __size_of_SimI2C_ReadByte 0020              __size_of___lwdiv 0025              __size_of___lwmod 0020  
         TCN75_ReadReg@bRight 0025           InteractServer@txLen 003E           InteractServer@retry 0036  
         ?_ATCommand_WaitData 0070      __size_of_SimI2C_SendByte 0021              __size_of_highISR 0025  
     __end_of_Uart1_PutString 0E1E          __size_of_SaveRomData 0019     GetVerify_CRC8@bit_counter 0024  
            __size_of_isdigit 000E              __size_of_isgraph 000E               ___lwdiv@divisor 0020  
      _ATCommand_WaitACKTimes 0054               ___lwdiv@counter 0024              __size_of_strncmp 0038  
                  strcpy@from 0020             ??_OneWire_Command 0024                 __size_of_atoi 0066  
               __size_of_main 009A          ??_ATCommand_WaitData 0031                    strncmp@len 002A  
        LcdDisplay_CurTemp@t1 0027          LcdDisplay_CurTemp@t2 0028                      clear_ram 0612  
             ??_GetVerify_Sum 0022                ___delay_20ms@x 0020                      atoi@sign 002C  
                    main@addr 004C        ATCommand_SendCmd@retry 0035                   GetRomData@i 0027  
            ??_InteractServer 0036       __size_of_LcdDisplay_CSQ 001B       __size_of_LcdDisplay_Err 0020  
                  _TCN75_Init 01DC                      isdigit@c 0021            InteractServer@addr 0042  
             _TCN75_SetConfig 0FAA                      isgraph@c 0071      __end_of_DS18X20_ReadMeas 005B  
                    intlevel1 0000              LcdDisplay_CSQ@t1 0025              LcdDisplay_CSQ@t2 0026  
                   strchr@chr 0022              ___lwmod@dividend 0022         __size_of___delay_20ms 0014  
                   strchr@ptr 0020   __size_of_LcdDisplay_CurTemp 004F         OneWire_WriteByte@temp 0022  
                   strncmp@s1 0026                     strncmp@s2 0028      __end_of_ATCommand_ProcRx 0509  
         SimI2C_ReadByte@data 0020         ATCommand_SendCmd@strx 0036              GetVerify_Sum@sum 0025  
      __size_of_SimI2C_RecAck 0014         __end_of_Uart1_PutChar 0E0D          Uart1_PutString_Hex@c 0025  
        OneWire_WriteByte@val 0021               ___lwmod@divisor 0020              ?_Uart1_PutString 0021  
                    strcpy@cp 0025                      strlen@cp 0024                      strcpy@to 0024  
             ___lwmod@counter 0024             ??_SimI2C_ReadByte 0020                  ___delay_20ms 0AC4  
        ATCommand_SendCmd@cmd 0031                      strstr@s1 002D                      strstr@s2 002F  
        ATCommand_SendCmd@res 0038             ??_SimI2C_SendByte 0020       __size_of_ATCommand_Init 0017  
               ?_eeprom_write 0020                  ?_eeprom_read 0070              SimI2C_ReadByte@i 0021  
            Uart1_PutString@c 0023     __size_of_OneWire_ReadByte 002C                 ??_DisplayInit 0020  
