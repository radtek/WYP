

HI-TECH Software PIC PRO Macro Assembler V9.71a build 6446 
                                                                                               Thu Apr 18 18:06:37 2019

HI-TECH Software Omniscient Code Generator (PRO mode) build 6446
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	config,global,class=CONFIG,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	text1998,local,class=CODE,delta=2
    17                           	psect	text2005,local,class=CODE,delta=2
    18                           	psect	text2024,local,class=CODE,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text2061,local,class=CODE,delta=2
    21                           	psect	text2063,local,class=CODE,delta=2
    22                           	psect	pa_nodes,global,class=CODE,delta=2
    23                           	dabs	1,0x320,16
    24                           	dabs	1,0x2A0,80
    25                           	dabs	1,0x23A,54
    26                           	dabs	1,0x7E,2
    27  000A                     	;#
    28                           
    29                           	psect	config
    30  8007  FE5A               	dw	65114	;#
    31  8008  FEFC               	dw	65276	;_ATCommand_RxList
    32                           
    33                           	psect	idataBANK0
    34  0000                     __pidataBANK0:	
    35                           
    36                           	psect	stringtext
    37  1000                     __pstringtext:	
    38  1000                     __stringtab:	
    39  1000  3400               	retlw	0
    40  1001                     _SegCode:	
    41  1001  343F               	retlw	63
    42  1002  3406               	retlw	6
    43  1003  345B               	retlw	91
    44  1004  344F               	retlw	79
    45  1005  3466               	retlw	102
    46  1006  346D               	retlw	109
    47  1007  347D               	retlw	125
    48  1008  3407               	retlw	7
    49  1009  347F               	retlw	127
    50  100A  346F               	retlw	111
    51  100B  3477               	retlw	119
    52  100C  347C               	retlw	124
    53  100D  3439               	retlw	57
    54  100E  345E               	retlw	94
    55  100F  3479               	retlw	121
    56  1010  3471               	retlw	113
    57  1011  3450               	retlw	80
    58  1012  3440               	retlw	64
    59  1013                     _DS18X20_ToDecicel:	
    60  1013  3400               	retlw	0
    61  1014  3401               	retlw	1
    62  1015  3401               	retlw	1
    63  1016  3402               	retlw	2
    64  1017  3403               	retlw	3
    65  1018  3403               	retlw	3
    66  1019  3404               	retlw	4
    67  101A  3404               	retlw	4
    68  101B  3405               	retlw	5
    69  101C  3406               	retlw	6
    70  101D  3406               	retlw	6
    71  101E  3407               	retlw	7
    72  101F  3408               	retlw	8
    73  1020  3408               	retlw	8
    74  1021  3409               	retlw	9
    75  1022  3409               	retlw	9
    76  001B                     _PR2	set	27
    77  0018                     _T1CON	set	24
    78  001C                     _T2CON	set	28
    79  0017                     _TMR1H	set	23
    80  0016                     _TMR1L	set	22
    81  0018                     _CARRY	set	24
    82  005F                     _GIE	set	95
    83  005E                     _PEIE	set	94
    84  0069                     _RB1	set	105
    85  006A                     _RB2	set	106
    86  006F                     _RB7	set	111
    87  008D                     _RCIF	set	141
    88  007E                     _RD6	set	126
    89  0088                     _TMR1IF	set	136
    90  00C0                     _TMR1ON	set	192
    91  0089                     _TMR2IF	set	137
    92  00E2                     _TMR2ON	set	226
    93  009E                     _ADCON1	set	158
    94  048D                     _RCIE	set	1165
    95  0488                     _TMR1IE	set	1160
    96  0489                     _TMR2IE	set	1161
    97  0463                     _TRISA3	set	1123
    98  0464                     _TRISA4	set	1124
    99  0469                     _TRISB1	set	1129
   100  046A                     _TRISB2	set	1130
   101  046F                     _TRISB7	set	1135
   102  0476                     _TRISC6	set	1142
   103  0477                     _TRISC7	set	1143
   104  047C                     _TRISD4	set	1148
   105  047D                     _TRISD5	set	1149
   106  047E                     _TRISD6	set	1150
   107  047F                     _TRISD7	set	1151
   108  04AF                     _nWPUEN	set	1199
   109  0863                     _LATA3	set	2147
   110  0864                     _LATA4	set	2148
   111  0869                     _LATB1	set	2153
   112  087D                     _LATD5	set	2173
   113  087E                     _LATD6	set	2174
   114  087F                     _LATD7	set	2175
   115  018C                     _ANSELA	set	396
   116  018D                     _ANSELB	set	397
   117  018F                     _ANSELD	set	399
   118  0190                     _ANSELE	set	400
   119  0191                     _EEADRL	set	401
   120  0195                     _EECON1	set	405
   121  0196                     _EECON2	set	406
   122  0193                     _EEDATA	set	403
   123  0199                     _RCREG	set	409
   124  019D                     _RCSTA	set	413
   125  019B                     _SPBRG	set	411
   126  019A                     _TXREG	set	410
   127  019E                     _TXSTA	set	414
   128  0CEC                     _CREN	set	3308
   129  0CE9                     _OERR	set	3305
   130  0CA8                     _RD	set	3240
   131  0CF1                     _TRMT	set	3313
   132  0CA9                     _WR	set	3241
   133  0CAA                     _WREN	set	3242
   134  106F                     _WPUB7	set	4207
   135  0791                     _LCDCON	set	1937
   136  0794                     _LCDCST	set	1940
   137  07A0                     _LCDDATA0	set	1952
   138  07A1                     _LCDDATA1	set	1953
   139  07AA                     _LCDDATA10	set	1962
   140  07AB                     _LCDDATA11	set	1963
   141  07A2                     _LCDDATA2	set	1954
   142  07A3                     _LCDDATA3	set	1955
   143  07A4                     _LCDDATA4	set	1956
   144  07A5                     _LCDDATA5	set	1957
   145  07A6                     _LCDDATA6	set	1958
   146  07A7                     _LCDDATA7	set	1959
   147  07A8                     _LCDDATA8	set	1960
   148  07A9                     _LCDDATA9	set	1961
   149  0792                     _LCDPS	set	1938
   150  0793                     _LCDREF	set	1939
   151  0795                     _LCDRL	set	1941
   152  0798                     _LCDSE0	set	1944
   153  0799                     _LCDSE1	set	1945
   154  079A                     _LCDSE2	set	1946
   155  3C8F                     _LCDEN	set	15503
   156  3CCB                     _SEG11	set	15563
   157  3D0B                     _SEG11COM0	set	15627
   158  3D23                     _SEG11COM1	set	15651
   159  3D3B                     _SEG11COM2	set	15675
   160  3D53                     _SEG11COM3	set	15699
   161  3CD0                     _SEG16	set	15568
   162  3D10                     _SEG16COM0	set	15632
   163  3D28                     _SEG16COM1	set	15656
   164  3D40                     _SEG16COM2	set	15680
   165  3D58                     _SEG16COM3	set	15704
   166  3CD5                     _SEG21	set	15573
   167  3D2D                     _SEG21COM1	set	15661
   168  3D45                     _SEG21COM2	set	15685
   169  3D5D                     _SEG21COM3	set	15709
   170  3CD6                     _SEG22	set	15574
   171  3CD7                     _SEG23	set	15575
   172  3D17                     _SEG23COM0	set	15639
   173  3D2F                     _SEG23COM1	set	15663
   174  3D47                     _SEG23COM2	set	15687
   175  3D5F                     _SEG23COM3	set	15711
   176  3CC3                     _SEG3	set	15555
   177  3D03                     _SEG3COM0	set	15619
   178  3D1B                     _SEG3COM1	set	15643
   179  3D33                     _SEG3COM2	set	15667
   180  3D4B                     _SEG3COM3	set	15691
   181  3CC5                     _SEG5	set	15557
   182  3D05                     _SEG5COM0	set	15621
   183  3D1D                     _SEG5COM1	set	15645
   184  3D35                     _SEG5COM2	set	15669
   185  3D4D                     _SEG5COM3	set	15693
   186  3CC6                     _SEG6	set	15558
   187  3D4E                     _SEG6COM3	set	15694
   188  3C94                     _WA	set	15508
   189  3C8D                     _WERR	set	15501
   190  1023                     STR_2:	
   191  1023  3441               	retlw	65	;'A'
   192  1024  3454               	retlw	84	;'T'
   193  1025  342B               	retlw	43	;'+'
   194  1026  344E               	retlw	78	;'N'
   195  1027  3453               	retlw	83	;'S'
   196  1028  344F               	retlw	79	;'O'
   197  1029  3443               	retlw	67	;'C'
   198  102A  344F               	retlw	79	;'O'
   199  102B  343D               	retlw	61	;'='
   200  102C  3432               	retlw	50	;'2'
   201  102D  342C               	retlw	44	;','
   202  102E  3422               	retlw	34	;'"'
   203  102F  3477               	retlw	119	;'w'
   204  1030  3477               	retlw	119	;'w'
   205  1031  3477               	retlw	119	;'w'
   206  1032  342E               	retlw	46	;'.'
   207  1033  3477               	retlw	119	;'w'
   208  1034  346C               	retlw	108	;'l'
   209  1035  3477               	retlw	119	;'w'
   210  1036  3464               	retlw	100	;'d'
   211  1037  346A               	retlw	106	;'j'
   212  1038  3463               	retlw	99	;'c'
   213  1039  3479               	retlw	121	;'y'
   214  103A  342E               	retlw	46	;'.'
   215  103B  3463               	retlw	99	;'c'
   216  103C  346F               	retlw	111	;'o'
   217  103D  346D               	retlw	109	;'m'
   218  103E  3422               	retlw	34	;'"'
   219  103F  342C               	retlw	44	;','
   220  1040  3431               	retlw	49	;'1'
   221  1041  3432               	retlw	50	;'2'
   222  1042  3431               	retlw	49	;'1'
   223  1043  3432               	retlw	50	;'2'
   224  1044  3439               	retlw	57	;'9'
   225  1045  3400               	retlw	0
   226  1046  3400               	retlw	0
   227  1047                     STR_4:	
   228  1047  3441               	retlw	65	;'A'
   229  1048  3454               	retlw	84	;'T'
   230  1049  342B               	retlw	43	;'+'
   231  104A  3443               	retlw	67	;'C'
   232  104B  3450               	retlw	80	;'P'
   233  104C  3453               	retlw	83	;'S'
   234  104D  344D               	retlw	77	;'M'
   235  104E  3453               	retlw	83	;'S'
   236  104F  343D               	retlw	61	;'='
   237  1050  3431               	retlw	49	;'1'
   238  1051  342C               	retlw	44	;','
   239  1052  342C               	retlw	44	;','
   240  1053  342C               	retlw	44	;','
   241  1054  3430               	retlw	48	;'0'
   242  1055  3431               	retlw	49	;'1'
   243  1056  3430               	retlw	48	;'0'
   244  1057  3430               	retlw	48	;'0'
   245  1058  3430               	retlw	48	;'0'
   246  1059  3431               	retlw	49	;'1'
   247  105A  3431               	retlw	49	;'1'
   248  105B  3431               	retlw	49	;'1'
   249  105C  342C               	retlw	44	;','
   250  105D  3430               	retlw	48	;'0'
   251  105E  3430               	retlw	48	;'0'
   252  105F  3430               	retlw	48	;'0'
   253  1060  3430               	retlw	48	;'0'
   254  1061  3430               	retlw	48	;'0'
   255  1062  3430               	retlw	48	;'0'
   256  1063  3430               	retlw	48	;'0'
   257  1064  3431               	retlw	49	;'1'
   258  1065  3400               	retlw	0
   259  1066  3400               	retlw	0
   260  1067                     STR_1:	
   261  1067  3441               	retlw	65	;'A'
   262  1068  3454               	retlw	84	;'T'
   263  1069  342B               	retlw	43	;'+'
   264  106A  344E               	retlw	78	;'N'
   265  106B  3453               	retlw	83	;'S'
   266  106C  344F               	retlw	79	;'O'
   267  106D  3443               	retlw	67	;'C'
   268  106E  3452               	retlw	82	;'R'
   269  106F  343D               	retlw	61	;'='
   270  1070  3453               	retlw	83	;'S'
   271  1071  3454               	retlw	84	;'T'
   272  1072  3452               	retlw	82	;'R'
   273  1073  3445               	retlw	69	;'E'
   274  1074  3441               	retlw	65	;'A'
   275  1075  344D               	retlw	77	;'M'
   276  1076  342C               	retlw	44	;','
   277  1077  3436               	retlw	54	;'6'
   278  1078  342C               	retlw	44	;','
   279  1079  3430               	retlw	48	;'0'
   280  107A  342C               	retlw	44	;','
   281  107B  3431               	retlw	49	;'1'
   282  107C  3400               	retlw	0
   283  107D  3400               	retlw	0
   284  107E                     STR_14:	
   285  107E  3441               	retlw	65	;'A'
   286  107F  3454               	retlw	84	;'T'
   287  1080  342B               	retlw	43	;'+'
   288  1081  344E               	retlw	78	;'N'
   289  1082  3453               	retlw	83	;'S'
   290  1083  344F               	retlw	79	;'O'
   291  1084  3453               	retlw	83	;'S'
   292  1085  3444               	retlw	68	;'D'
   293  1086  343D               	retlw	61	;'='
   294  1087  3432               	retlw	50	;'2'
   295  1088  342C               	retlw	44	;','
   296  1089  3436               	retlw	54	;'6'
   297  108A  3438               	retlw	56	;'8'
   298  108B  3437               	retlw	55	;'7'
   299  108C  342C               	retlw	44	;','
   300  108D  3400               	retlw	0
   301  108E  3400               	retlw	0
   302  108F                     STR_6:	
   303  108F  3441               	retlw	65	;'A'
   304  1090  3454               	retlw	84	;'T'
   305  1091  342B               	retlw	43	;'+'
   306  1092  344E               	retlw	78	;'N'
   307  1093  3453               	retlw	83	;'S'
   308  1094  344F               	retlw	79	;'O'
   309  1095  3453               	retlw	83	;'S'
   310  1096  3444               	retlw	68	;'D'
   311  1097  343D               	retlw	61	;'='
   312  1098  3432               	retlw	50	;'2'
   313  1099  342C               	retlw	44	;','
   314  109A  3433               	retlw	51	;'3'
   315  109B  3432               	retlw	50	;'2'
   316  109C  342C               	retlw	44	;','
   317  109D  3400               	retlw	0
   318  109E  3400               	retlw	0
   319  109F                     STR_16:	
   320  109F  3441               	retlw	65	;'A'
   321  10A0  3454               	retlw	84	;'T'
   322  10A1  342B               	retlw	43	;'+'
   323  10A2  344E               	retlw	78	;'N'
   324  10A3  3453               	retlw	83	;'S'
   325  10A4  344F               	retlw	79	;'O'
   326  10A5  3453               	retlw	83	;'S'
   327  10A6  3444               	retlw	68	;'D'
   328  10A7  343D               	retlw	61	;'='
   329  10A8  3432               	retlw	50	;'2'
   330  10A9  342C               	retlw	44	;','
   331  10AA  3438               	retlw	56	;'8'
   332  10AB  3437               	retlw	55	;'7'
   333  10AC  342C               	retlw	44	;','
   334  10AD  3400               	retlw	0
   335  10AE  3400               	retlw	0
   336  10AF                     STR_15:	
   337  10AF  3441               	retlw	65	;'A'
   338  10B0  3454               	retlw	84	;'T'
   339  10B1  342B               	retlw	43	;'+'
   340  10B2  344E               	retlw	78	;'N'
   341  10B3  3453               	retlw	83	;'S'
   342  10B4  344F               	retlw	79	;'O'
   343  10B5  3453               	retlw	83	;'S'
   344  10B6  3444               	retlw	68	;'D'
   345  10B7  343D               	retlw	61	;'='
   346  10B8  3432               	retlw	50	;'2'
   347  10B9  342C               	retlw	44	;','
   348  10BA  3400               	retlw	0
   349  10BB  3400               	retlw	0
   350  10BC                     STR_5:	
   351  10BC  3441               	retlw	65	;'A'
   352  10BD  3454               	retlw	84	;'T'
   353  10BE  342B               	retlw	43	;'+'
   354  10BF  344E               	retlw	78	;'N'
   355  10C0  3450               	retlw	80	;'P'
   356  10C1  3453               	retlw	83	;'S'
   357  10C2  344D               	retlw	77	;'M'
   358  10C3  3452               	retlw	82	;'R'
   359  10C4  343D               	retlw	61	;'='
   360  10C5  3431               	retlw	49	;'1'
   361  10C6  3400               	retlw	0
   362  10C7  3400               	retlw	0
   363  10C8                     STR_3:	
   364  10C8  3441               	retlw	65	;'A'
   365  10C9  3454               	retlw	84	;'T'
   366  10CA  342B               	retlw	43	;'+'
   367  10CB  344E               	retlw	78	;'N'
   368  10CC  3453               	retlw	83	;'S'
   369  10CD  344F               	retlw	79	;'O'
   370  10CE  3443               	retlw	67	;'C'
   371  10CF  344C               	retlw	76	;'L'
   372  10D0  343D               	retlw	61	;'='
   373  10D1  3432               	retlw	50	;'2'
   374  10D2  3400               	retlw	0
   375  10D3  3400               	retlw	0
   376  10D4                     STR_33:	
   377  10D4  3441               	retlw	65	;'A'
   378  10D5  3454               	retlw	84	;'T'
   379  10D6  342B               	retlw	43	;'+'
   380  10D7  3443               	retlw	67	;'C'
   381  10D8  3445               	retlw	69	;'E'
   382  10D9  3452               	retlw	82	;'R'
   383  10DA  3445               	retlw	69	;'E'
   384  10DB  3447               	retlw	71	;'G'
   385  10DC  343D               	retlw	61	;'='
   386  10DD  3434               	retlw	52	;'4'
   387  10DE  3400               	retlw	0
   388  10DF  3400               	retlw	0
   389  10E0                     STR_34:	
   390  10E0  3441               	retlw	65	;'A'
   391  10E1  3454               	retlw	84	;'T'
   392  10E2  342B               	retlw	43	;'+'
   393  10E3  3443               	retlw	67	;'C'
   394  10E4  3445               	retlw	69	;'E'
   395  10E5  3452               	retlw	82	;'R'
   396  10E6  3445               	retlw	69	;'E'
   397  10E7  3447               	retlw	71	;'G'
   398  10E8  343F               	retlw	63	;'?'
   399  10E9  3400               	retlw	0
   400  10EA  3400               	retlw	0
   401  10EB                     STR_25:	
   402  10EB  3441               	retlw	65	;'A'
   403  10EC  3454               	retlw	84	;'T'
   404  10ED  342B               	retlw	43	;'+'
   405  10EE  3443               	retlw	67	;'C'
   406  10EF  3450               	retlw	80	;'P'
   407  10F0  3453               	retlw	83	;'S'
   408  10F1  344D               	retlw	77	;'M'
   409  10F2  3453               	retlw	83	;'S'
   410  10F3  343F               	retlw	63	;'?'
   411  10F4  3400               	retlw	0
   412  10F5  3400               	retlw	0
   413  10F6                     STR_35:	
   414  10F6  342B               	retlw	43	;'+'
   415  10F7  3443               	retlw	67	;'C'
   416  10F8  3445               	retlw	69	;'E'
   417  10F9  3452               	retlw	82	;'R'
   418  10FA  3445               	retlw	69	;'E'
   419  10FB  3447               	retlw	71	;'G'
   420  10FC  343A               	retlw	58	;':'
   421  10FD  3434               	retlw	52	;'4'
   422  10FE  342C               	retlw	44	;','
   423  10FF  3431               	retlw	49	;'1'
   424  1100  3400               	retlw	0
   425  1101                     STR_29:	
   426  1101  3441               	retlw	65	;'A'
   427  1102  3454               	retlw	84	;'T'
   428  1103  342B               	retlw	43	;'+'
   429  1104  344E               	retlw	78	;'N'
   430  1105  3443               	retlw	67	;'C'
   431  1106  3443               	retlw	67	;'C'
   432  1107  3449               	retlw	73	;'I'
   433  1108  3444               	retlw	68	;'D'
   434  1109  3400               	retlw	0
   435  110A  3400               	retlw	0
   436  110B                     STR_7:	
   437  110B  3440               	retlw	64	;'@'
   438  110C  3423               	retlw	35	;'#'
   439  110D  3470               	retlw	112	;'p'
   440  110E  3474               	retlw	116	;'t'
   441  110F  3423               	retlw	35	;'#'
   442  1110  3431               	retlw	49	;'1'
   443  1111  3423               	retlw	35	;'#'
   444  1112  3400               	retlw	0
   445  1113  3400               	retlw	0
   446  1114                     STR_17:	
   447  1114  3440               	retlw	64	;'@'
   448  1115  3423               	retlw	35	;'#'
   449  1116  3470               	retlw	112	;'p'
   450  1117  3474               	retlw	116	;'t'
   451  1118  3423               	retlw	35	;'#'
   452  1119  3432               	retlw	50	;'2'
   453  111A  3423               	retlw	35	;'#'
   454  111B  3400               	retlw	0
   455  111C  3400               	retlw	0
   456  111D                     STR_11:	
   457  111D  3440               	retlw	64	;'@'
   458  111E  3423               	retlw	35	;'#'
   459  111F  3470               	retlw	112	;'p'
   460  1120  3474               	retlw	116	;'t'
   461  1121  3423               	retlw	35	;'#'
   462  1122  3433               	retlw	51	;'3'
   463  1123  3423               	retlw	35	;'#'
   464  1124  3400               	retlw	0
   465  1125  3400               	retlw	0
   466  1126                     STR_28:	
   467  1126  3441               	retlw	65	;'A'
   468  1127  3454               	retlw	84	;'T'
   469  1128  342B               	retlw	43	;'+'
   470  1129  3443               	retlw	67	;'C'
   471  112A  3449               	retlw	73	;'I'
   472  112B  344D               	retlw	77	;'M'
   473  112C  3449               	retlw	73	;'I'
   474  112D  3400               	retlw	0
   475  112E  3400               	retlw	0
   476  112F                     STR_31:	
   477  112F  3441               	retlw	65	;'A'
   478  1130  3454               	retlw	84	;'T'
   479  1131  342B               	retlw	43	;'+'
   480  1132  3443               	retlw	67	;'C'
   481  1133  3453               	retlw	83	;'S'
   482  1134  3451               	retlw	81	;'Q'
   483  1135  3400               	retlw	0
   484  1136  3400               	retlw	0
   485  1137                     STR_20:	
   486  1137  344E               	retlw	78	;'N'
   487  1138  3453               	retlw	83	;'S'
   488  1139  344F               	retlw	79	;'O'
   489  113A  344E               	retlw	78	;'N'
   490  113B  344D               	retlw	77	;'M'
   491  113C  3449               	retlw	73	;'I'
   492  113D  3400               	retlw	0
   493  113E                     STR_24:	
   494  113E  3441               	retlw	65	;'A'
   495  113F  3454               	retlw	84	;'T'
   496  1140  3445               	retlw	69	;'E'
   497  1141  3431               	retlw	49	;'1'
   498  1142  3400               	retlw	0
   499  1143  3400               	retlw	0
   500  1144                     STR_32:	
   501  1144  342B               	retlw	43	;'+'
   502  1145  3443               	retlw	67	;'C'
   503  1146  3453               	retlw	83	;'S'
   504  1147  3451               	retlw	81	;'Q'
   505  1148  343A               	retlw	58	;':'
   506  1149  3400               	retlw	0
   507  114A                     STR_21:	
   508  114A  3445               	retlw	69	;'E'
   509  114B  3452               	retlw	82	;'R'
   510  114C  3452               	retlw	82	;'R'
   511  114D  344F               	retlw	79	;'O'
   512  114E  3452               	retlw	82	;'R'
   513  114F  3400               	retlw	0
   514  1150                     STR_9:	
   515  1150  3431               	retlw	49	;'1'
   516  1151  3430               	retlw	48	;'0'
   517  1152  3423               	retlw	35	;'#'
   518  1153  3400               	retlw	0
   519  1154  3400               	retlw	0
   520  1155                     STR_8:	
   521  1155  3436               	retlw	54	;'6'
   522  1156  3430               	retlw	48	;'0'
   523  1157  3423               	retlw	35	;'#'
   524  1158  3400               	retlw	0
   525  1159  3400               	retlw	0
   526  115A                     STR_30:	
   527  115A  3438               	retlw	56	;'8'
   528  115B  3439               	retlw	57	;'9'
   529  115C  3438               	retlw	56	;'8'
   530  115D  3436               	retlw	54	;'6'
   531  115E  3400               	retlw	0
   532  115F                     STR_23:	
   533  115F  3441               	retlw	65	;'A'
   534  1160  3454               	retlw	84	;'T'
   535  1161  3400               	retlw	0
   536  1162  3400               	retlw	0
   537  1163                     STR_36:	
   538  1163  344F               	retlw	79	;'O'
   539  1164  344B               	retlw	75	;'K'
   540  1165  3400               	retlw	0
   541  1166                     STR_22:	
   542  1166  340D               	retlw	13
   543  1167  3400               	retlw	0
   544  1168  3400               	retlw	0
   545  1166                     
   546                           	psect	cinit
   547  081C                     start_initialization:	
   548  215A                     	;BIGRAM
   549                           
   550                           ; Clear objects allocated to BIGRAM
   551  081C  305A               	movlw	90
   552  081D  0084               	movwf	4
   553  081E  3021               	movlw	33
   554  081F  0085               	movwf	5
   555  0820  3096               	movlw	150
   556  0821  00FE               	movwf	126
   557  0822  3000               	movlw	0
   558  0823  01FF               	clrf	127
   559  0824  3185  25C8  3188   	fcall	clear_ram
   560                           
   561                           ; Clear objects allocated to COMMON
   562  0827  01F7               	clrf	__pbssCOMMON& (0+127)
   563  0828  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   564  0829  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   565  082A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   566  082B  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   567                           
   568                           ; Clear objects allocated to BANK0
   569  082C  304E               	movlw	low __pbssBANK0
   570  082D  0084               	movwf	4
   571  082E  3000               	movlw	high __pbssBANK0
   572  082F  0085               	movwf	5
   573  0830  301B               	movlw	27
   574  0831  00FE               	movwf	126
   575  0832  3000               	movlw	0
   576  0833  00FF               	movwf	127
   577  0834  3185  25C8  3188   	fcall	clear_ram
   578                           
   579                           ; Clear objects allocated to BANK1
   580  0837  30A0               	movlw	low __pbssBANK1
   581  0838  0084               	movwf	4
   582  0839  3000               	movlw	high __pbssBANK1
   583  083A  0085               	movwf	5
   584  083B  303C               	movlw	60
   585  083C  00FE               	movwf	126
   586  083D  3000               	movlw	0
   587  083E  00FF               	movwf	127
   588  083F  3185  25C8  3188   	fcall	clear_ram
   589                           
   590                           ; Clear objects allocated to BANK2
   591  0842  3020               	movlw	low __pbssBANK2
   592  0843  0084               	movwf	4
   593  0844  3001               	movlw	high __pbssBANK2
   594  0845  0085               	movwf	5
   595  0846  3018               	movlw	24
   596  0847  00FE               	movwf	126
   597  0848  3000               	movlw	0
   598  0849  00FF               	movwf	127
   599  084A  3185  25C8  3188   	fcall	clear_ram
   600                           
   601                           ;initializer for _DpyNum
   602  084D  3040               	movlw	64
   603  084E  00E9               	movwf	__pdataBANK0& (0+127)
   604  084F  00EA               	movwf	(__pdataBANK0+1)& (0+127)
   605  0850  00EB               	movwf	(__pdataBANK0+2)& (0+127)
   606  0851  00EC               	movwf	(__pdataBANK0+3)& (0+127)
   607  0852  00ED               	movwf	(__pdataBANK0+4)& (0+127)
   608  0853  00EE               	movwf	(__pdataBANK0+5)& (0+127)
   609  0854                     end_of_initialization:	
   610                           ;End of C runtime variable initialization code
   611                           
   612  0854  0020               	movlb	0
   613  0855  2856               	ljmp	_main	;jump to C main() function
   614  0856                     __pmaintext:	
   615 ;;Data sizes: Strings 326, constant 34, data 6, bss 116, persistent 0 stack 0
   616 ;;Auto spaces:   Size  Autos    Used
   617 ;; COMMON          14      7      12
   618 ;; BANK0           80     46      79
   619 ;; BANK1           80      0      60
   620 ;; BANK2           80      0      24
   621 ;; BANK3           80      0       0
   622 ;; BANK4           26      0       0
   623 ;; BANK5            0      0       0
   624 ;; BANK6            0      0       0
   625 ;;
   626 ;; Pointer list with targets:
   627 ;; ?_strchr	PTR unsigned char  size(2) Largest target is 150
   628 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   629 ;;
   630 ;; ?_strncmp	int  size(1) Largest target is 0
   631 ;;
   632 ;; ?_strlen	unsigned int  size(2) Largest target is 15
   633 ;;		 -> STR_35(CODE[11]), STR_32(CODE[6]), STR_30(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   634 ;;		 -> ATCommand_OkString(BANK1[15]), 
   635 ;;
   636 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   637 ;;
   638 ;; ?_atoi	int  size(1) Largest target is 0
   639 ;;
   640 ;; ?_strstr	PTR unsigned char  size(2) Largest target is 150
   641 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   642 ;;
   643 ;; ?_strcpy	PTR unsigned char  size(1) Largest target is 15
   644 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   645 ;;
   646 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   647 ;;
   648 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   649 ;;
   650 ;; strncmp@s2	PTR const unsigned char  size(2) Largest target is 15
   651 ;;		 -> STR_35(CODE[11]), STR_32(CODE[6]), STR_30(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   652 ;;		 -> ATCommand_OkString(BANK1[15]), 
   653 ;;
   654 ;; strncmp@s1	PTR const unsigned char  size(2) Largest target is 150
   655 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   656 ;;
   657 ;; strlen@s	PTR const unsigned char  size(2) Largest target is 15
   658 ;;		 -> STR_35(CODE[11]), STR_32(CODE[6]), STR_30(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   659 ;;		 -> ATCommand_OkString(BANK1[15]), 
   660 ;;
   661 ;; strlen@cp	PTR const unsigned char  size(2) Largest target is 15
   662 ;;		 -> STR_35(CODE[11]), STR_32(CODE[6]), STR_30(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   663 ;;		 -> ATCommand_OkString(BANK1[15]), 
   664 ;;
   665 ;; strchr@ptr	PTR const unsigned char  size(2) Largest target is 150
   666 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   667 ;;
   668 ;; sp__strchr	PTR unsigned char  size(2) Largest target is 150
   669 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   670 ;;
   671 ;; strstr@s2	PTR const unsigned char  size(2) Largest target is 15
   672 ;;		 -> STR_35(CODE[11]), STR_32(CODE[6]), STR_30(CODE[5]), ATCommand_ErrString(BANK1[15]), 
   673 ;;		 -> ATCommand_OkString(BANK1[15]), 
   674 ;;
   675 ;; strstr@s1	PTR const unsigned char  size(2) Largest target is 150
   676 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   677 ;;
   678 ;; strcpy@from	PTR const unsigned char  size(2) Largest target is 7
   679 ;;		 -> STR_42(CODE[6]), STR_41(CODE[3]), STR_40(CODE[6]), STR_39(CODE[3]), 
   680 ;;		 -> STR_37(CODE[6]), STR_36(CODE[3]), STR_21(CODE[6]), STR_20(CODE[7]), 
   681 ;;
   682 ;; strcpy@to	PTR unsigned char  size(1) Largest target is 15
   683 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   684 ;;
   685 ;; strcpy@cp	PTR unsigned char  size(1) Largest target is 15
   686 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   687 ;;
   688 ;; atoi@s	PTR const unsigned char  size(2) Largest target is 150
   689 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   690 ;;
   691 ;; GetVerify_CRC8@pBuff	PTR unsigned char  size(1) Largest target is 9
   692 ;;		 -> DS18X20_Scratchpad(BANK1[9]), 
   693 ;;
   694 ;; GetVerify_Sum@pBuff	PTR unsigned char  size(1) Largest target is 2
   695 ;;		 -> RomParams(BANK0[2]), 
   696 ;;
   697 ;; Uart1_PutString_Hex@pString	PTR const unsigned char  size(2) Largest target is 21
   698 ;;		 -> STR_19(CODE[5]), STR_18(CODE[5]), STR_17(CODE[9]), STR_13(CODE[5]), 
   699 ;;		 -> STR_12(CODE[5]), STR_11(CODE[9]), STR_9(CODE[5]), STR_8(CODE[5]), 
   700 ;;		 -> ICCID(BANK1[21]), STR_7(CODE[9]), 
   701 ;;
   702 ;; Uart1_PutString@pString	PTR const unsigned char  size(2) Largest target is 36
   703 ;;		 -> STR_38(CODE[3]), STR_34(CODE[11]), STR_33(CODE[12]), STR_31(CODE[8]), 
   704 ;;		 -> STR_29(CODE[10]), STR_28(CODE[9]), STR_27(CODE[11]), STR_26(CODE[32]), 
   705 ;;		 -> STR_25(CODE[11]), STR_24(CODE[6]), STR_23(CODE[4]), STR_22(CODE[3]), 
   706 ;;		 -> STR_16(CODE[16]), STR_15(CODE[13]), STR_14(CODE[17]), STR_10(CODE[16]), 
   707 ;;		 -> STR_6(CODE[16]), STR_5(CODE[12]), STR_4(CODE[32]), STR_3(CODE[12]), 
   708 ;;		 -> STR_2(CODE[36]), STR_1(CODE[23]), 
   709 ;;
   710 ;; ATCommand_WaitData@strx	PTR unsigned char  size(2) Largest target is 150
   711 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   712 ;;
   713 ;; ATCommand_SendCmd@cmd	PTR const unsigned char  size(2) Largest target is 36
   714 ;;		 -> STR_34(CODE[11]), STR_33(CODE[12]), STR_31(CODE[8]), STR_29(CODE[10]), 
   715 ;;		 -> STR_28(CODE[9]), STR_27(CODE[11]), STR_26(CODE[32]), STR_25(CODE[11]), 
   716 ;;		 -> STR_24(CODE[6]), STR_23(CODE[4]), STR_5(CODE[12]), STR_4(CODE[32]), 
   717 ;;		 -> STR_3(CODE[12]), STR_2(CODE[36]), STR_1(CODE[23]), 
   718 ;;
   719 ;; ATCommand_SendCmd@strx	PTR unsigned char  size(2) Largest target is 150
   720 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   721 ;;
   722 ;; sp__strstr	PTR unsigned char  size(2) Largest target is 150
   723 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   724 ;;
   725 ;; InitGPRS@strx	PTR unsigned char  size(2) Largest target is 150
   726 ;;		 -> ATCommand_RxList(BIGRAM[150]), RAM(NULL[128]), 
   727 ;;
   728 ;; sp__strcpy	PTR unsigned char  size(1) Largest target is 15
   729 ;;		 -> ATCommand_ErrString(BANK1[15]), ATCommand_OkString(BANK1[15]), 
   730 ;;
   731 ;;
   732 ;; Critical Paths under _main in COMMON
   733 ;;
   734 ;;   None.
   735 ;;
   736 ;; Critical Paths under _highISR in COMMON
   737 ;;
   738 ;;   _highISR->_ATCommand_ProcRx
   739 ;;   _ATCommand_ProcRx->_isgraph
   740 ;;
   741 ;; Critical Paths under _main in BANK0
   742 ;;
   743 ;;   _main->_TestProc
   744 ;;   _TestProc->_CallProc
   745 ;;   _CallProc->_CallSend
   746 ;;   _InitSystem->_ReadTData
   747 ;;   _CallSend->_InteractServer
   748 ;;   _ReadTData->_DS18X20_ReadMeas
   749 ;;   _InteractServer->_ATCommand_WaitData
   750 ;;   _InitGPRS->_ATCommand_SendCmd
   751 ;;   _DS18X20_ReadMeas->_GetVerify_CRC8
   752 ;;   _DS18X20_StartMeas->_OneWire_Command
   753 ;;   _OneWire_Command->_OneWire_WriteByte
   754 ;;   _ATCommand_WaitData->_strstr
   755 ;;   _Uart1_PutString_Hex->_Uart1_PutHex
   756 ;;   _ATCommand_SendCmd->_strstr
   757 ;;   _PowerON->___delay_20ms
   758 ;;   _TCN75_ReadReg->_SimI2C_SendByte
   759 ;;   _TCN75_SetConfig->_SimI2C_SendByte
   760 ;;   _InitVariable->_GetRomData
   761 ;;   _InitVariable->_SaveRomData
   762 ;;   _atoi->___wmul
   763 ;;   _strstr->_strncmp
   764 ;;   _Uart1_PutHex->_Uart1_PutChar
   765 ;;   _Uart1_PutString->_Uart1_PutChar
   766 ;;   _ATCommand_Init->_strcpy
   767 ;;   _SaveRomData->_GetVerify_Sum
   768 ;;   _GetRomData->_GetVerify_Sum
   769 ;;   _LcdDisplay_Err->___lbmod
   770 ;;   _LcdDisplay_CurTemp->___lbmod
   771 ;;   _LcdDisplay_CSQ->___lbmod
   772 ;;   _strncmp->_strlen
   773 ;;
   774 ;; Critical Paths under _highISR in BANK0
   775 ;;
   776 ;;   None.
   777 ;;
   778 ;; Critical Paths under _main in BANK1
   779 ;;
   780 ;;   None.
   781 ;;
   782 ;; Critical Paths under _highISR in BANK1
   783 ;;
   784 ;;   None.
   785 ;;
   786 ;; Critical Paths under _main in BANK2
   787 ;;
   788 ;;   None.
   789 ;;
   790 ;; Critical Paths under _highISR in BANK2
   791 ;;
   792 ;;   None.
   793 ;;
   794 ;; Critical Paths under _main in BANK3
   795 ;;
   796 ;;   None.
   797 ;;
   798 ;; Critical Paths under _highISR in BANK3
   799 ;;
   800 ;;   None.
   801 ;;
   802 ;; Critical Paths under _main in BANK4
   803 ;;
   804 ;;   None.
   805 ;;
   806 ;; Critical Paths under _highISR in BANK4
   807 ;;
   808 ;;   None.
   809 ;;
   810 ;; Critical Paths under _main in BANK5
   811 ;;
   812 ;;   None.
   813 ;;
   814 ;; Critical Paths under _highISR in BANK5
   815 ;;
   816 ;;   None.
   817 ;;
   818 ;; Critical Paths under _main in BANK6
   819 ;;
   820 ;;   None.
   821 ;;
   822 ;; Critical Paths under _highISR in BANK6
   823 ;;
   824 ;;   None.
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   827 ;;
   828 ;;
   829 ;;Call Graph Tables:
   830 ;;
   831 ;; ---------------------------------------------------------------------------------
   832 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   833 ;; ---------------------------------------------------------------------------------
   834 ;; (0) _main                                                 4     4      0   28904
   835 ;;                                             42 BANK0      4     4      0
   836 ;;                         _InitSystem
   837 ;;                       ___delay_20ms
   838 ;;                           _TestProc
   839 ;;                          _ReadTData
   840 ;;                           _CallProc
   841 ;;                             ___bmul
   842 ;;                       _eeprom_write
   843 ;; ---------------------------------------------------------------------------------
   844 ;; (1) _TestProc                                             2     2      0   12815
   845 ;;                                             40 BANK0      2     2      0
   846 ;;                      _LcdDisplayAll
   847 ;;                       ___delay_20ms
   848 ;;                          _ReadTData
   849 ;;                     _LcdDisplay_Err
   850 ;;                           _CallProc
   851 ;; ---------------------------------------------------------------------------------
   852 ;; (1) _CallProc                                             1     1      0    9996
   853 ;;                                             39 BANK0      1     1      0
   854 ;;                    _LcdDisplay_CALL
   855 ;;                           _CallSend
   856 ;;                 _LcdDisplay_CurTemp
   857 ;;                       ___delay_20ms
   858 ;;                     _LcdDisplay_Err
   859 ;; ---------------------------------------------------------------------------------
   860 ;; (1) _InitSystem                                           1     1      0    3402
   861 ;;                                             13 BANK0      1     1      0
   862 ;;                            _InitMCU
   863 ;;                       _InitVariable
   864 ;;                        _DisplayInit
   865 ;;                     _ATCommand_Init
   866 ;;                      _OneWire_Reset
   867 ;;                         _TCN75_Init
   868 ;;                    _TCN75_SetConfig
   869 ;;                       ___delay_20ms
   870 ;;                          _ReadTData
   871 ;; ---------------------------------------------------------------------------------
   872 ;; (2) _CallSend                                             2     2      0    9001
   873 ;;                                             38 BANK0      1     1      0
   874 ;;                           _InitGPRS
   875 ;;                       ___delay_20ms
   876 ;;                  _ATCommand_SendCmd
   877 ;;                     _InteractServer
   878 ;; ---------------------------------------------------------------------------------
   879 ;; (1) _ReadTData                                            1     1      0    2304
   880 ;;                                             12 BANK0      1     1      0
   881 ;;                  _DS18X20_StartMeas
   882 ;;                       ___delay_20ms
   883 ;;                   _DS18X20_ReadMeas
   884 ;;                    _TCN75_SetConfig
   885 ;;                      _TCN75_ReadReg
   886 ;;                 _LcdDisplay_CurTemp
   887 ;; ---------------------------------------------------------------------------------
   888 ;; (3) _InteractServer                                      16    16      0    4761
   889 ;;                                             22 BANK0     16    16      0
   890 ;;                    _Uart1_PutString
   891 ;;                _Uart1_PutString_Hex
   892 ;;                       _Uart1_PutHex
   893 ;;                  _MakeTxTemperature
   894 ;;                            ___lwdiv
   895 ;;                      _Uart1_PutChar
   896 ;;                            ___lwmod
   897 ;;                             ___bmul
   898 ;;                        _eeprom_read
   899 ;;                             _strcpy
   900 ;;                 _ATCommand_WaitData
   901 ;;                       ___delay_20ms
   902 ;; ---------------------------------------------------------------------------------
   903 ;; (3) _InitGPRS                                             8     8      0    3184
   904 ;;                                             25 BANK0      8     8      0
   905 ;;                            _PowerON
   906 ;;                  _ATCommand_SendCmd
   907 ;;                       ___delay_20ms
   908 ;;                             _strstr
   909 ;;                               _atoi
   910 ;;                     _LcdDisplay_CSQ
   911 ;; ---------------------------------------------------------------------------------
   912 ;; (2) _DS18X20_ReadMeas                                     2     2      0     763
   913 ;;                                             10 BANK0      2     2      0
   914 ;;                      _OneWire_Reset
   915 ;;                    _OneWire_Command
   916 ;;                   _OneWire_ReadByte
   917 ;;                     _GetVerify_CRC8
   918 ;; ---------------------------------------------------------------------------------
   919 ;; (2) _DS18X20_StartMeas                                    0     0      0     285
   920 ;;                      _OneWire_Reset
   921 ;;                    _OneWire_Command
   922 ;; ---------------------------------------------------------------------------------
   923 ;; (3) _OneWire_Command                                      1     1      0     215
   924 ;;                                              4 BANK0      1     1      0
   925 ;;                      _OneWire_Reset
   926 ;;                  _OneWire_WriteByte
   927 ;; ---------------------------------------------------------------------------------
   928 ;; (4) _ATCommand_WaitData                                   5     5      0     749
   929 ;;                                             17 BANK0      5     5      0
   930 ;;                             _strstr
   931 ;;                             _strcpy
   932 ;; ---------------------------------------------------------------------------------
   933 ;; (4) _Uart1_PutString_Hex                                  3     1      2     337
   934 ;;                                              3 BANK0      3     1      2
   935 ;;                       _Uart1_PutHex
   936 ;; ---------------------------------------------------------------------------------
   937 ;; (3) _ATCommand_SendCmd                                    8     6      2    1000
   938 ;;                                             17 BANK0      8     6      2
   939 ;;                    _Uart1_PutString
   940 ;;                             _strstr
   941 ;;                       ___delay_20ms
   942 ;;                             _strcpy
   943 ;; ---------------------------------------------------------------------------------
   944 ;; (4) _PowerON                                              0     0      0      22
   945 ;;                       ___delay_20ms
   946 ;; ---------------------------------------------------------------------------------
   947 ;; (2) _TCN75_ReadReg                                        3     3      0     383
   948 ;;                                              3 BANK0      3     3      0
   949 ;;                       _SimI2C_Start
   950 ;;                    _SimI2C_SendByte
   951 ;;                      _SimI2C_RecAck
   952 ;;                    _SimI2C_ReadByte
   953 ;;                         _SimI2C_Ack
   954 ;;                       _SimI2C_NoAck
   955 ;;                        _SimI2C_Stop
   956 ;; ---------------------------------------------------------------------------------
   957 ;; (2) _TCN75_SetConfig                                      2     2      0     244
   958 ;;                                              3 BANK0      2     2      0
   959 ;;                       _SimI2C_Start
   960 ;;                    _SimI2C_SendByte
   961 ;;                      _SimI2C_RecAck
   962 ;;                        _SimI2C_Stop
   963 ;; ---------------------------------------------------------------------------------
   964 ;; (2) _InitVariable                                         0     0      0     621
   965 ;;                         _GetRomData
   966 ;;                        _SaveRomData
   967 ;; ---------------------------------------------------------------------------------
   968 ;; (3) _SimI2C_Stop                                          0     0      0       0
   969 ;; ---------------------------------------------------------------------------------
   970 ;; (3) _SimI2C_NoAck                                         0     0      0       0
   971 ;; ---------------------------------------------------------------------------------
   972 ;; (3) _SimI2C_Ack                                           0     0      0       0
   973 ;; ---------------------------------------------------------------------------------
   974 ;; (3) _SimI2C_ReadByte                                      2     2      0     108
   975 ;;                                              0 BANK0      2     2      0
   976 ;; ---------------------------------------------------------------------------------
   977 ;; (3) _SimI2C_RecAck                                        1     1      0      34
   978 ;;                                              0 BANK0      1     1      0
   979 ;; ---------------------------------------------------------------------------------
   980 ;; (3) _SimI2C_SendByte                                      3     3      0     139
   981 ;;                                              0 BANK0      3     3      0
   982 ;; ---------------------------------------------------------------------------------
   983 ;; (3) _SimI2C_Start                                         0     0      0       0
   984 ;; ---------------------------------------------------------------------------------
   985 ;; (4) _OneWire_WriteByte                                    4     4      0     114
   986 ;;                                              0 BANK0      4     4      0
   987 ;; ---------------------------------------------------------------------------------
   988 ;; (3) _OneWire_ReadByte                                     4     4      0     115
   989 ;;                                              0 BANK0      4     4      0
   990 ;; ---------------------------------------------------------------------------------
   991 ;; (4) _atoi                                                 9     7      2     569
   992 ;;                                              6 BANK0      9     7      2
   993 ;;                             ___wmul
   994 ;;                            _isdigit
   995 ;; ---------------------------------------------------------------------------------
   996 ;; (5) _strstr                                               4     0      4     562
   997 ;;                                             13 BANK0      4     0      4
   998 ;;                             _strlen
   999 ;;                            _strncmp
  1000 ;;                             _strchr
  1001 ;; ---------------------------------------------------------------------------------
  1002 ;; (4) _Uart1_PutHex                                         2     2      0     238
  1003 ;;                                              1 BANK0      2     2      0
  1004 ;;                      _Uart1_PutChar
  1005 ;; ---------------------------------------------------------------------------------
  1006 ;; (4) _Uart1_PutString                                      3     1      2     130
  1007 ;;                                              1 BANK0      3     1      2
  1008 ;;                      _Uart1_PutChar
  1009 ;; ---------------------------------------------------------------------------------
  1010 ;; (2) ___delay_20ms                                         4     2      2      22
  1011 ;;                                              0 BANK0      4     2      2
  1012 ;; ---------------------------------------------------------------------------------
  1013 ;; (2) _TCN75_Init                                           0     0      0       0
  1014 ;;                        _SimI2C_Init
  1015 ;; ---------------------------------------------------------------------------------
  1016 ;; (4) _OneWire_Reset                                        3     3      0      70
  1017 ;;                                              0 BANK0      3     3      0
  1018 ;; ---------------------------------------------------------------------------------
  1019 ;; (2) _ATCommand_Init                                       0     0      0      73
  1020 ;;                             _strcpy
  1021 ;; ---------------------------------------------------------------------------------
  1022 ;; (3) _SaveRomData                                          1     1      0     312
  1023 ;;                                              7 BANK0      1     1      0
  1024 ;;                      _GetVerify_Sum
  1025 ;;                       _eeprom_write
  1026 ;; ---------------------------------------------------------------------------------
  1027 ;; (3) _GetRomData                                           1     1      0     309
  1028 ;;                                              7 BANK0      1     1      0
  1029 ;;                        _eeprom_read
  1030 ;;                      _GetVerify_Sum
  1031 ;; ---------------------------------------------------------------------------------
  1032 ;; (2) _LcdDisplay_CALL                                      0     0      0       0
  1033 ;;                      _LcdDisplayNum
  1034 ;; ---------------------------------------------------------------------------------
  1035 ;; (2) _LcdDisplay_Err                                       0     0      0     400
  1036 ;;                            ___lbdiv
  1037 ;;                            ___lbmod
  1038 ;;                      _LcdDisplayNum
  1039 ;; ---------------------------------------------------------------------------------
  1040 ;; (2) _LcdDisplay_CurTemp                                   4     4      0     536
  1041 ;;                                              5 BANK0      4     4      0
  1042 ;;                            ___lbdiv
  1043 ;;                            ___lbmod
  1044 ;;                      _LcdDisplayNum
  1045 ;; ---------------------------------------------------------------------------------
  1046 ;; (4) _LcdDisplay_CSQ                                       2     2      0     468
  1047 ;;                                              5 BANK0      2     2      0
  1048 ;;                            ___lbdiv
  1049 ;;                            ___lbmod
  1050 ;;                      _LcdDisplayNum
  1051 ;; ---------------------------------------------------------------------------------
  1052 ;; (2) _LcdDisplayAll                                        1     1      0      93
  1053 ;;                                              0 BANK0      1     1      0
  1054 ;;                      _LcdDisplayNum
  1055 ;; ---------------------------------------------------------------------------------
  1056 ;; (3) ___lbmod                                              5     4      1     159
  1057 ;;                                              0 BANK0      5     4      1
  1058 ;; ---------------------------------------------------------------------------------
  1059 ;; (3) ___lbdiv                                              4     3      1     241
  1060 ;;                                              0 BANK0      4     3      1
  1061 ;; ---------------------------------------------------------------------------------
  1062 ;; (4) ___lwmod                                              5     1      4     232
  1063 ;;                                              0 BANK0      5     1      4
  1064 ;; ---------------------------------------------------------------------------------
  1065 ;; (4) ___lwdiv                                              7     3      4     241
  1066 ;;                                              0 BANK0      7     3      4
  1067 ;; ---------------------------------------------------------------------------------
  1068 ;; (5) ___wmul                                               6     2      4     136
  1069 ;;                                              0 BANK0      6     2      4
  1070 ;; ---------------------------------------------------------------------------------
  1071 ;; (1) ___bmul                                               3     2      1     136
  1072 ;;                                              0 BANK0      3     2      1
  1073 ;; ---------------------------------------------------------------------------------
  1074 ;; (6) _strchr                                               6     2      4      88
  1075 ;;                                              0 BANK0      6     2      4
  1076 ;; ---------------------------------------------------------------------------------
  1077 ;; (6) _strncmp                                              7     1      6     134
  1078 ;;                                              6 BANK0      7     1      6
  1079 ;;                             _strlen (ARG)
  1080 ;; ---------------------------------------------------------------------------------
  1081 ;; (6) _strlen                                               6     4      2      89
  1082 ;;                                              0 BANK0      6     4      2
  1083 ;; ---------------------------------------------------------------------------------
  1084 ;; (5) _isdigit                                              2     2      0      99
  1085 ;;                                              0 BANK0      2     2      0
  1086 ;; ---------------------------------------------------------------------------------
  1087 ;; (3) _SimI2C_Init                                          0     0      0       0
  1088 ;; ---------------------------------------------------------------------------------
  1089 ;; (3) _GetVerify_CRC8                                      10     8      2     233
  1090 ;;                                              0 BANK0     10     8      2
  1091 ;; ---------------------------------------------------------------------------------
  1092 ;; (4) _GetVerify_Sum                                        7     5      2     120
  1093 ;;                                              0 BANK0      7     5      2
  1094 ;; ---------------------------------------------------------------------------------
  1095 ;; (5) _strcpy                                               6     4      2      73
  1096 ;;                                              0 BANK0      6     4      2
  1097 ;; ---------------------------------------------------------------------------------
  1098 ;; (4) _eeprom_read                                          3     3      0      22
  1099 ;;                                              0 BANK0      3     3      0
  1100 ;; ---------------------------------------------------------------------------------
  1101 ;; (4) _Uart1_PutChar                                        1     1      0      31
  1102 ;;                                              0 BANK0      1     1      0
  1103 ;; ---------------------------------------------------------------------------------
  1104 ;; (4) _MakeTxTemperature                                    3     1      2     556
  1105 ;;                                              0 BANK0      3     1      2
  1106 ;; ---------------------------------------------------------------------------------
  1107 ;; (1) _eeprom_write                                         2     1      1      62
  1108 ;;                                              0 BANK0      2     1      1
  1109 ;; ---------------------------------------------------------------------------------
  1110 ;; (2) _InitMCU                                              0     0      0       0
  1111 ;; ---------------------------------------------------------------------------------
  1112 ;; (2) _DisplayInit                                          0     0      0       0
  1113 ;; ---------------------------------------------------------------------------------
  1114 ;; (3) _LcdDisplayNum                                        0     0      0       0
  1115 ;; ---------------------------------------------------------------------------------
  1116 ;; Estimated maximum stack depth 6
  1117 ;; ---------------------------------------------------------------------------------
  1118 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1119 ;; ---------------------------------------------------------------------------------
  1120 ;; (8) _highISR                                              1     1      0     179
  1121 ;;                                              6 COMMON     1     1      0
  1122 ;;                   _ATCommand_ProcRx
  1123 ;; ---------------------------------------------------------------------------------
  1124 ;; (9) _ATCommand_ProcRx                                     4     4      0     156
  1125 ;;                                              2 COMMON     4     4      0
  1126 ;;                            _isgraph
  1127 ;; ---------------------------------------------------------------------------------
  1128 ;; (10) _isgraph                                             2     2      0      68
  1129 ;;                                              0 COMMON     2     2      0
  1130 ;; ---------------------------------------------------------------------------------
  1131 ;; Estimated maximum stack depth 10
  1132 ;; ---------------------------------------------------------------------------------
  1133 ;; Call Graph Graphs:
  1134 ;; _main (ROOT)
  1135 ;;   _InitSystem
  1136 ;;     _InitMCU
  1137 ;;     _InitVariable
  1138 ;;       _GetRomData
  1139 ;;         _eeprom_read
  1140 ;;         _GetVerify_Sum
  1141 ;;       _SaveRomData
  1142 ;;         _GetVerify_Sum
  1143 ;;         _eeprom_write
  1144 ;;     _DisplayInit
  1145 ;;     _ATCommand_Init
  1146 ;;       _strcpy
  1147 ;;     _OneWire_Reset
  1148 ;;     _TCN75_Init
  1149 ;;       _SimI2C_Init
  1150 ;;     _TCN75_SetConfig
  1151 ;;       _SimI2C_Start
  1152 ;;       _SimI2C_SendByte
  1153 ;;       _SimI2C_RecAck
  1154 ;;       _SimI2C_Stop
  1155 ;;     ___delay_20ms
  1156 ;;     _ReadTData
  1157 ;;       _DS18X20_StartMeas
  1158 ;;         _OneWire_Reset
  1159 ;;         _OneWire_Command
  1160 ;;           _OneWire_Reset
  1161 ;;           _OneWire_WriteByte
  1162 ;;       ___delay_20ms
  1163 ;;       _DS18X20_ReadMeas
  1164 ;;         _OneWire_Reset
  1165 ;;         _OneWire_Command
  1166 ;;           _OneWire_Reset
  1167 ;;           _OneWire_WriteByte
  1168 ;;         _OneWire_ReadByte
  1169 ;;         _GetVerify_CRC8
  1170 ;;       _TCN75_SetConfig
  1171 ;;         _SimI2C_Start
  1172 ;;         _SimI2C_SendByte
  1173 ;;         _SimI2C_RecAck
  1174 ;;         _SimI2C_Stop
  1175 ;;       _TCN75_ReadReg
  1176 ;;         _SimI2C_Start
  1177 ;;         _SimI2C_SendByte
  1178 ;;         _SimI2C_RecAck
  1179 ;;         _SimI2C_ReadByte
  1180 ;;         _SimI2C_Ack
  1181 ;;         _SimI2C_NoAck
  1182 ;;         _SimI2C_Stop
  1183 ;;       _LcdDisplay_CurTemp
  1184 ;;         ___lbdiv
  1185 ;;         ___lbmod
  1186 ;;         _LcdDisplayNum
  1187 ;;   ___delay_20ms
  1188 ;;   _TestProc
  1189 ;;     _LcdDisplayAll
  1190 ;;       _LcdDisplayNum
  1191 ;;     ___delay_20ms
  1192 ;;     _ReadTData
  1193 ;;       _DS18X20_StartMeas
  1194 ;;         _OneWire_Reset
  1195 ;;         _OneWire_Command
  1196 ;;           _OneWire_Reset
  1197 ;;           _OneWire_WriteByte
  1198 ;;       ___delay_20ms
  1199 ;;       _DS18X20_ReadMeas
  1200 ;;         _OneWire_Reset
  1201 ;;         _OneWire_Command
  1202 ;;           _OneWire_Reset
  1203 ;;           _OneWire_WriteByte
  1204 ;;         _OneWire_ReadByte
  1205 ;;         _GetVerify_CRC8
  1206 ;;       _TCN75_SetConfig
  1207 ;;         _SimI2C_Start
  1208 ;;         _SimI2C_SendByte
  1209 ;;         _SimI2C_RecAck
  1210 ;;         _SimI2C_Stop
  1211 ;;       _TCN75_ReadReg
  1212 ;;         _SimI2C_Start
  1213 ;;         _SimI2C_SendByte
  1214 ;;         _SimI2C_RecAck
  1215 ;;         _SimI2C_ReadByte
  1216 ;;         _SimI2C_Ack
  1217 ;;         _SimI2C_NoAck
  1218 ;;         _SimI2C_Stop
  1219 ;;       _LcdDisplay_CurTemp
  1220 ;;         ___lbdiv
  1221 ;;         ___lbmod
  1222 ;;         _LcdDisplayNum
  1223 ;;     _LcdDisplay_Err
  1224 ;;       ___lbdiv
  1225 ;;       ___lbmod
  1226 ;;       _LcdDisplayNum
  1227 ;;     _CallProc
  1228 ;;       _LcdDisplay_CALL
  1229 ;;         _LcdDisplayNum
  1230 ;;       _CallSend
  1231 ;;         _InitGPRS
  1232 ;;           _PowerON
  1233 ;;             ___delay_20ms
  1234 ;;           _ATCommand_SendCmd
  1235 ;;             _Uart1_PutString
  1236 ;;               _Uart1_PutChar
  1237 ;;             _strstr
  1238 ;;               _strlen
  1239 ;;               _strncmp
  1240 ;;                 _strlen (ARG)
  1241 ;;               _strchr
  1242 ;;             ___delay_20ms
  1243 ;;             _strcpy
  1244 ;;           ___delay_20ms
  1245 ;;           _strstr
  1246 ;;             _strlen
  1247 ;;             _strncmp
  1248 ;;               _strlen (ARG)
  1249 ;;             _strchr
  1250 ;;           _atoi
  1251 ;;             ___wmul
  1252 ;;             _isdigit
  1253 ;;           _LcdDisplay_CSQ
  1254 ;;             ___lbdiv
  1255 ;;             ___lbmod
  1256 ;;             _LcdDisplayNum
  1257 ;;         ___delay_20ms
  1258 ;;         _ATCommand_SendCmd
  1259 ;;           _Uart1_PutString
  1260 ;;             _Uart1_PutChar
  1261 ;;           _strstr
  1262 ;;             _strlen
  1263 ;;             _strncmp
  1264 ;;               _strlen (ARG)
  1265 ;;             _strchr
  1266 ;;           ___delay_20ms
  1267 ;;           _strcpy
  1268 ;;         _InteractServer
  1269 ;;           _Uart1_PutString
  1270 ;;             _Uart1_PutChar
  1271 ;;           _Uart1_PutString_Hex
  1272 ;;             _Uart1_PutHex
  1273 ;;               _Uart1_PutChar
  1274 ;;           _Uart1_PutHex
  1275 ;;             _Uart1_PutChar
  1276 ;;           _MakeTxTemperature
  1277 ;;           ___lwdiv
  1278 ;;           _Uart1_PutChar
  1279 ;;           ___lwmod
  1280 ;;           ___bmul
  1281 ;;           _eeprom_read
  1282 ;;           _strcpy
  1283 ;;           _ATCommand_WaitData
  1284 ;;             _strstr
  1285 ;;               _strlen
  1286 ;;               _strncmp
  1287 ;;                 _strlen (ARG)
  1288 ;;               _strchr
  1289 ;;             _strcpy
  1290 ;;           ___delay_20ms
  1291 ;;       _LcdDisplay_CurTemp
  1292 ;;         ___lbdiv
  1293 ;;         ___lbmod
  1294 ;;         _LcdDisplayNum
  1295 ;;       ___delay_20ms
  1296 ;;       _LcdDisplay_Err
  1297 ;;         ___lbdiv
  1298 ;;         ___lbmod
  1299 ;;         _LcdDisplayNum
  1300 ;;   _ReadTData
  1301 ;;     _DS18X20_StartMeas
  1302 ;;       _OneWire_Reset
  1303 ;;       _OneWire_Command
  1304 ;;         _OneWire_Reset
  1305 ;;         _OneWire_WriteByte
  1306 ;;     ___delay_20ms
  1307 ;;     _DS18X20_ReadMeas
  1308 ;;       _OneWire_Reset
  1309 ;;       _OneWire_Command
  1310 ;;         _OneWire_Reset
  1311 ;;         _OneWire_WriteByte
  1312 ;;       _OneWire_ReadByte
  1313 ;;       _GetVerify_CRC8
  1314 ;;     _TCN75_SetConfig
  1315 ;;       _SimI2C_Start
  1316 ;;       _SimI2C_SendByte
  1317 ;;       _SimI2C_RecAck
  1318 ;;       _SimI2C_Stop
  1319 ;;     _TCN75_ReadReg
  1320 ;;       _SimI2C_Start
  1321 ;;       _SimI2C_SendByte
  1322 ;;       _SimI2C_RecAck
  1323 ;;       _SimI2C_ReadByte
  1324 ;;       _SimI2C_Ack
  1325 ;;       _SimI2C_NoAck
  1326 ;;       _SimI2C_Stop
  1327 ;;     _LcdDisplay_CurTemp
  1328 ;;       ___lbdiv
  1329 ;;       ___lbmod
  1330 ;;       _LcdDisplayNum
  1331 ;;   _CallProc
  1332 ;;     _LcdDisplay_CALL
  1333 ;;       _LcdDisplayNum
  1334 ;;     _CallSend
  1335 ;;       _InitGPRS
  1336 ;;         _PowerON
  1337 ;;           ___delay_20ms
  1338 ;;         _ATCommand_SendCmd
  1339 ;;           _Uart1_PutString
  1340 ;;             _Uart1_PutChar
  1341 ;;           _strstr
  1342 ;;             _strlen
  1343 ;;             _strncmp
  1344 ;;               _strlen (ARG)
  1345 ;;             _strchr
  1346 ;;           ___delay_20ms
  1347 ;;           _strcpy
  1348 ;;         ___delay_20ms
  1349 ;;         _strstr
  1350 ;;           _strlen
  1351 ;;           _strncmp
  1352 ;;             _strlen (ARG)
  1353 ;;           _strchr
  1354 ;;         _atoi
  1355 ;;           ___wmul
  1356 ;;           _isdigit
  1357 ;;         _LcdDisplay_CSQ
  1358 ;;           ___lbdiv
  1359 ;;           ___lbmod
  1360 ;;           _LcdDisplayNum
  1361 ;;       ___delay_20ms
  1362 ;;       _ATCommand_SendCmd
  1363 ;;         _Uart1_PutString
  1364 ;;           _Uart1_PutChar
  1365 ;;         _strstr
  1366 ;;           _strlen
  1367 ;;           _strncmp
  1368 ;;             _strlen (ARG)
  1369 ;;           _strchr
  1370 ;;         ___delay_20ms
  1371 ;;         _strcpy
  1372 ;;       _InteractServer
  1373 ;;         _Uart1_PutString
  1374 ;;           _Uart1_PutChar
  1375 ;;         _Uart1_PutString_Hex
  1376 ;;           _Uart1_PutHex
  1377 ;;             _Uart1_PutChar
  1378 ;;         _Uart1_PutHex
  1379 ;;           _Uart1_PutChar
  1380 ;;         _MakeTxTemperature
  1381 ;;         ___lwdiv
  1382 ;;         _Uart1_PutChar
  1383 ;;         ___lwmod
  1384 ;;         ___bmul
  1385 ;;         _eeprom_read
  1386 ;;         _strcpy
  1387 ;;         _ATCommand_WaitData
  1388 ;;           _strstr
  1389 ;;             _strlen
  1390 ;;             _strncmp
  1391 ;;               _strlen (ARG)
  1392 ;;             _strchr
  1393 ;;           _strcpy
  1394 ;;         ___delay_20ms
  1395 ;;     _LcdDisplay_CurTemp
  1396 ;;       ___lbdiv
  1397 ;;       ___lbmod
  1398 ;;       _LcdDisplayNum
  1399 ;;     ___delay_20ms
  1400 ;;     _LcdDisplay_Err
  1401 ;;       ___lbdiv
  1402 ;;       ___lbmod
  1403 ;;       _LcdDisplayNum
  1404 ;;   ___bmul
  1405 ;;   _eeprom_write
  1406 ;;
  1407 ;; _highISR (ROOT)
  1408 ;;   _ATCommand_ProcRx
  1409 ;;     _isgraph
  1410 ;;
  1411 ;; Address spaces:
  1412 ;;Name               Size   Autos  Total    Cost      Usage
  1413 ;;BIGRAM             1F0      0       0       0        0.0%
  1414 ;;EEDATA             100      0       0       0        0.0%
  1415 ;;NULL                 0      0       0       0        0.0%
  1416 ;;CODE                 0      0       0       0        0.0%
  1417 ;;BITCOMMON            E      0       0       1        0.0%
  1418 ;;BITSFR0              0      0       0       1        0.0%
  1419 ;;SFR0                 0      0       0       1        0.0%
  1420 ;;COMMON               E      7       C       2       85.7%
  1421 ;;BITSFR1              0      0       0       2        0.0%
  1422 ;;SFR1                 0      0       0       2        0.0%
  1423 ;;BITSFR2              0      0       0       3        0.0%
  1424 ;;SFR2                 0      0       0       3        0.0%
  1425 ;;STACK                0      0       D       3        0.0%
  1426 ;;BITSFR3              0      0       0       4        0.0%
  1427 ;;SFR3                 0      0       0       4        0.0%
  1428 ;;ABS                  0      0      AF       4        0.0%
  1429 ;;BITBANK0            50      0       0       5        0.0%
  1430 ;;BITSFR4              0      0       0       5        0.0%
  1431 ;;SFR4                 0      0       0       5        0.0%
  1432 ;;BANK0               50     2E      4F       6       98.8%
  1433 ;;BITSFR5              0      0       0       6        0.0%
  1434 ;;SFR5                 0      0       0       6        0.0%
  1435 ;;BITBANK1            50      0       0       7        0.0%
  1436 ;;BITSFR6              0      0       0       7        0.0%
  1437 ;;SFR6                 0      0       0       7        0.0%
  1438 ;;BANK1               50      0      3C       8       75.0%
  1439 ;;BITSFR7              0      0       0       8        0.0%
  1440 ;;SFR7                 0      0       0       8        0.0%
  1441 ;;BITBANK2            50      0       0       9        0.0%
  1442 ;;BITSFR8              0      0       0       9        0.0%
  1443 ;;SFR8                 0      0       0       9        0.0%
  1444 ;;BANK2               50      0      18      10       30.0%
  1445 ;;BITSFR9              0      0       0      10        0.0%
  1446 ;;SFR9                 0      0       0      10        0.0%
  1447 ;;BITBANK3            50      0       0      11        0.0%
  1448 ;;BITSFR10             0      0       0      11        0.0%
  1449 ;;SFR10                0      0       0      11        0.0%
  1450 ;;BANK3               50      0       0      12        0.0%
  1451 ;;BITSFR11             0      0       0      12        0.0%
  1452 ;;SFR11                0      0       0      12        0.0%
  1453 ;;BITBANK4            50      0       0      13        0.0%
  1454 ;;BITSFR12             0      0       0      13        0.0%
  1455 ;;SFR12                0      0       0      13        0.0%
  1456 ;;BANK4               1A      0       0      14        0.0%
  1457 ;;BITSFR13             0      0       0      14        0.0%
  1458 ;;SFR13                0      0       0      14        0.0%
  1459 ;;BITBANK5            50      0       0      15        0.0%
  1460 ;;BITSFR14             0      0       0      15        0.0%
  1461 ;;SFR14                0      0       0      15        0.0%
  1462 ;;BITSFR15             0      0       0      16        0.0%
  1463 ;;SFR15                0      0       0      16        0.0%
  1464 ;;BANK5                0      0       0      16        0.0%
  1465 ;;BITBANK6            10      0       0      17        0.0%
  1466 ;;BITSFR16             0      0       0      17        0.0%
  1467 ;;SFR16                0      0       0      17        0.0%
  1468 ;;BITSFR17             0      0       0      18        0.0%
  1469 ;;SFR17                0      0       0      18        0.0%
  1470 ;;BANK6                0      0       0      18        0.0%
  1471 ;;BITSFR18             0      0       0      19        0.0%
  1472 ;;SFR18                0      0       0      19        0.0%
  1473 ;;DATA                 0      0      BC      19        0.0%
  1474 ;;BITSFR19             0      0       0      20        0.0%
  1475 ;;SFR19                0      0       0      20        0.0%
  1476 ;;BITSFR20             0      0       0      21        0.0%
  1477 ;;SFR20                0      0       0      21        0.0%
  1478 ;;BITSFR21             0      0       0      22        0.0%
  1479 ;;SFR21                0      0       0      22        0.0%
  1480 ;;BITSFR22             0      0       0      23        0.0%
  1481 ;;SFR22                0      0       0      23        0.0%
  1482 ;;BITSFR23             0      0       0      24        0.0%
  1483 ;;SFR23                0      0       0      24        0.0%
  1484 ;;BITSFR24             0      0       0      25        0.0%
  1485 ;;SFR24                0      0       0      25        0.0%
  1486 ;;BITSFR25             0      0       0      26        0.0%
  1487 ;;SFR25                0      0       0      26        0.0%
  1488 ;;BITSFR26             0      0       0      27        0.0%
  1489 ;;SFR26                0      0       0      27        0.0%
  1490 ;;BITSFR27             0      0       0      28        0.0%
  1491 ;;SFR27                0      0       0      28        0.0%
  1492 ;;BITSFR28             0      0       0      29        0.0%
  1493 ;;SFR28                0      0       0      29        0.0%
  1494 ;;BITSFR29             0      0       0      30        0.0%
  1495 ;;SFR29                0      0       0      30        0.0%
  1496 ;;BITSFR30             0      0       0      31        0.0%
  1497 ;;SFR30                0      0       0      31        0.0%
  1498 ;;BITSFR31             0      0       0      32        0.0%
  1499 ;;SFR31                0      0       0      32        0.0%
  1500                           
  1501                           
  1502 ;; *************** function _main *****************
  1503 ;; Defined at:
  1504 ;;		line 12 in file "F:\work\WYP\NBIoT1\Main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;  i               1   45[BANK0 ] unsigned char 
  1509 ;;  addr            1   44[BANK0 ] unsigned char 
  1510 ;; Return value:  Size  Location     Type
  1511 ;;		None               void
  1512 ;; Registers used:
  1513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 17F/0
  1516 ;;		On exit  : 1F/F
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1519 ;;      Params:         0       0       0       0       0       0       0       0
  1520 ;;      Locals:         0       2       0       0       0       0       0       0
  1521 ;;      Temps:          0       2       0       0       0       0       0       0
  1522 ;;      Totals:         0       4       0       0       0       0       0       0
  1523 ;;Total ram usage:        4 bytes
  1524 ;; Hardware stack levels required when called:   10
  1525 ;; This function calls:
  1526 ;;		_InitSystem
  1527 ;;		___delay_20ms
  1528 ;;		_TestProc
  1529 ;;		_ReadTData
  1530 ;;		_CallProc
  1531 ;;		___bmul
  1532 ;;		_eeprom_write
  1533 ;; This function is called by:
  1534 ;;		Startup code after reset
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537  0856                     _main:	
  1538                           
  1539                           ;Main.c: 13: unsigned char addr,i;
  1540                           ;Main.c: 14: InitSystem();
  1541                           
  1542                           ; Regs used in _main: [wreg-btemp+0+pclath+cstack]
  1543  0856  3180  20E8  3188   	fcall	_InitSystem
  1544                           
  1545                           ;Main.c: 15: __delay_20ms(250);
  1546  0859  30FA               	movlw	250
  1547  085A  00A0               	movwf	?___delay_20ms
  1548  085B  01A1               	clrf	?___delay_20ms+1
  1549  085C  2308               	fcall	___delay_20ms
  1550                           
  1551                           ;Main.c: 16: gFlags.bFirst=1;
  1552  085D  1565               	bsf	_gFlags,2
  1553                           
  1554                           ;Main.c: 17: TestProc();
  1555  085E  3183  2306  3188   	fcall	_TestProc
  1556                           
  1557                           ;Main.c: 18: ReadTData();
  1558  0861  20F4  3188         	fcall	_ReadTData
  1559                           
  1560                           ;Main.c: 19: CallProc();
  1561  0863  2667  3188         	fcall	_CallProc
  1562                           
  1563                           ;Main.c: 20: gFlags.bFirst=0;
  1564  0865  0020               	movlb	0	; select bank0
  1565  0866  1165               	bcf	_gFlags,2
  1566                           
  1567                           ;Main.c: 21: MeasurementTick=SystemTick;
  1568  0867  085D               	movf	_SystemTick+1,w
  1569  0868  00D9               	movwf	_MeasurementTick+1
  1570  0869  085C               	movf	_SystemTick,w
  1571  086A  00D8               	movwf	_MeasurementTick
  1572  086B                     l33407:	
  1573                           
  1574                           ;Main.c: 23: {
  1575                           ;Main.c: 24: if(RB2==0)
  1576  086B  0020               	movlb	0	; select bank0
  1577  086C  190D               	btfsc	13,2
  1578  086D  2881               	goto	l33421
  1579                           
  1580                           ;Main.c: 25: {
  1581                           ;Main.c: 26: _delay((unsigned long)((20)*(4000000/4000.0)));
  1582  086E  301A               	movlw	26
  1583  086F  00CB               	movwf	??_main+1
  1584  0870  30F8               	movlw	248
  1585  0871  00CA               	movwf	??_main
  1586  0872                     u7737:	
  1587  0872  0BCA               	decfsz	??_main,f
  1588  0873  2872               	goto	u7737
  1589  0874  0BCB               	decfsz	??_main+1,f
  1590  0875  2872               	goto	u7737
  1591  0876  0064               	clrwdt
  1592                           
  1593                           ;Main.c: 27: if(RB2==0)
  1594  0877  0020               	movlb	0	; select bank0
  1595  0878  190D               	btfsc	13,2
  1596  0879  2881               	goto	l33421
  1597                           
  1598                           ;Main.c: 28: {
  1599                           ;Main.c: 29: gFlags.bNotify=1;
  1600  087A  1465               	bsf	_gFlags,0
  1601                           
  1602                           ;Main.c: 30: ReadTData();
  1603  087B  20F4  3188         	fcall	_ReadTData
  1604                           
  1605                           ;Main.c: 31: CallProc();
  1606  087D  2667  3188         	fcall	_CallProc
  1607                           
  1608                           ;Main.c: 32: gFlags.bNotify=0;
  1609  087F  0020               	movlb	0	; select bank0
  1610  0880  1065               	bcf	_gFlags,0
  1611  0881                     l33421:	
  1612                           
  1613                           ;Main.c: 33: }
  1614                           ;Main.c: 34: }
  1615                           ;Main.c: 35: if((SystemTick-RunTick)>20)
  1616  0881  0877               	movf	_RunTick,w
  1617  0882  025C               	subwf	_SystemTick,w
  1618  0883  00CA               	movwf	??_main
  1619  0884  0878               	movf	_RunTick+1,w
  1620  0885  3B5D               	subwfb	_SystemTick+1,w
  1621  0886  00CB               	movwf	??_main+1
  1622  0887  3000               	movlw	0
  1623  0888  024B               	subwf	??_main+1,w
  1624  0889  3015               	movlw	21
  1625  088A  1903               	skipnz
  1626  088B  024A               	subwf	??_main,w
  1627  088C  1C03               	skipc
  1628  088D  289B               	goto	l33429
  1629                           
  1630                           ;Main.c: 36: {
  1631                           ;Main.c: 37: RunTick=SystemTick;
  1632  088E  085D               	movf	_SystemTick+1,w
  1633  088F  00F8               	movwf	_RunTick+1
  1634  0890  085C               	movf	_SystemTick,w
  1635  0891  00F7               	movwf	_RunTick
  1636  0892                     l6410:	
  1637                           ;Main.c: 39: while(WA==0);
  1638                           
  1639  0892  002F               	movlb	15	; select bank15
  1640  0893  1E12               	btfss	18,4
  1641  0894  2892               	goto	l6410
  1642                           
  1643                           ;Main.c: 40: SEG3COM0=!SEG3COM0;
  1644  0895  3008               	movlw	8
  1645  0896  06A0               	xorwf	32,f
  1646  0897                     l6413:	
  1647                           ;Main.c: 41: while(WA==0);
  1648                           
  1649  0897  1E12               	btfss	18,4
  1650  0898  2897               	goto	l6413
  1651                           
  1652                           ;Main.c: 42: SEG11COM0=!SEG11COM0;
  1653  0899  3008               	movlw	8
  1654  089A  06A1               	xorwf	33,f
  1655  089B                     l33429:	
  1656                           
  1657                           ;Main.c: 44: }
  1658                           ;Main.c: 45: if((SystemTick-MeasurementTick)>NeedMeasurementTick)
  1659  089B  0020               	movlb	0	; select bank0
  1660  089C  0858               	movf	_MeasurementTick,w
  1661  089D  025C               	subwf	_SystemTick,w
  1662  089E  00CA               	movwf	??_main
  1663  089F  0859               	movf	_MeasurementTick+1,w
  1664  08A0  3B5D               	subwfb	_SystemTick+1,w
  1665  08A1  00CB               	movwf	??_main+1
  1666  08A2  025B               	subwf	_NeedMeasurementTick+1,w
  1667  08A3  1D03               	skipz
  1668  08A4  28A7               	goto	u7665
  1669  08A5  084A               	movf	??_main,w
  1670  08A6  025A               	subwf	_NeedMeasurementTick,w
  1671  08A7                     u7665:	
  1672  08A7  1803               	skipnc
  1673  08A8  28EF               	goto	l33479
  1674                           
  1675                           ;Main.c: 46: {
  1676                           ;Main.c: 47: MeasurementTick=SystemTick;
  1677  08A9  085D               	movf	_SystemTick+1,w
  1678  08AA  00D9               	movwf	_MeasurementTick+1
  1679  08AB  085C               	movf	_SystemTick,w
  1680  08AC  00D8               	movwf	_MeasurementTick
  1681                           
  1682                           ;Main.c: 48: ReadTData();
  1683  08AD  20F4  3188         	fcall	_ReadTData
  1684                           
  1685                           ;Main.c: 49: TList.T[TListIndex++]=CurTemp;
  1686  08AF  0020               	movlb	0	; select bank0
  1687  08B0  3564               	lslf	_TListIndex,w
  1688  08B1  3E20               	addlw	_TList& (0+255)
  1689  08B2  0086               	movwf	6
  1690  08B3  3001               	movlw	1	; select bank2/3
  1691  08B4  0087               	movwf	7
  1692  08B5  0856               	movf	_CurTemp,w
  1693  08B6  3FC0               	movwi [0]fsr1
  1694  08B7  0857               	movf	_CurTemp+1,w
  1695  08B8  3FC1               	movwi [1]fsr1
  1696  08B9  0AE4               	incf	_TListIndex,f
  1697                           
  1698                           ;Main.c: 50: if(TListIndex>=12)
  1699  08BA  300C               	movlw	12
  1700  08BB  0264               	subwf	_TListIndex,w
  1701  08BC  1C03               	skipc
  1702  08BD  28EF               	goto	l33479
  1703                           
  1704                           ;Main.c: 51: {
  1705                           ;Main.c: 52: CallProc();
  1706  08BE  2667  3188         	fcall	_CallProc
  1707                           
  1708                           ;Main.c: 53: TListIndex=0;
  1709  08C0  0020               	movlb	0	; select bank0
  1710  08C1  01E4               	clrf	_TListIndex
  1711                           
  1712                           ;Main.c: 54: if(ErrState!=NoErr)
  1713  08C2  0862               	movf	_ErrState,w
  1714  08C3  1903               	btfsc	3,2
  1715  08C4  28EC               	goto	l33475
  1716                           
  1717                           ;Main.c: 55: {
  1718                           ;Main.c: 56: if(TxErrDataIndex==0xff)
  1719  08C5  0868               	movf	_TxErrDataIndex,w
  1720  08C6  3AFF               	xorlw	255
  1721  08C7  1D03               	skipz
  1722  08C8  28CA               	goto	l33451
  1723                           
  1724                           ;Main.c: 57: TxErrDataIndex=0;
  1725  08C9  01E8               	clrf	_TxErrDataIndex
  1726  08CA                     l33451:	
  1727                           
  1728                           ;Main.c: 58: addr=TxErrDataIndex*12;
  1729  08CA  300C               	movlw	12
  1730  08CB  00A0               	movwf	?___bmul
  1731  08CC  0868               	movf	_TxErrDataIndex,w
  1732  08CD  2620  3188         	fcall	___bmul
  1733  08CF  00CC               	movwf	main@addr
  1734                           
  1735                           ;Main.c: 59: addr+=16;
  1736  08D0  3010               	movlw	16
  1737  08D1  07CC               	addwf	main@addr,f
  1738                           
  1739                           ;Main.c: 60: for(i=0;i<24;i++)
  1740  08D2  01CD               	clrf	main@i
  1741  08D3                     l33461:	
  1742                           
  1743                           ;Main.c: 61: {
  1744                           ;Main.c: 62: eeprom_write(addr+i,TList.All[i]);
  1745  08D3  084D               	movf	main@i,w
  1746  08D4  3E20               	addlw	_TList& (0+255)
  1747  08D5  0086               	movwf	6
  1748  08D6  3001               	movlw	1	; select bank2/3
  1749  08D7  0087               	movwf	7
  1750  08D8  0801               	movf	1,w
  1751  08D9  00A0               	movwf	?_eeprom_write
  1752  08DA  084C               	movf	main@addr,w
  1753  08DB  074D               	addwf	main@i,w
  1754  08DC  2706  3188         	fcall	_eeprom_write
  1755  08DE  0020               	movlb	0	; select bank0
  1756  08DF  0ACD               	incf	main@i,f
  1757  08E0  3018               	movlw	24
  1758  08E1  024D               	subwf	main@i,w
  1759  08E2  1C03               	skipc
  1760  08E3  28D3               	goto	l33461
  1761                           
  1762                           ;Main.c: 63: }
  1763                           ;Main.c: 64: TxErrDataIndex++;
  1764  08E4  0AE8               	incf	_TxErrDataIndex,f
  1765                           
  1766                           ;Main.c: 65: if(TxErrDataIndex>=10)
  1767  08E5  300A               	movlw	10
  1768  08E6  0268               	subwf	_TxErrDataIndex,w
  1769  08E7  1C03               	skipc
  1770  08E8  28EF               	goto	l33479
  1771                           
  1772                           ;Main.c: 66: {
  1773                           ;Main.c: 67: gFlags.bErrFull=1;
  1774  08E9  15E5               	bsf	_gFlags,3
  1775                           
  1776                           ;Main.c: 68: TxErrDataIndex=0;
  1777  08EA  01E8               	clrf	_TxErrDataIndex
  1778  08EB  28EF               	goto	l33479
  1779  08EC                     l33475:	
  1780                           
  1781                           ;Main.c: 71: else
  1782                           ;Main.c: 72: {
  1783                           ;Main.c: 73: TxErrDataIndex=0xff;
  1784  08EC  30FF               	movlw	255
  1785  08ED  00E8               	movwf	_TxErrDataIndex
  1786                           
  1787                           ;Main.c: 74: gFlags.bErrFull=0;
  1788  08EE  11E5               	bcf	_gFlags,3
  1789  08EF                     l33479:	
  1790                           
  1791                           ;Main.c: 75: }
  1792                           ;Main.c: 76: }
  1793                           ;Main.c: 77: }
  1794                           ;Main.c: 78: if(WERR==1)
  1795  08EF  002F               	movlb	15	; select bank15
  1796  08F0  1E91               	btfss	17,5
  1797  08F1  286B               	goto	l33407
  1798                           
  1799                           ;Main.c: 79: {
  1800                           ;Main.c: 80: WERR=0;
  1801  08F2  1291               	bcf	17,5
  1802  08F3  286B               	goto	l33407
  1803  08F4                     __end_of_main:	
  1804  08F4                     __ptext2002:	
  1805 ;; =============== function _CallSend ends ============
  1806                           
  1807                           
  1808 ;; *************** function _ReadTData *****************
  1809 ;; Defined at:
  1810 ;;		line 108 in file "F:\work\WYP\NBIoT1\Main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  retry           1   12[BANK0 ] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;		None               void
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 10/0
  1821 ;;		On exit  : 1F/F
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1824 ;;      Params:         0       0       0       0       0       0       0       0
  1825 ;;      Locals:         0       1       0       0       0       0       0       0
  1826 ;;      Temps:          0       0       0       0       0       0       0       0
  1827 ;;      Totals:         0       1       0       0       0       0       0       0
  1828 ;;Total ram usage:        1 bytes
  1829 ;; Hardware stack levels used:    1
  1830 ;; Hardware stack levels required when called:    6
  1831 ;; This function calls:
  1832 ;;		_DS18X20_StartMeas
  1833 ;;		___delay_20ms
  1834 ;;		_DS18X20_ReadMeas
  1835 ;;		_TCN75_SetConfig
  1836 ;;		_TCN75_ReadReg
  1837 ;;		_LcdDisplay_CurTemp
  1838 ;; This function is called by:
  1839 ;;		_InitSystem
  1840 ;;		_main
  1841 ;;		_TestProc
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844  08F4                     _ReadTData:	
  1845                           
  1846                           ;Main.c: 109: unsigned char retry;
  1847                           ;Main.c: 110: if(gFlags.b18B20)
  1848                           
  1849                           ; Regs used in _ReadTData: [wreg-status,0+pclath+cstack]
  1850  08F4  0020               	movlb	0	; select bank0
  1851  08F5  1CE5               	btfss	_gFlags,1
  1852  08F6  291E               	goto	l6436
  1853                           
  1854                           ;Main.c: 111: {
  1855                           ;Main.c: 112: retry=5;
  1856  08F7  3005               	movlw	5
  1857  08F8  00AC               	movwf	ReadTData@retry
  1858  08F9                     l6437:	
  1859                           ;Main.c: 113: while(retry!=0)
  1860                           
  1861  08F9  08AC               	movf	ReadTData@retry,f
  1862  08FA  1903               	btfsc	3,2
  1863  08FB  2917               	goto	l33225
  1864                           
  1865                           ;Main.c: 114: {
  1866                           ;Main.c: 115: if(DS18X20_StartMeas()!=0x00)
  1867  08FC  27F2  3188         	fcall	_DS18X20_StartMeas
  1868  08FE  3A00               	xorlw	0
  1869  08FF  1903               	skipnz
  1870  0900  2904               	goto	l33215
  1871  0901                     l33213:	
  1872                           
  1873                           ;Main.c: 116: {
  1874                           ;Main.c: 117: retry--;
  1875  0901  0020               	movlb	0	; select bank0
  1876  0902  03AC               	decf	ReadTData@retry,f
  1877                           
  1878                           ;Main.c: 118: }
  1879  0903  28F9               	goto	l6437
  1880  0904                     l33215:	
  1881                           
  1882                           ;Main.c: 119: else
  1883                           ;Main.c: 120: {
  1884                           ;Main.c: 121: __delay_20ms(50);
  1885  0904  3032               	movlw	50
  1886  0905  00A0               	movwf	?___delay_20ms
  1887  0906  01A1               	clrf	?___delay_20ms+1
  1888  0907  2308               	fcall	___delay_20ms
  1889                           
  1890                           ;Main.c: 122: if(DS18X20_ReadMeas(1)==0x00)
  1891  0908  3001               	movlw	1
  1892  0909  3180  202C  3188   	fcall	_DS18X20_ReadMeas
  1893  090C  3800               	iorlw	0
  1894  090D  1D03               	skipz
  1895  090E  2901               	goto	l33213
  1896                           
  1897                           ;Main.c: 123: {
  1898                           ;Main.c: 124: CurTemp.u8L=DS18X20_Scratchpad[0];
  1899  090F  0021               	movlb	1	; select bank1
  1900  0910  0853               	movf	_DS18X20_Scratchpad^(0+128),w
  1901  0911  0020               	movlb	0	; select bank0
  1902  0912  00D6               	movwf	_CurTemp
  1903                           
  1904                           ;Main.c: 125: CurTemp.u8H=DS18X20_Scratchpad[1];
  1905  0913  0021               	movlb	1	; select bank1
  1906  0914  0854               	movf	(_DS18X20_Scratchpad^(0+128)+1),w
  1907  0915  0020               	movlb	0	; select bank0
  1908  0916  00D7               	movwf	_CurTemp+1
  1909  0917                     l33225:	
  1910                           ;Main.c: 126: break;
  1911                           
  1912                           
  1913                           ;Main.c: 131: }
  1914                           ;Main.c: 132: }
  1915                           ;Main.c: 133: }
  1916                           ;Main.c: 134: if(retry==0)
  1917  0917  08AC               	movf	ReadTData@retry,f
  1918  0918  1D03               	skipz
  1919  0919  293D               	goto	l33239
  1920  091A                     l33227:	
  1921                           
  1922                           ;Main.c: 135: CurTemp.u16=0xf000;
  1923  091A  01D6               	clrf	_CurTemp
  1924  091B  30F0               	movlw	240
  1925  091C  00D7               	movwf	_CurTemp+1
  1926  091D  293D               	goto	l33239
  1927  091E                     l6436:	
  1928                           
  1929                           ;Main.c: 137: else
  1930                           ;Main.c: 138: {
  1931                           ;Main.c: 139: TCN75_Config.OneShot=1;
  1932  091E  17E3               	bsf	_TCN75_Config,7
  1933                           
  1934                           ;Main.c: 140: if(TCN75_SetConfig()==1)
  1935  091F  3182  220C  3188   	fcall	_TCN75_SetConfig
  1936  0922  3A01               	xorlw	1
  1937  0923  1D03               	skipz
  1938  0924  291A               	goto	l33227
  1939                           
  1940                           ;Main.c: 141: {
  1941                           ;Main.c: 142: __delay_20ms(25);
  1942  0925  3019               	movlw	25
  1943  0926  00A0               	movwf	?___delay_20ms
  1944  0927  01A1               	clrf	?___delay_20ms+1
  1945  0928  2308               	fcall	___delay_20ms
  1946                           
  1947                           ;Main.c: 143: if(TCN75_ReadReg(TCN75_TEMP)==1)
  1948  0929  3000               	movlw	0
  1949  092A  3182  2234  3188   	fcall	_TCN75_ReadReg
  1950  092D  3A01               	xorlw	1
  1951  092E  1D03               	skipz
  1952  092F  291A               	goto	l33227
  1953                           
  1954                           ;Main.c: 144: {
  1955                           ;Main.c: 145: CurTemp.u16=TCN75_RegReadResualt.u16>>4;
  1956  0930  085F               	movf	_TCN75_RegReadResualt+1,w
  1957  0931  00D7               	movwf	_CurTemp+1
  1958  0932  085E               	movf	_TCN75_RegReadResualt,w
  1959  0933  00D6               	movwf	_CurTemp
  1960  0934  0ED6               	swapf	_CurTemp,f
  1961  0935  0ED7               	swapf	_CurTemp+1,f
  1962  0936  300F               	movlw	15
  1963  0937  05D6               	andwf	_CurTemp,f
  1964  0938  0857               	movf	_CurTemp+1,w
  1965  0939  39F0               	andlw	240
  1966  093A  04D6               	iorwf	_CurTemp,f
  1967  093B  300F               	movlw	15
  1968  093C  05D7               	andwf	_CurTemp+1,f
  1969  093D                     l33239:	
  1970                           ;Main.c: 146: }
  1971                           
  1972                           
  1973                           ;Main.c: 155: }
  1974                           ;Main.c: 156: }
  1975                           ;Main.c: 158: LcdDisplay_CurTemp();
  1976  093D  2EB4               	ljmp	l32319
  1977  093E                     __end_of_ReadTData:	
  1978  093E                     __ptext2001:	
  1979 ;; =============== function _InitSystem ends ============
  1980                           
  1981                           
  1982 ;; *************** function _CallSend *****************
  1983 ;; Defined at:
  1984 ;;		line 58 in file "F:\work\WYP\NBIoT1\Function.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;		None
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  ret             1   38[BANK0 ] unsigned char 
  1989 ;;  i               1    0        unsigned char 
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 1F/0
  1996 ;;		On exit  : 1F/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1999 ;;      Params:         0       0       0       0       0       0       0       0
  2000 ;;      Locals:         0       1       0       0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0
  2002 ;;      Totals:         0       1       0       0       0       0       0       0
  2003 ;;Total ram usage:        1 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    7
  2006 ;; This function calls:
  2007 ;;		_InitGPRS
  2008 ;;		___delay_20ms
  2009 ;;		_ATCommand_SendCmd
  2010 ;;		_InteractServer
  2011 ;; This function is called by:
  2012 ;;		_CallProc
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015  093E                     _CallSend:	
  2016                           
  2017                           ;Function.c: 59: unsigned char ret,i;
  2018                           ;Function.c: 60: ErrState=NoErr;
  2019                           
  2020                           ; Regs used in _CallSend: [wreg-btemp+0+pclath+cstack]
  2021  093E  01E2               	clrf	_ErrState
  2022                           
  2023                           ;Function.c: 61: InitGPRS();
  2024  093F  218C  3188         	fcall	_InitGPRS
  2025                           
  2026                           ;Function.c: 62: if(ErrState!=NoErr)
  2027  0941  0862               	movf	_ErrState,w
  2028  0942  1903               	btfsc	3,2
  2029  0943  2950               	goto	l33257
  2030                           
  2031                           ;Function.c: 63: {
  2032                           ;Function.c: 64: __delay_20ms(3000);
  2033  0944  30B8               	movlw	184
  2034  0945  00A0               	movwf	?___delay_20ms
  2035  0946  300B               	movlw	11
  2036  0947  00A1               	movwf	?___delay_20ms+1
  2037  0948  2308  3188         	fcall	___delay_20ms
  2038                           
  2039                           ;Function.c: 65: ErrState=NoErr;
  2040  094A  01E2               	clrf	_ErrState
  2041                           
  2042                           ;Function.c: 66: InitGPRS();
  2043  094B  218C  3188         	fcall	_InitGPRS
  2044                           
  2045                           ;Function.c: 67: if(ErrState!=NoErr)
  2046  094D  0862               	movf	_ErrState,w
  2047  094E  1D03               	skipz
  2048  094F  0008               	return
  2049  0950                     l33257:	
  2050                           
  2051                           ;Function.c: 69: }
  2052                           ;Function.c: 73: if(ATCommand_SendCmd("AT+NSOCR=STREAM,6,0,1\0")!=ATACK_OK)
  2053  0950  3067               	movlw	low (STR_1| (0+32768))
  2054  0951  00B1               	movwf	?_ATCommand_SendCmd
  2055  0952  3090               	movlw	high (STR_1| (0+32768))
  2056  0953  00B2               	movwf	?_ATCommand_SendCmd+1
  2057  0954  2296  3188         	fcall	_ATCommand_SendCmd
  2058  0956  3A01               	xorlw	1
  2059  0957  1903               	skipnz
  2060  0958  295C               	goto	l8560
  2061                           
  2062                           ;Function.c: 74: {
  2063                           ;Function.c: 75: ErrState=MissAT_NSOCR;
  2064  0959  3023               	movlw	35
  2065  095A  00E2               	movwf	_ErrState
  2066  095B  0008               	return
  2067  095C                     l8560:	
  2068                           
  2069                           ;Function.c: 77: }
  2070                           ;Function.c: 78: ATCommand_RetryTimes=1;
  2071  095C  01E0               	clrf	_ATCommand_RetryTimes
  2072  095D  0AE0               	incf	_ATCommand_RetryTimes,f
  2073                           
  2074                           ;Function.c: 79: ATCommand_WaitACKTimes=300;
  2075  095E  302C               	movlw	44
  2076  095F  00D4               	movwf	_ATCommand_WaitACKTimes
  2077  0960  3001               	movlw	1
  2078  0961  00D5               	movwf	_ATCommand_WaitACKTimes+1
  2079                           
  2080                           ;Function.c: 80: if(ATCommand_SendCmd("AT+NSOCO=2,\"www.wlwdjcy.com\",12129\0")!=ATACK_O
      +                          K)
  2081  0962  3023               	movlw	low (STR_2| (0+32768))
  2082  0963  00B1               	movwf	?_ATCommand_SendCmd
  2083  0964  3090               	movlw	high (STR_2| (0+32768))
  2084  0965  00B2               	movwf	?_ATCommand_SendCmd+1
  2085  0966  2296  3188         	fcall	_ATCommand_SendCmd
  2086  0968  3A01               	xorlw	1
  2087  0969  1903               	skipnz
  2088  096A  296E               	goto	l33271
  2089                           
  2090                           ;Function.c: 82: {
  2091                           ;Function.c: 83: ErrState=MissAT_NSOCO;
  2092  096B  3024               	movlw	36
  2093  096C  00E2               	movwf	_ErrState
  2094  096D  0008               	return
  2095  096E                     l33271:	
  2096                           
  2097                           ;Function.c: 85: }
  2098                           ;Function.c: 87: __delay_20ms(50);
  2099  096E  3032               	movlw	50
  2100  096F  00A0               	movwf	?___delay_20ms
  2101  0970  01A1               	clrf	?___delay_20ms+1
  2102  0971  2308  3188         	fcall	___delay_20ms
  2103                           
  2104                           ;Function.c: 89: ret=InteractServer();
  2105  0973  2357  3188         	fcall	_InteractServer
  2106  0975  00C6               	movwf	CallSend@ret
  2107                           
  2108                           ;Function.c: 90: if(ret!=ATACK_OK)
  2109  0976  0346               	decf	CallSend@ret,w
  2110  0977  1903               	skipnz
  2111  0978  297B               	goto	l33279
  2112                           
  2113                           ;Function.c: 91: {
  2114                           ;Function.c: 92: gFlags.bRetry=1;
  2115  0979  1665               	bsf	_gFlags,4
  2116                           
  2117                           ;Function.c: 93: return;
  2118  097A  0008               	return
  2119  097B                     l33279:	
  2120                           
  2121                           ;Function.c: 94: }
  2122                           ;Function.c: 95: ATCommand_SendCmd("AT+NSOCL=2\0");
  2123  097B  30C8               	movlw	low (STR_3| (0+32768))
  2124  097C  00B1               	movwf	?_ATCommand_SendCmd
  2125  097D  3090               	movlw	high (STR_3| (0+32768))
  2126  097E  00B2               	movwf	?_ATCommand_SendCmd+1
  2127  097F  2296  3188         	fcall	_ATCommand_SendCmd
  2128                           
  2129                           ;Function.c: 96: ATCommand_SendCmd("AT+CPSMS=1,,,01000111,00000001\0");
  2130  0981  3047               	movlw	low (STR_4| (0+32768))
  2131  0982  00B1               	movwf	?_ATCommand_SendCmd
  2132  0983  3090               	movlw	high (STR_4| (0+32768))
  2133  0984  00B2               	movwf	?_ATCommand_SendCmd+1
  2134  0985  2296  3188         	fcall	_ATCommand_SendCmd
  2135                           
  2136                           ;Function.c: 98: ATCommand_SendCmd("AT+NPSMR=1\0");
  2137  0987  30BC               	movlw	low (STR_5| (0+32768))
  2138  0988  00B1               	movwf	?_ATCommand_SendCmd
  2139  0989  3090               	movlw	high (STR_5| (0+32768))
  2140  098A  00B2               	movwf	?_ATCommand_SendCmd+1
  2141  098B  2A96               	ljmp	l32637
  2142  098C                     __end_of_CallSend:	
  2143  098C                     __ptext2004:	
  2144 ;; =============== function _InteractServer ends ============
  2145                           
  2146                           
  2147 ;; *************** function _InitGPRS *****************
  2148 ;; Defined at:
  2149 ;;		line 340 in file "F:\work\WYP\NBIoT1\Function.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  strx            2   30[BANK0 ] PTR unsigned char 
  2154 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2155 ;;  retry           1   32[BANK0 ] unsigned char 
  2156 ;;  i               1   29[BANK0 ] unsigned char 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;		None               void
  2159 ;; Registers used:
  2160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 1F/0
  2163 ;;		On exit  : 1F/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2166 ;;      Params:         0       0       0       0       0       0       0       0
  2167 ;;      Locals:         0       4       0       0       0       0       0       0
  2168 ;;      Temps:          0       4       0       0       0       0       0       0
  2169 ;;      Totals:         0       8       0       0       0       0       0       0
  2170 ;;Total ram usage:        8 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    6
  2173 ;; This function calls:
  2174 ;;		_PowerON
  2175 ;;		_ATCommand_SendCmd
  2176 ;;		___delay_20ms
  2177 ;;		_strstr
  2178 ;;		_atoi
  2179 ;;		_LcdDisplay_CSQ
  2180 ;; This function is called by:
  2181 ;;		_CallSend
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184  098C                     _InitGPRS:	
  2185                           
  2186                           ;Function.c: 343: PowerON();
  2187                           
  2188                           ; Regs used in _InitGPRS: [wreg-status,0+pclath+cstack]
  2189  098C  27E2  3188         	fcall	_PowerON
  2190                           
  2191                           ;Function.c: 344: if(ATCommand_SendCmd("AT\0")!=ATACK_OK)
  2192  098E  305F               	movlw	low (STR_23| (0+32768))
  2193  098F  00B1               	movwf	?_ATCommand_SendCmd
  2194  0990  3091               	movlw	high (STR_23| (0+32768))
  2195  0991  00B2               	movwf	?_ATCommand_SendCmd+1
  2196  0992  2296  3188         	fcall	_ATCommand_SendCmd
  2197  0994  3A01               	xorlw	1
  2198  0995  1903               	skipnz
  2199  0996  299A               	goto	l32827
  2200                           
  2201                           ;Function.c: 345: {
  2202                           ;Function.c: 346: ErrState=MissAT;
  2203  0997  3003               	movlw	3
  2204  0998  00E2               	movwf	_ErrState
  2205  0999  0008               	return
  2206  099A                     l32827:	
  2207                           
  2208                           ;Function.c: 348: }
  2209                           ;Function.c: 350: if(ATCommand_SendCmd("ATE1\0")!=ATACK_OK)
  2210  099A  303E               	movlw	low (STR_24| (0+32768))
  2211  099B  00B1               	movwf	?_ATCommand_SendCmd
  2212  099C  3091               	movlw	high (STR_24| (0+32768))
  2213  099D  00B2               	movwf	?_ATCommand_SendCmd+1
  2214  099E  2296  3188         	fcall	_ATCommand_SendCmd
  2215  09A0  3A01               	xorlw	1
  2216  09A1  1903               	skipnz
  2217  09A2  29A6               	goto	l32833
  2218                           
  2219                           ;Function.c: 351: {
  2220                           ;Function.c: 352: ErrState=MissAT_ATE1;
  2221  09A3  300C               	movlw	12
  2222  09A4  00E2               	movwf	_ErrState
  2223  09A5  0008               	return
  2224  09A6                     l32833:	
  2225                           
  2226                           ;Function.c: 354: }
  2227                           ;Function.c: 355: ATCommand_SendCmd("AT+CPSMS?\0");
  2228  09A6  30EB               	movlw	low (STR_25| (0+32768))
  2229  09A7  00B1               	movwf	?_ATCommand_SendCmd
  2230  09A8  3090               	movlw	high (STR_25| (0+32768))
  2231  09A9  00B2               	movwf	?_ATCommand_SendCmd+1
  2232  09AA  2296  3188         	fcall	_ATCommand_SendCmd
  2233                           
  2234                           ;Function.c: 356: ATCommand_SendCmd("AT+CPSMS=1,,,01000111,00000001\0");
  2235  09AC  3047               	movlw	low (STR_4| (0+32768))
  2236  09AD  00B1               	movwf	?_ATCommand_SendCmd
  2237  09AE  3090               	movlw	high (STR_4| (0+32768))
  2238  09AF  00B2               	movwf	?_ATCommand_SendCmd+1
  2239  09B0  2296  3188         	fcall	_ATCommand_SendCmd
  2240                           
  2241                           ;Function.c: 357: ATCommand_SendCmd("AT+CPSMS?\0");
  2242  09B2  30EB               	movlw	low (STR_25| (0+32768))
  2243  09B3  00B1               	movwf	?_ATCommand_SendCmd
  2244  09B4  3090               	movlw	high (STR_25| (0+32768))
  2245  09B5  00B2               	movwf	?_ATCommand_SendCmd+1
  2246  09B6  2296  3188         	fcall	_ATCommand_SendCmd
  2247                           
  2248                           ;Function.c: 358: retry=10;
  2249  09B8  300A               	movlw	10
  2250  09B9  00C0               	movwf	InitGPRS@retry
  2251  09BA                     l32845:	
  2252                           ;Function.c: 359: while(retry!=0)
  2253                           
  2254  09BA  08C0               	movf	InitGPRS@retry,f
  2255  09BB  1903               	btfsc	3,2
  2256  09BC  29CD               	goto	l32847
  2257                           
  2258                           ;Function.c: 360: {
  2259                           ;Function.c: 361: if(ATCommand_SendCmd("AT+CIMI\0")==ATACK_OK)
  2260  09BD  3026               	movlw	low (STR_28| (0+32768))
  2261  09BE  00B1               	movwf	?_ATCommand_SendCmd
  2262  09BF  3091               	movlw	high (STR_28| (0+32768))
  2263  09C0  00B2               	movwf	?_ATCommand_SendCmd+1
  2264  09C1  2296  3188         	fcall	_ATCommand_SendCmd
  2265  09C3  3A01               	xorlw	1
  2266  09C4  1903               	btfsc	3,2
  2267  09C5  29CD               	goto	l32847
  2268                           
  2269                           ;Function.c: 364: }
  2270                           ;Function.c: 365: __delay_20ms(150);
  2271  09C6  3096               	movlw	150
  2272  09C7  00A0               	movwf	?___delay_20ms
  2273  09C8  01A1               	clrf	?___delay_20ms+1
  2274  09C9  2308  3188         	fcall	___delay_20ms
  2275                           
  2276                           ;Function.c: 366: retry--;
  2277  09CB  03C0               	decf	InitGPRS@retry,f
  2278  09CC  29BA               	goto	l32845
  2279  09CD                     l32847:	
  2280                           
  2281                           ;Function.c: 367: }
  2282                           ;Function.c: 368: if(retry==0)
  2283  09CD  08C0               	movf	InitGPRS@retry,f
  2284  09CE  1D03               	skipz
  2285  09CF  29D3               	goto	l32853
  2286                           
  2287                           ;Function.c: 369: {
  2288                           ;Function.c: 370: ErrState=MissSimCard;
  2289  09D0  3004               	movlw	4
  2290  09D1  00E2               	movwf	_ErrState
  2291  09D2  0008               	return
  2292  09D3                     l32853:	
  2293                           
  2294                           ;Function.c: 372: }
  2295                           ;Function.c: 373: retry=10;
  2296  09D3  300A               	movlw	10
  2297  09D4  00C0               	movwf	InitGPRS@retry
  2298                           
  2299                           ;Function.c: 374: while(retry!=0)
  2300  09D5  29DC               	goto	l32881
  2301  09D6                     l32877:	
  2302                           ;Function.c: 387: break;
  2303                           
  2304                           
  2305                           ;Function.c: 389: else
  2306                           ;Function.c: 390: {
  2307                           ;Function.c: 391: retry--;
  2308  09D6  03C0               	decf	InitGPRS@retry,f
  2309                           
  2310                           ;Function.c: 392: __delay_20ms(150);
  2311  09D7  3096               	movlw	150
  2312  09D8  00A0               	movwf	?___delay_20ms
  2313  09D9  01A1               	clrf	?___delay_20ms+1
  2314  09DA  2308  3188         	fcall	___delay_20ms
  2315  09DC                     l32881:	
  2316  09DC  08C0               	movf	InitGPRS@retry,f
  2317  09DD  1903               	btfsc	3,2
  2318  09DE  2A15               	goto	l32883
  2319                           
  2320                           ;Function.c: 375: {
  2321                           ;Function.c: 377: if(ATCommand_SendCmd("AT+NCCID\0")==ATACK_OK)
  2322  09DF  3001               	movlw	low (STR_29| (0+32768))
  2323  09E0  00B1               	movwf	?_ATCommand_SendCmd
  2324  09E1  3091               	movlw	high (STR_29| (0+32768))
  2325  09E2  00B2               	movwf	?_ATCommand_SendCmd+1
  2326  09E3  2296  3188         	fcall	_ATCommand_SendCmd
  2327  09E5  3A01               	xorlw	1
  2328  09E6  1D03               	skipz
  2329  09E7  29DC               	goto	l32881
  2330                           
  2331                           ;Function.c: 378: {
  2332                           ;Function.c: 379: strx=strstr((const char*)ATCommand_RxList,"8986");
  2333  09E8  305A               	movlw	90
  2334  09E9  00AD               	movwf	?_strstr
  2335  09EA  3021               	movlw	33
  2336  09EB  00AE               	movwf	?_strstr+1
  2337  09EC  305A               	movlw	low (STR_30| (0+32768))
  2338  09ED  00AF               	movwf	?_strstr+2
  2339  09EE  3091               	movlw	high (STR_30| (0+32768))
  2340  09EF  00B0               	movwf	?_strstr+3
  2341  09F0  231C  3188         	fcall	_strstr
  2342  09F2  082E               	movf	?_strstr+1,w
  2343  09F3  00BF               	movwf	InitGPRS@strx+1
  2344  09F4  082D               	movf	?_strstr,w
  2345  09F5  00BE               	movwf	InitGPRS@strx
  2346                           
  2347                           ;Function.c: 380: if(strx!=0)
  2348  09F6  043F               	iorwf	InitGPRS@strx+1,w
  2349  09F7  1903               	skipnz
  2350  09F8  29D6               	goto	l32877
  2351                           
  2352                           ;Function.c: 381: {
  2353                           ;Function.c: 382: for(i=0;i<15;i++)
  2354  09F9  01BD               	clrf	InitGPRS@i
  2355  09FA                     l32867:	
  2356                           
  2357                           ;Function.c: 383: {
  2358                           ;Function.c: 384: ICCID[i]=strx[i+5];
  2359  09FA  083D               	movf	InitGPRS@i,w
  2360  09FB  3EA0               	addlw	_ICCID& (0+255)
  2361  09FC  0086               	movwf	6
  2362  09FD  0187               	clrf	7
  2363  09FE  083D               	movf	InitGPRS@i,w
  2364  09FF  00B9               	movwf	??_InitGPRS
  2365  0A00  01BA               	clrf	??_InitGPRS+1
  2366  0A01  073E               	addwf	InitGPRS@strx,w
  2367  0A02  00BB               	movwf	??_InitGPRS+2
  2368  0A03  083A               	movf	??_InitGPRS+1,w
  2369  0A04  3D3F               	addwfc	InitGPRS@strx+1,w
  2370  0A05  00BC               	movwf	??_InitGPRS+3
  2371  0A06  083B               	movf	??_InitGPRS+2,w
  2372  0A07  3E05               	addlw	5
  2373  0A08  0084               	movwf	4
  2374  0A09  3000               	movlw	0
  2375  0A0A  3D3C               	addwfc	??_InitGPRS+3,w
  2376  0A0B  0085               	movwf	5
  2377  0A0C  0800               	movf	0,w
  2378  0A0D  0081               	movwf	1
  2379  0A0E  0ABD               	incf	InitGPRS@i,f
  2380  0A0F  300F               	movlw	15
  2381  0A10  023D               	subwf	InitGPRS@i,w
  2382  0A11  1C03               	skipc
  2383  0A12  29FA               	goto	l32867
  2384                           
  2385                           ;Function.c: 385: }
  2386                           ;Function.c: 386: ICCID[15]='\0';
  2387  0A13  0021               	movlb	1	; select bank1
  2388  0A14  01AF               	clrf	(_ICCID^(0+128)+15)
  2389  0A15                     l32883:	
  2390                           
  2391                           ;Function.c: 393: }
  2392                           ;Function.c: 394: }
  2393                           ;Function.c: 395: }
  2394                           ;Function.c: 396: retry=100;
  2395  0A15  3064               	movlw	100
  2396  0A16  0020               	movlb	0	; select bank0
  2397  0A17  00C0               	movwf	InitGPRS@retry
  2398                           
  2399                           ;Function.c: 397: CSQ=0xff;
  2400  0A18  30FF               	movlw	255
  2401  0A19  00E1               	movwf	_CSQ
  2402  0A1A                     l32911:	
  2403                           ;Function.c: 398: while(retry!=0)
  2404                           
  2405  0A1A  08C0               	movf	InitGPRS@retry,f
  2406  0A1B  1903               	btfsc	3,2
  2407  0A1C  2A57               	goto	l32913
  2408                           
  2409                           ;Function.c: 399: {
  2410                           ;Function.c: 400: if(ATCommand_SendCmd("AT+CSQ\0")==ATACK_OK)
  2411  0A1D  302F               	movlw	low (STR_31| (0+32768))
  2412  0A1E  00B1               	movwf	?_ATCommand_SendCmd
  2413  0A1F  3091               	movlw	high (STR_31| (0+32768))
  2414  0A20  00B2               	movwf	?_ATCommand_SendCmd+1
  2415  0A21  2296  3188         	fcall	_ATCommand_SendCmd
  2416  0A23  3A01               	xorlw	1
  2417  0A24  1D03               	skipz
  2418  0A25  2A1A               	goto	l32911
  2419                           
  2420                           ;Function.c: 401: {
  2421                           ;Function.c: 402: strx=strstr((const char*)ATCommand_RxList,"+CSQ:");
  2422  0A26  305A               	movlw	90
  2423  0A27  00AD               	movwf	?_strstr
  2424  0A28  3021               	movlw	33
  2425  0A29  00AE               	movwf	?_strstr+1
  2426  0A2A  3044               	movlw	low (STR_32| (0+32768))
  2427  0A2B  00AF               	movwf	?_strstr+2
  2428  0A2C  3091               	movlw	high (STR_32| (0+32768))
  2429  0A2D  00B0               	movwf	?_strstr+3
  2430  0A2E  231C  3188         	fcall	_strstr
  2431  0A30  082E               	movf	?_strstr+1,w
  2432  0A31  00BF               	movwf	InitGPRS@strx+1
  2433  0A32  082D               	movf	?_strstr,w
  2434  0A33  00BE               	movwf	InitGPRS@strx
  2435                           
  2436                           ;Function.c: 403: if(strx!=0)
  2437  0A34  043F               	iorwf	InitGPRS@strx+1,w
  2438  0A35  1903               	skipnz
  2439  0A36  2A50               	goto	l32903
  2440                           
  2441                           ;Function.c: 404: {
  2442                           ;Function.c: 405: CSQ=atoi(strx+5);
  2443  0A37  083E               	movf	InitGPRS@strx,w
  2444  0A38  3E05               	addlw	5
  2445  0A39  00B9               	movwf	??_InitGPRS
  2446  0A3A  3000               	movlw	0
  2447  0A3B  3D3F               	addwfc	InitGPRS@strx+1,w
  2448  0A3C  00BA               	movwf	??_InitGPRS+1
  2449  0A3D  0839               	movf	??_InitGPRS,w
  2450  0A3E  00A6               	movwf	?_atoi
  2451  0A3F  083A               	movf	??_InitGPRS+1,w
  2452  0A40  00A7               	movwf	?_atoi+1
  2453  0A41  3185  253F  3188   	fcall	_atoi
  2454  0A44  0826               	movf	?_atoi,w
  2455  0A45  00E1               	movwf	_CSQ
  2456                           
  2457                           ;Function.c: 407: LcdDisplay_CSQ();
  2458  0A46  27A9  3188         	fcall	_LcdDisplay_CSQ
  2459                           
  2460                           ;Function.c: 409: if(CSQ!=0 && CSQ!=99)
  2461  0A48  0020               	movlb	0	; select bank0
  2462  0A49  0861               	movf	_CSQ,w
  2463  0A4A  1903               	btfsc	3,2
  2464  0A4B  2A50               	goto	l32903
  2465  0A4C  0861               	movf	_CSQ,w
  2466  0A4D  3A63               	xorlw	99
  2467  0A4E  1D03               	btfss	3,2
  2468  0A4F  2A57               	goto	l32913
  2469  0A50                     l32903:	
  2470                           
  2471                           ;Function.c: 411: else
  2472                           ;Function.c: 412: {
  2473                           ;Function.c: 413: retry--;
  2474  0A50  03C0               	decf	InitGPRS@retry,f
  2475                           
  2476                           ;Function.c: 414: __delay_20ms(150);
  2477  0A51  3096               	movlw	150
  2478  0A52  00A0               	movwf	?___delay_20ms
  2479  0A53  01A1               	clrf	?___delay_20ms+1
  2480  0A54  2308  3188         	fcall	___delay_20ms
  2481  0A56  2A1A               	goto	l32911
  2482  0A57                     l32913:	
  2483                           
  2484                           ;Function.c: 421: }
  2485                           ;Function.c: 422: }
  2486                           ;Function.c: 423: }
  2487                           ;Function.c: 424: if(retry==0 && CSQ!=0xff)
  2488  0A57  08C0               	movf	InitGPRS@retry,f
  2489  0A58  1D03               	skipz
  2490  0A59  2A61               	goto	l32921
  2491  0A5A  0861               	movf	_CSQ,w
  2492  0A5B  3AFF               	xorlw	255
  2493  0A5C  1903               	skipnz
  2494  0A5D  2A61               	goto	l32921
  2495                           
  2496                           ;Function.c: 425: {
  2497                           ;Function.c: 426: ErrState=MissAT_CSQ;
  2498  0A5E  300F               	movlw	15
  2499  0A5F  00E2               	movwf	_ErrState
  2500  0A60  0008               	return
  2501  0A61                     l32921:	
  2502                           
  2503                           ;Function.c: 428: }
  2504                           ;Function.c: 429: ATCommand_SendCmd("AT+CEREG=4\0");
  2505  0A61  30D4               	movlw	low (STR_33| (0+32768))
  2506  0A62  00B1               	movwf	?_ATCommand_SendCmd
  2507  0A63  3090               	movlw	high (STR_33| (0+32768))
  2508  0A64  00B2               	movwf	?_ATCommand_SendCmd+1
  2509  0A65  2296  3188         	fcall	_ATCommand_SendCmd
  2510                           
  2511                           ;Function.c: 430: retry=20;
  2512  0A67  3014               	movlw	20
  2513  0A68  00C0               	movwf	InitGPRS@retry
  2514  0A69                     l32941:	
  2515                           ;Function.c: 431: while(retry!=0)
  2516                           
  2517  0A69  08C0               	movf	InitGPRS@retry,f
  2518  0A6A  1903               	btfsc	3,2
  2519  0A6B  2A90               	goto	l32943
  2520                           
  2521                           ;Function.c: 432: {
  2522                           ;Function.c: 433: if(ATCommand_SendCmd("AT+CEREG?\0")!=ATACK_OK)
  2523  0A6C  30E0               	movlw	low (STR_34| (0+32768))
  2524  0A6D  00B1               	movwf	?_ATCommand_SendCmd
  2525  0A6E  3090               	movlw	high (STR_34| (0+32768))
  2526  0A6F  00B2               	movwf	?_ATCommand_SendCmd+1
  2527  0A70  2296  3188         	fcall	_ATCommand_SendCmd
  2528  0A72  3A01               	xorlw	1
  2529  0A73  1903               	skipnz
  2530  0A74  2A78               	goto	l32931
  2531                           
  2532                           ;Function.c: 434: {
  2533                           ;Function.c: 435: ErrState=MissAT_COPS;
  2534  0A75  3010               	movlw	16
  2535  0A76  00E2               	movwf	_ErrState
  2536  0A77  0008               	return
  2537  0A78                     l32931:	
  2538                           
  2539                           ;Function.c: 437: }
  2540                           ;Function.c: 438: strx=strstr((const char*)ATCommand_RxList,"+CEREG:4,1");
  2541  0A78  305A               	movlw	90
  2542  0A79  00AD               	movwf	?_strstr
  2543  0A7A  3021               	movlw	33
  2544  0A7B  00AE               	movwf	?_strstr+1
  2545  0A7C  30F6               	movlw	low (STR_35| (0+32768))
  2546  0A7D  00AF               	movwf	?_strstr+2
  2547  0A7E  3090               	movlw	high (STR_35| (0+32768))
  2548  0A7F  00B0               	movwf	?_strstr+3
  2549  0A80  231C  3188         	fcall	_strstr
  2550  0A82  082E               	movf	?_strstr+1,w
  2551  0A83  00BF               	movwf	InitGPRS@strx+1
  2552  0A84  082D               	movf	?_strstr,w
  2553  0A85  00BE               	movwf	InitGPRS@strx
  2554                           
  2555                           ;Function.c: 439: if(strx!=0)
  2556  0A86  043F               	iorwf	InitGPRS@strx+1,w
  2557  0A87  1D03               	btfss	3,2
  2558  0A88  2A90               	goto	l32943
  2559                           
  2560                           ;Function.c: 442: }
  2561                           ;Function.c: 443: __delay_20ms(150);
  2562  0A89  3096               	movlw	150
  2563  0A8A  00A0               	movwf	?___delay_20ms
  2564  0A8B  01A1               	clrf	?___delay_20ms+1
  2565  0A8C  2308  3188         	fcall	___delay_20ms
  2566                           
  2567                           ;Function.c: 444: retry--;
  2568  0A8E  03C0               	decf	InitGPRS@retry,f
  2569  0A8F  2A69               	goto	l32941
  2570  0A90                     l32943:	
  2571                           
  2572                           ;Function.c: 445: }
  2573                           ;Function.c: 446: if(retry==0)
  2574  0A90  08C0               	movf	InitGPRS@retry,f
  2575  0A91  1D03               	skipz
  2576  0A92  0008               	return
  2577                           
  2578                           ;Function.c: 447: {
  2579                           ;Function.c: 448: ErrState=MissNet;
  2580  0A93  3005               	movlw	5
  2581  0A94  00E2               	movwf	_ErrState
  2582  0A95  0008               	return
  2583  0A96                     __end_of_InitGPRS:	
  2584  0A96                     __ptext2010:	
  2585 ;; =============== function _Uart1_PutString_Hex ends ============
  2586                           
  2587                           
  2588 ;; *************** function _ATCommand_SendCmd *****************
  2589 ;; Defined at:
  2590 ;;		line 71 in file "F:\work\WYP\NBIoT1\ATCommand.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  cmd             2   17[BANK0 ] PTR const unsigned char 
  2593 ;;		 -> STR_34(11), STR_33(12), STR_31(8), STR_29(10), 
  2594 ;;		 -> STR_28(9), STR_27(11), STR_26(32), STR_25(11), 
  2595 ;;		 -> STR_24(6), STR_23(4), STR_5(12), STR_4(32), 
  2596 ;;		 -> STR_3(12), STR_2(36), STR_1(23), 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;  strx            2   22[BANK0 ] PTR unsigned char 
  2599 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2600 ;;  res             1   24[BANK0 ] unsigned char 
  2601 ;;  retry           1   21[BANK0 ] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      unsigned char 
  2604 ;; Registers used:
  2605 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 1F/0
  2608 ;;		On exit  : 1F/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2611 ;;      Params:         0       2       0       0       0       0       0       0
  2612 ;;      Locals:         0       4       0       0       0       0       0       0
  2613 ;;      Temps:          0       2       0       0       0       0       0       0
  2614 ;;      Totals:         0       8       0       0       0       0       0       0
  2615 ;;Total ram usage:        8 bytes
  2616 ;; Hardware stack levels used:    1
  2617 ;; Hardware stack levels required when called:    5
  2618 ;; This function calls:
  2619 ;;		_Uart1_PutString
  2620 ;;		_strstr
  2621 ;;		___delay_20ms
  2622 ;;		_strcpy
  2623 ;; This function is called by:
  2624 ;;		_CallSend
  2625 ;;		_InitGPRS
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628  0A96                     _ATCommand_SendCmd:	
  2629  0A96                     l32637:	
  2630                           ; Regs used in _ATCommand_SendCmd: [wreg-status,0+pclath+cstack]
  2631                           
  2632                           
  2633                           ;ATCommand.c: 73: unsigned char retry;
  2634                           ;ATCommand.c: 74: char *strx=0;
  2635  0A96  01B6               	clrf	ATCommand_SendCmd@strx
  2636  0A97  01B7               	clrf	ATCommand_SendCmd@strx+1
  2637                           
  2638                           ;ATCommand.c: 76: retry=ATCommand_RetryTimes;
  2639  0A98  0860               	movf	_ATCommand_RetryTimes,w
  2640  0A99  00B5               	movwf	ATCommand_SendCmd@retry
  2641                           
  2642                           ;ATCommand.c: 77: res=ATACK_Null;
  2643  0A9A  01B8               	clrf	ATCommand_SendCmd@res
  2644  0A9B                     l32683:	
  2645                           ;ATCommand.c: 78: while(retry!=0)
  2646                           
  2647  0A9B  08B5               	movf	ATCommand_SendCmd@retry,f
  2648  0A9C  1903               	btfsc	3,2
  2649  0A9D  2AF3               	goto	l32685
  2650                           
  2651                           ;ATCommand.c: 79: {
  2652                           ;ATCommand.c: 80: Uart1_PutString(cmd);
  2653  0A9E  0832               	movf	ATCommand_SendCmd@cmd+1,w
  2654  0A9F  00A2               	movwf	?_Uart1_PutString+1
  2655  0AA0  0831               	movf	ATCommand_SendCmd@cmd,w
  2656  0AA1  00A1               	movwf	?_Uart1_PutString
  2657  0AA2  260F  3188         	fcall	_Uart1_PutString
  2658                           
  2659                           ;ATCommand.c: 81: Uart1_PutString("\r\0");
  2660  0AA4  3066               	movlw	low (STR_22| (0+32768))
  2661  0AA5  00A1               	movwf	?_Uart1_PutString
  2662  0AA6  3091               	movlw	high (STR_22| (0+32768))
  2663  0AA7  00A2               	movwf	?_Uart1_PutString+1
  2664  0AA8  260F               	fcall	_Uart1_PutString
  2665                           
  2666                           ;ATCommand.c: 82: ATCommand_Flags.bRx=0;
  2667  0AA9  10FA               	bcf	_ATCommand_Flags,1
  2668                           
  2669                           ;ATCommand.c: 83: ATCommand_Flags.bChar=0;
  2670  0AAA  107A               	bcf	_ATCommand_Flags,0
  2671                           
  2672                           ;ATCommand.c: 84: ATCommand_WaitACKTick=SystemTick;
  2673  0AAB  085D               	movf	_SystemTick+1,w
  2674  0AAC  00D3               	movwf	_ATCommand_WaitACKTick+1
  2675  0AAD  085C               	movf	_SystemTick,w
  2676  0AAE  00D2               	movwf	_ATCommand_WaitACKTick
  2677                           
  2678                           ;ATCommand.c: 85: ATCommand_RxCount=0;
  2679  0AAF  01FB               	clrf	_ATCommand_RxCount
  2680                           
  2681                           ;ATCommand.c: 86: ATCommand_Flags.bWaitData=1;
  2682  0AB0  157A               	bsf	_ATCommand_Flags,2
  2683                           
  2684                           ;ATCommand.c: 87: ATCommand_RxList[ATCommand_RxCount]='\0';
  2685  0AB1  3185  2536  3188   	fcall	PL2	;call to abstracted procedure
  2686  0AB4                     l14921:	
  2687                           ;ATCommand.c: 88: while(1)
  2688                           
  2689                           
  2690                           ;ATCommand.c: 89: {
  2691                           ;ATCommand.c: 90: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
  2692  0AB4  305A               	movlw	90
  2693  0AB5  00AD               	movwf	?_strstr
  2694  0AB6  3021               	movlw	33
  2695  0AB7  00AE               	movwf	?_strstr+1
  2696  0AB8  30C4               	movlw	_ATCommand_OkString& (0+255)
  2697  0AB9  00AF               	movwf	?_strstr+2
  2698  0ABA  01B0               	clrf	?_strstr+3
  2699  0ABB  231C  3188         	fcall	_strstr
  2700  0ABD  082E               	movf	?_strstr+1,w
  2701  0ABE  00B7               	movwf	ATCommand_SendCmd@strx+1
  2702  0ABF  082D               	movf	?_strstr,w
  2703  0AC0  00B6               	movwf	ATCommand_SendCmd@strx
  2704                           
  2705                           ;ATCommand.c: 91: if(strx!=0)
  2706  0AC1  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2707  0AC2  1903               	skipnz
  2708  0AC3  2AC7               	goto	l32663
  2709                           
  2710                           ;ATCommand.c: 92: {
  2711                           ;ATCommand.c: 93: res=ATACK_OK;
  2712  0AC4  01B8               	clrf	ATCommand_SendCmd@res
  2713  0AC5  0AB8               	incf	ATCommand_SendCmd@res,f
  2714  0AC6  2AD9               	goto	l32669
  2715  0AC7                     l32663:	
  2716                           ;ATCommand.c: 95: break;
  2717                           
  2718                           ;ATCommand.c: 94: ATCommand_Flags.bRx=1;
  2719                           
  2720                           
  2721                           ;ATCommand.c: 97: else
  2722                           ;ATCommand.c: 98: {
  2723                           ;ATCommand.c: 99: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
  2724  0AC7  305A               	movlw	90
  2725  0AC8  00AD               	movwf	?_strstr
  2726  0AC9  3021               	movlw	33
  2727  0ACA  00AE               	movwf	?_strstr+1
  2728  0ACB  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2729  0ACC  00AF               	movwf	?_strstr+2
  2730  0ACD  01B0               	clrf	?_strstr+3
  2731  0ACE  231C  3188         	fcall	_strstr
  2732  0AD0  082E               	movf	?_strstr+1,w
  2733  0AD1  00B7               	movwf	ATCommand_SendCmd@strx+1
  2734  0AD2  082D               	movf	?_strstr,w
  2735  0AD3  00B6               	movwf	ATCommand_SendCmd@strx
  2736                           
  2737                           ;ATCommand.c: 100: if(strx!=0)
  2738  0AD4  0437               	iorwf	ATCommand_SendCmd@strx+1,w
  2739  0AD5  1903               	skipnz
  2740  0AD6  2ADB               	goto	l32671
  2741                           
  2742                           ;ATCommand.c: 101: {
  2743                           ;ATCommand.c: 102: res=ATACK_Err;
  2744  0AD7  3002               	movlw	2
  2745  0AD8  00B8               	movwf	ATCommand_SendCmd@res
  2746  0AD9                     l32669:	
  2747                           
  2748                           ;ATCommand.c: 103: ATCommand_Flags.bRx=1;
  2749  0AD9  14FA               	bsf	_ATCommand_Flags,1
  2750                           
  2751                           ;ATCommand.c: 104: break;
  2752  0ADA  2AE8               	goto	l14923
  2753  0ADB                     l32671:	
  2754                           
  2755                           ;ATCommand.c: 105: }
  2756                           ;ATCommand.c: 106: }
  2757                           ;ATCommand.c: 107: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
  2758  0ADB  0852               	movf	_ATCommand_WaitACKTick,w
  2759  0ADC  025C               	subwf	_SystemTick,w
  2760  0ADD  00B3               	movwf	??_ATCommand_SendCmd
  2761  0ADE  0853               	movf	_ATCommand_WaitACKTick+1,w
  2762  0ADF  3B5D               	subwfb	_SystemTick+1,w
  2763  0AE0  00B4               	movwf	??_ATCommand_SendCmd+1
  2764  0AE1  0255               	subwf	_ATCommand_WaitACKTimes+1,w
  2765  0AE2  1D03               	skipz
  2766  0AE3  2AE6               	goto	u6765
  2767  0AE4  0833               	movf	??_ATCommand_SendCmd,w
  2768  0AE5  0254               	subwf	_ATCommand_WaitACKTimes,w
  2769  0AE6                     u6765:	
  2770  0AE6  1803               	skipnc
  2771  0AE7  2AB4               	goto	l14921
  2772  0AE8                     l14923:	
  2773                           
  2774                           ;ATCommand.c: 109: }
  2775                           ;ATCommand.c: 110: ATCommand_Flags.bWaitData=0;
  2776  0AE8  117A               	bcf	_ATCommand_Flags,2
  2777                           
  2778                           ;ATCommand.c: 111: if(res==ATACK_OK)
  2779  0AE9  0B38               	decfsz	ATCommand_SendCmd@res,w
  2780  0AEA  2AEC               	goto	l32679
  2781  0AEB  2AF3               	goto	l32685
  2782  0AEC                     l32679:	
  2783                           
  2784                           ;ATCommand.c: 113: __delay_20ms(100);;
  2785  0AEC  3064               	movlw	100
  2786  0AED  00A0               	movwf	?___delay_20ms
  2787  0AEE  01A1               	clrf	?___delay_20ms+1
  2788  0AEF  2308  3188         	fcall	___delay_20ms
  2789                           
  2790                           ;ATCommand.c: 114: retry--;
  2791  0AF1  03B5               	decf	ATCommand_SendCmd@retry,f
  2792  0AF2  2A9B               	goto	l32683
  2793  0AF3                     l32685:	
  2794                           
  2795                           ;ATCommand.c: 115: }
  2796                           ;ATCommand.c: 116: strcpy(ATCommand_OkString,"OK");
  2797  0AF3  3063               	movlw	low (STR_36| (0+32768))
  2798  0AF4  00A0               	movwf	?_strcpy
  2799  0AF5  3091               	movlw	high (STR_36| (0+32768))
  2800  0AF6  00A1               	movwf	?_strcpy+1
  2801  0AF7  30C4               	movlw	_ATCommand_OkString& (0+255)
  2802  0AF8  262C  3188         	fcall	_strcpy
  2803                           
  2804                           ;ATCommand.c: 117: strcpy(ATCommand_ErrString,"ERROR");
  2805  0AFA  304A               	movlw	low (STR_21| (0+32768))
  2806  0AFB  00A0               	movwf	?_strcpy
  2807  0AFC  3091               	movlw	high (STR_21| (0+32768))
  2808  0AFD  00A1               	movwf	?_strcpy+1
  2809  0AFE  30B5               	movlw	_ATCommand_ErrString& (0+255)
  2810  0AFF  262C               	fcall	_strcpy
  2811                           
  2812                           ;ATCommand.c: 118: ATCommand_Clear='\0';
  2813  0B00  01F9               	clrf	_ATCommand_Clear
  2814                           
  2815                           ;ATCommand.c: 120: ATCommand_RetryTimes=3;
  2816  0B01  3003               	movlw	3
  2817  0B02  00E0               	movwf	_ATCommand_RetryTimes
  2818                           
  2819                           ;ATCommand.c: 121: ATCommand_WaitACKTimes=50;
  2820  0B03  3032               	movlw	50
  2821  0B04  00D4               	movwf	_ATCommand_WaitACKTimes
  2822  0B05  01D5               	clrf	_ATCommand_WaitACKTimes+1
  2823                           
  2824                           ;ATCommand.c: 122: return res;
  2825  0B06  0838               	movf	ATCommand_SendCmd@res,w
  2826  0B07  0008               	return
  2827  0B08                     __end_of_ATCommand_SendCmd:	
  2828  0B08                     __ptext2028:	
  2829 ;; =============== function _Uart1_PutString ends ============
  2830                           
  2831                           
  2832 ;; *************** function ___delay_20ms *****************
  2833 ;; Defined at:
  2834 ;;		line 8 in file "F:\work\WYP\NBIoT1\afx.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;  x               2    0[BANK0 ] unsigned int 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;		None               void
  2841 ;; Registers used:
  2842 ;;		wreg
  2843 ;; Tracked objects:
  2844 ;;		On entry : 1F/0
  2845 ;;		On exit  : 1F/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2848 ;;      Params:         0       2       0       0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0
  2850 ;;      Temps:          0       2       0       0       0       0       0       0
  2851 ;;      Totals:         0       4       0       0       0       0       0       0
  2852 ;;Total ram usage:        4 bytes
  2853 ;; Hardware stack levels used:    1
  2854 ;; Hardware stack levels required when called:    3
  2855 ;; This function calls:
  2856 ;;		Nothing
  2857 ;; This function is called by:
  2858 ;;		_InitSystem
  2859 ;;		_main
  2860 ;;		_ReadTData
  2861 ;;		_PowerON
  2862 ;;		_CallProc
  2863 ;;		_CallSend
  2864 ;;		_InteractServer
  2865 ;;		_InitGPRS
  2866 ;;		_TestProc
  2867 ;;		_ATCommand_SendCmd
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870  0B08                     ___delay_20ms:	
  2871  0B08                     l12779:	
  2872                           ;afx.c: 9: while(x--)
  2873                           
  2874                           ; Regs used in ___delay_20ms: [wreg]
  2875                           
  2876  0B08  3001               	movlw	1
  2877  0B09  0020               	movlb	0	; select bank0
  2878  0B0A  02A0               	subwf	___delay_20ms@x,f
  2879  0B0B  3000               	movlw	0
  2880  0B0C  3BA1               	subwfb	___delay_20ms@x+1,f
  2881  0B0D  0A20               	incf	___delay_20ms@x,w
  2882  0B0E  1903               	skipnz
  2883  0B0F  0A21               	incf	___delay_20ms@x+1,w
  2884  0B10  1903               	btfsc	3,2
  2885  0B11  0008               	return
  2886                           
  2887                           ;afx.c: 10: {
  2888                           ;afx.c: 11: _delay((unsigned long)((20)*(4000000/4000.0)));
  2889  0B12  301A               	movlw	26
  2890  0B13  00A3               	movwf	??___delay_20ms+1
  2891  0B14  30F8               	movlw	248
  2892  0B15  00A2               	movwf	??___delay_20ms
  2893  0B16                     u7777:	
  2894  0B16  0BA2               	decfsz	??___delay_20ms,f
  2895  0B17  2B16               	goto	u7777
  2896  0B18  0BA3               	decfsz	??___delay_20ms+1,f
  2897  0B19  2B16               	goto	u7777
  2898  0B1A  0064               	clrwdt
  2899  0B1B  2B08               	goto	l12779
  2900  0B1C                     __end_of___delay_20ms:	
  2901  0B1C                     __ptext2025:	
  2902 ;; =============== function _atoi ends ============
  2903                           
  2904                           
  2905 ;; *************** function _strstr *****************
  2906 ;; Defined at:
  2907 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strstr.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  s1              2   13[BANK0 ] PTR const unsigned char 
  2910 ;;		 -> ATCommand_RxList(150), RAM(128), 
  2911 ;;  s2              2   15[BANK0 ] PTR const unsigned char 
  2912 ;;		 -> STR_35(11), STR_32(6), STR_30(5), ATCommand_ErrString(15), 
  2913 ;;		 -> ATCommand_OkString(15), 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2    wreg      PTR unsigned char 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 1F/0
  2922 ;;		On exit  : 1F/0
  2923 ;;		Unchanged: FFFE0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2925 ;;      Params:         0       4       0       0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0
  2928 ;;      Totals:         0       4       0       0       0       0       0       0
  2929 ;;Total ram usage:        4 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    4
  2932 ;; This function calls:
  2933 ;;		_strlen
  2934 ;;		_strncmp
  2935 ;;		_strchr
  2936 ;; This function is called by:
  2937 ;;		_InitGPRS
  2938 ;;		_ATCommand_SendCmd
  2939 ;;		_ATCommand_WaitData
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942  0B1C                     _strstr:	
  2943                           
  2944                           ; Regs used in _strstr: [wreg-status,0+pclath+cstack]
  2945  0B1C  2B49               	goto	l32449
  2946  0B1D                     l32443:	
  2947  0B1D  082E               	movf	strstr@s1+1,w
  2948  0B1E  00A7               	movwf	?_strncmp+1
  2949  0B1F  082D               	movf	strstr@s1,w
  2950  0B20  00A6               	movwf	?_strncmp
  2951  0B21  0830               	movf	strstr@s2+1,w
  2952  0B22  00A9               	movwf	?_strncmp+3
  2953  0B23  082F               	movf	strstr@s2,w
  2954  0B24  00A8               	movwf	?_strncmp+2
  2955  0B25  0830               	movf	strstr@s2+1,w
  2956  0B26  00A1               	movwf	?_strlen+1
  2957  0B27  082F               	movf	strstr@s2,w
  2958  0B28  00A0               	movwf	?_strlen
  2959  0B29  2722  3188         	fcall	_strlen
  2960  0B2B  0821               	movf	?_strlen+1,w
  2961  0B2C  00AB               	movwf	?_strncmp+5
  2962  0B2D  0820               	movf	?_strlen,w
  2963  0B2E  00AA               	movwf	?_strncmp+4
  2964  0B2F  2741  3188         	fcall	_strncmp
  2965  0B31  0827               	movf	?_strncmp+1,w
  2966  0B32  0426               	iorwf	?_strncmp,w
  2967  0B33  1903               	btfsc	3,2
  2968  0B34  0008               	return
  2969  0B35  082E               	movf	strstr@s1+1,w
  2970  0B36  00A1               	movwf	?_strchr+1
  2971  0B37  082D               	movf	strstr@s1,w
  2972  0B38  00A0               	movwf	?_strchr
  2973  0B39  0AA0               	incf	?_strchr,f
  2974  0B3A  1903               	skipnz
  2975  0B3B  0AA1               	incf	?_strchr+1,f
  2976  0B3C  082F               	movf	strstr@s2,w
  2977  0B3D  0084               	movwf	4
  2978  0B3E  0830               	movf	strstr@s2+1,w
  2979  0B3F  0085               	movwf	5
  2980  0B40  0800               	movf	0,w	;code access
  2981  0B41  00A2               	movwf	?_strchr+2
  2982  0B42  01A3               	clrf	?_strchr+3
  2983  0B43  2779  3188         	fcall	_strchr
  2984  0B45  0821               	movf	?_strchr+1,w
  2985  0B46  00AE               	movwf	strstr@s1+1
  2986  0B47  0820               	movf	?_strchr,w
  2987  0B48  00AD               	movwf	strstr@s1
  2988  0B49                     l32449:	
  2989  0B49  082E               	movf	strstr@s1+1,w
  2990  0B4A  042D               	iorwf	strstr@s1,w
  2991  0B4B  1903               	skipnz
  2992  0B4C  2B54               	goto	l32453
  2993  0B4D  082D               	movf	strstr@s1,w
  2994  0B4E  0086               	movwf	6
  2995  0B4F  082E               	movf	strstr@s1+1,w
  2996  0B50  0087               	movwf	7
  2997  0B51  0881               	movf	1,f
  2998  0B52  1D03               	skipz
  2999  0B53  2B1D               	goto	l32443
  3000  0B54                     l32453:	
  3001  0B54  01AD               	clrf	?_strstr
  3002  0B55  01AE               	clrf	?_strstr+1
  3003  0B56  0008               	return
  3004  0B57                     __end_of_strstr:	
  3005  0B57                     __ptext2003:	
  3006 ;; =============== function _ReadTData ends ============
  3007                           
  3008                           
  3009 ;; *************** function _InteractServer *****************
  3010 ;; Defined at:
  3011 ;;		line 109 in file "F:\work\WYP\NBIoT1\Function.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  j               2   28[BANK0 ] int 
  3016 ;;  i               2   26[BANK0 ] int 
  3017 ;;  i               2   24[BANK0 ] int 
  3018 ;;  t               2   32[BANK0 ] struct .
  3019 ;;  txLen           2   30[BANK0 ] unsigned int 
  3020 ;;  i               1   37[BANK0 ] unsigned char 
  3021 ;;  k               1   36[BANK0 ] unsigned char 
  3022 ;;  j               1   35[BANK0 ] unsigned char 
  3023 ;;  addr            1   34[BANK0 ] unsigned char 
  3024 ;;  res             1   23[BANK0 ] unsigned char 
  3025 ;;  retry           1   22[BANK0 ] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      unsigned char 
  3028 ;; Registers used:
  3029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  3030 ;; Tracked objects:
  3031 ;;		On entry : 1F/0
  3032 ;;		On exit  : 1F/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3035 ;;      Params:         0       0       0       0       0       0       0       0
  3036 ;;      Locals:         0      16       0       0       0       0       0       0
  3037 ;;      Temps:          0       0       0       0       0       0       0       0
  3038 ;;      Totals:         0      16       0       0       0       0       0       0
  3039 ;;Total ram usage:       16 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    6
  3042 ;; This function calls:
  3043 ;;		_Uart1_PutString
  3044 ;;		_Uart1_PutString_Hex
  3045 ;;		_Uart1_PutHex
  3046 ;;		_MakeTxTemperature
  3047 ;;		___lwdiv
  3048 ;;		_Uart1_PutChar
  3049 ;;		___lwmod
  3050 ;;		___bmul
  3051 ;;		_eeprom_read
  3052 ;;		_strcpy
  3053 ;;		_ATCommand_WaitData
  3054 ;;		___delay_20ms
  3055 ;; This function is called by:
  3056 ;;		_CallSend
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059  0B57                     _InteractServer:	
  3060                           
  3061                           ;Function.c: 111: unsigned char retry,i,j,k,addr;
  3062                           ;Function.c: 112: uint t;
  3063                           ;Function.c: 113: unsigned int txLen;
  3064                           ;Function.c: 114: retry=1;
  3065                           
  3066                           ; Regs used in _InteractServer: [wreg-btemp+0+pclath+cstack]
  3067  0B57  01B6               	clrf	InteractServer@retry
  3068  0B58  0AB6               	incf	InteractServer@retry,f
  3069                           
  3070                           ;Function.c: 115: res=ATACK_Null;
  3071  0B59  01B7               	clrf	InteractServer@res
  3072  0B5A                     l33201:	
  3073                           ;Function.c: 116: while(retry!=0)
  3074                           
  3075  0B5A  08B6               	movf	InteractServer@retry,f
  3076  0B5B  1903               	btfsc	3,2
  3077  0B5C  2D7E               	goto	l33203
  3078                           
  3079                           ;Function.c: 117: {
  3080                           ;Function.c: 118: if(gFlags.bFirst)
  3081  0B5D  1D65               	btfss	_gFlags,2
  3082  0B5E  2BA1               	goto	l8567
  3083                           
  3084                           ;Function.c: 119: {
  3085                           ;Function.c: 120: Uart1_PutString("AT+NSOSD=2,32,\0");
  3086  0B5F  308F               	movlw	low (STR_6| (0+32768))
  3087  0B60  00A1               	movwf	?_Uart1_PutString
  3088  0B61  3090               	movlw	high (STR_6| (0+32768))
  3089  0B62  00A2               	movwf	?_Uart1_PutString+1
  3090  0B63  260F  3188         	fcall	_Uart1_PutString
  3091                           
  3092                           ;Function.c: 121: Uart1_PutString_Hex("@#pt#1#\0");
  3093  0B65  300B               	movlw	low (STR_7| (0+32768))
  3094  0B66  00A3               	movwf	?_Uart1_PutString_Hex
  3095  0B67  3091               	movlw	high (STR_7| (0+32768))
  3096  0B68  00A4               	movwf	?_Uart1_PutString_Hex+1
  3097  0B69  259F  3188         	fcall	_Uart1_PutString_Hex
  3098                           
  3099                           ;Function.c: 122: Uart1_PutString_Hex(ICCID);
  3100  0B6B  30A0               	movlw	_ICCID& (0+255)
  3101  0B6C  00A3               	movwf	?_Uart1_PutString_Hex
  3102  0B6D  01A4               	clrf	?_Uart1_PutString_Hex+1
  3103  0B6E  259F  3188         	fcall	_Uart1_PutString_Hex
  3104                           
  3105                           ;Function.c: 123: Uart1_PutHex('#');
  3106  0B70  3023               	movlw	35
  3107  0B71  2580  3188         	fcall	_Uart1_PutHex
  3108                           
  3109                           ;Function.c: 124: if(RomParams.bWinter==0)
  3110  0B73  0020               	movlb	0	; select bank0
  3111  0B74  08E7               	movf	_RomParams+1,f
  3112  0B75  1D03               	skipz
  3113  0B76  2B7B               	goto	l32961
  3114                           
  3115                           ;Function.c: 125: {
  3116                           ;Function.c: 126: Uart1_PutString_Hex("60#\0");
  3117  0B77  3055               	movlw	low (STR_8| (0+32768))
  3118  0B78  00A3               	movwf	?_Uart1_PutString_Hex
  3119  0B79  3091               	movlw	high (STR_8| (0+32768))
  3120  0B7A  2B7E               	goto	L1
  3121  0B7B                     l32961:	
  3122                           ;Function.c: 127: }
  3123                           
  3124                           
  3125                           ;Function.c: 128: else
  3126                           ;Function.c: 129: {
  3127                           ;Function.c: 130: Uart1_PutString_Hex("10#\0");
  3128  0B7B  3050               	movlw	low (STR_9| (0+32768))
  3129  0B7C  00A3               	movwf	?_Uart1_PutString_Hex
  3130  0B7D  3091               	movlw	high (STR_9| (0+32768))
  3131  0B7E                     L1:	
  3132  0B7E  00A4               	movwf	?_Uart1_PutString_Hex+1
  3133  0B7F  259F  3188         	fcall	_Uart1_PutString_Hex
  3134                           
  3135                           ;Function.c: 131: }
  3136                           ;Function.c: 132: MakeTxTemperature(CurTemp);
  3137  0B81  0857               	movf	_CurTemp+1,w
  3138  0B82  00A1               	movwf	?_MakeTxTemperature+1
  3139  0B83  0856               	movf	_CurTemp,w
  3140  0B84  00A0               	movwf	?_MakeTxTemperature
  3141  0B85  25AF  3188         	fcall	_MakeTxTemperature
  3142                           
  3143                           ;Function.c: 133: for(int i=0;i<4;i++)
  3144  0B87  01B8               	clrf	InteractServer@i_10578
  3145  0B88  01B9               	clrf	InteractServer@i_10578+1
  3146  0B89                     l32971:	
  3147                           
  3148                           ;Function.c: 134: {
  3149                           ;Function.c: 135: Uart1_PutHex(TxTemperature[i]);
  3150  0B89  0020               	movlb	0	; select bank0
  3151  0B8A  0838               	movf	InteractServer@i_10578,w
  3152  0B8B  3E4E               	addlw	_TxTemperature& (0+255)
  3153  0B8C  0086               	movwf	6
  3154  0B8D  0187               	clrf	7
  3155  0B8E  0801               	movf	1,w
  3156  0B8F  2580  3188         	fcall	_Uart1_PutHex
  3157  0B91  0020               	movlb	0	; select bank0
  3158  0B92  0AB8               	incf	InteractServer@i_10578,f
  3159  0B93  1903               	skipnz
  3160  0B94  0AB9               	incf	InteractServer@i_10578+1,f
  3161  0B95  0839               	movf	InteractServer@i_10578+1,w
  3162  0B96  3A80               	xorlw	128
  3163  0B97  00FE               	movwf	126
  3164  0B98  3080               	movlw	128
  3165  0B99  027E               	subwf	126,w
  3166  0B9A  1D03               	skipz
  3167  0B9B  2B9E               	goto	u7125
  3168  0B9C  3004               	movlw	4
  3169  0B9D  0238               	subwf	InteractServer@i_10578,w
  3170  0B9E                     u7125:	
  3171  0B9E  1803               	btfsc	3,0
  3172  0B9F  2D50               	goto	l33179
  3173  0BA0  2B89               	goto	l32971
  3174  0BA1                     l8567:	
  3175                           
  3176                           ;Function.c: 138: else if(gFlags.bNotify)
  3177  0BA1  1C65               	btfss	_gFlags,0
  3178  0BA2  2BE5               	goto	l33001
  3179                           
  3180                           ;Function.c: 139: {
  3181                           ;Function.c: 140: Uart1_PutString("AT+NSOSD=2,32,\0");
  3182  0BA3  308F               	movlw	low (STR_6| (0+32768))
  3183  0BA4  00A1               	movwf	?_Uart1_PutString
  3184  0BA5  3090               	movlw	high (STR_6| (0+32768))
  3185  0BA6  00A2               	movwf	?_Uart1_PutString+1
  3186  0BA7  260F  3188         	fcall	_Uart1_PutString
  3187                           
  3188                           ;Function.c: 141: Uart1_PutString_Hex("@#pt#3#\0");
  3189  0BA9  301D               	movlw	low (STR_11| (0+32768))
  3190  0BAA  00A3               	movwf	?_Uart1_PutString_Hex
  3191  0BAB  3091               	movlw	high (STR_11| (0+32768))
  3192  0BAC  00A4               	movwf	?_Uart1_PutString_Hex+1
  3193  0BAD  259F  3188         	fcall	_Uart1_PutString_Hex
  3194                           
  3195                           ;Function.c: 142: Uart1_PutString_Hex(ICCID);
  3196  0BAF  30A0               	movlw	_ICCID& (0+255)
  3197  0BB0  00A3               	movwf	?_Uart1_PutString_Hex
  3198  0BB1  01A4               	clrf	?_Uart1_PutString_Hex+1
  3199  0BB2  259F  3188         	fcall	_Uart1_PutString_Hex
  3200                           
  3201                           ;Function.c: 143: Uart1_PutHex('#');
  3202  0BB4  3023               	movlw	35
  3203  0BB5  2580  3188         	fcall	_Uart1_PutHex
  3204                           
  3205                           ;Function.c: 144: if(RomParams.bWinter==0)
  3206  0BB7  0020               	movlb	0	; select bank0
  3207  0BB8  08E7               	movf	_RomParams+1,f
  3208  0BB9  1D03               	skipz
  3209  0BBA  2BBF               	goto	l32985
  3210                           
  3211                           ;Function.c: 145: {
  3212                           ;Function.c: 146: Uart1_PutString_Hex("60#\0");
  3213  0BBB  3055               	movlw	low (STR_8| (0+32768))
  3214  0BBC  00A3               	movwf	?_Uart1_PutString_Hex
  3215  0BBD  3091               	movlw	high (STR_8| (0+32768))
  3216  0BBE  2BC2               	goto	L2
  3217  0BBF                     l32985:	
  3218                           ;Function.c: 147: }
  3219                           
  3220                           
  3221                           ;Function.c: 148: else
  3222                           ;Function.c: 149: {
  3223                           ;Function.c: 150: Uart1_PutString_Hex("10#\0");
  3224  0BBF  3050               	movlw	low (STR_9| (0+32768))
  3225  0BC0  00A3               	movwf	?_Uart1_PutString_Hex
  3226  0BC1  3091               	movlw	high (STR_9| (0+32768))
  3227  0BC2                     L2:	
  3228  0BC2  00A4               	movwf	?_Uart1_PutString_Hex+1
  3229  0BC3  259F  3188         	fcall	_Uart1_PutString_Hex
  3230                           
  3231                           ;Function.c: 151: }
  3232                           ;Function.c: 152: MakeTxTemperature(CurTemp);
  3233  0BC5  0857               	movf	_CurTemp+1,w
  3234  0BC6  00A1               	movwf	?_MakeTxTemperature+1
  3235  0BC7  0856               	movf	_CurTemp,w
  3236  0BC8  00A0               	movwf	?_MakeTxTemperature
  3237  0BC9  25AF  3188         	fcall	_MakeTxTemperature
  3238                           
  3239                           ;Function.c: 153: for(int i=0;i<4;i++)
  3240  0BCB  01BA               	clrf	InteractServer@i_10583
  3241  0BCC  01BB               	clrf	InteractServer@i_10583+1
  3242  0BCD                     l32995:	
  3243                           
  3244                           ;Function.c: 154: {
  3245                           ;Function.c: 155: Uart1_PutHex(TxTemperature[i]);
  3246  0BCD  0020               	movlb	0	; select bank0
  3247  0BCE  083A               	movf	InteractServer@i_10583,w
  3248  0BCF  3E4E               	addlw	_TxTemperature& (0+255)
  3249  0BD0  0086               	movwf	6
  3250  0BD1  0187               	clrf	7
  3251  0BD2  0801               	movf	1,w
  3252  0BD3  2580  3188         	fcall	_Uart1_PutHex
  3253  0BD5  0020               	movlb	0	; select bank0
  3254  0BD6  0ABA               	incf	InteractServer@i_10583,f
  3255  0BD7  1903               	skipnz
  3256  0BD8  0ABB               	incf	InteractServer@i_10583+1,f
  3257  0BD9  083B               	movf	InteractServer@i_10583+1,w
  3258  0BDA  3A80               	xorlw	128
  3259  0BDB  00FE               	movwf	126
  3260  0BDC  3080               	movlw	128
  3261  0BDD  027E               	subwf	126,w
  3262  0BDE  1D03               	skipz
  3263  0BDF  2BE2               	goto	u7155
  3264  0BE0  3004               	movlw	4
  3265  0BE1  023A               	subwf	InteractServer@i_10583,w
  3266  0BE2                     u7155:	
  3267  0BE2  1803               	btfsc	3,0
  3268  0BE3  2D50               	goto	l33179
  3269  0BE4  2BCD               	goto	l32995
  3270  0BE5                     l33001:	
  3271                           
  3272                           ;Function.c: 158: else
  3273                           ;Function.c: 159: {
  3274                           ;Function.c: 160: if(TxErrDataIndex!=0xff)
  3275  0BE5  0868               	movf	_TxErrDataIndex,w
  3276  0BE6  3AFF               	xorlw	255
  3277  0BE7  1903               	skipnz
  3278  0BE8  2C4E               	goto	l33025
  3279                           
  3280                           ;Function.c: 161: {
  3281                           ;Function.c: 162: if(gFlags.bErrFull)
  3282  0BE9  1DE5               	btfss	_gFlags,3
  3283  0BEA  2BEF               	goto	l33007
  3284                           
  3285                           ;Function.c: 163: {
  3286                           ;Function.c: 164: Uart1_PutString("AT+NSOSD=2,687,\0");
  3287  0BEB  307E               	movlw	low (STR_14| (0+32768))
  3288  0BEC  00A1               	movwf	?_Uart1_PutString
  3289  0BED  3090               	movlw	high (STR_14| (0+32768))
  3290  0BEE  2C51               	goto	L3
  3291  0BEF                     l33007:	
  3292                           ;Function.c: 165: }
  3293                           
  3294                           
  3295                           ;Function.c: 166: else
  3296                           ;Function.c: 167: {
  3297                           ;Function.c: 168: Uart1_PutString("AT+NSOSD=2,\0");
  3298  0BEF  30AF               	movlw	low (STR_15| (0+32768))
  3299  0BF0  00A1               	movwf	?_Uart1_PutString
  3300  0BF1  3090               	movlw	high (STR_15| (0+32768))
  3301  0BF2  00A2               	movwf	?_Uart1_PutString+1
  3302  0BF3  260F  3188         	fcall	_Uart1_PutString
  3303                           
  3304                           ;Function.c: 169: txLen=28;
  3305  0BF5  301C               	movlw	28
  3306  0BF6  00BE               	movwf	InteractServer@txLen
  3307  0BF7  01BF               	clrf	InteractServer@txLen+1
  3308                           
  3309                           ;Function.c: 170: for(i=0;i<TxErrDataIndex;i++)
  3310  0BF8  01C5               	clrf	InteractServer@i
  3311  0BF9                     l33017:	
  3312  0BF9  0868               	movf	_TxErrDataIndex,w
  3313  0BFA  0245               	subwf	InteractServer@i,w
  3314  0BFB  1803               	btfsc	3,0
  3315  0BFC  2C03               	goto	l33019
  3316                           
  3317                           ;Function.c: 171: {
  3318                           ;Function.c: 172: txLen+=60;
  3319  0BFD  303C               	movlw	60
  3320  0BFE  07BE               	addwf	InteractServer@txLen,f
  3321  0BFF  1803               	skipnc
  3322  0C00  0ABF               	incf	InteractServer@txLen+1,f
  3323  0C01  0AC5               	incf	InteractServer@i,f
  3324  0C02  2BF9               	goto	l33017
  3325  0C03                     l33019:	
  3326                           
  3327                           ;Function.c: 173: }
  3328                           ;Function.c: 174: txLen+=59;
  3329  0C03  303B               	movlw	59
  3330  0C04  07BE               	addwf	InteractServer@txLen,f
  3331  0C05  1803               	skipnc
  3332  0C06  0ABF               	incf	InteractServer@txLen+1,f
  3333                           
  3334                           ;Function.c: 175: if(txLen/100!=0)
  3335  0C07  3064               	movlw	100
  3336  0C08  00A0               	movwf	?___lwdiv
  3337  0C09  01A1               	clrf	?___lwdiv+1
  3338  0C0A  083F               	movf	InteractServer@txLen+1,w
  3339  0C0B  00A3               	movwf	?___lwdiv+3
  3340  0C0C  083E               	movf	InteractServer@txLen,w
  3341  0C0D  00A2               	movwf	?___lwdiv+2
  3342  0C0E  2642  3188         	fcall	___lwdiv
  3343  0C10  0821               	movf	?___lwdiv+1,w
  3344  0C11  0420               	iorwf	?___lwdiv,w
  3345                           
  3346                           ;Function.c: 176: Uart1_PutChar('0'+txLen/100);
  3347  0C12  3064               	movlw	100
  3348  0C13  1903               	skipnz
  3349  0C14  2C22               	goto	L5
  3350  0C15  00A0               	movwf	?___lwdiv
  3351  0C16  01A1               	clrf	?___lwdiv+1
  3352  0C17  083F               	movf	InteractServer@txLen+1,w
  3353  0C18  00A3               	movwf	?___lwdiv+3
  3354  0C19  083E               	movf	InteractServer@txLen,w
  3355  0C1A  00A2               	movwf	?___lwdiv+2
  3356  0C1B  2642  3188         	fcall	___lwdiv
  3357  0C1D  0820               	movf	?___lwdiv,w
  3358  0C1E  3E30               	addlw	48
  3359  0C1F  2605  3188         	fcall	_Uart1_PutChar
  3360                           
  3361                           ;Function.c: 177: txLen=txLen%100;
  3362  0C21  3064               	movlw	100
  3363  0C22                     L5:	
  3364  0C22  0020               	movlb	0	; select bank0
  3365  0C23  00A0               	movwf	?___lwmod
  3366  0C24  01A1               	clrf	?___lwmod+1
  3367  0C25  083F               	movf	InteractServer@txLen+1,w
  3368  0C26  00A3               	movwf	?___lwmod+3
  3369  0C27  083E               	movf	InteractServer@txLen,w
  3370  0C28  00A2               	movwf	?___lwmod+2
  3371  0C29  2694  3188         	fcall	___lwmod
  3372  0C2B  0821               	movf	?___lwmod+1,w
  3373  0C2C  00BF               	movwf	InteractServer@txLen+1
  3374  0C2D  0820               	movf	?___lwmod,w
  3375  0C2E  00BE               	movwf	InteractServer@txLen
  3376                           
  3377                           ;Function.c: 178: Uart1_PutChar('0'+txLen/10);
  3378  0C2F  300A               	movlw	10
  3379  0C30  00A0               	movwf	?___lwdiv
  3380  0C31  01A1               	clrf	?___lwdiv+1
  3381  0C32  083F               	movf	InteractServer@txLen+1,w
  3382  0C33  00A3               	movwf	?___lwdiv+3
  3383  0C34  083E               	movf	InteractServer@txLen,w
  3384  0C35  00A2               	movwf	?___lwdiv+2
  3385  0C36  2642  3188         	fcall	___lwdiv
  3386  0C38  0820               	movf	?___lwdiv,w
  3387  0C39  3E30               	addlw	48
  3388  0C3A  2605  3188         	fcall	_Uart1_PutChar
  3389                           
  3390                           ;Function.c: 179: Uart1_PutChar('0'+txLen%10);
  3391  0C3C  300A               	movlw	10
  3392  0C3D  0020               	movlb	0	; select bank0
  3393  0C3E  00A0               	movwf	?___lwmod
  3394  0C3F  01A1               	clrf	?___lwmod+1
  3395  0C40  083F               	movf	InteractServer@txLen+1,w
  3396  0C41  00A3               	movwf	?___lwmod+3
  3397  0C42  083E               	movf	InteractServer@txLen,w
  3398  0C43  00A2               	movwf	?___lwmod+2
  3399  0C44  2694  3188         	fcall	___lwmod
  3400  0C46  0820               	movf	?___lwmod,w
  3401  0C47  3E30               	addlw	48
  3402  0C48  2605  3188         	fcall	_Uart1_PutChar
  3403                           
  3404                           ;Function.c: 180: Uart1_PutChar(',');
  3405  0C4A  302C               	movlw	44
  3406  0C4B  2605  3188         	fcall	_Uart1_PutChar
  3407  0C4D  2C54               	goto	l8586
  3408  0C4E                     l33025:	
  3409                           
  3410                           ;Function.c: 183: else
  3411                           ;Function.c: 184: {
  3412                           ;Function.c: 185: Uart1_PutString("AT+NSOSD=2,87,\0");
  3413  0C4E  309F               	movlw	low (STR_16| (0+32768))
  3414  0C4F  00A1               	movwf	?_Uart1_PutString
  3415  0C50  3090               	movlw	high (STR_16| (0+32768))
  3416  0C51                     L3:	
  3417  0C51  00A2               	movwf	?_Uart1_PutString+1
  3418  0C52  260F  3188         	fcall	_Uart1_PutString
  3419  0C54                     l8586:	
  3420                           
  3421                           ;Function.c: 186: }
  3422                           ;Function.c: 187: Uart1_PutString_Hex("@#pt#2#\0");
  3423  0C54  3014               	movlw	low (STR_17| (0+32768))
  3424  0C55  0020               	movlb	0	; select bank0
  3425  0C56  00A3               	movwf	?_Uart1_PutString_Hex
  3426  0C57  3091               	movlw	high (STR_17| (0+32768))
  3427  0C58  00A4               	movwf	?_Uart1_PutString_Hex+1
  3428  0C59  259F  3188         	fcall	_Uart1_PutString_Hex
  3429                           
  3430                           ;Function.c: 188: Uart1_PutString_Hex(ICCID);
  3431  0C5B  30A0               	movlw	_ICCID& (0+255)
  3432  0C5C  00A3               	movwf	?_Uart1_PutString_Hex
  3433  0C5D  01A4               	clrf	?_Uart1_PutString_Hex+1
  3434  0C5E  259F  3188         	fcall	_Uart1_PutString_Hex
  3435                           
  3436                           ;Function.c: 189: Uart1_PutHex('#');
  3437  0C60  3023               	movlw	35
  3438  0C61  2580  3188         	fcall	_Uart1_PutHex
  3439                           
  3440                           ;Function.c: 190: if(RomParams.bWinter==0)
  3441  0C63  0020               	movlb	0	; select bank0
  3442  0C64  08E7               	movf	_RomParams+1,f
  3443  0C65  1D03               	skipz
  3444  0C66  2C6B               	goto	l33033
  3445                           
  3446                           ;Function.c: 191: {
  3447                           ;Function.c: 192: Uart1_PutString_Hex("60#\0");
  3448  0C67  3055               	movlw	low (STR_8| (0+32768))
  3449  0C68  00A3               	movwf	?_Uart1_PutString_Hex
  3450  0C69  3091               	movlw	high (STR_8| (0+32768))
  3451  0C6A  2C6E               	goto	L4
  3452  0C6B                     l33033:	
  3453                           ;Function.c: 193: }
  3454                           
  3455                           
  3456                           ;Function.c: 194: else
  3457                           ;Function.c: 195: {
  3458                           ;Function.c: 196: Uart1_PutString_Hex("10#\0");
  3459  0C6B  3050               	movlw	low (STR_9| (0+32768))
  3460  0C6C  00A3               	movwf	?_Uart1_PutString_Hex
  3461  0C6D  3091               	movlw	high (STR_9| (0+32768))
  3462  0C6E                     L4:	
  3463  0C6E  00A4               	movwf	?_Uart1_PutString_Hex+1
  3464  0C6F  259F  3188         	fcall	_Uart1_PutString_Hex
  3465                           
  3466                           ;Function.c: 197: }
  3467                           ;Function.c: 198: if(TxErrDataIndex!=0xff)
  3468  0C71  0868               	movf	_TxErrDataIndex,w
  3469  0C72  3AFF               	xorlw	255
  3470  0C73  1903               	skipnz
  3471  0C74  2D1C               	goto	l33151
  3472                           
  3473                           ;Function.c: 199: {
  3474                           ;Function.c: 200: if(gFlags.bErrFull)
  3475  0C75  1DE5               	btfss	_gFlags,3
  3476  0C76  2CE6               	goto	l33115
  3477                           
  3478                           ;Function.c: 201: {
  3479                           ;Function.c: 202: for(i=(TxErrDataIndex-1);i<10;i--)
  3480  0C77  0868               	movf	_TxErrDataIndex,w
  3481  0C78  3EFF               	addlw	255
  3482  0C79  00C5               	movwf	InteractServer@i
  3483  0C7A                     l33041:	
  3484  0C7A  300A               	movlw	10
  3485  0C7B  0245               	subwf	InteractServer@i,w
  3486  0C7C  1803               	btfsc	3,0
  3487  0C7D  2CAF               	goto	l33079
  3488                           
  3489                           ;Function.c: 203: {
  3490                           ;Function.c: 204: for(j=0;j<12;j++)
  3491  0C7E  01C3               	clrf	InteractServer@j
  3492  0C7F                     l33051:	
  3493                           
  3494                           ;Function.c: 205: {
  3495                           ;Function.c: 206: addr=(i)*12;
  3496  0C7F  300C               	movlw	12
  3497  0C80  00A0               	movwf	?___bmul
  3498  0C81  0845               	movf	InteractServer@i,w
  3499  0C82  2620  3188         	fcall	___bmul
  3500  0C84  00C2               	movwf	InteractServer@addr
  3501                           
  3502                           ;Function.c: 207: addr+=16;
  3503  0C85  3010               	movlw	16
  3504  0C86  07C2               	addwf	InteractServer@addr,f
  3505                           
  3506                           ;Function.c: 208: addr+=(j<<1);
  3507  0C87  3543               	lslf	InteractServer@j,w
  3508  0C88  07C2               	addwf	InteractServer@addr,f
  3509                           
  3510                           ;Function.c: 209: t.u8s[0]=eeprom_read(addr);
  3511  0C89  0842               	movf	InteractServer@addr,w
  3512  0C8A  25EE  3188         	fcall	_eeprom_read
  3513  0C8C  0020               	movlb	0	; select bank0
  3514  0C8D  00C0               	movwf	InteractServer@t
  3515                           
  3516                           ;Function.c: 210: t.u8s[1]=eeprom_read(addr+1);
  3517  0C8E  0A42               	incf	InteractServer@addr,w
  3518  0C8F  25EE  3188         	fcall	_eeprom_read
  3519  0C91  0020               	movlb	0	; select bank0
  3520  0C92  00C1               	movwf	InteractServer@t+1
  3521                           
  3522                           ;Function.c: 211: MakeTxTemperature(t);
  3523  0C93  00A1               	movwf	?_MakeTxTemperature+1
  3524  0C94  0840               	movf	InteractServer@t,w
  3525  0C95  00A0               	movwf	?_MakeTxTemperature
  3526  0C96  25AF  3188         	fcall	_MakeTxTemperature
  3527                           
  3528                           ;Function.c: 212: for(k=0;k<4;k++)
  3529  0C98  01C4               	clrf	InteractServer@k
  3530  0C99                     l33063:	
  3531                           
  3532                           ;Function.c: 213: {
  3533                           ;Function.c: 214: Uart1_PutHex(TxTemperature[k]);
  3534  0C99  0844               	movf	InteractServer@k,w
  3535  0C9A  3E4E               	addlw	_TxTemperature& (0+255)
  3536  0C9B  0086               	movwf	6
  3537  0C9C  0187               	clrf	7
  3538  0C9D  0801               	movf	1,w
  3539  0C9E  2580  3188         	fcall	_Uart1_PutHex
  3540  0CA0  0020               	movlb	0	; select bank0
  3541  0CA1  0AC4               	incf	InteractServer@k,f
  3542  0CA2  3004               	movlw	4
  3543  0CA3  0244               	subwf	InteractServer@k,w
  3544  0CA4  1C03               	skipc
  3545  0CA5  2C99               	goto	l33063
  3546                           
  3547                           ;Function.c: 215: }
  3548                           ;Function.c: 216: Uart1_PutHex('|');
  3549  0CA6  307C               	movlw	124
  3550  0CA7  2580  3188         	fcall	_Uart1_PutHex
  3551  0CA9  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3552  0CAB  1C03               	skipc
  3553  0CAC  2C7F               	goto	l33051
  3554  0CAD  03C5               	decf	InteractServer@i,f
  3555  0CAE  2C7A               	goto	l33041
  3556  0CAF                     l33079:	
  3557                           
  3558                           ;Function.c: 217: }
  3559                           ;Function.c: 218: }
  3560                           ;Function.c: 219: for(i=9;i>TxErrDataIndex;i--)
  3561  0CAF  3009               	movlw	9
  3562  0CB0  00C5               	movwf	InteractServer@i
  3563  0CB1                     l33113:	
  3564  0CB1  0845               	movf	InteractServer@i,w
  3565  0CB2  0268               	subwf	_TxErrDataIndex,w
  3566  0CB3  1803               	btfsc	3,0
  3567  0CB4  2D1C               	goto	l33151
  3568                           
  3569                           ;Function.c: 220: {
  3570                           ;Function.c: 221: for(j=0;j<12;j++)
  3571  0CB5  01C3               	clrf	InteractServer@j
  3572  0CB6                     l33087:	
  3573                           
  3574                           ;Function.c: 222: {
  3575                           ;Function.c: 223: addr=(i)*12;
  3576  0CB6  300C               	movlw	12
  3577  0CB7  00A0               	movwf	?___bmul
  3578  0CB8  0845               	movf	InteractServer@i,w
  3579  0CB9  2620  3188         	fcall	___bmul
  3580  0CBB  00C2               	movwf	InteractServer@addr
  3581                           
  3582                           ;Function.c: 224: addr+=16;
  3583  0CBC  3010               	movlw	16
  3584  0CBD  07C2               	addwf	InteractServer@addr,f
  3585                           
  3586                           ;Function.c: 225: addr+=(j<<1);
  3587  0CBE  3543               	lslf	InteractServer@j,w
  3588  0CBF  07C2               	addwf	InteractServer@addr,f
  3589                           
  3590                           ;Function.c: 226: t.u8s[0]=eeprom_read(addr);
  3591  0CC0  0842               	movf	InteractServer@addr,w
  3592  0CC1  25EE  3188         	fcall	_eeprom_read
  3593  0CC3  0020               	movlb	0	; select bank0
  3594  0CC4  00C0               	movwf	InteractServer@t
  3595                           
  3596                           ;Function.c: 227: t.u8s[1]=eeprom_read(addr+1);
  3597  0CC5  0A42               	incf	InteractServer@addr,w
  3598  0CC6  25EE  3188         	fcall	_eeprom_read
  3599  0CC8  0020               	movlb	0	; select bank0
  3600  0CC9  00C1               	movwf	InteractServer@t+1
  3601                           
  3602                           ;Function.c: 228: MakeTxTemperature(t);
  3603  0CCA  00A1               	movwf	?_MakeTxTemperature+1
  3604  0CCB  0840               	movf	InteractServer@t,w
  3605  0CCC  00A0               	movwf	?_MakeTxTemperature
  3606  0CCD  25AF  3188         	fcall	_MakeTxTemperature
  3607                           
  3608                           ;Function.c: 229: for(k=0;k<4;k++)
  3609  0CCF  01C4               	clrf	InteractServer@k
  3610  0CD0                     l33099:	
  3611                           
  3612                           ;Function.c: 230: {
  3613                           ;Function.c: 231: Uart1_PutHex(TxTemperature[k]);
  3614  0CD0  0844               	movf	InteractServer@k,w
  3615  0CD1  3E4E               	addlw	_TxTemperature& (0+255)
  3616  0CD2  0086               	movwf	6
  3617  0CD3  0187               	clrf	7
  3618  0CD4  0801               	movf	1,w
  3619  0CD5  2580  3188         	fcall	_Uart1_PutHex
  3620  0CD7  0020               	movlb	0	; select bank0
  3621  0CD8  0AC4               	incf	InteractServer@k,f
  3622  0CD9  3004               	movlw	4
  3623  0CDA  0244               	subwf	InteractServer@k,w
  3624  0CDB  1C03               	skipc
  3625  0CDC  2CD0               	goto	l33099
  3626                           
  3627                           ;Function.c: 232: }
  3628                           ;Function.c: 233: Uart1_PutHex('|');
  3629  0CDD  307C               	movlw	124
  3630  0CDE  2580  3188         	fcall	_Uart1_PutHex
  3631  0CE0  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3632  0CE2  1C03               	skipc
  3633  0CE3  2CB6               	goto	l33087
  3634  0CE4  03C5               	decf	InteractServer@i,f
  3635  0CE5  2CB1               	goto	l33113
  3636  0CE6                     l33115:	
  3637                           
  3638                           ;Function.c: 237: else
  3639                           ;Function.c: 238: {
  3640                           ;Function.c: 239: for(i=0;i<TxErrDataIndex;i++)
  3641  0CE6  01C5               	clrf	InteractServer@i
  3642  0CE7                     l33149:	
  3643  0CE7  0868               	movf	_TxErrDataIndex,w
  3644  0CE8  0245               	subwf	InteractServer@i,w
  3645  0CE9  1803               	btfsc	3,0
  3646  0CEA  2D1C               	goto	l33151
  3647                           
  3648                           ;Function.c: 240: {
  3649                           ;Function.c: 241: for(j=0;j<12;j++)
  3650  0CEB  01C3               	clrf	InteractServer@j
  3651  0CEC                     l33123:	
  3652                           
  3653                           ;Function.c: 242: {
  3654                           ;Function.c: 243: addr=i*12;
  3655  0CEC  300C               	movlw	12
  3656  0CED  00A0               	movwf	?___bmul
  3657  0CEE  0845               	movf	InteractServer@i,w
  3658  0CEF  2620  3188         	fcall	___bmul
  3659  0CF1  00C2               	movwf	InteractServer@addr
  3660                           
  3661                           ;Function.c: 244: addr+=16;
  3662  0CF2  3010               	movlw	16
  3663  0CF3  07C2               	addwf	InteractServer@addr,f
  3664                           
  3665                           ;Function.c: 245: addr+=(j<<1);
  3666  0CF4  3543               	lslf	InteractServer@j,w
  3667  0CF5  07C2               	addwf	InteractServer@addr,f
  3668                           
  3669                           ;Function.c: 246: t.u8s[0]=eeprom_read(addr);
  3670  0CF6  0842               	movf	InteractServer@addr,w
  3671  0CF7  25EE  3188         	fcall	_eeprom_read
  3672  0CF9  0020               	movlb	0	; select bank0
  3673  0CFA  00C0               	movwf	InteractServer@t
  3674                           
  3675                           ;Function.c: 247: t.u8s[1]=eeprom_read(addr+1);
  3676  0CFB  0A42               	incf	InteractServer@addr,w
  3677  0CFC  25EE  3188         	fcall	_eeprom_read
  3678  0CFE  0020               	movlb	0	; select bank0
  3679  0CFF  00C1               	movwf	InteractServer@t+1
  3680                           
  3681                           ;Function.c: 248: MakeTxTemperature(t);
  3682  0D00  00A1               	movwf	?_MakeTxTemperature+1
  3683  0D01  0840               	movf	InteractServer@t,w
  3684  0D02  00A0               	movwf	?_MakeTxTemperature
  3685  0D03  25AF  3188         	fcall	_MakeTxTemperature
  3686                           
  3687                           ;Function.c: 249: for(k=0;k<4;k++)
  3688  0D05  01C4               	clrf	InteractServer@k
  3689  0D06                     l33135:	
  3690                           
  3691                           ;Function.c: 250: {
  3692                           ;Function.c: 251: Uart1_PutHex(TxTemperature[k]);
  3693  0D06  0844               	movf	InteractServer@k,w
  3694  0D07  3E4E               	addlw	_TxTemperature& (0+255)
  3695  0D08  0086               	movwf	6
  3696  0D09  0187               	clrf	7
  3697  0D0A  0801               	movf	1,w
  3698  0D0B  2580  3188         	fcall	_Uart1_PutHex
  3699  0D0D  0020               	movlb	0	; select bank0
  3700  0D0E  0AC4               	incf	InteractServer@k,f
  3701  0D0F  3004               	movlw	4
  3702  0D10  0244               	subwf	InteractServer@k,w
  3703  0D11  1C03               	skipc
  3704  0D12  2D06               	goto	l33135
  3705                           
  3706                           ;Function.c: 252: }
  3707                           ;Function.c: 253: Uart1_PutHex('|');
  3708  0D13  307C               	movlw	124
  3709  0D14  2580  3188         	fcall	_Uart1_PutHex
  3710  0D16  27FB  3188         	fcall	PL5	;call to abstracted procedure
  3711  0D18  1C03               	skipc
  3712  0D19  2CEC               	goto	l33123
  3713  0D1A  0AC5               	incf	InteractServer@i,f
  3714  0D1B  2CE7               	goto	l33149
  3715  0D1C                     l33151:	
  3716                           
  3717                           ;Function.c: 254: }
  3718                           ;Function.c: 255: }
  3719                           ;Function.c: 256: }
  3720                           ;Function.c: 257: }
  3721                           ;Function.c: 258: for(i=0;i<12;i++)
  3722  0D1C  01C5               	clrf	InteractServer@i
  3723  0D1D                     l33153:	
  3724  0D1D  300C               	movlw	12
  3725  0D1E  0245               	subwf	InteractServer@i,w
  3726  0D1F  1803               	btfsc	3,0
  3727  0D20  2D50               	goto	l33179
  3728                           
  3729                           ;Function.c: 259: {
  3730                           ;Function.c: 260: MakeTxTemperature(TList.T[i]);
  3731  0D21  3545               	lslf	InteractServer@i,w
  3732  0D22  3E20               	addlw	_TList& (0+255)
  3733  0D23  0086               	movwf	6
  3734  0D24  3001               	movlw	1	; select bank2/3
  3735  0D25  0087               	movwf	7
  3736  0D26  3F40               	moviw [0]fsr1
  3737  0D27  00A0               	movwf	?_MakeTxTemperature
  3738  0D28  3F41               	moviw [1]fsr1
  3739  0D29  00A1               	movwf	?_MakeTxTemperature+1
  3740  0D2A  25AF  3188         	fcall	_MakeTxTemperature
  3741                           
  3742                           ;Function.c: 261: for(int j=0;j<4;j++)
  3743  0D2C  01BC               	clrf	InteractServer@j_10590
  3744  0D2D  01BD               	clrf	InteractServer@j_10590+1
  3745  0D2E                     l33165:	
  3746                           
  3747                           ;Function.c: 262: {
  3748                           ;Function.c: 263: Uart1_PutHex(TxTemperature[j]);
  3749  0D2E  0020               	movlb	0	; select bank0
  3750  0D2F  083C               	movf	InteractServer@j_10590,w
  3751  0D30  3E4E               	addlw	_TxTemperature& (0+255)
  3752  0D31  0086               	movwf	6
  3753  0D32  0187               	clrf	7
  3754  0D33  0801               	movf	1,w
  3755  0D34  2580  3188         	fcall	_Uart1_PutHex
  3756  0D36  0020               	movlb	0	; select bank0
  3757  0D37  0ABC               	incf	InteractServer@j_10590,f
  3758  0D38  1903               	skipnz
  3759  0D39  0ABD               	incf	InteractServer@j_10590+1,f
  3760  0D3A  083D               	movf	InteractServer@j_10590+1,w
  3761  0D3B  3A80               	xorlw	128
  3762  0D3C  00FE               	movwf	126
  3763  0D3D  3080               	movlw	128
  3764  0D3E  027E               	subwf	126,w
  3765  0D3F  1D03               	skipz
  3766  0D40  2D43               	goto	u7335
  3767  0D41  3004               	movlw	4
  3768  0D42  023C               	subwf	InteractServer@j_10590,w
  3769  0D43                     u7335:	
  3770  0D43  1C03               	skipc
  3771  0D44  2D2E               	goto	l33165
  3772                           
  3773                           ;Function.c: 264: }
  3774                           ;Function.c: 265: if(i!=(12-1))
  3775  0D45  0020               	movlb	0	; select bank0
  3776  0D46  0845               	movf	InteractServer@i,w
  3777  0D47  3A0B               	xorlw	11
  3778  0D48  1903               	skipnz
  3779  0D49  2D4D               	goto	l33175
  3780                           
  3781                           ;Function.c: 266: {
  3782                           ;Function.c: 267: Uart1_PutHex('|');
  3783  0D4A  307C               	movlw	124
  3784  0D4B  2580  3188         	fcall	_Uart1_PutHex
  3785  0D4D                     l33175:	
  3786  0D4D  0020               	movlb	0	; select bank0
  3787  0D4E  0AC5               	incf	InteractServer@i,f
  3788  0D4F  2D1D               	goto	l33153
  3789  0D50                     l33179:	
  3790                           
  3791                           ;Function.c: 268: }
  3792                           ;Function.c: 269: }
  3793                           ;Function.c: 270: }
  3794                           ;Function.c: 271: Uart1_PutHex('#');
  3795  0D50  3023               	movlw	35
  3796  0D51  2580  3188         	fcall	_Uart1_PutHex
  3797                           
  3798                           ;Function.c: 272: Uart1_PutHex('@');
  3799  0D53  3040               	movlw	64
  3800  0D54  2580  3188         	fcall	_Uart1_PutHex
  3801                           
  3802                           ;Function.c: 273: ATCommand_WaitACKTimes=400;
  3803  0D56  3090               	movlw	144
  3804  0D57  0020               	movlb	0	; select bank0
  3805  0D58  00D4               	movwf	_ATCommand_WaitACKTimes
  3806  0D59  3001               	movlw	1
  3807  0D5A  00D5               	movwf	_ATCommand_WaitACKTimes+1
  3808                           
  3809                           ;Function.c: 274: strcpy(ATCommand_OkString,"NSONMI");
  3810  0D5B  3037               	movlw	low (STR_20| (0+32768))
  3811  0D5C  00A0               	movwf	?_strcpy
  3812  0D5D  3091               	movlw	high (STR_20| (0+32768))
  3813  0D5E  00A1               	movwf	?_strcpy+1
  3814  0D5F  30C4               	movlw	_ATCommand_OkString& (0+255)
  3815  0D60  262C  3188         	fcall	_strcpy
  3816                           
  3817                           ;Function.c: 275: strcpy(ATCommand_ErrString,"ERROR");
  3818  0D62  304A               	movlw	low (STR_21| (0+32768))
  3819  0D63  00A0               	movwf	?_strcpy
  3820  0D64  3091               	movlw	high (STR_21| (0+32768))
  3821  0D65  00A1               	movwf	?_strcpy+1
  3822  0D66  30B5               	movlw	_ATCommand_ErrString& (0+255)
  3823  0D67  262C  3188         	fcall	_strcpy
  3824                           
  3825                           ;Function.c: 276: ATCommand_Clear='+';
  3826  0D69  302B               	movlw	43
  3827  0D6A  00F9               	movwf	_ATCommand_Clear
  3828                           
  3829                           ;Function.c: 277: Uart1_PutString("\r\0");
  3830  0D6B  3066               	movlw	low (STR_22| (0+32768))
  3831  0D6C  00A1               	movwf	?_Uart1_PutString
  3832  0D6D  3091               	movlw	high (STR_22| (0+32768))
  3833  0D6E  00A2               	movwf	?_Uart1_PutString+1
  3834  0D6F  260F               	fcall	_Uart1_PutString
  3835                           
  3836                           ;Function.c: 278: res=ATCommand_WaitData();
  3837  0D70  3184  24DF  3188   	fcall	_ATCommand_WaitData
  3838  0D73  00B7               	movwf	InteractServer@res
  3839                           
  3840                           ;Function.c: 279: if(res!=ATACK_Null)
  3841  0D74  0837               	movf	InteractServer@res,w
  3842  0D75  1D03               	skipz
  3843  0D76  2D7E               	goto	l33203
  3844                           
  3845                           ;Function.c: 281: __delay_20ms(100);;
  3846  0D77  3064               	movlw	100
  3847  0D78  00A0               	movwf	?___delay_20ms
  3848  0D79  01A1               	clrf	?___delay_20ms+1
  3849  0D7A  2308  3188         	fcall	___delay_20ms
  3850                           
  3851                           ;Function.c: 282: retry--;
  3852  0D7C  03B6               	decf	InteractServer@retry,f
  3853  0D7D  2B5A               	goto	l33201
  3854  0D7E                     l33203:	
  3855                           
  3856                           ;Function.c: 283: }
  3857                           ;Function.c: 284: return res;
  3858  0D7E  0837               	movf	InteractServer@res,w
  3859  0D7F  0008               	return
  3860  0D80                     __end_of_InteractServer:	
  3861  0D80                     __ptext2026:	
  3862 ;; =============== function _strstr ends ============
  3863                           
  3864                           
  3865 ;; *************** function _Uart1_PutHex *****************
  3866 ;; Defined at:
  3867 ;;		line 88 in file "F:\work\WYP\NBIoT1\Uart.c"
  3868 ;; Parameters:    Size  Location     Type
  3869 ;;  c               1    wreg     unsigned char 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  c               1    1[BANK0 ] unsigned char 
  3872 ;;  b               1    2[BANK0 ] unsigned char 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;		None               void
  3875 ;; Registers used:
  3876 ;;		wreg, status,2, status,0, pclath, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 1F/3
  3880 ;;		Unchanged: FFFE0/0
  3881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3882 ;;      Params:         0       0       0       0       0       0       0       0
  3883 ;;      Locals:         0       2       0       0       0       0       0       0
  3884 ;;      Temps:          0       0       0       0       0       0       0       0
  3885 ;;      Totals:         0       2       0       0       0       0       0       0
  3886 ;;Total ram usage:        2 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    4
  3889 ;; This function calls:
  3890 ;;		_Uart1_PutChar
  3891 ;; This function is called by:
  3892 ;;		_InteractServer
  3893 ;;		_Uart1_PutString_Hex
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896  0D80                     _Uart1_PutHex:	
  3897                           
  3898                           ; Regs used in _Uart1_PutHex: [wreg+status,2+status,0+pclath+cstack]
  3899                           ;Uart1_PutHex@c stored from wreg
  3900  0D80  0020               	movlb	0	; select bank0
  3901  0D81  00A1               	movwf	Uart1_PutHex@c
  3902                           
  3903                           ;Uart.c: 89: unsigned char b;
  3904                           ;Uart.c: 90: b=(c>>4);
  3905  0D82  0E21               	swapf	Uart1_PutHex@c,w
  3906  0D83  390F               	andlw	15
  3907  0D84  00A2               	movwf	Uart1_PutHex@b
  3908                           
  3909                           ;Uart.c: 91: if (b>9)
  3910  0D85  300A               	movlw	10
  3911  0D86  0222               	subwf	Uart1_PutHex@b,w
  3912  0D87  1C03               	skipc
  3913  0D88  2D8B               	goto	l32425
  3914                           
  3915                           ;Uart.c: 92: b += 'A'-10;
  3916  0D89  3037               	movlw	55
  3917  0D8A  2D8C               	goto	L6
  3918  0D8B                     l32425:	
  3919                           
  3920                           ;Uart.c: 93: else
  3921                           ;Uart.c: 94: b += '0';
  3922  0D8B  3030               	movlw	48
  3923  0D8C                     L6:	
  3924  0D8C  07A2               	addwf	Uart1_PutHex@b,f
  3925                           
  3926                           ;Uart.c: 95: Uart1_PutChar(b);
  3927  0D8D  0822               	movf	Uart1_PutHex@b,w
  3928  0D8E  2605  3188         	fcall	_Uart1_PutChar
  3929                           
  3930                           ;Uart.c: 96: b=(c&0x0F);
  3931  0D90  0020               	movlb	0	; select bank0
  3932  0D91  0821               	movf	Uart1_PutHex@c,w
  3933  0D92  00A2               	movwf	Uart1_PutHex@b
  3934  0D93  300F               	movlw	15
  3935  0D94  05A2               	andwf	Uart1_PutHex@b,f
  3936                           
  3937                           ;Uart.c: 97: if (b>9)
  3938  0D95  300A               	movlw	10
  3939  0D96  0222               	subwf	Uart1_PutHex@b,w
  3940  0D97  1C03               	skipc
  3941  0D98  2D9B               	goto	l32437
  3942                           
  3943                           ;Uart.c: 98: b += 'A'-10;
  3944  0D99  3037               	movlw	55
  3945  0D9A  2D9C               	goto	L7
  3946  0D9B                     l32437:	
  3947                           
  3948                           ;Uart.c: 99: else
  3949                           ;Uart.c: 100: b += '0';
  3950  0D9B  3030               	movlw	48
  3951  0D9C                     L7:	
  3952  0D9C  07A2               	addwf	Uart1_PutHex@b,f
  3953                           
  3954                           ;Uart.c: 101: Uart1_PutChar(b);
  3955  0D9D  0822               	movf	Uart1_PutHex@b,w
  3956  0D9E  2E05               	ljmp	_Uart1_PutChar
  3957  0D9F                     __end_of_Uart1_PutHex:	
  3958  0D9F                     __ptext2009:	
  3959 ;; =============== function _ATCommand_WaitData ends ============
  3960                           
  3961                           
  3962 ;; *************** function _Uart1_PutString_Hex *****************
  3963 ;; Defined at:
  3964 ;;		line 75 in file "F:\work\WYP\NBIoT1\Uart.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  pString         2    3[BANK0 ] PTR const unsigned char 
  3967 ;;		 -> STR_19(5), STR_18(5), STR_17(9), STR_13(5), 
  3968 ;;		 -> STR_12(5), STR_11(9), STR_9(5), STR_8(5), 
  3969 ;;		 -> ICCID(21), STR_7(9), 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  c               1    5[BANK0 ] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;		None               void
  3974 ;; Registers used:
  3975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 1F/0
  3978 ;;		On exit  : 1F/0
  3979 ;;		Unchanged: FFFE0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3981 ;;      Params:         0       2       0       0       0       0       0       0
  3982 ;;      Locals:         0       1       0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0
  3984 ;;      Totals:         0       3       0       0       0       0       0       0
  3985 ;;Total ram usage:        3 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    5
  3988 ;; This function calls:
  3989 ;;		_Uart1_PutHex
  3990 ;; This function is called by:
  3991 ;;		_InteractServer
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994  0D9F                     _Uart1_PutString_Hex:	
  3995  0D9F                     l23228:	
  3996                           ; Regs used in _Uart1_PutString_Hex: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3997                           ;Uart.c: 76: char c;
  3998                           ;Uart.c: 77: while(1)
  3999                           
  4000                           
  4001                           ;Uart.c: 78: {
  4002                           ;Uart.c: 79: c=*pString;
  4003  0D9F  0823               	movf	Uart1_PutString_Hex@pString,w
  4004  0DA0  0084               	movwf	4
  4005  0DA1  0824               	movf	Uart1_PutString_Hex@pString+1,w
  4006  0DA2  0085               	movwf	5
  4007  0DA3  0800               	movf	0,w	;code access
  4008  0DA4  00A5               	movwf	Uart1_PutString_Hex@c
  4009                           
  4010                           ;Uart.c: 80: if(c=='\0')
  4011  0DA5  08A5               	movf	Uart1_PutString_Hex@c,f
  4012  0DA6  1903               	btfsc	3,2
  4013  0DA7  0008               	return
  4014                           
  4015                           ;Uart.c: 82: Uart1_PutHex(c);
  4016  0DA8  2580  3188         	fcall	_Uart1_PutHex
  4017                           
  4018                           ;Uart.c: 83: pString++;
  4019  0DAA  0020               	movlb	0	; select bank0
  4020  0DAB  0AA3               	incf	Uart1_PutString_Hex@pString,f
  4021  0DAC  1903               	skipnz
  4022  0DAD  0AA4               	incf	Uart1_PutString_Hex@pString+1,f
  4023  0DAE  2D9F               	goto	l23228
  4024  0DAF                     __end_of_Uart1_PutString_Hex:	
  4025  0DAF                     __ptext2055:	
  4026 ;; =============== function _Uart1_PutChar ends ============
  4027                           
  4028                           
  4029 ;; *************** function _MakeTxTemperature *****************
  4030 ;; Defined at:
  4031 ;;		line 287 in file "F:\work\WYP\NBIoT1\Function.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  T               2    0[BANK0 ] struct .
  4034 ;; Auto vars:     Size  Location     Type
  4035 ;;  x               1    2[BANK0 ] unsigned char 
  4036 ;; Return value:  Size  Location     Type
  4037 ;;		None               void
  4038 ;; Registers used:
  4039 ;;		wreg, status,2, status,0
  4040 ;; Tracked objects:
  4041 ;;		On entry : 1F/0
  4042 ;;		On exit  : 1F/0
  4043 ;;		Unchanged: FFFE0/0
  4044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4045 ;;      Params:         0       2       0       0       0       0       0       0
  4046 ;;      Locals:         0       1       0       0       0       0       0       0
  4047 ;;      Temps:          0       0       0       0       0       0       0       0
  4048 ;;      Totals:         0       3       0       0       0       0       0       0
  4049 ;;Total ram usage:        3 bytes
  4050 ;; Hardware stack levels used:    1
  4051 ;; Hardware stack levels required when called:    3
  4052 ;; This function calls:
  4053 ;;		Nothing
  4054 ;; This function is called by:
  4055 ;;		_InteractServer
  4056 ;; This function uses a non-reentrant model
  4057 ;;
  4058  0DAF                     _MakeTxTemperature:	
  4059                           
  4060                           ;Function.c: 288: unsigned char x;
  4061                           ;Function.c: 289: x=(T.u8H>>4);
  4062                           
  4063                           ; Regs used in _MakeTxTemperature: [wreg+status,2+status,0]
  4064  0DAF  0E21               	swapf	MakeTxTemperature@T+1,w
  4065  0DB0  390F               	andlw	15
  4066  0DB1  00A2               	movwf	MakeTxTemperature@x
  4067                           
  4068                           ;Function.c: 290: if(x>9)
  4069  0DB2  300A               	movlw	10
  4070  0DB3  0222               	subwf	MakeTxTemperature@x,w
  4071  0DB4  1C03               	skipc
  4072  0DB5  2DBA               	goto	l32135
  4073                           
  4074                           ;Function.c: 291: {
  4075                           ;Function.c: 292: x=x-10;
  4076  0DB6  30F6               	movlw	246
  4077  0DB7  07A2               	addwf	MakeTxTemperature@x,f
  4078                           
  4079                           ;Function.c: 293: x=x+0x41;
  4080  0DB8  3041               	movlw	65
  4081  0DB9  2DBB               	goto	L12
  4082  0DBA                     l32135:	
  4083                           ;Function.c: 295: }
  4084                           
  4085                           
  4086                           ;Function.c: 296: else
  4087                           ;Function.c: 297: {
  4088                           ;Function.c: 298: x=x+'0';
  4089  0DBA  3030               	movlw	48
  4090  0DBB                     L12:	
  4091  0DBB  07A2               	addwf	MakeTxTemperature@x,f
  4092                           
  4093                           ;Function.c: 294: TxTemperature[0]=x;
  4094  0DBC  0822               	movf	MakeTxTemperature@x,w
  4095  0DBD  00CE               	movwf	_TxTemperature
  4096                           
  4097                           ;Function.c: 300: }
  4098                           ;Function.c: 301: x=(T.u8H&0x0F);
  4099  0DBE  0821               	movf	MakeTxTemperature@T+1,w
  4100  0DBF  00A2               	movwf	MakeTxTemperature@x
  4101  0DC0  300F               	movlw	15
  4102  0DC1  05A2               	andwf	MakeTxTemperature@x,f
  4103                           
  4104                           ;Function.c: 302: if(x>9)
  4105  0DC2  300A               	movlw	10
  4106  0DC3  0222               	subwf	MakeTxTemperature@x,w
  4107  0DC4  1C03               	skipc
  4108  0DC5  2DCA               	goto	l32147
  4109                           
  4110                           ;Function.c: 303: {
  4111                           ;Function.c: 304: x=x-10;
  4112  0DC6  30F6               	movlw	246
  4113  0DC7  07A2               	addwf	MakeTxTemperature@x,f
  4114                           
  4115                           ;Function.c: 305: x=x+0x41;
  4116  0DC8  3041               	movlw	65
  4117  0DC9  2DCB               	goto	L13
  4118  0DCA                     l32147:	
  4119                           ;Function.c: 307: }
  4120                           
  4121                           
  4122                           ;Function.c: 308: else
  4123                           ;Function.c: 309: {
  4124                           ;Function.c: 310: x=x+'0';
  4125  0DCA  3030               	movlw	48
  4126  0DCB                     L13:	
  4127  0DCB  07A2               	addwf	MakeTxTemperature@x,f
  4128                           
  4129                           ;Function.c: 306: TxTemperature[1]=x;
  4130  0DCC  0822               	movf	MakeTxTemperature@x,w
  4131  0DCD  00CF               	movwf	_TxTemperature+1
  4132                           
  4133                           ;Function.c: 312: }
  4134                           ;Function.c: 313: x=(T.u8L>>4);
  4135  0DCE  0E20               	swapf	MakeTxTemperature@T,w
  4136  0DCF  390F               	andlw	15
  4137  0DD0  00A2               	movwf	MakeTxTemperature@x
  4138                           
  4139                           ;Function.c: 314: if(x>9)
  4140  0DD1  300A               	movlw	10
  4141  0DD2  0222               	subwf	MakeTxTemperature@x,w
  4142  0DD3  1C03               	skipc
  4143  0DD4  2DD9               	goto	l32157
  4144                           
  4145                           ;Function.c: 315: {
  4146                           ;Function.c: 316: x=x-10;
  4147  0DD5  30F6               	movlw	246
  4148  0DD6  07A2               	addwf	MakeTxTemperature@x,f
  4149                           
  4150                           ;Function.c: 317: x=x+0x41;
  4151  0DD7  3041               	movlw	65
  4152  0DD8  2DDA               	goto	L14
  4153  0DD9                     l32157:	
  4154                           ;Function.c: 319: }
  4155                           
  4156                           
  4157                           ;Function.c: 320: else
  4158                           ;Function.c: 321: {
  4159                           ;Function.c: 322: x=x+'0';
  4160  0DD9  3030               	movlw	48
  4161  0DDA                     L14:	
  4162  0DDA  07A2               	addwf	MakeTxTemperature@x,f
  4163                           
  4164                           ;Function.c: 318: TxTemperature[2]=x;
  4165  0DDB  0822               	movf	MakeTxTemperature@x,w
  4166  0DDC  00D0               	movwf	_TxTemperature+2
  4167                           
  4168                           ;Function.c: 324: }
  4169                           ;Function.c: 325: x=(T.u8L&0x0F);
  4170  0DDD  0820               	movf	MakeTxTemperature@T,w
  4171  0DDE  00A2               	movwf	MakeTxTemperature@x
  4172  0DDF  300F               	movlw	15
  4173  0DE0  05A2               	andwf	MakeTxTemperature@x,f
  4174                           
  4175                           ;Function.c: 326: if(x>9)
  4176  0DE1  300A               	movlw	10
  4177  0DE2  0222               	subwf	MakeTxTemperature@x,w
  4178  0DE3  1C03               	skipc
  4179  0DE4  2DEC               	goto	l32169
  4180                           
  4181                           ;Function.c: 327: {
  4182                           ;Function.c: 328: x=x-10;
  4183  0DE5  30F6               	movlw	246
  4184  0DE6  07A2               	addwf	MakeTxTemperature@x,f
  4185                           
  4186                           ;Function.c: 329: x=x+0x41;
  4187  0DE7  3041               	movlw	65
  4188  0DE8                     L11:	
  4189  0DE8  07A2               	addwf	MakeTxTemperature@x,f
  4190                           
  4191                           ;Function.c: 330: TxTemperature[3]=x;
  4192  0DE9  0822               	movf	MakeTxTemperature@x,w
  4193  0DEA  00D1               	movwf	_TxTemperature+3
  4194                           
  4195                           ;Function.c: 331: }
  4196  0DEB  0008               	return
  4197  0DEC                     l32169:	
  4198                           
  4199                           ;Function.c: 332: else
  4200                           ;Function.c: 333: {
  4201                           ;Function.c: 334: x=x+'0';
  4202  0DEC  3030               	movlw	48
  4203  0DED  2DE8               	goto	L11
  4204  0DEE                     __end_of_MakeTxTemperature:	
  4205  0DEE                     __ptext2053:	
  4206 ;; =============== function _strcpy ends ============
  4207                           
  4208                           
  4209 ;; *************** function _eeprom_read *****************
  4210 ;; Defined at:
  4211 ;;		line 8 in file "eeread.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  addr            1    wreg     unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  addr            1    2[BANK0 ] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, status,2, status,0
  4220 ;; Tracked objects:
  4221 ;;		On entry : 1F/0
  4222 ;;		On exit  : 1F/3
  4223 ;;		Unchanged: FFFE0/0
  4224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4225 ;;      Params:         0       0       0       0       0       0       0       0
  4226 ;;      Locals:         0       1       0       0       0       0       0       0
  4227 ;;      Temps:          0       2       0       0       0       0       0       0
  4228 ;;      Totals:         0       3       0       0       0       0       0       0
  4229 ;;Total ram usage:        3 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    3
  4232 ;; This function calls:
  4233 ;;		Nothing
  4234 ;; This function is called by:
  4235 ;;		_InteractServer
  4236 ;;		_GetRomData
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239  0DEE                     _eeprom_read:	
  4240                           
  4241                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  4242                           ;eeprom_read@addr stored from wreg
  4243  0DEE  00A2               	movwf	eeprom_read@addr
  4244  0DEF                     l27393:	
  4245  0DEF  0064               	clrwdt	;#
  4246  0DF0  0023               	movlb	3	; select bank3
  4247  0DF1  1895               	btfsc	21,1
  4248  0DF2  2DEF               	goto	l27393
  4249  0DF3  0020               	movlb	0	; select bank0
  4250  0DF4  0822               	movf	eeprom_read@addr,w
  4251  0DF5  0023               	movlb	3	; select bank3
  4252  0DF6  0091               	movwf	17	;volatile
  4253  0DF7  303F               	movlw	63
  4254  0DF8  0595               	andwf	21,f	;volatile
  4255  0DF9  1415               	bsf	21,0
  4256  0DFA  1003               	clrc
  4257  0DFB  1815               	btfsc	21,0
  4258  0DFC  1403               	setc
  4259  0DFD  3000               	movlw	0
  4260  0DFE  3D09               	addwfc	9,w
  4261  0DFF  0020               	movlb	0	; select bank0
  4262  0E00  00A0               	movwf	??_eeprom_read
  4263  0E01  01A1               	clrf	??_eeprom_read+1
  4264  0E02  0023               	movlb	3	; select bank3
  4265  0E03  0813               	movf	19,w	;volatile
  4266  0E04  0008               	return
  4267  0E05                     __end_of_eeprom_read:	
  4268  0E05                     __ptext2054:	
  4269 ;; =============== function _eeprom_read ends ============
  4270                           
  4271                           
  4272 ;; *************** function _Uart1_PutChar *****************
  4273 ;; Defined at:
  4274 ;;		line 47 in file "F:\work\WYP\NBIoT1\Uart.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;  c               1    wreg     unsigned char 
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;  c               1    0[BANK0 ] unsigned char 
  4279 ;; Return value:  Size  Location     Type
  4280 ;;		None               void
  4281 ;; Registers used:
  4282 ;;		wreg
  4283 ;; Tracked objects:
  4284 ;;		On entry : 1C/0
  4285 ;;		On exit  : 1F/3
  4286 ;;		Unchanged: FFFE0/0
  4287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4288 ;;      Params:         0       0       0       0       0       0       0       0
  4289 ;;      Locals:         0       1       0       0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0       0
  4291 ;;      Totals:         0       1       0       0       0       0       0       0
  4292 ;;Total ram usage:        1 bytes
  4293 ;; Hardware stack levels used:    1
  4294 ;; Hardware stack levels required when called:    3
  4295 ;; This function calls:
  4296 ;;		Nothing
  4297 ;; This function is called by:
  4298 ;;		_InteractServer
  4299 ;;		_Uart1_PutString
  4300 ;;		_Uart1_PutHex
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303  0E05                     _Uart1_PutChar:	
  4304                           
  4305                           ; Regs used in _Uart1_PutChar: [wreg]
  4306                           ;Uart1_PutChar@c stored from wreg
  4307  0E05  0020               	movlb	0	; select bank0
  4308  0E06  00A0               	movwf	Uart1_PutChar@c
  4309  0E07                     l23209:	
  4310                           ;Uart.c: 48: while(TRMT==0);
  4311                           
  4312  0E07  0023               	movlb	3	; select bank3
  4313  0E08  1C9E               	btfss	30,1
  4314  0E09  2E07               	goto	l23209
  4315                           
  4316                           ;Uart.c: 52: TXREG=c;
  4317  0E0A  0020               	movlb	0	; select bank0
  4318  0E0B  0820               	movf	Uart1_PutChar@c,w
  4319  0E0C  0023               	movlb	3	; select bank3
  4320  0E0D  009A               	movwf	26	;volatile
  4321  0E0E  0008               	return
  4322  0E0F                     __end_of_Uart1_PutChar:	
  4323  0E0F                     __ptext2027:	
  4324 ;; =============== function _Uart1_PutHex ends ============
  4325                           
  4326                           
  4327 ;; *************** function _Uart1_PutString *****************
  4328 ;; Defined at:
  4329 ;;		line 63 in file "F:\work\WYP\NBIoT1\Uart.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;  pString         2    1[BANK0 ] PTR const unsigned char 
  4332 ;;		 -> STR_38(3), STR_34(11), STR_33(12), STR_31(8), 
  4333 ;;		 -> STR_29(10), STR_28(9), STR_27(11), STR_26(32), 
  4334 ;;		 -> STR_25(11), STR_24(6), STR_23(4), STR_22(3), 
  4335 ;;		 -> STR_16(16), STR_15(13), STR_14(17), STR_10(16), 
  4336 ;;		 -> STR_6(16), STR_5(12), STR_4(32), STR_3(12), 
  4337 ;;		 -> STR_2(36), STR_1(23), 
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;  c               1    3[BANK0 ] unsigned char 
  4340 ;; Return value:  Size  Location     Type
  4341 ;;		None               void
  4342 ;; Registers used:
  4343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4344 ;; Tracked objects:
  4345 ;;		On entry : 1F/0
  4346 ;;		On exit  : 1F/0
  4347 ;;		Unchanged: FFFE0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4349 ;;      Params:         0       2       0       0       0       0       0       0
  4350 ;;      Locals:         0       1       0       0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0       0       0       0
  4352 ;;      Totals:         0       3       0       0       0       0       0       0
  4353 ;;Total ram usage:        3 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    4
  4356 ;; This function calls:
  4357 ;;		_Uart1_PutChar
  4358 ;; This function is called by:
  4359 ;;		_InteractServer
  4360 ;;		_ATCommand_SendCmd
  4361 ;; This function uses a non-reentrant model
  4362 ;;
  4363  0E0F                     _Uart1_PutString:	
  4364  0E0F                     l23221:	
  4365                           ; Regs used in _Uart1_PutString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4366                           ;Uart.c: 64: char c;
  4367                           ;Uart.c: 65: while(1)
  4368                           
  4369                           
  4370                           ;Uart.c: 66: {
  4371                           ;Uart.c: 67: c=*pString;
  4372  0E0F  0821               	movf	Uart1_PutString@pString,w
  4373  0E10  0084               	movwf	4
  4374  0E11  0822               	movf	Uart1_PutString@pString+1,w
  4375  0E12  0085               	movwf	5
  4376  0E13  0800               	movf	0,w	;code access
  4377  0E14  00A3               	movwf	Uart1_PutString@c
  4378                           
  4379                           ;Uart.c: 68: if(c=='\0')
  4380  0E15  08A3               	movf	Uart1_PutString@c,f
  4381  0E16  1903               	btfsc	3,2
  4382  0E17  0008               	return
  4383                           
  4384                           ;Uart.c: 70: Uart1_PutChar(c);
  4385  0E18  0823               	movf	Uart1_PutString@c,w
  4386  0E19  2605  3188         	fcall	_Uart1_PutChar
  4387                           
  4388                           ;Uart.c: 71: pString++;
  4389  0E1B  0020               	movlb	0	; select bank0
  4390  0E1C  0AA1               	incf	Uart1_PutString@pString,f
  4391  0E1D  1903               	skipnz
  4392  0E1E  0AA2               	incf	Uart1_PutString@pString+1,f
  4393  0E1F  2E0F               	goto	l23221
  4394  0E20                     __end_of_Uart1_PutString:	
  4395  0E20                     __ptext2044:	
  4396 ;; =============== function ___wmul ends ============
  4397                           
  4398                           
  4399 ;; *************** function ___bmul *****************
  4400 ;; Defined at:
  4401 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\bmul.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;  multiplier      1    wreg     unsigned char 
  4404 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  multiplier      1    2[BANK0 ] unsigned char 
  4407 ;;  product         1    1[BANK0 ] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      unsigned char 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0
  4412 ;; Tracked objects:
  4413 ;;		On entry : 1F/0
  4414 ;;		On exit  : 1F/0
  4415 ;;		Unchanged: FFFE0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4417 ;;      Params:         0       1       0       0       0       0       0       0
  4418 ;;      Locals:         0       2       0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0
  4420 ;;      Totals:         0       3       0       0       0       0       0       0
  4421 ;;Total ram usage:        3 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    3
  4424 ;; This function calls:
  4425 ;;		Nothing
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;;		_InteractServer
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431  0E20                     ___bmul:	
  4432                           
  4433                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4434                           ;___bmul@multiplier stored from wreg
  4435  0E20  00A2               	movwf	___bmul@multiplier
  4436  0E21  01A1               	clrf	___bmul@product
  4437  0E22                     l32193:	
  4438  0E22  0820               	movf	___bmul@multiplicand,w
  4439  0E23  1822               	btfsc	___bmul@multiplier,0
  4440  0E24  07A1               	addwf	___bmul@product,f
  4441  0E25  35A0               	lslf	___bmul@multiplicand,f
  4442  0E26  36A2               	lsrf	___bmul@multiplier,f
  4443  0E27  08A2               	movf	___bmul@multiplier,f
  4444  0E28  1D03               	skipz
  4445  0E29  2E22               	goto	l32193
  4446  0E2A  0821               	movf	___bmul@product,w
  4447  0E2B  0008               	return
  4448  0E2C                     __end_of___bmul:	
  4449  0E2C                     __ptext2052:	
  4450 ;; =============== function _GetVerify_Sum ends ============
  4451                           
  4452                           
  4453 ;; *************** function _strcpy *****************
  4454 ;; Defined at:
  4455 ;;		line 10 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strcpy.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  to              1    wreg     PTR unsigned char 
  4458 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4459 ;;  from            2    0[BANK0 ] PTR const unsigned char 
  4460 ;;		 -> STR_42(6), STR_41(3), STR_40(6), STR_39(3), 
  4461 ;;		 -> STR_37(6), STR_36(3), STR_21(6), STR_20(7), 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  to              1    4[BANK0 ] PTR unsigned char 
  4464 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4465 ;;  cp              1    5[BANK0 ] PTR unsigned char 
  4466 ;;		 -> ATCommand_ErrString(15), ATCommand_OkString(15), 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      PTR unsigned char 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4471 ;; Tracked objects:
  4472 ;;		On entry : 1F/0
  4473 ;;		On exit  : 1F/0
  4474 ;;		Unchanged: FFFE0/0
  4475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4476 ;;      Params:         0       2       0       0       0       0       0       0
  4477 ;;      Locals:         0       2       0       0       0       0       0       0
  4478 ;;      Temps:          0       2       0       0       0       0       0       0
  4479 ;;      Totals:         0       6       0       0       0       0       0       0
  4480 ;;Total ram usage:        6 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    3
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_InteractServer
  4487 ;;		_ATCommand_Init
  4488 ;;		_ATCommand_SendCmd
  4489 ;;		_ATCommand_WaitData
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492  0E2C                     _strcpy:	
  4493                           
  4494                           ; Regs used in _strcpy: [wreg-status,0+pclath]
  4495                           ;strcpy@to stored from wreg
  4496  0E2C  00A4               	movwf	strcpy@to
  4497  0E2D  00A5               	movwf	strcpy@cp
  4498  0E2E                     l30445:	
  4499  0E2E  0825               	movf	strcpy@cp,w
  4500  0E2F  0086               	movwf	6
  4501  0E30  0187               	clrf	7
  4502  0E31  0AA5               	incf	strcpy@cp,f
  4503  0E32  0821               	movf	strcpy@from+1,w
  4504  0E33  00A3               	movwf	??_strcpy+1
  4505  0E34  0820               	movf	strcpy@from,w
  4506  0E35  00A2               	movwf	??_strcpy
  4507  0E36  0AA0               	incf	strcpy@from,f
  4508  0E37  1903               	skipnz
  4509  0E38  0AA1               	incf	strcpy@from+1,f
  4510  0E39  0084               	movwf	4
  4511  0E3A  0823               	movf	??_strcpy+1,w
  4512  0E3B  0085               	movwf	5
  4513  0E3C  0800               	movf	0,w	;code access
  4514  0E3D  3FC0               	movwi [0]fsr1
  4515  0E3E  0889               	movf	9,f
  4516  0E3F  1903               	btfsc	3,2
  4517  0E40  0008               	return
  4518  0E41  2E2E               	goto	l30445
  4519  0E42                     __end_of_strcpy:	
  4520  0E42                     __ptext2042:	
  4521 ;; =============== function ___lwmod ends ============
  4522                           
  4523                           
  4524 ;; *************** function ___lwdiv *****************
  4525 ;; Defined at:
  4526 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  4527 ;; Parameters:    Size  Location     Type
  4528 ;;  divisor         2    0[BANK0 ] unsigned int 
  4529 ;;  dividend        2    2[BANK0 ] unsigned int 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  quotient        2    5[BANK0 ] unsigned int 
  4532 ;;  counter         1    4[BANK0 ] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  2    0[BANK0 ] unsigned int 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 1F/0
  4539 ;;		On exit  : 1F/0
  4540 ;;		Unchanged: FFFE0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4542 ;;      Params:         0       4       0       0       0       0       0       0
  4543 ;;      Locals:         0       3       0       0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0
  4545 ;;      Totals:         0       7       0       0       0       0       0       0
  4546 ;;Total ram usage:        7 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    3
  4549 ;; This function calls:
  4550 ;;		Nothing
  4551 ;; This function is called by:
  4552 ;;		_InteractServer
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555  0E42                     ___lwdiv:	
  4556                           
  4557                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4558  0E42  01A5               	clrf	___lwdiv@quotient
  4559  0E43  01A6               	clrf	___lwdiv@quotient+1
  4560  0E44  0821               	movf	___lwdiv@divisor+1,w
  4561  0E45  0420               	iorwf	___lwdiv@divisor,w
  4562  0E46  1903               	skipnz
  4563  0E47  2E62               	goto	l32245
  4564  0E48  01A4               	clrf	___lwdiv@counter
  4565  0E49                     L10:	
  4566  0E49  0AA4               	incf	___lwdiv@counter,f
  4567  0E4A  1BA1               	btfsc	___lwdiv@divisor+1,7
  4568  0E4B  2E4F               	goto	l32233
  4569  0E4C  35A0               	lslf	___lwdiv@divisor,f
  4570  0E4D  0DA1               	rlf	___lwdiv@divisor+1,f
  4571  0E4E  2E49               	goto	L10
  4572  0E4F                     l32233:	
  4573  0E4F  35A5               	lslf	___lwdiv@quotient,f
  4574  0E50  0DA6               	rlf	___lwdiv@quotient+1,f
  4575  0E51  0821               	movf	___lwdiv@divisor+1,w
  4576  0E52  0223               	subwf	___lwdiv@dividend+1,w
  4577  0E53  1D03               	skipz
  4578  0E54  2E57               	goto	u6255
  4579  0E55  0820               	movf	___lwdiv@divisor,w
  4580  0E56  0222               	subwf	___lwdiv@dividend,w
  4581  0E57                     u6255:	
  4582  0E57  1C03               	skipc
  4583  0E58  2E5E               	goto	l32241
  4584  0E59  0820               	movf	___lwdiv@divisor,w
  4585  0E5A  02A2               	subwf	___lwdiv@dividend,f
  4586  0E5B  0821               	movf	___lwdiv@divisor+1,w
  4587  0E5C  3BA3               	subwfb	___lwdiv@dividend+1,f
  4588  0E5D  1425               	bsf	___lwdiv@quotient,0
  4589  0E5E                     l32241:	
  4590  0E5E  36A1               	lsrf	___lwdiv@divisor+1,f
  4591  0E5F  0CA0               	rrf	___lwdiv@divisor,f
  4592  0E60  0BA4               	decfsz	___lwdiv@counter,f
  4593  0E61  2E4F               	goto	l32233
  4594  0E62                     l32245:	
  4595  0E62  0826               	movf	___lwdiv@quotient+1,w
  4596  0E63  00A1               	movwf	?___lwdiv+1
  4597  0E64  0825               	movf	___lwdiv@quotient,w
  4598  0E65  00A0               	movwf	?___lwdiv
  4599  0E66  0008               	return
  4600  0E67                     __end_of___lwdiv:	
  4601  0E67                     __ptext1999:	
  4602 ;; =============== function _TestProc ends ============
  4603                           
  4604                           
  4605 ;; *************** function _CallProc *****************
  4606 ;; Defined at:
  4607 ;;		line 14 in file "F:\work\WYP\NBIoT1\Function.c"
  4608 ;; Parameters:    Size  Location     Type
  4609 ;;		None
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  retry           1   39[BANK0 ] unsigned char 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;		None               void
  4614 ;; Registers used:
  4615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  4616 ;; Tracked objects:
  4617 ;;		On entry : 10/F
  4618 ;;		On exit  : 1F/3
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4621 ;;      Params:         0       0       0       0       0       0       0       0
  4622 ;;      Locals:         0       1       0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0
  4624 ;;      Totals:         0       1       0       0       0       0       0       0
  4625 ;;Total ram usage:        1 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    8
  4628 ;; This function calls:
  4629 ;;		_LcdDisplay_CALL
  4630 ;;		_CallSend
  4631 ;;		_LcdDisplay_CurTemp
  4632 ;;		___delay_20ms
  4633 ;;		_LcdDisplay_Err
  4634 ;; This function is called by:
  4635 ;;		_main
  4636 ;;		_TestProc
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639  0E67                     _CallProc:	
  4640                           
  4641                           ;Function.c: 15: TXSTA=0b00100110;
  4642                           
  4643                           ; Regs used in _CallProc: [wreg-btemp+0+pclath+cstack]
  4644  0E67  3026               	movlw	38
  4645  0E68  0023               	movlb	3	; select bank3
  4646  0E69  009E               	movwf	30	;volatile
  4647                           
  4648                           ;Function.c: 16: RCSTA=0b10010000;
  4649  0E6A  3090               	movlw	144
  4650  0E6B  009D               	movwf	29	;volatile
  4651                           
  4652                           ;Function.c: 18: if(gFlags.bNotify)
  4653  0E6C  0020               	movlb	0	; select bank0
  4654  0E6D  1C65               	btfss	_gFlags,0
  4655  0E6E  2E71               	goto	l33329
  4656                           
  4657                           ;Function.c: 19: {
  4658                           ;Function.c: 20: LcdDisplay_CALL();
  4659  0E6F  27DC  3188         	fcall	_LcdDisplay_CALL
  4660  0E71                     l33329:	
  4661                           
  4662                           ;Function.c: 21: }
  4663                           ;Function.c: 23: unsigned char retry=2;
  4664  0E71  3002               	movlw	2
  4665  0E72  0020               	movlb	0	; select bank0
  4666  0E73  00C7               	movwf	CallProc@retry
  4667                           
  4668                           ;Function.c: 24: while(retry!=0)
  4669  0E74  2E7F               	goto	l33345
  4670  0E75                     l33339:	
  4671                           
  4672                           ;Function.c: 30: {
  4673                           ;Function.c: 31: retry--;
  4674  0E75  03C7               	decf	CallProc@retry,f
  4675                           
  4676                           ;Function.c: 36: LcdDisplay_CurTemp();
  4677  0E76  26B4  3188         	fcall	_LcdDisplay_CurTemp
  4678                           
  4679                           ;Function.c: 37: __delay_20ms(3000);
  4680  0E78  30B8               	movlw	184
  4681  0E79  0020               	movlb	0	; select bank0
  4682  0E7A  00A0               	movwf	?___delay_20ms
  4683  0E7B  300B               	movlw	11
  4684  0E7C  00A1               	movwf	?___delay_20ms+1
  4685  0E7D  2308  3188         	fcall	___delay_20ms
  4686  0E7F                     l33345:	
  4687                           ;Function.c: 38: }
  4688                           
  4689  0E7F  08C7               	movf	CallProc@retry,f
  4690  0E80  1903               	btfsc	3,2
  4691  0E81  2E88               	goto	l33347
  4692                           
  4693                           ;Function.c: 25: {
  4694                           ;Function.c: 26: ErrState=NoErr;
  4695  0E82  01E2               	clrf	_ErrState
  4696                           
  4697                           ;Function.c: 27: gFlags.bRetry=0;
  4698  0E83  1265               	bcf	_gFlags,4
  4699                           
  4700                           ;Function.c: 28: CallSend();
  4701  0E84  213E  3188         	fcall	_CallSend
  4702                           
  4703                           ;Function.c: 29: if(gFlags.bRetry)
  4704  0E86  1A65               	btfsc	_gFlags,4
  4705  0E87  2E75               	goto	l33339
  4706  0E88                     l33347:	
  4707                           
  4708                           ;Function.c: 41: }
  4709                           ;Function.c: 44: if(ErrState!=NoErr)
  4710  0E88  0862               	movf	_ErrState,w
  4711  0E89  1903               	btfsc	3,2
  4712  0E8A  2E8F               	goto	l33351
  4713                           
  4714                           ;Function.c: 45: {
  4715                           ;Function.c: 46: LcdDisplay_Err();
  4716  0E8B  3183  2367  3188   	fcall	_LcdDisplay_Err
  4717                           
  4718                           ;Function.c: 47: }
  4719  0E8E  2E90               	goto	l33353
  4720  0E8F                     l33351:	
  4721                           
  4722                           ;Function.c: 48: else
  4723                           ;Function.c: 49: {
  4724                           ;Function.c: 50: LcdDisplay_CurTemp();
  4725  0E8F  26B4               	fcall	_LcdDisplay_CurTemp
  4726  0E90                     l33353:	
  4727                           
  4728                           ;Function.c: 51: }
  4729                           ;Function.c: 53: TXSTA=0;
  4730  0E90  0023               	movlb	3	; select bank3
  4731  0E91  019E               	clrf	30	;volatile
  4732                           
  4733                           ;Function.c: 54: RCSTA=0;
  4734  0E92  019D               	clrf	29	;volatile
  4735  0E93  0008               	return
  4736  0E94                     __end_of_CallProc:	
  4737  0E94                     __ptext2041:	
  4738 ;; =============== function ___lbdiv ends ============
  4739                           
  4740                           
  4741 ;; *************** function ___lwmod *****************
  4742 ;; Defined at:
  4743 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  divisor         2    0[BANK0 ] unsigned int 
  4746 ;;  dividend        2    2[BANK0 ] unsigned int 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  counter         1    4[BANK0 ] unsigned char 
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  2    0[BANK0 ] unsigned int 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0
  4753 ;; Tracked objects:
  4754 ;;		On entry : 1F/0
  4755 ;;		On exit  : 1F/0
  4756 ;;		Unchanged: FFFE0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4758 ;;      Params:         0       4       0       0       0       0       0       0
  4759 ;;      Locals:         0       1       0       0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0       0       0       0
  4761 ;;      Totals:         0       5       0       0       0       0       0       0
  4762 ;;Total ram usage:        5 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    3
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_InteractServer
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771  0E94                     ___lwmod:	
  4772                           
  4773                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4774  0E94  0821               	movf	___lwmod@divisor+1,w
  4775  0E95  0420               	iorwf	___lwmod@divisor,w
  4776  0E96  1903               	skipnz
  4777  0E97  2EAF               	goto	l32265
  4778  0E98  01A4               	clrf	___lwmod@counter
  4779  0E99                     L9:	
  4780  0E99  0AA4               	incf	___lwmod@counter,f
  4781  0E9A  1BA1               	btfsc	___lwmod@divisor+1,7
  4782  0E9B  2E9F               	goto	l32257
  4783  0E9C  35A0               	lslf	___lwmod@divisor,f
  4784  0E9D  0DA1               	rlf	___lwmod@divisor+1,f
  4785  0E9E  2E99               	goto	L9
  4786  0E9F                     l32257:	
  4787  0E9F  0821               	movf	___lwmod@divisor+1,w
  4788  0EA0  0223               	subwf	___lwmod@dividend+1,w
  4789  0EA1  1D03               	skipz
  4790  0EA2  2EA5               	goto	u6295
  4791  0EA3  0820               	movf	___lwmod@divisor,w
  4792  0EA4  0222               	subwf	___lwmod@dividend,w
  4793  0EA5                     u6295:	
  4794  0EA5  1C03               	skipc
  4795  0EA6  2EAB               	goto	l32261
  4796  0EA7  0820               	movf	___lwmod@divisor,w
  4797  0EA8  02A2               	subwf	___lwmod@dividend,f
  4798  0EA9  0821               	movf	___lwmod@divisor+1,w
  4799  0EAA  3BA3               	subwfb	___lwmod@dividend+1,f
  4800  0EAB                     l32261:	
  4801  0EAB  36A1               	lsrf	___lwmod@divisor+1,f
  4802  0EAC  0CA0               	rrf	___lwmod@divisor,f
  4803  0EAD  0BA4               	decfsz	___lwmod@counter,f
  4804  0EAE  2E9F               	goto	l32257
  4805  0EAF                     l32265:	
  4806  0EAF  0823               	movf	___lwmod@dividend+1,w
  4807  0EB0  00A1               	movwf	?___lwmod+1
  4808  0EB1  0822               	movf	___lwmod@dividend,w
  4809  0EB2  00A0               	movwf	?___lwmod
  4810  0EB3  0008               	return
  4811  0EB4                     __end_of___lwmod:	
  4812  0EB4                     __ptext2036:	
  4813 ;; =============== function _LcdDisplay_Err ends ============
  4814                           
  4815                           
  4816 ;; *************** function _LcdDisplay_CurTemp *****************
  4817 ;; Defined at:
  4818 ;;		line 280 in file "F:\work\WYP\NBIoT1\Display.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  t2              1    8[BANK0 ] unsigned char 
  4823 ;;  t1              1    7[BANK0 ] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 1F/0
  4830 ;;		On exit  : 1F/F
  4831 ;;		Unchanged: FFFE0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4833 ;;      Params:         0       0       0       0       0       0       0       0
  4834 ;;      Locals:         0       2       0       0       0       0       0       0
  4835 ;;      Temps:          0       2       0       0       0       0       0       0
  4836 ;;      Totals:         0       4       0       0       0       0       0       0
  4837 ;;Total ram usage:        4 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    4
  4840 ;; This function calls:
  4841 ;;		___lbdiv
  4842 ;;		___lbmod
  4843 ;;		_LcdDisplayNum
  4844 ;; This function is called by:
  4845 ;;		_ReadTData
  4846 ;;		_CallProc
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849  0EB4                     _LcdDisplay_CurTemp:	
  4850  0EB4                     l32319:	
  4851                           ; Regs used in _LcdDisplay_CurTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4852                           
  4853                           
  4854                           ;Display.c: 281: unsigned char t1,t2;
  4855                           ;Display.c: 285: if(CurTemp.u16==0xf000)
  4856  0EB4  0857               	movf	_CurTemp+1,w
  4857  0EB5  3AF0               	xorlw	240
  4858  0EB6  0456               	iorwf	_CurTemp,w
  4859  0EB7  1D03               	skipz
  4860  0EB8  2EC7               	goto	l2243
  4861                           
  4862                           ;Display.c: 286: {
  4863                           ;Display.c: 287: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  4864  0EB9  3079               	movlw	121
  4865  0EBA  00E9               	movwf	_DpyNum
  4866                           
  4867                           ;Display.c: 288: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x08 | 0x10 | 0x20;
  4868  0EBB  303F               	movlw	63
  4869  0EBC  00EA               	movwf	_DpyNum+1
  4870                           
  4871                           ;Display.c: 289: DpyNum[2]=0x02 | 0x04;
  4872  0EBD  3006               	movlw	6
  4873  0EBE  00EB               	movwf	_DpyNum+2
  4874  0EBF                     l2236:	
  4875                           ;Display.c: 290: while(WA==0);
  4876                           
  4877  0EBF  002F               	movlb	15	; select bank15
  4878  0EC0  1E12               	btfss	18,4
  4879  0EC1  2EBF               	goto	l2236
  4880                           
  4881                           ;Display.c: 291: SEG3COM0=0;
  4882  0EC2  11A0               	bcf	32,3
  4883  0EC3                     l2239:	
  4884                           ;Display.c: 292: while(WA==0);
  4885                           
  4886  0EC3  1E12               	btfss	18,4
  4887  0EC4  2EC3               	goto	l2239
  4888                           
  4889                           ;Display.c: 293: SEG11COM0=0;
  4890  0EC5  11A1               	bcf	33,3
  4891                           
  4892                           ;Display.c: 294: }
  4893  0EC6  2F04               	goto	l32339
  4894  0EC7                     l2243:	
  4895  0EC7  002F               	movlb	15	; select bank15
  4896  0EC8  1E12               	btfss	18,4
  4897  0EC9  2EC7               	goto	l2243
  4898                           
  4899                           ;Display.c: 298: SEG3COM0=1;
  4900  0ECA  15A0               	bsf	32,3
  4901  0ECB                     l2246:	
  4902                           ;Display.c: 299: while(WA==0);
  4903                           
  4904  0ECB  1E12               	btfss	18,4
  4905  0ECC  2ECB               	goto	l2246
  4906                           
  4907                           ;Display.c: 300: SEG11COM0=1;
  4908  0ECD  15A1               	bsf	33,3
  4909                           
  4910                           ;Display.c: 301: t1=CurTemp.u16>>4;
  4911  0ECE  0020               	movlb	0	; select bank0
  4912  0ECF  0857               	movf	_CurTemp+1,w
  4913  0ED0  00A6               	movwf	??_LcdDisplay_CurTemp+1
  4914  0ED1  0856               	movf	_CurTemp,w
  4915  0ED2  00A5               	movwf	??_LcdDisplay_CurTemp
  4916  0ED3  3004               	movlw	4
  4917  0ED4                     u6435:	
  4918  0ED4  36A6               	lsrf	??_LcdDisplay_CurTemp+1,f
  4919  0ED5  0CA5               	rrf	??_LcdDisplay_CurTemp,f
  4920  0ED6  0B89               	decfsz	9,f
  4921  0ED7  2ED4               	goto	u6435
  4922  0ED8  0825               	movf	??_LcdDisplay_CurTemp,w
  4923  0ED9  00A7               	movwf	LcdDisplay_CurTemp@t1
  4924                           
  4925                           ;Display.c: 302: t2=CurTemp.u16&0x0f;
  4926  0EDA  0856               	movf	_CurTemp,w
  4927  0EDB  00A8               	movwf	LcdDisplay_CurTemp@t2
  4928  0EDC  300F               	movlw	15
  4929  0EDD  05A8               	andwf	LcdDisplay_CurTemp@t2,f
  4930                           
  4931                           ;Display.c: 303: t2=DS18X20_ToDecicel[t2];
  4932  0EDE  0828               	movf	LcdDisplay_CurTemp@t2,w
  4933  0EDF  3E13               	addlw	low (_DS18X20_ToDecicel| (0+32768))
  4934  0EE0  0084               	movwf	4
  4935  0EE1  3090               	movlw	high (_DS18X20_ToDecicel| (0+32768))
  4936  0EE2  1803               	skipnc
  4937  0EE3  3E01               	addlw	1
  4938  0EE4  0085               	movwf	5
  4939  0EE5  0800               	movf	0,w	;code access
  4940  0EE6  00A8               	movwf	LcdDisplay_CurTemp@t2
  4941                           
  4942                           ;Display.c: 304: DpyNum[0]=SegCode[t1/10];
  4943  0EE7  300A               	movlw	10
  4944  0EE8  00A0               	movwf	?___lbdiv
  4945  0EE9  0827               	movf	LcdDisplay_CurTemp@t1,w
  4946  0EEA  2791  3188         	fcall	___lbdiv
  4947  0EEC  3E01               	addlw	low (_SegCode| (0+32768))
  4948  0EED  0084               	movwf	4
  4949  0EEE  3090               	movlw	high (_SegCode| (0+32768))
  4950  0EEF  1803               	skipnc
  4951  0EF0  3E01               	addlw	1
  4952  0EF1  0085               	movwf	5
  4953  0EF2  0800               	movf	0,w	;code access
  4954  0EF3  00E9               	movwf	_DpyNum
  4955                           
  4956                           ;Display.c: 305: DpyNum[1]=SegCode[t1%10];
  4957  0EF4  300A               	movlw	10
  4958  0EF5  00A0               	movwf	?___lbmod
  4959  0EF6  0827               	movf	LcdDisplay_CurTemp@t1,w
  4960  0EF7  27C4               	fcall	___lbmod
  4961  0EF8  3184  2490         	fcall	PL4	;call to abstracted procedure
  4962                           
  4963                           ;Display.c: 306: DpyNum[1] |= 0x80;
  4964  0EFA  17EA               	bsf	_DpyNum+1,7
  4965                           
  4966                           ;Display.c: 307: DpyNum[2]=SegCode[t2];
  4967  0EFB  0828               	movf	LcdDisplay_CurTemp@t2,w
  4968  0EFC  3E01               	addlw	low (_SegCode| (0+32768))
  4969  0EFD  0084               	movwf	4
  4970  0EFE  3090               	movlw	high (_SegCode| (0+32768))
  4971  0EFF  1803               	skipnc
  4972  0F00  3E01               	addlw	1
  4973  0F01  0085               	movwf	5
  4974  0F02  0800               	movf	0,w	;code access
  4975  0F03  00EB               	movwf	_DpyNum+2
  4976  0F04                     l32339:	
  4977                           
  4978                           ;Display.c: 308: }
  4979                           ;Display.c: 309: LcdDisplayNum();
  4980  0F04  3183  2B87         	ljmp	l31973
  4981  0F06                     __end_of_LcdDisplay_CurTemp:	
  4982  0F06                     __ptext2056:	
  4983 ;; =============== function _MakeTxTemperature ends ============
  4984                           
  4985                           
  4986 ;; *************** function _eeprom_write *****************
  4987 ;; Defined at:
  4988 ;;		line 8 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\eewrite.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;  addr            1    wreg     unsigned char 
  4991 ;;  value           1    0[BANK0 ] unsigned char 
  4992 ;; Auto vars:     Size  Location     Type
  4993 ;;  addr            1    1[BANK0 ] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;		None               void
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 1F/0
  5000 ;;		On exit  : 1F/3
  5001 ;;		Unchanged: FFFE0/0
  5002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5003 ;;      Params:         0       1       0       0       0       0       0       0
  5004 ;;      Locals:         0       1       0       0       0       0       0       0
  5005 ;;      Temps:          0       0       0       0       0       0       0       0
  5006 ;;      Totals:         0       2       0       0       0       0       0       0
  5007 ;;Total ram usage:        2 bytes
  5008 ;; Hardware stack levels used:    1
  5009 ;; Hardware stack levels required when called:    3
  5010 ;; This function calls:
  5011 ;;		Nothing
  5012 ;; This function is called by:
  5013 ;;		_main
  5014 ;;		_SaveRomData
  5015 ;; This function uses a non-reentrant model
  5016 ;;
  5017  0F06                     _eeprom_write:	
  5018                           
  5019                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  5020                           ;eeprom_write@addr stored from wreg
  5021  0F06  00A1               	movwf	eeprom_write@addr
  5022  0F07                     l27415:	
  5023  0F07  0023               	movlb	3	; select bank3
  5024  0F08  1895               	btfsc	21,1
  5025  0F09  2F07               	goto	l27415
  5026  0F0A  0020               	movlb	0	; select bank0
  5027  0F0B  0821               	movf	eeprom_write@addr,w
  5028  0F0C  0023               	movlb	3	; select bank3
  5029  0F0D  0091               	movwf	17	;volatile
  5030  0F0E  0020               	movlb	0	; select bank0
  5031  0F0F  0820               	movf	eeprom_write@value,w
  5032  0F10  0023               	movlb	3	; select bank3
  5033  0F11  0093               	movwf	19	;volatile
  5034  0F12  303F               	movlw	63
  5035  0F13  0595               	andwf	21,f	;volatile
  5036  0F14  1003               	bcf	3,0
  5037  0F15  1B8B               	btfsc	11,7
  5038  0F16  1403               	bsf	3,0
  5039  0F17  138B               	bcf	11,7
  5040  0F18  1515               	bsf	21,2
  5041  0F19  3055               	movlw	85
  5042  0F1A  0096               	movwf	22	;volatile
  5043  0F1B  30AA               	movlw	170
  5044  0F1C  0096               	movwf	22	;volatile
  5045  0F1D  1495               	bsf	21,1
  5046  0F1E  1115               	bcf	21,2
  5047  0F1F  1803               	btfsc	3,0
  5048  0F20  178B               	bsf	11,7
  5049  0F21  0008               	return
  5050  0F22                     __end_of_eeprom_write:	
  5051  0F22                     __ptext2047:	
  5052 ;; =============== function _strncmp ends ============
  5053                           
  5054                           
  5055 ;; *************** function _strlen *****************
  5056 ;; Defined at:
  5057 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strlen.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;  s               2    0[BANK0 ] PTR const unsigned char 
  5060 ;;		 -> STR_35(11), STR_32(6), STR_30(5), ATCommand_ErrString(15), 
  5061 ;;		 -> ATCommand_OkString(15), 
  5062 ;; Auto vars:     Size  Location     Type
  5063 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
  5064 ;;		 -> STR_35(11), STR_32(6), STR_30(5), ATCommand_ErrString(15), 
  5065 ;;		 -> ATCommand_OkString(15), 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  2    0[BANK0 ] unsigned int 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  5070 ;; Tracked objects:
  5071 ;;		On entry : 1F/0
  5072 ;;		On exit  : 1F/0
  5073 ;;		Unchanged: FFFE0/0
  5074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5075 ;;      Params:         0       2       0       0       0       0       0       0
  5076 ;;      Locals:         0       2       0       0       0       0       0       0
  5077 ;;      Temps:          0       2       0       0       0       0       0       0
  5078 ;;      Totals:         0       6       0       0       0       0       0       0
  5079 ;;Total ram usage:        6 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    3
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_strstr
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088  0F22                     _strlen:	
  5089                           
  5090                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  5091  0F22  0821               	movf	strlen@s+1,w
  5092  0F23  00A5               	movwf	strlen@cp+1
  5093  0F24  0820               	movf	strlen@s,w
  5094  0F25  00A4               	movwf	strlen@cp
  5095  0F26                     l30519:	
  5096  0F26  0825               	movf	strlen@cp+1,w
  5097  0F27  00A3               	movwf	??_strlen+1
  5098  0F28  0824               	movf	strlen@cp,w
  5099  0F29  00A2               	movwf	??_strlen
  5100  0F2A  0AA4               	incf	strlen@cp,f
  5101  0F2B  1903               	skipnz
  5102  0F2C  0AA5               	incf	strlen@cp+1,f
  5103  0F2D  0084               	movwf	4
  5104  0F2E  0823               	movf	??_strlen+1,w
  5105  0F2F  0085               	movwf	5
  5106  0F30  0800               	movf	0,w	;code access
  5107  0F31  3800               	iorlw	0
  5108  0F32  1D03               	skipz
  5109  0F33  2F26               	goto	l30519
  5110  0F34  0820               	movf	strlen@s,w
  5111  0F35  0224               	subwf	strlen@cp,w
  5112  0F36  00A2               	movwf	??_strlen
  5113  0F37  0821               	movf	strlen@s+1,w
  5114  0F38  3B25               	subwfb	strlen@cp+1,w
  5115  0F39  00A3               	movwf	??_strlen+1
  5116  0F3A  0822               	movf	??_strlen,w
  5117  0F3B  3EFF               	addlw	255
  5118  0F3C  00A0               	movwf	?_strlen
  5119  0F3D  30FF               	movlw	255
  5120  0F3E  3D23               	addwfc	??_strlen+1,w
  5121  0F3F  00A1               	movwf	?_strlen+1
  5122  0F40  0008               	return
  5123  0F41                     __end_of_strlen:	
  5124  0F41                     __ptext2046:	
  5125 ;; =============== function _strchr ends ============
  5126                           
  5127                           
  5128 ;; *************** function _strncmp *****************
  5129 ;; Defined at:
  5130 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strncmp.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
  5133 ;;		 -> ATCommand_RxList(150), RAM(128), 
  5134 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
  5135 ;;		 -> STR_35(11), STR_32(6), STR_30(5), ATCommand_ErrString(15), 
  5136 ;;		 -> ATCommand_OkString(15), 
  5137 ;;  len             2   10[BANK0 ] unsigned int 
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  2    6[BANK0 ] int 
  5142 ;; Registers used:
  5143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  5144 ;; Tracked objects:
  5145 ;;		On entry : 1F/0
  5146 ;;		On exit  : 1F/0
  5147 ;;		Unchanged: FFFE0/0
  5148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5149 ;;      Params:         0       6       0       0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0
  5151 ;;      Temps:          0       1       0       0       0       0       0       0
  5152 ;;      Totals:         0       7       0       0       0       0       0       0
  5153 ;;Total ram usage:        7 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; Hardware stack levels required when called:    3
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_strstr
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162  0F41                     _strncmp:	
  5163  0F41                     l30537:	
  5164                           ; Regs used in _strncmp: [wreg-status,0+pclath]
  5165                           
  5166  0F41  3001               	movlw	1
  5167  0F42  02AA               	subwf	strncmp@len,f
  5168  0F43  3000               	movlw	0
  5169  0F44  3BAB               	subwfb	strncmp@len+1,f
  5170  0F45  0A2A               	incf	strncmp@len,w
  5171  0F46  1903               	skipnz
  5172  0F47  0A2B               	incf	strncmp@len+1,w
  5173  0F48  1903               	btfsc	3,2
  5174  0F49  2F76               	goto	l30539
  5175  0F4A  0826               	movf	strncmp@s1,w
  5176  0F4B  0086               	movwf	6
  5177  0F4C  0827               	movf	strncmp@s1+1,w
  5178  0F4D  0087               	movwf	7
  5179  0F4E  0801               	movf	1,w
  5180  0F4F  3A00               	xorlw	0
  5181  0F50  1903               	skipnz
  5182  0F51  2F60               	goto	l30531
  5183  0F52  0828               	movf	strncmp@s2,w
  5184  0F53  0084               	movwf	4
  5185  0F54  0829               	movf	strncmp@s2+1,w
  5186  0F55  0085               	movwf	5
  5187  0F56  0800               	movf	0,w	;code access
  5188  0F57  00AC               	movwf	??_strncmp
  5189  0F58  0826               	movf	strncmp@s1,w
  5190  0F59  0086               	movwf	6
  5191  0F5A  0827               	movf	strncmp@s1+1,w
  5192  0F5B  0087               	movwf	7
  5193  0F5C  0801               	movf	1,w
  5194  0F5D  062C               	xorwf	??_strncmp,w
  5195  0F5E  1903               	skipnz
  5196  0F5F  2F6F               	goto	l30535
  5197  0F60                     l30531:	
  5198  0F60  0826               	movf	strncmp@s1,w
  5199  0F61  0086               	movwf	6
  5200  0F62  0827               	movf	strncmp@s1+1,w
  5201  0F63  0087               	movwf	7
  5202  0F64  0828               	movf	strncmp@s2,w
  5203  0F65  0084               	movwf	4
  5204  0F66  0829               	movf	strncmp@s2+1,w
  5205  0F67  0085               	movwf	5
  5206  0F68  0800               	movf	0,w	;code access
  5207  0F69  0201               	subwf	1,w
  5208  0F6A  00A6               	movwf	?_strncmp
  5209  0F6B  01A7               	clrf	?_strncmp+1
  5210  0F6C  1C03               	skipc
  5211  0F6D  03A7               	decf	?_strncmp+1,f
  5212  0F6E  0008               	return
  5213  0F6F                     l30535:	
  5214  0F6F  0AA6               	incf	strncmp@s1,f
  5215  0F70  1903               	skipnz
  5216  0F71  0AA7               	incf	strncmp@s1+1,f
  5217  0F72  0AA8               	incf	strncmp@s2,f
  5218  0F73  1903               	skipnz
  5219  0F74  0AA9               	incf	strncmp@s2+1,f
  5220  0F75  2F41               	goto	l30537
  5221  0F76                     l30539:	
  5222  0F76  01A6               	clrf	?_strncmp
  5223  0F77  01A7               	clrf	?_strncmp+1
  5224  0F78  0008               	return
  5225  0F79                     __end_of_strncmp:	
  5226  0F79                     __ptext2045:	
  5227 ;; =============== function ___bmul ends ============
  5228                           
  5229                           
  5230 ;; *************** function _strchr *****************
  5231 ;; Defined at:
  5232 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\strchr.c"
  5233 ;; Parameters:    Size  Location     Type
  5234 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
  5235 ;;		 -> ATCommand_RxList(150), RAM(128), 
  5236 ;;  chr             2    2[BANK0 ] int 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;		None
  5239 ;; Return value:  Size  Location     Type
  5240 ;;                  2    wreg      PTR unsigned char 
  5241 ;; Registers used:
  5242 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5243 ;; Tracked objects:
  5244 ;;		On entry : 1F/0
  5245 ;;		On exit  : 1F/0
  5246 ;;		Unchanged: FFFE0/0
  5247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5248 ;;      Params:         0       4       0       0       0       0       0       0
  5249 ;;      Locals:         0       0       0       0       0       0       0       0
  5250 ;;      Temps:          0       2       0       0       0       0       0       0
  5251 ;;      Totals:         0       6       0       0       0       0       0       0
  5252 ;;Total ram usage:        6 bytes
  5253 ;; Hardware stack levels used:    1
  5254 ;; Hardware stack levels required when called:    3
  5255 ;; This function calls:
  5256 ;;		Nothing
  5257 ;; This function is called by:
  5258 ;;		_strstr
  5259 ;; This function uses a non-reentrant model
  5260 ;;
  5261  0F79                     _strchr:	
  5262  0F79                     l27808:	
  5263                           ; Regs used in _strchr: [wreg+fsr1l-status,0]
  5264                           
  5265  0F79  0820               	movf	strchr@ptr,w
  5266  0F7A  0086               	movwf	6
  5267  0F7B  0821               	movf	strchr@ptr+1,w
  5268  0F7C  0087               	movwf	7
  5269  0F7D  0801               	movf	1,w
  5270  0F7E  0622               	xorwf	strchr@chr,w
  5271  0F7F  1903               	btfsc	3,2
  5272  0F80  0008               	return
  5273  0F81  0821               	movf	strchr@ptr+1,w
  5274  0F82  00A5               	movwf	??_strchr+1
  5275  0F83  0820               	movf	strchr@ptr,w
  5276  0F84  00A4               	movwf	??_strchr
  5277  0F85  0AA0               	incf	strchr@ptr,f
  5278  0F86  1903               	skipnz
  5279  0F87  0AA1               	incf	strchr@ptr+1,f
  5280  0F88  0086               	movwf	6
  5281  0F89  0825               	movf	??_strchr+1,w
  5282  0F8A  0087               	movwf	7
  5283  0F8B  0881               	movf	1,f
  5284  0F8C  1D03               	skipz
  5285  0F8D  2F79               	goto	l27808
  5286  0F8E  01A0               	clrf	?_strchr
  5287  0F8F  01A1               	clrf	?_strchr+1
  5288  0F90  0008               	return
  5289  0F91                     __end_of_strchr:	
  5290  0F91                     __ptext2040:	
  5291 ;; =============== function ___lbmod ends ============
  5292                           
  5293                           
  5294 ;; *************** function ___lbdiv *****************
  5295 ;; Defined at:
  5296 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbdiv.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  dividend        1    wreg     unsigned char 
  5299 ;;  divisor         1    0[BANK0 ] unsigned char 
  5300 ;; Auto vars:     Size  Location     Type
  5301 ;;  dividend        1    1[BANK0 ] unsigned char 
  5302 ;;  quotient        1    3[BANK0 ] unsigned char 
  5303 ;;  counter         1    2[BANK0 ] unsigned char 
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      unsigned char 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 1F/0
  5310 ;;		On exit  : 1F/0
  5311 ;;		Unchanged: FFFE0/0
  5312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5313 ;;      Params:         0       1       0       0       0       0       0       0
  5314 ;;      Locals:         0       3       0       0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0
  5316 ;;      Totals:         0       4       0       0       0       0       0       0
  5317 ;;Total ram usage:        4 bytes
  5318 ;; Hardware stack levels used:    1
  5319 ;; Hardware stack levels required when called:    3
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_LcdDisplay_CSQ
  5324 ;;		_LcdDisplay_CurTemp
  5325 ;;		_LcdDisplay_Err
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328  0F91                     ___lbdiv:	
  5329                           
  5330                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  5331                           ;___lbdiv@dividend stored from wreg
  5332  0F91  00A1               	movwf	___lbdiv@dividend
  5333  0F92  01A3               	clrf	___lbdiv@quotient
  5334  0F93  0820               	movf	___lbdiv@divisor,w
  5335  0F94  1903               	btfsc	3,2
  5336  0F95  2FA7               	goto	l32289
  5337  0F96  01A2               	clrf	___lbdiv@counter
  5338  0F97                     l32275:	
  5339  0F97  0AA2               	incf	___lbdiv@counter,f
  5340  0F98  1BA0               	btfsc	___lbdiv@divisor,7
  5341  0F99  2F9C               	goto	l27506
  5342  0F9A  35A0               	lslf	___lbdiv@divisor,f
  5343  0F9B  2F97               	goto	l32275
  5344  0F9C                     l27506:	
  5345  0F9C  35A3               	lslf	___lbdiv@quotient,f
  5346  0F9D  0820               	movf	___lbdiv@divisor,w
  5347  0F9E  0221               	subwf	___lbdiv@dividend,w
  5348  0F9F  1C03               	skipc
  5349  0FA0  2FA4               	goto	l32285
  5350  0FA1  0820               	movf	___lbdiv@divisor,w
  5351  0FA2  02A1               	subwf	___lbdiv@dividend,f
  5352  0FA3  1423               	bsf	___lbdiv@quotient,0
  5353  0FA4                     l32285:	
  5354  0FA4  36A0               	lsrf	___lbdiv@divisor,f
  5355  0FA5  0BA2               	decfsz	___lbdiv@counter,f
  5356  0FA6  2F9C               	goto	l27506
  5357  0FA7                     l32289:	
  5358  0FA7  0823               	movf	___lbdiv@quotient,w
  5359  0FA8  0008               	return
  5360  0FA9                     __end_of___lbdiv:	
  5361  0FA9                     __ptext2037:	
  5362 ;; =============== function _LcdDisplay_CurTemp ends ============
  5363                           
  5364                           
  5365 ;; *************** function _LcdDisplay_CSQ *****************
  5366 ;; Defined at:
  5367 ;;		line 267 in file "F:\work\WYP\NBIoT1\Display.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  t2              1    6[BANK0 ] unsigned char 
  5372 ;;  t1              1    5[BANK0 ] unsigned char 
  5373 ;; Return value:  Size  Location     Type
  5374 ;;		None               void
  5375 ;; Registers used:
  5376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5377 ;; Tracked objects:
  5378 ;;		On entry : 1F/0
  5379 ;;		On exit  : 1F/F
  5380 ;;		Unchanged: FFFE0/0
  5381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5382 ;;      Params:         0       0       0       0       0       0       0       0
  5383 ;;      Locals:         0       2       0       0       0       0       0       0
  5384 ;;      Temps:          0       0       0       0       0       0       0       0
  5385 ;;      Totals:         0       2       0       0       0       0       0       0
  5386 ;;Total ram usage:        2 bytes
  5387 ;; Hardware stack levels used:    1
  5388 ;; Hardware stack levels required when called:    4
  5389 ;; This function calls:
  5390 ;;		___lbdiv
  5391 ;;		___lbmod
  5392 ;;		_LcdDisplayNum
  5393 ;; This function is called by:
  5394 ;;		_InitGPRS
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397  0FA9                     _LcdDisplay_CSQ:	
  5398                           
  5399                           ;Display.c: 268: unsigned char t1,t2;
  5400                           ;Display.c: 272: t1=CSQ/10;
  5401                           
  5402                           ; Regs used in _LcdDisplay_CSQ: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5403  0FA9  300A               	movlw	10
  5404  0FAA  00A0               	movwf	?___lbdiv
  5405  0FAB  0861               	movf	_CSQ,w
  5406  0FAC  2791  3188         	fcall	___lbdiv
  5407  0FAE  00A5               	movwf	LcdDisplay_CSQ@t1
  5408                           
  5409                           ;Display.c: 273: t2=CSQ%10;
  5410  0FAF  300A               	movlw	10
  5411  0FB0  00A0               	movwf	?___lbmod
  5412  0FB1  0861               	movf	_CSQ,w
  5413  0FB2  27C4               	fcall	___lbmod
  5414  0FB3  00A6               	movwf	LcdDisplay_CSQ@t2
  5415                           
  5416                           ;Display.c: 274: DpyNum[0]=0x01 | 0x02 | 0x10 | 0x20 | 0x40;
  5417  0FB4  3073               	movlw	115
  5418  0FB5  00E9               	movwf	_DpyNum
  5419                           
  5420                           ;Display.c: 275: DpyNum[1]=SegCode[t1];
  5421  0FB6  0825               	movf	LcdDisplay_CSQ@t1,w
  5422  0FB7  3184  2490         	fcall	PL4	;call to abstracted procedure
  5423                           
  5424                           ;Display.c: 276: DpyNum[2]=SegCode[t2];
  5425  0FB9  0826               	movf	LcdDisplay_CSQ@t2,w
  5426  0FBA  3E01               	addlw	low (_SegCode| (0+32768))
  5427  0FBB  0084               	movwf	4
  5428  0FBC  3090               	movlw	high (_SegCode| (0+32768))
  5429  0FBD  1803               	skipnc
  5430  0FBE  3E01               	addlw	1
  5431  0FBF  0085               	movwf	5
  5432  0FC0  0800               	movf	0,w	;code access
  5433  0FC1  00EB               	movwf	_DpyNum+2
  5434                           
  5435                           ;Display.c: 277: LcdDisplayNum();
  5436  0FC2  3183  2B87         	ljmp	l31973
  5437  0FC4                     __end_of_LcdDisplay_CSQ:	
  5438  0FC4                     __ptext2039:	
  5439 ;; =============== function _LcdDisplayAll ends ============
  5440                           
  5441                           
  5442 ;; *************** function ___lbmod *****************
  5443 ;; Defined at:
  5444 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\lbmod.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  dividend        1    wreg     unsigned char 
  5447 ;;  divisor         1    0[BANK0 ] unsigned char 
  5448 ;; Auto vars:     Size  Location     Type
  5449 ;;  dividend        1    2[BANK0 ] unsigned char 
  5450 ;;  rem             1    4[BANK0 ] unsigned char 
  5451 ;;  counter         1    3[BANK0 ] unsigned char 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  1    wreg      unsigned char 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 1F/0
  5458 ;;		On exit  : 1F/0
  5459 ;;		Unchanged: FFFE0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5461 ;;      Params:         0       1       0       0       0       0       0       0
  5462 ;;      Locals:         0       3       0       0       0       0       0       0
  5463 ;;      Temps:          0       1       0       0       0       0       0       0
  5464 ;;      Totals:         0       5       0       0       0       0       0       0
  5465 ;;Total ram usage:        5 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; Hardware stack levels required when called:    3
  5468 ;; This function calls:
  5469 ;;		Nothing
  5470 ;; This function is called by:
  5471 ;;		_LcdDisplay_CSQ
  5472 ;;		_LcdDisplay_CurTemp
  5473 ;;		_LcdDisplay_Err
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476  0FC4                     ___lbmod:	
  5477                           
  5478                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  5479                           ;___lbmod@dividend stored from wreg
  5480  0FC4  00A2               	movwf	___lbmod@dividend
  5481  0FC5  3008               	movlw	8
  5482  0FC6  00A3               	movwf	___lbmod@counter
  5483  0FC7  01A4               	clrf	___lbmod@rem
  5484  0FC8                     l30659:	
  5485  0FC8  0822               	movf	___lbmod@dividend,w
  5486  0FC9  00A1               	movwf	??___lbmod
  5487  0FCA  3007               	movlw	7
  5488  0FCB                     u3925:	
  5489  0FCB  36A1               	lsrf	??___lbmod,f
  5490  0FCC  0B89               	decfsz	9,f
  5491  0FCD  2FCB               	goto	u3925
  5492  0FCE  3524               	lslf	___lbmod@rem,w
  5493  0FCF  0421               	iorwf	??___lbmod,w
  5494  0FD0  00A4               	movwf	___lbmod@rem
  5495  0FD1  35A2               	lslf	___lbmod@dividend,f
  5496  0FD2  0820               	movf	___lbmod@divisor,w
  5497  0FD3  0224               	subwf	___lbmod@rem,w
  5498  0FD4  1C03               	skipc
  5499  0FD5  2FD8               	goto	l30667
  5500  0FD6  0820               	movf	___lbmod@divisor,w
  5501  0FD7  02A4               	subwf	___lbmod@rem,f
  5502  0FD8                     l30667:	
  5503  0FD8  0BA3               	decfsz	___lbmod@counter,f
  5504  0FD9  2FC8               	goto	l30659
  5505  0FDA  0824               	movf	___lbmod@rem,w
  5506  0FDB  0008               	return
  5507  0FDC                     __end_of___lbmod:	
  5508  0FDC                     __ptext2034:	
  5509 ;; =============== function _GetRomData ends ============
  5510                           
  5511                           
  5512 ;; *************** function _LcdDisplay_CALL *****************
  5513 ;; Defined at:
  5514 ;;		line 326 in file "F:\work\WYP\NBIoT1\Display.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;		None               void
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, pclath, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 1F/0
  5525 ;;		On exit  : 1F/F
  5526 ;;		Unchanged: FFFE0/0
  5527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5528 ;;      Params:         0       0       0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; Hardware stack levels required when called:    4
  5535 ;; This function calls:
  5536 ;;		_LcdDisplayNum
  5537 ;; This function is called by:
  5538 ;;		_CallProc
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541  0FDC                     _LcdDisplay_CALL:	
  5542                           
  5543                           ;Display.c: 327: DpyNum[0]=0x40;
  5544                           
  5545                           ; Regs used in _LcdDisplay_CALL: [wreg+status,2+status,0+pclath+cstack]
  5546  0FDC  3040               	movlw	64
  5547  0FDD  00E9               	movwf	_DpyNum
  5548                           
  5549                           ;Display.c: 328: DpyNum[1]=0x40;
  5550  0FDE  00EA               	movwf	_DpyNum+1
  5551                           
  5552                           ;Display.c: 329: DpyNum[2]=0x40;
  5553  0FDF  00EB               	movwf	_DpyNum+2
  5554                           
  5555                           ;Display.c: 330: LcdDisplayNum();
  5556  0FE0  3183  2B87         	ljmp	l31973
  5557  0FE2                     __end_of_LcdDisplay_CALL:	
  5558  0FE2                     __ptext2011:	
  5559 ;; =============== function _ATCommand_SendCmd ends ============
  5560                           
  5561                           
  5562 ;; *************** function _PowerON *****************
  5563 ;; Defined at:
  5564 ;;		line 7 in file "F:\work\WYP\NBIoT1\Function.c"
  5565 ;; Parameters:    Size  Location     Type
  5566 ;;		None
  5567 ;; Auto vars:     Size  Location     Type
  5568 ;;		None
  5569 ;; Return value:  Size  Location     Type
  5570 ;;		None               void
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0, pclath, cstack
  5573 ;; Tracked objects:
  5574 ;;		On entry : 1F/0
  5575 ;;		On exit  : 1F/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5578 ;;      Params:         0       0       0       0       0       0       0       0
  5579 ;;      Locals:         0       0       0       0       0       0       0       0
  5580 ;;      Temps:          0       0       0       0       0       0       0       0
  5581 ;;      Totals:         0       0       0       0       0       0       0       0
  5582 ;;Total ram usage:        0 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; Hardware stack levels required when called:    4
  5585 ;; This function calls:
  5586 ;;		___delay_20ms
  5587 ;; This function is called by:
  5588 ;;		_InitGPRS
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591  0FE2                     _PowerON:	
  5592                           
  5593                           ;Function.c: 8: LATD5=1;
  5594                           
  5595                           ; Regs used in _PowerON: [wreg+status,2+status,0+pclath+cstack]
  5596  0FE2  0022               	movlb	2	; select bank2
  5597  0FE3  168F               	bsf	15,5
  5598                           
  5599                           ;Function.c: 9: __delay_20ms(5);
  5600  0FE4  3005               	movlw	5
  5601  0FE5  0020               	movlb	0	; select bank0
  5602  0FE6  00A0               	movwf	?___delay_20ms
  5603  0FE7  01A1               	clrf	?___delay_20ms+1
  5604  0FE8  2308  3188         	fcall	___delay_20ms
  5605                           
  5606                           ;Function.c: 10: LATD5=0;
  5607  0FEA  0022               	movlb	2	; select bank2
  5608  0FEB  128F               	bcf	15,5
  5609                           
  5610                           ;Function.c: 11: __delay_20ms(500);
  5611  0FEC  30F4               	movlw	244
  5612  0FED  0020               	movlb	0	; select bank0
  5613  0FEE  00A0               	movwf	?___delay_20ms
  5614  0FEF  3001               	movlw	1
  5615  0FF0  00A1               	movwf	?___delay_20ms+1
  5616  0FF1  2B08               	ljmp	l12779
  5617  0FF2                     __end_of_PowerON:	
  5618  0FF2                     __ptext2006:	
  5619 ;; =============== function _DS18X20_ReadMeas ends ============
  5620                           
  5621                           
  5622 ;; *************** function _DS18X20_StartMeas *****************
  5623 ;; Defined at:
  5624 ;;		line 133 in file "F:\work\WYP\NBIoT1\DS18x20.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      unsigned char 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, pclath, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 10/0
  5635 ;;		On exit  : 1F/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5638 ;;      Params:         0       0       0       0       0       0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used:    1
  5644 ;; Hardware stack levels required when called:    5
  5645 ;; This function calls:
  5646 ;;		_OneWire_Reset
  5647 ;;		_OneWire_Command
  5648 ;; This function is called by:
  5649 ;;		_ReadTData
  5650 ;; This function uses a non-reentrant model
  5651 ;;
  5652  0FF2                     _DS18X20_StartMeas:	
  5653                           
  5654                           ;DS18x20.c: 134: if(OneWire_Reset())
  5655                           
  5656                           ; Regs used in _DS18X20_StartMeas: [wreg+status,2+status,0+pclath+cstack]
  5657  0FF2  3181  2193  3188   	fcall	_OneWire_Reset
  5658  0FF5  3A00               	xorlw	0
  5659  0FF6  1D03               	btfss	3,2
  5660                           
  5661                           ;DS18x20.c: 135: return 0x01;
  5662  0FF7  3401               	retlw	1
  5663                           
  5664                           ;DS18x20.c: 136: return OneWire_Command( 0x44);
  5665  0FF8  3044               	movlw	68
  5666  0FF9  3180  28B3         	ljmp	_OneWire_Command
  5667  0FFB                     __end_of_DS18X20_StartMeas:	
  5668  0FFB                     PL5:	
  5669  0FFB  0020               	movlb	0	; select bank0
  5670  0FFC  0AC3               	incf	InteractServer@j,f
  5671  0FFD  300C               	movlw	12
  5672  0FFE  0243               	subwf	InteractServer@j,w
  5673  0FFF  0008               	return
  5674                           
  5675                           	psect	bssCOMMON
  5676  0077                     __pbssCOMMON:	
  5677  0077                     _RunTick:	
  5678  0077                     	ds	2
  5679  0079                     _ATCommand_Clear:	
  5680  0079                     	ds	1
  5681  007A                     _ATCommand_Flags:	
  5682  007A                     	ds	1
  5683  007B                     _ATCommand_RxCount:	
  5684  007B                     	ds	1
  5685                           
  5686                           	psect	bssBANK0
  5687  004E                     __pbssBANK0:	
  5688  004E                     _TxTemperature:	
  5689  004E                     	ds	4
  5690  0052                     _ATCommand_WaitACKTick:	
  5691  0052                     	ds	2
  5692  0054                     _ATCommand_WaitACKTimes:	
  5693  0054                     	ds	2
  5694  0056                     _CurTemp:	
  5695  0056                     	ds	2
  5696  0058                     _MeasurementTick:	
  5697  0058                     	ds	2
  5698  005A                     _NeedMeasurementTick:	
  5699  005A                     	ds	2
  5700  005C                     _SystemTick:	
  5701  005C                     	ds	2
  5702  005E                     _TCN75_RegReadResualt:	
  5703  005E                     	ds	2
  5704  0060                     _ATCommand_RetryTimes:	
  5705  0060                     	ds	1
  5706  0061                     _CSQ:	
  5707  0061                     	ds	1
  5708  0062                     _ErrState:	
  5709  0062                     	ds	1
  5710  0063                     _TCN75_Config:	
  5711  0063                     	ds	1
  5712  0064                     _TListIndex:	
  5713  0064                     	ds	1
  5714  0065                     _gFlags:	
  5715  0065                     	ds	1
  5716  0066                     _RomParams:	
  5717  0066                     	ds	2
  5718  0068                     _TxErrDataIndex:	
  5719  0068                     	ds	1
  5720                           
  5721                           	psect	dataBANK0
  5722  0069                     __pdataBANK0:	
  5723  0069                     _DpyNum:	
  5724  0069                     	ds	6
  5725                           
  5726                           	psect	bssBANK1
  5727  00A0                     __pbssBANK1:	
  5728  00A0                     _ICCID:	
  5729  00A0                     	ds	21
  5730  00B5                     _ATCommand_ErrString:	
  5731  00B5                     	ds	15
  5732  00C4                     _ATCommand_OkString:	
  5733  00C4                     	ds	15
  5734  00D3                     _DS18X20_Scratchpad:	
  5735  00D3                     	ds	9
  5736                           
  5737                           	psect	bssBANK2
  5738  0120                     __pbssBANK2:	
  5739  0120                     _TList:	
  5740  0120                     	ds	24
  5741                           
  5742                           	psect	clrtext
  5743  05C8                     clear_ram:	
  5744                           ;	Called with FSR0 containing the base address, and
  5745                           ;	btemp/btemp+1 has the size to clear
  5746                           
  5747  05C8  0064               	clrwdt	;clear the watchdog before getting into this loop
  5748  05C9                     clrloop:	
  5749  05C9  0180               	clrf	0	;clear RAM location pointed to by FSR
  5750  05CA  3101               	addfsr 0,1
  5751  05CB  3001               	movlw	1
  5752  05CC  02FE               	subwf	126,f
  5753  05CD  3000               	movlw	0
  5754  05CE  3BFF               	subwfb	127,f
  5755  05CF  087F               	movf	127,w
  5756  05D0  047E               	iorwf	126,w
  5757  05D1  1903               	btfsc	3,2
  5758  05D2  3400               	retlw	0	;all done for this memory range, return
  5759  05D3  2DC9               	goto	clrloop	;have we reached the end yet?
  5760                           
  5761                           	psect	cstackCOMMON
  5762  0070                     __pcstackCOMMON:	
  5763  0070                     ?_SaveRomData:	
  5764  0070                     ?_ATCommand_Init:	
  5765                           ; 0 bytes @ 0x0
  5766                           
  5767  0070                     ?_TCN75_Init:	
  5768                           ; 0 bytes @ 0x0
  5769                           
  5770  0070                     ?_ReadTData:	
  5771                           ; 0 bytes @ 0x0
  5772                           
  5773  0070                     ?_TestProc:	
  5774                           ; 0 bytes @ 0x0
  5775                           
  5776  0070                     ?_CallProc:	
  5777                           ; 0 bytes @ 0x0
  5778                           
  5779  0070                     ?_ATCommand_ProcRx:	
  5780                           ; 0 bytes @ 0x0
  5781                           
  5782  0070                     ?_CallSend:	
  5783                           ; 0 bytes @ 0x0
  5784                           
  5785  0070                     ?_InitGPRS:	
  5786                           ; 0 bytes @ 0x0
  5787                           
  5788  0070                     ?_Uart1_PutHex:	
  5789                           ; 0 bytes @ 0x0
  5790                           
  5791  0070                     ?_Uart1_PutChar:	
  5792                           ; 0 bytes @ 0x0
  5793                           
  5794  0070                     ?_isgraph:	
  5795                           ; 0 bytes @ 0x0
  5796                           
  5797  0070                     ??_isgraph:	
  5798                           ; 1 bit 
  5799                           
  5800  0070                     ?_OneWire_WriteByte:	
  5801                           ; 0 bytes @ 0x0
  5802                           
  5803  0070                     ?_SimI2C_Init:	
  5804                           ; 0 bytes @ 0x0
  5805                           
  5806  0070                     ?_SimI2C_Start:	
  5807                           ; 0 bytes @ 0x0
  5808                           
  5809  0070                     ?_SimI2C_SendByte:	
  5810                           ; 0 bytes @ 0x0
  5811                           
  5812  0070                     ?_SimI2C_Ack:	
  5813                           ; 0 bytes @ 0x0
  5814                           
  5815  0070                     ?_SimI2C_NoAck:	
  5816                           ; 0 bytes @ 0x0
  5817                           
  5818  0070                     ?_SimI2C_Stop:	
  5819                           ; 0 bytes @ 0x0
  5820                           
  5821  0070                     ?_isdigit:	
  5822                           ; 0 bytes @ 0x0
  5823                           
  5824  0070                     ?_LcdDisplayNum:	
  5825                           ; 1 bit 
  5826                           
  5827  0070                     ?_LcdDisplayAll:	
  5828                           ; 0 bytes @ 0x0
  5829                           
  5830  0070                     ?_LcdDisplay_CSQ:	
  5831                           ; 0 bytes @ 0x0
  5832                           
  5833  0070                     ?_LcdDisplay_CurTemp:	
  5834                           ; 0 bytes @ 0x0
  5835                           
  5836  0070                     ?_LcdDisplay_Err:	
  5837                           ; 0 bytes @ 0x0
  5838                           
  5839  0070                     ?_LcdDisplay_CALL:	
  5840                           ; 0 bytes @ 0x0
  5841                           
  5842  0070                     ?_DisplayInit:	
  5843                           ; 0 bytes @ 0x0
  5844                           
  5845  0070                     ?_InitMCU:	
  5846                           ; 0 bytes @ 0x0
  5847                           
  5848  0070                     ?_InitVariable:	
  5849                           ; 0 bytes @ 0x0
  5850                           
  5851  0070                     ?_InitSystem:	
  5852                           ; 0 bytes @ 0x0
  5853                           
  5854  0070                     ?_main:	
  5855                           ; 0 bytes @ 0x0
  5856                           
  5857  0070                     ?_highISR:	
  5858                           ; 0 bytes @ 0x0
  5859                           
  5860  0070                     ?_PowerON:	
  5861                           ; 0 bytes @ 0x0
  5862                           
  5863  0070                     ?_GetRomData:	
  5864                           ; 0 bytes @ 0x0
  5865                           
  5866  0070                     ?_OneWire_Reset:	
  5867                           ; 1 bytes @ 0x0
  5868                           
  5869  0070                     ?_TCN75_SetConfig:	
  5870                           ; 1 bytes @ 0x0
  5871                           
  5872  0070                     ?_DS18X20_StartMeas:	
  5873                           ; 1 bytes @ 0x0
  5874                           
  5875  0070                     ?_DS18X20_ReadMeas:	
  5876                           ; 1 bytes @ 0x0
  5877                           
  5878  0070                     ?_TCN75_ReadReg:	
  5879                           ; 1 bytes @ 0x0
  5880                           
  5881  0070                     ?_InteractServer:	
  5882                           ; 1 bytes @ 0x0
  5883                           
  5884  0070                     ?_eeprom_read:	
  5885                           ; 1 bytes @ 0x0
  5886                           
  5887  0070                     ?_ATCommand_WaitData:	
  5888                           ; 1 bytes @ 0x0
  5889                           
  5890  0070                     ?_OneWire_Command:	
  5891                           ; 1 bytes @ 0x0
  5892                           
  5893  0070                     ?_OneWire_ReadByte:	
  5894                           ; 1 bytes @ 0x0
  5895                           
  5896  0070                     ?_SimI2C_RecAck:	
  5897                           ; 1 bytes @ 0x0
  5898                           
  5899  0070                     ?_SimI2C_ReadByte:	
  5900                           ; 1 bytes @ 0x0
  5901                           
  5902  0070                     _isgraph$31777:	
  5903                           ; 1 bytes @ 0x0
  5904                           
  5905                           
  5906                           ; 1 bytes @ 0x0
  5907  0070                     	ds	1
  5908  0071                     isgraph@c:	
  5909                           
  5910                           ; 1 bytes @ 0x1
  5911  0071                     	ds	1
  5912  0072                     ??_ATCommand_ProcRx:	
  5913                           
  5914                           ; 0 bytes @ 0x2
  5915  0072                     	ds	3
  5916  0075                     ATCommand_ProcRx@rx:	
  5917                           
  5918                           ; 1 bytes @ 0x5
  5919  0075                     	ds	1
  5920  0076                     ??_highISR:	
  5921  0076                     highISR@rx:	
  5922                           ; 0 bytes @ 0x6
  5923                           
  5924                           
  5925                           ; 1 bytes @ 0x6
  5926  0076                     	ds	1
  5927                           
  5928                           	psect	cstackBANK0
  5929  0020                     __pcstackBANK0:	
  5930  0020                     ??_OneWire_Reset:	
  5931  0020                     ??_TCN75_Init:	
  5932                           ; 0 bytes @ 0x0
  5933                           
  5934  0020                     ?___delay_20ms:	
  5935                           ; 0 bytes @ 0x0
  5936                           
  5937  0020                     ?_eeprom_write:	
  5938                           ; 0 bytes @ 0x0
  5939                           
  5940  0020                     ?_MakeTxTemperature:	
  5941                           ; 0 bytes @ 0x0
  5942                           
  5943  0020                     ??_Uart1_PutChar:	
  5944                           ; 0 bytes @ 0x0
  5945                           
  5946  0020                     ??_eeprom_read:	
  5947                           ; 0 bytes @ 0x0
  5948                           
  5949  0020                     ??_OneWire_ReadByte:	
  5950                           ; 0 bytes @ 0x0
  5951                           
  5952  0020                     ??_OneWire_WriteByte:	
  5953                           ; 0 bytes @ 0x0
  5954                           
  5955  0020                     ??_SimI2C_Init:	
  5956                           ; 0 bytes @ 0x0
  5957                           
  5958  0020                     ??_SimI2C_Start:	
  5959                           ; 0 bytes @ 0x0
  5960                           
  5961  0020                     ??_SimI2C_SendByte:	
  5962                           ; 0 bytes @ 0x0
  5963                           
  5964  0020                     ??_SimI2C_RecAck:	
  5965                           ; 0 bytes @ 0x0
  5966                           
  5967  0020                     ??_SimI2C_ReadByte:	
  5968                           ; 0 bytes @ 0x0
  5969                           
  5970  0020                     ??_SimI2C_Ack:	
  5971                           ; 0 bytes @ 0x0
  5972                           
  5973  0020                     ??_SimI2C_NoAck:	
  5974                           ; 0 bytes @ 0x0
  5975                           
  5976  0020                     ??_SimI2C_Stop:	
  5977                           ; 0 bytes @ 0x0
  5978                           
  5979  0020                     ??_isdigit:	
  5980                           ; 0 bytes @ 0x0
  5981                           
  5982  0020                     ??_LcdDisplayNum:	
  5983                           ; 0 bytes @ 0x0
  5984                           
  5985  0020                     ??_LcdDisplayAll:	
  5986                           ; 0 bytes @ 0x0
  5987                           
  5988  0020                     ??_LcdDisplay_CALL:	
  5989                           ; 0 bytes @ 0x0
  5990                           
  5991  0020                     ??_DisplayInit:	
  5992                           ; 0 bytes @ 0x0
  5993                           
  5994  0020                     ??_InitMCU:	
  5995                           ; 0 bytes @ 0x0
  5996                           
  5997  0020                     ?_strcpy:	
  5998                           ; 0 bytes @ 0x0
  5999                           
  6000  0020                     ?_GetVerify_Sum:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0020                     ?_GetVerify_CRC8:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0020                     ?___bmul:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0020                     ?___lbdiv:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0020                     ?___lbmod:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0020                     ?_strlen:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0020                     ?_strchr:	
  6019                           ; 2 bytes @ 0x0
  6020                           
  6021  0020                     ?___wmul:	
  6022                           ; 2 bytes @ 0x0
  6023                           
  6024  0020                     ?___lwdiv:	
  6025                           ; 2 bytes @ 0x0
  6026                           
  6027  0020                     ?___lwmod:	
  6028                           ; 2 bytes @ 0x0
  6029                           
  6030  0020                     LcdDisplayAll@x:	
  6031                           ; 2 bytes @ 0x0
  6032                           
  6033  0020                     Uart1_PutChar@c:	
  6034                           ; 1 bytes @ 0x0
  6035                           
  6036  0020                     SimI2C_RecAck@t:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039  0020                     SimI2C_SendByte@data:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042  0020                     SimI2C_ReadByte@data:	
  6043                           ; 1 bytes @ 0x0
  6044                           
  6045  0020                     eeprom_write@value:	
  6046                           ; 1 bytes @ 0x0
  6047                           
  6048  0020                     _isdigit$31774:	
  6049                           ; 1 bytes @ 0x0
  6050                           
  6051  0020                     ___bmul@multiplicand:	
  6052                           ; 1 bytes @ 0x0
  6053                           
  6054  0020                     ___lbdiv@divisor:	
  6055                           ; 1 bytes @ 0x0
  6056                           
  6057  0020                     ___lbmod@divisor:	
  6058                           ; 1 bytes @ 0x0
  6059                           
  6060  0020                     MakeTxTemperature@T:	
  6061                           ; 1 bytes @ 0x0
  6062                           
  6063  0020                     ___delay_20ms@x:	
  6064                           ; 2 bytes @ 0x0
  6065                           
  6066  0020                     GetVerify_Sum@Count:	
  6067                           ; 2 bytes @ 0x0
  6068                           
  6069  0020                     GetVerify_CRC8@Count:	
  6070                           ; 2 bytes @ 0x0
  6071                           
  6072  0020                     strcpy@from:	
  6073                           ; 2 bytes @ 0x0
  6074                           
  6075  0020                     ___wmul@multiplier:	
  6076                           ; 2 bytes @ 0x0
  6077                           
  6078  0020                     ___lwdiv@divisor:	
  6079                           ; 2 bytes @ 0x0
  6080                           
  6081  0020                     ___lwmod@divisor:	
  6082                           ; 2 bytes @ 0x0
  6083                           
  6084  0020                     strchr@ptr:	
  6085                           ; 2 bytes @ 0x0
  6086                           
  6087  0020                     strlen@s:	
  6088                           ; 2 bytes @ 0x0
  6089                           
  6090                           
  6091                           ; 2 bytes @ 0x0
  6092  0020                     	ds	1
  6093  0021                     ??_eeprom_write:	
  6094  0021                     ?_Uart1_PutString:	
  6095                           ; 0 bytes @ 0x1
  6096                           
  6097  0021                     ??_Uart1_PutHex:	
  6098                           ; 0 bytes @ 0x1
  6099                           
  6100  0021                     ??___bmul:	
  6101                           ; 0 bytes @ 0x1
  6102                           
  6103  0021                     ??___lbdiv:	
  6104                           ; 0 bytes @ 0x1
  6105                           
  6106  0021                     ??___lbmod:	
  6107                           ; 0 bytes @ 0x1
  6108                           
  6109  0021                     OneWire_Reset@Retry:	
  6110                           ; 0 bytes @ 0x1
  6111                           
  6112  0021                     OneWire_WriteByte@val:	
  6113                           ; 1 bytes @ 0x1
  6114                           
  6115  0021                     OneWire_ReadByte@b:	
  6116                           ; 1 bytes @ 0x1
  6117                           
  6118  0021                     Uart1_PutHex@c:	
  6119                           ; 1 bytes @ 0x1
  6120                           
  6121  0021                     SimI2C_SendByte@t:	
  6122                           ; 1 bytes @ 0x1
  6123                           
  6124  0021                     SimI2C_ReadByte@i:	
  6125                           ; 1 bytes @ 0x1
  6126                           
  6127  0021                     eeprom_write@addr:	
  6128                           ; 1 bytes @ 0x1
  6129                           
  6130  0021                     isdigit@c:	
  6131                           ; 1 bytes @ 0x1
  6132                           
  6133  0021                     ___bmul@product:	
  6134                           ; 1 bytes @ 0x1
  6135                           
  6136  0021                     ___lbdiv@dividend:	
  6137                           ; 1 bytes @ 0x1
  6138                           
  6139  0021                     Uart1_PutString@pString:	
  6140                           ; 1 bytes @ 0x1
  6141                           
  6142                           
  6143                           ; 2 bytes @ 0x1
  6144  0021                     	ds	1
  6145  0022                     ??___delay_20ms:	
  6146  0022                     ??_MakeTxTemperature:	
  6147                           ; 0 bytes @ 0x2
  6148                           
  6149  0022                     ??_strcpy:	
  6150                           ; 0 bytes @ 0x2
  6151                           
  6152  0022                     ??_GetVerify_Sum:	
  6153                           ; 0 bytes @ 0x2
  6154                           
  6155  0022                     ??_GetVerify_CRC8:	
  6156                           ; 0 bytes @ 0x2
  6157                           
  6158  0022                     ??_strlen:	
  6159                           ; 0 bytes @ 0x2
  6160                           
  6161  0022                     MakeTxTemperature@x:	
  6162                           ; 0 bytes @ 0x2
  6163                           
  6164  0022                     OneWire_Reset@r:	
  6165                           ; 1 bytes @ 0x2
  6166                           
  6167  0022                     OneWire_WriteByte@temp:	
  6168                           ; 1 bytes @ 0x2
  6169                           
  6170  0022                     OneWire_ReadByte@value:	
  6171                           ; 1 bytes @ 0x2
  6172                           
  6173  0022                     Uart1_PutHex@b:	
  6174                           ; 1 bytes @ 0x2
  6175                           
  6176  0022                     SimI2C_SendByte@i:	
  6177                           ; 1 bytes @ 0x2
  6178                           
  6179  0022                     eeprom_read@addr:	
  6180                           ; 1 bytes @ 0x2
  6181                           
  6182  0022                     ___bmul@multiplier:	
  6183                           ; 1 bytes @ 0x2
  6184                           
  6185  0022                     ___lbdiv@counter:	
  6186                           ; 1 bytes @ 0x2
  6187                           
  6188  0022                     ___lbmod@dividend:	
  6189                           ; 1 bytes @ 0x2
  6190                           
  6191  0022                     ___wmul@multiplicand:	
  6192                           ; 1 bytes @ 0x2
  6193                           
  6194  0022                     ___lwdiv@dividend:	
  6195                           ; 2 bytes @ 0x2
  6196                           
  6197  0022                     ___lwmod@dividend:	
  6198                           ; 2 bytes @ 0x2
  6199                           
  6200  0022                     strchr@chr:	
  6201                           ; 2 bytes @ 0x2
  6202                           
  6203                           
  6204                           ; 2 bytes @ 0x2
  6205  0022                     	ds	1
  6206  0023                     ??_TCN75_SetConfig:	
  6207  0023                     ??_TCN75_ReadReg:	
  6208                           ; 0 bytes @ 0x3
  6209                           
  6210  0023                     ??_Uart1_PutString:	
  6211                           ; 0 bytes @ 0x3
  6212                           
  6213  0023                     ?_Uart1_PutString_Hex:	
  6214                           ; 0 bytes @ 0x3
  6215                           
  6216  0023                     OneWire_WriteByte@i:	
  6217                           ; 0 bytes @ 0x3
  6218                           
  6219  0023                     OneWire_ReadByte@i:	
  6220                           ; 1 bytes @ 0x3
  6221                           
  6222  0023                     TCN75_ReadReg@RegPoint:	
  6223                           ; 1 bytes @ 0x3
  6224                           
  6225  0023                     TCN75_SetConfig@ErrTimes:	
  6226                           ; 1 bytes @ 0x3
  6227                           
  6228  0023                     Uart1_PutString@c:	
  6229                           ; 1 bytes @ 0x3
  6230                           
  6231  0023                     GetVerify_CRC8@pBuff:	
  6232                           ; 1 bytes @ 0x3
  6233                           
  6234  0023                     ___lbdiv@quotient:	
  6235                           ; 1 bytes @ 0x3
  6236                           
  6237  0023                     ___lbmod@counter:	
  6238                           ; 1 bytes @ 0x3
  6239                           
  6240  0023                     Uart1_PutString_Hex@pString:	
  6241                           ; 1 bytes @ 0x3
  6242                           
  6243                           
  6244                           ; 2 bytes @ 0x3
  6245  0023                     	ds	1
  6246  0024                     ??_OneWire_Command:	
  6247  0024                     ??_strchr:	
  6248                           ; 0 bytes @ 0x4
  6249                           
  6250  0024                     ??_PowerON:	
  6251                           ; 0 bytes @ 0x4
  6252                           
  6253  0024                     ??___wmul:	
  6254                           ; 0 bytes @ 0x4
  6255                           
  6256  0024                     ??___lwdiv:	
  6257                           ; 0 bytes @ 0x4
  6258                           
  6259  0024                     ??___lwmod:	
  6260                           ; 0 bytes @ 0x4
  6261                           
  6262  0024                     OneWire_Command@command:	
  6263                           ; 0 bytes @ 0x4
  6264                           
  6265  0024                     TCN75_ReadReg@ErrTimes:	
  6266                           ; 1 bytes @ 0x4
  6267                           
  6268  0024                     TCN75_SetConfig@bRight:	
  6269                           ; 1 bytes @ 0x4
  6270                           
  6271  0024                     GetVerify_Sum@pBuff:	
  6272                           ; 1 bytes @ 0x4
  6273                           
  6274  0024                     GetVerify_CRC8@bit_counter:	
  6275                           ; 1 bytes @ 0x4
  6276                           
  6277  0024                     strcpy@to:	
  6278                           ; 1 bytes @ 0x4
  6279                           
  6280  0024                     ___lwdiv@counter:	
  6281                           ; 1 bytes @ 0x4
  6282                           
  6283  0024                     ___lwmod@counter:	
  6284                           ; 1 bytes @ 0x4
  6285                           
  6286  0024                     ___lbmod@rem:	
  6287                           ; 1 bytes @ 0x4
  6288                           
  6289  0024                     ___wmul@product:	
  6290                           ; 1 bytes @ 0x4
  6291                           
  6292  0024                     strlen@cp:	
  6293                           ; 2 bytes @ 0x4
  6294                           
  6295                           
  6296                           ; 2 bytes @ 0x4
  6297  0024                     	ds	1
  6298  0025                     ??_DS18X20_StartMeas:	
  6299  0025                     ??_Uart1_PutString_Hex:	
  6300                           ; 0 bytes @ 0x5
  6301                           
  6302  0025                     ??_LcdDisplay_CSQ:	
  6303                           ; 0 bytes @ 0x5
  6304                           
  6305  0025                     ??_LcdDisplay_CurTemp:	
  6306                           ; 0 bytes @ 0x5
  6307                           
  6308  0025                     ??_LcdDisplay_Err:	
  6309                           ; 0 bytes @ 0x5
  6310                           
  6311  0025                     LcdDisplay_CSQ@t1:	
  6312                           ; 0 bytes @ 0x5
  6313                           
  6314  0025                     TCN75_ReadReg@bRight:	
  6315                           ; 1 bytes @ 0x5
  6316                           
  6317  0025                     Uart1_PutString_Hex@c:	
  6318                           ; 1 bytes @ 0x5
  6319                           
  6320  0025                     GetVerify_Sum@sum:	
  6321                           ; 1 bytes @ 0x5
  6322                           
  6323  0025                     GetVerify_CRC8@data:	
  6324                           ; 1 bytes @ 0x5
  6325                           
  6326  0025                     strcpy@cp:	
  6327                           ; 1 bytes @ 0x5
  6328                           
  6329  0025                     ___lwdiv@quotient:	
  6330                           ; 1 bytes @ 0x5
  6331                           
  6332                           
  6333                           ; 2 bytes @ 0x5
  6334  0025                     	ds	1
  6335  0026                     ??_ATCommand_Init:	
  6336  0026                     ?_atoi:	
  6337                           ; 0 bytes @ 0x6
  6338                           
  6339  0026                     ?_strncmp:	
  6340                           ; 2 bytes @ 0x6
  6341                           
  6342  0026                     LcdDisplay_CSQ@t2:	
  6343                           ; 2 bytes @ 0x6
  6344                           
  6345  0026                     GetVerify_Sum@i:	
  6346                           ; 1 bytes @ 0x6
  6347                           
  6348  0026                     GetVerify_CRC8@i:	
  6349                           ; 1 bytes @ 0x6
  6350                           
  6351  0026                     atoi@s:	
  6352                           ; 2 bytes @ 0x6
  6353                           
  6354  0026                     strncmp@s1:	
  6355                           ; 2 bytes @ 0x6
  6356                           
  6357                           
  6358                           ; 2 bytes @ 0x6
  6359  0026                     	ds	1
  6360  0027                     ??_GetRomData:	
  6361  0027                     ??_SaveRomData:	
  6362                           ; 0 bytes @ 0x7
  6363                           
  6364  0027                     LcdDisplay_CurTemp@t1:	
  6365                           ; 0 bytes @ 0x7
  6366                           
  6367  0027                     GetRomData@i:	
  6368                           ; 1 bytes @ 0x7
  6369                           
  6370  0027                     SaveRomData@i:	
  6371                           ; 1 bytes @ 0x7
  6372                           
  6373                           
  6374                           ; 1 bytes @ 0x7
  6375  0027                     	ds	1
  6376  0028                     ??_atoi:	
  6377  0028                     ??_InitVariable:	
  6378                           ; 0 bytes @ 0x8
  6379                           
  6380  0028                     LcdDisplay_CurTemp@t2:	
  6381                           ; 0 bytes @ 0x8
  6382                           
  6383  0028                     GetVerify_CRC8@feedback_bit:	
  6384                           ; 1 bytes @ 0x8
  6385                           
  6386  0028                     strncmp@s2:	
  6387                           ; 1 bytes @ 0x8
  6388                           
  6389                           
  6390                           ; 2 bytes @ 0x8
  6391  0028                     	ds	1
  6392  0029                     GetVerify_CRC8@crc:	
  6393                           
  6394                           ; 1 bytes @ 0x9
  6395  0029                     	ds	1
  6396  002A                     ??_DS18X20_ReadMeas:	
  6397  002A                     DS18X20_ReadMeas@bVerify:	
  6398                           ; 0 bytes @ 0xA
  6399                           
  6400  002A                     strncmp@len:	
  6401                           ; 1 bytes @ 0xA
  6402                           
  6403                           
  6404                           ; 2 bytes @ 0xA
  6405  002A                     	ds	1
  6406  002B                     DS18X20_ReadMeas@i:	
  6407                           
  6408                           ; 1 bytes @ 0xB
  6409  002B                     	ds	1
  6410  002C                     ??_ReadTData:	
  6411  002C                     ??_strncmp:	
  6412                           ; 0 bytes @ 0xC
  6413                           
  6414  002C                     ReadTData@retry:	
  6415                           ; 0 bytes @ 0xC
  6416                           
  6417  002C                     atoi@sign:	
  6418                           ; 1 bytes @ 0xC
  6419                           
  6420                           
  6421                           ; 1 bytes @ 0xC
  6422  002C                     	ds	1
  6423  002D                     ??_InitSystem:	
  6424  002D                     ?_strstr:	
  6425                           ; 0 bytes @ 0xD
  6426                           
  6427  002D                     InitSystem@x:	
  6428                           ; 2 bytes @ 0xD
  6429                           
  6430  002D                     atoi@a:	
  6431                           ; 1 bytes @ 0xD
  6432                           
  6433  002D                     strstr@s1:	
  6434                           ; 2 bytes @ 0xD
  6435                           
  6436                           
  6437                           ; 2 bytes @ 0xD
  6438  002D                     	ds	2
  6439  002F                     strstr@s2:	
  6440                           
  6441                           ; 2 bytes @ 0xF
  6442  002F                     	ds	2
  6443  0031                     ??_ATCommand_WaitData:	
  6444  0031                     ??_strstr:	
  6445                           ; 0 bytes @ 0x11
  6446                           
  6447  0031                     ?_ATCommand_SendCmd:	
  6448                           ; 0 bytes @ 0x11
  6449                           
  6450  0031                     ATCommand_SendCmd@cmd:	
  6451                           ; 1 bytes @ 0x11
  6452                           
  6453                           
  6454                           ; 2 bytes @ 0x11
  6455  0031                     	ds	2
  6456  0033                     ??_ATCommand_SendCmd:	
  6457  0033                     ATCommand_WaitData@res:	
  6458                           ; 0 bytes @ 0x13
  6459                           
  6460                           
  6461                           ; 1 bytes @ 0x13
  6462  0033                     	ds	1
  6463  0034                     ATCommand_WaitData@strx:	
  6464                           
  6465                           ; 2 bytes @ 0x14
  6466  0034                     	ds	1
  6467  0035                     ATCommand_SendCmd@retry:	
  6468                           
  6469                           ; 1 bytes @ 0x15
  6470  0035                     	ds	1
  6471  0036                     ??_InteractServer:	
  6472  0036                     InteractServer@retry:	
  6473                           ; 0 bytes @ 0x16
  6474                           
  6475  0036                     ATCommand_SendCmd@strx:	
  6476                           ; 1 bytes @ 0x16
  6477                           
  6478                           
  6479                           ; 2 bytes @ 0x16
  6480  0036                     	ds	1
  6481  0037                     InteractServer@res:	
  6482                           
  6483                           ; 1 bytes @ 0x17
  6484  0037                     	ds	1
  6485  0038                     ATCommand_SendCmd@res:	
  6486  0038                     InteractServer@i_10578:	
  6487                           ; 1 bytes @ 0x18
  6488                           
  6489                           
  6490                           ; 2 bytes @ 0x18
  6491  0038                     	ds	1
  6492  0039                     ??_InitGPRS:	
  6493                           
  6494                           ; 0 bytes @ 0x19
  6495  0039                     	ds	1
  6496  003A                     InteractServer@i_10583:	
  6497                           
  6498                           ; 2 bytes @ 0x1A
  6499  003A                     	ds	2
  6500  003C                     InteractServer@j_10590:	
  6501                           
  6502                           ; 2 bytes @ 0x1C
  6503  003C                     	ds	1
  6504  003D                     InitGPRS@i:	
  6505                           
  6506                           ; 1 bytes @ 0x1D
  6507  003D                     	ds	1
  6508  003E                     InteractServer@txLen:	
  6509  003E                     InitGPRS@strx:	
  6510                           ; 2 bytes @ 0x1E
  6511                           
  6512                           
  6513                           ; 2 bytes @ 0x1E
  6514  003E                     	ds	2
  6515  0040                     InitGPRS@retry:	
  6516  0040                     InteractServer@t:	
  6517                           ; 1 bytes @ 0x20
  6518                           
  6519                           
  6520                           ; 2 bytes @ 0x20
  6521  0040                     	ds	2
  6522  0042                     InteractServer@addr:	
  6523                           
  6524                           ; 1 bytes @ 0x22
  6525  0042                     	ds	1
  6526  0043                     InteractServer@j:	
  6527                           
  6528                           ; 1 bytes @ 0x23
  6529  0043                     	ds	1
  6530  0044                     InteractServer@k:	
  6531                           
  6532                           ; 1 bytes @ 0x24
  6533  0044                     	ds	1
  6534  0045                     InteractServer@i:	
  6535                           
  6536                           ; 1 bytes @ 0x25
  6537  0045                     	ds	1
  6538  0046                     ??_CallSend:	
  6539  0046                     CallSend@ret:	
  6540                           ; 0 bytes @ 0x26
  6541                           
  6542                           
  6543                           ; 1 bytes @ 0x26
  6544  0046                     	ds	1
  6545  0047                     ??_CallProc:	
  6546  0047                     CallProc@retry:	
  6547                           ; 0 bytes @ 0x27
  6548                           
  6549                           
  6550                           ; 1 bytes @ 0x27
  6551  0047                     	ds	1
  6552  0048                     ??_TestProc:	
  6553                           
  6554                           ; 0 bytes @ 0x28
  6555  0048                     	ds	2
  6556  004A                     ??_main:	
  6557                           
  6558                           ; 0 bytes @ 0x2A
  6559  004A                     	ds	2
  6560  004C                     main@addr:	
  6561                           
  6562                           ; 1 bytes @ 0x2C
  6563  004C                     	ds	1
  6564  004D                     main@i:	
  6565                           
  6566                           ; 1 bytes @ 0x2D
  6567  004D                     	ds	1
  6568                           
  6569                           	psect	text1998
  6570  0306                     __ptext1998:	
  6571 ;; =============== function _main ends ============
  6572                           
  6573                           
  6574 ;; *************** function _TestProc *****************
  6575 ;; Defined at:
  6576 ;;		line 9 in file "F:\work\WYP\NBIoT1\TestProc.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;		None               void
  6583 ;; Registers used:
  6584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, pclath, cstack
  6585 ;; Tracked objects:
  6586 ;;		On entry : 1F/0
  6587 ;;		On exit  : 1F/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6590 ;;      Params:         0       0       0       0       0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0
  6592 ;;      Temps:          0       2       0       0       0       0       0       0
  6593 ;;      Totals:         0       2       0       0       0       0       0       0
  6594 ;;Total ram usage:        2 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:    9
  6597 ;; This function calls:
  6598 ;;		_LcdDisplayAll
  6599 ;;		___delay_20ms
  6600 ;;		_ReadTData
  6601 ;;		_LcdDisplay_Err
  6602 ;;		_CallProc
  6603 ;; This function is called by:
  6604 ;;		_main
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607  0306                     _TestProc:	
  6608                           
  6609                           ;TestProc.c: 10: if(RB7==0)
  6610                           
  6611                           ; Regs used in _TestProc: [wreg-btemp+0+pclath+cstack]
  6612  0306  1B8D               	btfsc	13,7
  6613  0307  0008               	return
  6614                           
  6615                           ;TestProc.c: 11: {
  6616                           ;TestProc.c: 12: _delay((unsigned long)((20)*(4000000/4000.0)));
  6617  0308  301A               	movlw	26
  6618  0309  00C9               	movwf	??_TestProc+1
  6619  030A  30F8               	movlw	248
  6620  030B  00C8               	movwf	??_TestProc
  6621  030C                     u7747:	
  6622  030C  0BC8               	decfsz	??_TestProc,f
  6623  030D  2B0C               	goto	u7747
  6624  030E  0BC9               	decfsz	??_TestProc+1,f
  6625  030F  2B0C               	goto	u7747
  6626  0310  0064               	clrwdt
  6627                           
  6628                           ;TestProc.c: 13: if(RB7==0)
  6629  0311  0020               	movlb	0	; select bank0
  6630  0312  1B8D               	btfsc	13,7
  6631  0313  0008               	return
  6632                           
  6633                           ;TestProc.c: 14: {
  6634                           ;TestProc.c: 15: LcdDisplayAll(0);
  6635  0314  3000               	movlw	0
  6636  0315  2351               	fcall	_LcdDisplayAll
  6637                           
  6638                           ;TestProc.c: 16: __delay_20ms(150);
  6639  0316  3096               	movlw	150
  6640  0317  0020               	movlb	0	; select bank0
  6641  0318  00A0               	movwf	?___delay_20ms
  6642  0319  01A1               	clrf	?___delay_20ms+1
  6643  031A  318B  2308  3183   	fcall	___delay_20ms
  6644                           
  6645                           ;TestProc.c: 17: LcdDisplayAll(1);
  6646  031D  3001               	movlw	1
  6647  031E  2351               	fcall	_LcdDisplayAll
  6648                           
  6649                           ;TestProc.c: 18: ReadTData();
  6650  031F  3188  20F4  3183   	fcall	_ReadTData
  6651                           
  6652                           ;TestProc.c: 19: if(CurTemp.u16==0xf000)
  6653  0322  0020               	movlb	0	; select bank0
  6654  0323  0857               	movf	_CurTemp+1,w
  6655  0324  3AF0               	xorlw	240
  6656  0325  0456               	iorwf	_CurTemp,w
  6657  0326  1D03               	skipz
  6658  0327  2B31               	goto	l33373
  6659                           
  6660                           ;TestProc.c: 20: {
  6661                           ;TestProc.c: 21: LATA4=0;
  6662  0328  0022               	movlb	2	; select bank2
  6663  0329  120C               	bcf	12,4
  6664                           
  6665                           ;TestProc.c: 22: LATA3=1;
  6666  032A  158C               	bsf	12,3
  6667                           
  6668                           ;TestProc.c: 23: ErrState=MissT;
  6669  032B  0020               	movlb	0	; select bank0
  6670  032C  01E2               	clrf	_ErrState
  6671  032D  0AE2               	incf	_ErrState,f
  6672  032E                     l33371:	
  6673                           
  6674                           ;TestProc.c: 24: LcdDisplay_Err();
  6675  032E  2367  3183         	fcall	_LcdDisplay_Err
  6676                           
  6677                           ;TestProc.c: 25: }
  6678  0330  2B43               	goto	l33385
  6679  0331                     l33373:	
  6680                           
  6681                           ;TestProc.c: 26: else
  6682                           ;TestProc.c: 27: {
  6683                           ;TestProc.c: 28: ErrState=NoErr;
  6684  0331  01E2               	clrf	_ErrState
  6685                           
  6686                           ;TestProc.c: 29: CallProc();
  6687  0332  318E  2667  3183   	fcall	_CallProc
  6688                           
  6689                           ;TestProc.c: 30: if(ErrState!=NoErr)
  6690  0335  0020               	movlb	0	; select bank0
  6691  0336  0862               	movf	_ErrState,w
  6692  0337  1903               	btfsc	3,2
  6693  0338  2B3D               	goto	l10722
  6694                           
  6695                           ;TestProc.c: 31: {
  6696                           ;TestProc.c: 32: LATA4=0;
  6697  0339  0022               	movlb	2	; select bank2
  6698  033A  120C               	bcf	12,4
  6699                           
  6700                           ;TestProc.c: 33: LATA3=1;
  6701  033B  158C               	bsf	12,3
  6702  033C  2B2E               	goto	l33371
  6703  033D                     l10722:	
  6704                           
  6705                           ;TestProc.c: 36: else
  6706                           ;TestProc.c: 37: {
  6707                           ;TestProc.c: 38: LATA4=1;
  6708  033D  0022               	movlb	2	; select bank2
  6709  033E  160C               	bsf	12,4
  6710                           
  6711                           ;TestProc.c: 39: LATA3=0;
  6712  033F  118C               	bcf	12,3
  6713                           
  6714                           ;TestProc.c: 40: LcdDisplayAll(2);
  6715  0340  3002               	movlw	2
  6716  0341  2351  3183         	fcall	_LcdDisplayAll
  6717  0343                     l33385:	
  6718                           
  6719                           ;TestProc.c: 44: {
  6720                           ;TestProc.c: 45: if(ErrState!=NoErr)
  6721  0343  0020               	movlb	0	; select bank0
  6722  0344  0862               	movf	_ErrState,w
  6723  0345  1903               	btfsc	3,2
  6724  0346  2B43               	goto	l33385
  6725                           
  6726                           ;TestProc.c: 46: {
  6727                           ;TestProc.c: 47: __delay_20ms(20);
  6728  0347  3014               	movlw	20
  6729  0348  00A0               	movwf	?___delay_20ms
  6730  0349  01A1               	clrf	?___delay_20ms+1
  6731  034A  318B  2308  3183   	fcall	___delay_20ms
  6732                           
  6733                           ;TestProc.c: 48: LATA3=!LATA3;
  6734  034D  3008               	movlw	8
  6735  034E  0022               	movlb	2	; select bank2
  6736  034F  068C               	xorwf	12,f
  6737  0350  2B43               	goto	l33385
  6738  0351                     __end_of_TestProc:	
  6739  0351                     __ptext2038:	
  6740 ;; =============== function _LcdDisplay_CSQ ends ============
  6741                           
  6742                           
  6743 ;; *************** function _LcdDisplayAll *****************
  6744 ;; Defined at:
  6745 ;;		line 240 in file "F:\work\WYP\NBIoT1\Display.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;  x               1    wreg     unsigned char 
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;  x               1    0[BANK0 ] unsigned char 
  6750 ;; Return value:  Size  Location     Type
  6751 ;;		None               void
  6752 ;; Registers used:
  6753 ;;		wreg, status,2, status,0, pclath, cstack
  6754 ;; Tracked objects:
  6755 ;;		On entry : 1D/0
  6756 ;;		On exit  : 10/0
  6757 ;;		Unchanged: FFFE0/0
  6758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6759 ;;      Params:         0       0       0       0       0       0       0       0
  6760 ;;      Locals:         0       1       0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0
  6762 ;;      Totals:         0       1       0       0       0       0       0       0
  6763 ;;Total ram usage:        1 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:    4
  6766 ;; This function calls:
  6767 ;;		_LcdDisplayNum
  6768 ;; This function is called by:
  6769 ;;		_TestProc
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772  0351                     _LcdDisplayAll:	
  6773                           
  6774                           ; Regs used in _LcdDisplayAll: [wreg+status,2+status,0+pclath+cstack]
  6775                           ;LcdDisplayAll@x stored from wreg
  6776  0351  0020               	movlb	0	; select bank0
  6777  0352  00A0               	movwf	LcdDisplayAll@x
  6778                           
  6779                           ;Display.c: 244: if(x==0)
  6780  0353  08A0               	movf	LcdDisplayAll@x,f
  6781  0354  1D03               	skipz
  6782  0355  2B5B               	goto	l32299
  6783                           
  6784                           ;Display.c: 245: {
  6785                           ;Display.c: 246: DpyNum[0]=0xff;
  6786  0356  30FF               	movlw	255
  6787  0357                     L8:	
  6788  0357  00E9               	movwf	_DpyNum
  6789                           
  6790                           ;Display.c: 247: DpyNum[1]=0xff;
  6791  0358  00EA               	movwf	_DpyNum+1
  6792                           
  6793                           ;Display.c: 248: DpyNum[2]=0xff;
  6794  0359  00EB               	movwf	_DpyNum+2
  6795  035A                     l32297:	
  6796                           
  6797                           ;Display.c: 249: LcdDisplayNum();
  6798  035A  2B87               	ljmp	l31973
  6799  035B                     l32299:	
  6800                           ;Display.c: 250: }
  6801                           
  6802                           
  6803                           ;Display.c: 251: else if(x==1)
  6804  035B  0B20               	decfsz	LcdDisplayAll@x,w
  6805  035C  2B61               	goto	l32305
  6806                           
  6807                           ;Display.c: 252: {
  6808                           ;Display.c: 253: DpyNum[0]=0;
  6809  035D  01E9               	clrf	_DpyNum
  6810                           
  6811                           ;Display.c: 254: DpyNum[1]=0;
  6812  035E  01EA               	clrf	_DpyNum+1
  6813                           
  6814                           ;Display.c: 255: DpyNum[2]=0;
  6815  035F  01EB               	clrf	_DpyNum+2
  6816  0360  2B5A               	goto	l32297
  6817  0361                     l32305:	
  6818                           
  6819                           ;Display.c: 258: else if(x==2)
  6820  0361  0820               	movf	LcdDisplayAll@x,w
  6821  0362  3A02               	xorlw	2
  6822  0363  1D03               	skipz
  6823  0364  0008               	return
  6824                           
  6825                           ;Display.c: 259: {
  6826                           ;Display.c: 260: DpyNum[0]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6827  0365  3077               	movlw	119
  6828  0366  2B57               	goto	L8
  6829  0367                     __end_of_LcdDisplayAll:	
  6830                           ;Display.c: 262: DpyNum[2]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6831                           
  6832                           ;Display.c: 261: DpyNum[1]=0x01 | 0x02 | 0x04 | 0x10 | 0x20 | 0x40;
  6833                           
  6834  0367                     __ptext2035:	
  6835 ;; =============== function _LcdDisplay_CALL ends ============
  6836                           
  6837                           
  6838 ;; *************** function _LcdDisplay_Err *****************
  6839 ;; Defined at:
  6840 ;;		line 312 in file "F:\work\WYP\NBIoT1\Display.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;		None
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;		None
  6845 ;; Return value:  Size  Location     Type
  6846 ;;		None               void
  6847 ;; Registers used:
  6848 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6849 ;; Tracked objects:
  6850 ;;		On entry : 1D/0
  6851 ;;		On exit  : 1F/F
  6852 ;;		Unchanged: FFFE0/0
  6853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6854 ;;      Params:         0       0       0       0       0       0       0       0
  6855 ;;      Locals:         0       0       0       0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0
  6857 ;;      Totals:         0       0       0       0       0       0       0       0
  6858 ;;Total ram usage:        0 bytes
  6859 ;; Hardware stack levels used:    1
  6860 ;; Hardware stack levels required when called:    4
  6861 ;; This function calls:
  6862 ;;		___lbdiv
  6863 ;;		___lbmod
  6864 ;;		_LcdDisplayNum
  6865 ;; This function is called by:
  6866 ;;		_CallProc
  6867 ;;		_TestProc
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870  0367                     _LcdDisplay_Err:	
  6871  0367                     l2252:	
  6872                           ;Display.c: 316: while(WA==0);
  6873                           
  6874                           ; Regs used in _LcdDisplay_Err: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6875                           
  6876  0367  002F               	movlb	15	; select bank15
  6877  0368  1E12               	btfss	18,4
  6878  0369  2B67               	goto	l2252
  6879                           
  6880                           ;Display.c: 317: SEG3COM0=0;
  6881  036A  11A0               	bcf	32,3
  6882  036B                     l2255:	
  6883                           ;Display.c: 318: while(WA==0);
  6884                           
  6885  036B  1E12               	btfss	18,4
  6886  036C  2B6B               	goto	l2255
  6887                           
  6888                           ;Display.c: 319: SEG11COM0=0;
  6889  036D  11A1               	bcf	33,3
  6890                           
  6891                           ;Display.c: 320: DpyNum[0]=0x01 | 0x08 | 0x10 | 0x20 | 0x40;
  6892  036E  3079               	movlw	121
  6893  036F  0020               	movlb	0	; select bank0
  6894  0370  00E9               	movwf	_DpyNum
  6895                           
  6896                           ;Display.c: 321: DpyNum[1]=SegCode[ErrState/10];
  6897  0371  300A               	movlw	10
  6898  0372  00A0               	movwf	?___lbdiv
  6899  0373  0862               	movf	_ErrState,w
  6900  0374  318F  2791  3183   	fcall	___lbdiv
  6901  0377  2490               	fcall	PL4	;call to abstracted procedure
  6902                           
  6903                           ;Display.c: 322: DpyNum[2]=SegCode[ErrState%10];
  6904  0378  300A               	movlw	10
  6905  0379  00A0               	movwf	?___lbmod
  6906  037A  0862               	movf	_ErrState,w
  6907  037B  318F  27C4  3183   	fcall	___lbmod
  6908  037E  3E01               	addlw	low (_SegCode| (0+32768))
  6909  037F  0084               	movwf	4
  6910  0380  3090               	movlw	high (_SegCode| (0+32768))
  6911  0381  1803               	skipnc
  6912  0382  3E01               	addlw	1
  6913  0383  0085               	movwf	5
  6914  0384  0800               	movf	0,w	;code access
  6915  0385  00EB               	movwf	_DpyNum+2
  6916                           
  6917                           ;Display.c: 323: LcdDisplayNum();
  6918  0386  2B87               	ljmp	l31973
  6919  0387                     __end_of_LcdDisplay_Err:	
  6920  0387                     __ptext2059:	
  6921 ;; =============== function _DisplayInit ends ============
  6922                           
  6923                           
  6924 ;; *************** function _LcdDisplayNum *****************
  6925 ;; Defined at:
  6926 ;;		line 12 in file "F:\work\WYP\NBIoT1\Display.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;		None               void
  6933 ;; Registers used:
  6934 ;;		None
  6935 ;; Tracked objects:
  6936 ;;		On entry : 10/0
  6937 ;;		On exit  : 1F/F
  6938 ;;		Unchanged: FFFE0/0
  6939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6940 ;;      Params:         0       0       0       0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; Hardware stack levels required when called:    3
  6947 ;; This function calls:
  6948 ;;		Nothing
  6949 ;; This function is called by:
  6950 ;;		_LcdDisplayAll
  6951 ;;		_LcdDisplay_CSQ
  6952 ;;		_LcdDisplay_CurTemp
  6953 ;;		_LcdDisplay_Err
  6954 ;;		_LcdDisplay_CALL
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957  0387                     _LcdDisplayNum:	
  6958  0387                     l31973:	
  6959                           ; Regs used in _LcdDisplayNum: []
  6960                           
  6961                           
  6962                           ;Display.c: 16: if(DpyNum[0]&0x01)
  6963  0387  0020               	movlb	0	; select bank0
  6964  0388  1C69               	btfss	_DpyNum,0
  6965  0389  2B8F               	goto	l2050
  6966  038A                     l2046:	
  6967  038A  002F               	movlb	15	; select bank15
  6968  038B  1E12               	btfss	18,4
  6969  038C  2B8A               	goto	l2046
  6970                           
  6971                           ;Display.c: 19: SEG5COM0 = 1;
  6972  038D  16A0               	bsf	32,5
  6973                           
  6974                           ;Display.c: 20: }
  6975  038E  2B93               	goto	l2049
  6976  038F                     l2050:	
  6977  038F  002F               	movlb	15	; select bank15
  6978  0390  1E12               	btfss	18,4
  6979  0391  2B8F               	goto	l2050
  6980                           
  6981                           ;Display.c: 24: SEG5COM0 = 0;
  6982  0392  12A0               	bcf	32,5
  6983  0393                     l2049:	
  6984                           
  6985                           ;Display.c: 25: }
  6986                           ;Display.c: 26: if(DpyNum[0]&0x02)
  6987  0393  0020               	movlb	0	; select bank0
  6988  0394  1CE9               	btfss	_DpyNum,1
  6989  0395  2B9B               	goto	l2058
  6990  0396                     l2054:	
  6991  0396  002F               	movlb	15	; select bank15
  6992  0397  1E12               	btfss	18,4
  6993  0398  2B96               	goto	l2054
  6994                           
  6995                           ;Display.c: 29: SEG5COM1 = 1;
  6996  0399  16A3               	bsf	35,5
  6997                           
  6998                           ;Display.c: 30: }
  6999  039A  2B9F               	goto	l2057
  7000  039B                     l2058:	
  7001  039B  002F               	movlb	15	; select bank15
  7002  039C  1E12               	btfss	18,4
  7003  039D  2B9B               	goto	l2058
  7004                           
  7005                           ;Display.c: 34: SEG5COM1 = 0;
  7006  039E  12A3               	bcf	35,5
  7007  039F                     l2057:	
  7008                           
  7009                           ;Display.c: 35: }
  7010                           ;Display.c: 36: if(DpyNum[0]&0x04)
  7011  039F  0020               	movlb	0	; select bank0
  7012  03A0  1D69               	btfss	_DpyNum,2
  7013  03A1  2BA7               	goto	l2066
  7014  03A2                     l2062:	
  7015  03A2  002F               	movlb	15	; select bank15
  7016  03A3  1E12               	btfss	18,4
  7017  03A4  2BA2               	goto	l2062
  7018                           
  7019                           ;Display.c: 39: SEG5COM2 = 1;
  7020  03A5  16A6               	bsf	38,5
  7021                           
  7022                           ;Display.c: 40: }
  7023  03A6  2BAB               	goto	l2065
  7024  03A7                     l2066:	
  7025  03A7  002F               	movlb	15	; select bank15
  7026  03A8  1E12               	btfss	18,4
  7027  03A9  2BA7               	goto	l2066
  7028                           
  7029                           ;Display.c: 44: SEG5COM2 = 0;
  7030  03AA  12A6               	bcf	38,5
  7031  03AB                     l2065:	
  7032                           
  7033                           ;Display.c: 45: }
  7034                           ;Display.c: 46: if(DpyNum[0]&0x08)
  7035  03AB  0020               	movlb	0	; select bank0
  7036  03AC  1DE9               	btfss	_DpyNum,3
  7037  03AD  2BB3               	goto	l2074
  7038  03AE                     l2070:	
  7039  03AE  002F               	movlb	15	; select bank15
  7040  03AF  1E12               	btfss	18,4
  7041  03B0  2BAE               	goto	l2070
  7042                           
  7043                           ;Display.c: 49: SEG5COM3 = 1;
  7044  03B1  16A9               	bsf	41,5
  7045                           
  7046                           ;Display.c: 50: }
  7047  03B2  2BB7               	goto	l2073
  7048  03B3                     l2074:	
  7049  03B3  002F               	movlb	15	; select bank15
  7050  03B4  1E12               	btfss	18,4
  7051  03B5  2BB3               	goto	l2074
  7052                           
  7053                           ;Display.c: 54: SEG5COM3 = 0;
  7054  03B6  12A9               	bcf	41,5
  7055  03B7                     l2073:	
  7056                           
  7057                           ;Display.c: 55: }
  7058                           ;Display.c: 56: if(DpyNum[0]&0x10)
  7059  03B7  0020               	movlb	0	; select bank0
  7060  03B8  1E69               	btfss	_DpyNum,4
  7061  03B9  2BBF               	goto	l2082
  7062  03BA                     l2078:	
  7063  03BA  002F               	movlb	15	; select bank15
  7064  03BB  1E12               	btfss	18,4
  7065  03BC  2BBA               	goto	l2078
  7066                           
  7067                           ;Display.c: 59: SEG21COM3 = 1;
  7068  03BD  16AB               	bsf	43,5
  7069                           
  7070                           ;Display.c: 60: }
  7071  03BE  2BC3               	goto	l2081
  7072  03BF                     l2082:	
  7073  03BF  002F               	movlb	15	; select bank15
  7074  03C0  1E12               	btfss	18,4
  7075  03C1  2BBF               	goto	l2082
  7076                           
  7077                           ;Display.c: 64: SEG21COM3 = 0;
  7078  03C2  12AB               	bcf	43,5
  7079  03C3                     l2081:	
  7080                           
  7081                           ;Display.c: 65: }
  7082                           ;Display.c: 66: if(DpyNum[0]&0x20)
  7083  03C3  0020               	movlb	0	; select bank0
  7084  03C4  1EE9               	btfss	_DpyNum,5
  7085  03C5  2BCB               	goto	l2090
  7086  03C6                     l2086:	
  7087  03C6  002F               	movlb	15	; select bank15
  7088  03C7  1E12               	btfss	18,4
  7089  03C8  2BC6               	goto	l2086
  7090                           
  7091                           ;Display.c: 69: SEG21COM1 = 1;
  7092  03C9  16A5               	bsf	37,5
  7093                           
  7094                           ;Display.c: 70: }
  7095  03CA  2BCF               	goto	l2089
  7096  03CB                     l2090:	
  7097  03CB  002F               	movlb	15	; select bank15
  7098  03CC  1E12               	btfss	18,4
  7099  03CD  2BCB               	goto	l2090
  7100                           
  7101                           ;Display.c: 74: SEG21COM1 = 0;
  7102  03CE  12A5               	bcf	37,5
  7103  03CF                     l2089:	
  7104                           
  7105                           ;Display.c: 75: }
  7106                           ;Display.c: 76: if(DpyNum[0]&0x40)
  7107  03CF  0020               	movlb	0	; select bank0
  7108  03D0  1F69               	btfss	_DpyNum,6
  7109  03D1  2BD7               	goto	l2098
  7110  03D2                     l2094:	
  7111  03D2  002F               	movlb	15	; select bank15
  7112  03D3  1E12               	btfss	18,4
  7113  03D4  2BD2               	goto	l2094
  7114                           
  7115                           ;Display.c: 79: SEG21COM2 = 1;
  7116  03D5  16A8               	bsf	40,5
  7117                           
  7118                           ;Display.c: 80: }
  7119  03D6  2BDB               	goto	l2097
  7120  03D7                     l2098:	
  7121  03D7  002F               	movlb	15	; select bank15
  7122  03D8  1E12               	btfss	18,4
  7123  03D9  2BD7               	goto	l2098
  7124                           
  7125                           ;Display.c: 84: SEG21COM2 = 0;
  7126  03DA  12A8               	bcf	40,5
  7127  03DB                     l2097:	
  7128                           
  7129                           ;Display.c: 85: }
  7130                           ;Display.c: 87: if(DpyNum[1]&0x01)
  7131  03DB  0020               	movlb	0	; select bank0
  7132  03DC  1C6A               	btfss	_DpyNum+1,0
  7133  03DD  2BE3               	goto	l2106
  7134  03DE                     l2102:	
  7135  03DE  002F               	movlb	15	; select bank15
  7136  03DF  1E12               	btfss	18,4
  7137  03E0  2BDE               	goto	l2102
  7138                           
  7139                           ;Display.c: 90: SEG16COM0 = 1;
  7140  03E1  1422               	bsf	34,0
  7141                           
  7142                           ;Display.c: 91: }
  7143  03E2  2BE7               	goto	l2105
  7144  03E3                     l2106:	
  7145  03E3  002F               	movlb	15	; select bank15
  7146  03E4  1E12               	btfss	18,4
  7147  03E5  2BE3               	goto	l2106
  7148                           
  7149                           ;Display.c: 95: SEG16COM0 = 0;
  7150  03E6  1022               	bcf	34,0
  7151  03E7                     l2105:	
  7152                           
  7153                           ;Display.c: 96: }
  7154                           ;Display.c: 97: if(DpyNum[1]&0x02)
  7155  03E7  0020               	movlb	0	; select bank0
  7156  03E8  1CEA               	btfss	_DpyNum+1,1
  7157  03E9  2BEF               	goto	l2114
  7158  03EA                     l2110:	
  7159  03EA  002F               	movlb	15	; select bank15
  7160  03EB  1E12               	btfss	18,4
  7161  03EC  2BEA               	goto	l2110
  7162                           
  7163                           ;Display.c: 100: SEG16COM1 = 1;
  7164  03ED  1425               	bsf	37,0
  7165                           
  7166                           ;Display.c: 101: }
  7167  03EE  2BF3               	goto	l2113
  7168  03EF                     l2114:	
  7169  03EF  002F               	movlb	15	; select bank15
  7170  03F0  1E12               	btfss	18,4
  7171  03F1  2BEF               	goto	l2114
  7172                           
  7173                           ;Display.c: 105: SEG16COM1 = 0;
  7174  03F2  1025               	bcf	37,0
  7175  03F3                     l2113:	
  7176                           
  7177                           ;Display.c: 106: }
  7178                           ;Display.c: 107: if(DpyNum[1]&0x04)
  7179  03F3  0020               	movlb	0	; select bank0
  7180  03F4  1D6A               	btfss	_DpyNum+1,2
  7181  03F5  2BFB               	goto	l2122
  7182  03F6                     l2118:	
  7183  03F6  002F               	movlb	15	; select bank15
  7184  03F7  1E12               	btfss	18,4
  7185  03F8  2BF6               	goto	l2118
  7186                           
  7187                           ;Display.c: 110: SEG16COM2 = 1;
  7188  03F9  1428               	bsf	40,0
  7189                           
  7190                           ;Display.c: 111: }
  7191  03FA  2BFF               	goto	l2121
  7192  03FB                     l2122:	
  7193  03FB  002F               	movlb	15	; select bank15
  7194  03FC  1E12               	btfss	18,4
  7195  03FD  2BFB               	goto	l2122
  7196                           
  7197                           ;Display.c: 115: SEG16COM2 = 0;
  7198  03FE  1028               	bcf	40,0
  7199  03FF                     l2121:	
  7200                           
  7201                           ;Display.c: 116: }
  7202                           ;Display.c: 117: if(DpyNum[1]&0x08)
  7203  03FF  0020               	movlb	0	; select bank0
  7204  0400  1DEA               	btfss	_DpyNum+1,3
  7205  0401  2C07               	goto	l2130
  7206  0402                     l2126:	
  7207  0402  002F               	movlb	15	; select bank15
  7208  0403  1E12               	btfss	18,4
  7209  0404  2C02               	goto	l2126
  7210                           
  7211                           ;Display.c: 120: SEG16COM3 = 1;
  7212  0405  142B               	bsf	43,0
  7213                           
  7214                           ;Display.c: 121: }
  7215  0406  2C0B               	goto	l2129
  7216  0407                     l2130:	
  7217  0407  002F               	movlb	15	; select bank15
  7218  0408  1E12               	btfss	18,4
  7219  0409  2C07               	goto	l2130
  7220                           
  7221                           ;Display.c: 125: SEG16COM3 = 0;
  7222  040A  102B               	bcf	43,0
  7223  040B                     l2129:	
  7224                           
  7225                           ;Display.c: 126: }
  7226                           ;Display.c: 127: if(DpyNum[1]&0x10)
  7227  040B  0020               	movlb	0	; select bank0
  7228  040C  1E6A               	btfss	_DpyNum+1,4
  7229  040D  2C13               	goto	l2138
  7230  040E                     l2134:	
  7231  040E  002F               	movlb	15	; select bank15
  7232  040F  1E12               	btfss	18,4
  7233  0410  2C0E               	goto	l2134
  7234                           
  7235                           ;Display.c: 130: SEG11COM3 = 1;
  7236  0411  15AA               	bsf	42,3
  7237                           
  7238                           ;Display.c: 131: }
  7239  0412  2C17               	goto	l2137
  7240  0413                     l2138:	
  7241  0413  002F               	movlb	15	; select bank15
  7242  0414  1E12               	btfss	18,4
  7243  0415  2C13               	goto	l2138
  7244                           
  7245                           ;Display.c: 135: SEG11COM3 = 0;
  7246  0416  11AA               	bcf	42,3
  7247  0417                     l2137:	
  7248                           
  7249                           ;Display.c: 136: }
  7250                           ;Display.c: 137: if(DpyNum[1]&0x20)
  7251  0417  0020               	movlb	0	; select bank0
  7252  0418  1EEA               	btfss	_DpyNum+1,5
  7253  0419  2C1F               	goto	l2146
  7254  041A                     l2142:	
  7255  041A  002F               	movlb	15	; select bank15
  7256  041B  1E12               	btfss	18,4
  7257  041C  2C1A               	goto	l2142
  7258                           
  7259                           ;Display.c: 140: SEG11COM1 = 1;
  7260  041D  15A4               	bsf	36,3
  7261                           
  7262                           ;Display.c: 141: }
  7263  041E  2C23               	goto	l2145
  7264  041F                     l2146:	
  7265  041F  002F               	movlb	15	; select bank15
  7266  0420  1E12               	btfss	18,4
  7267  0421  2C1F               	goto	l2146
  7268                           
  7269                           ;Display.c: 145: SEG11COM1 = 0;
  7270  0422  11A4               	bcf	36,3
  7271  0423                     l2145:	
  7272                           
  7273                           ;Display.c: 146: }
  7274                           ;Display.c: 147: if(DpyNum[1]&0x40)
  7275  0423  0020               	movlb	0	; select bank0
  7276  0424  1F6A               	btfss	_DpyNum+1,6
  7277  0425  2C2B               	goto	l2154
  7278  0426                     l2150:	
  7279  0426  002F               	movlb	15	; select bank15
  7280  0427  1E12               	btfss	18,4
  7281  0428  2C26               	goto	l2150
  7282                           
  7283                           ;Display.c: 150: SEG11COM2 = 1;
  7284  0429  15A7               	bsf	39,3
  7285                           
  7286                           ;Display.c: 151: }
  7287  042A  2C2F               	goto	l2153
  7288  042B                     l2154:	
  7289  042B  002F               	movlb	15	; select bank15
  7290  042C  1E12               	btfss	18,4
  7291  042D  2C2B               	goto	l2154
  7292                           
  7293                           ;Display.c: 155: SEG11COM2 = 0;
  7294  042E  11A7               	bcf	39,3
  7295  042F                     l2153:	
  7296                           
  7297                           ;Display.c: 156: }
  7298                           ;Display.c: 157: if(DpyNum[1]&0x80)
  7299  042F  0020               	movlb	0	; select bank0
  7300  0430  1FEA               	btfss	_DpyNum+1,7
  7301  0431  2C37               	goto	l2162
  7302  0432                     l2158:	
  7303  0432  002F               	movlb	15	; select bank15
  7304  0433  1E12               	btfss	18,4
  7305  0434  2C32               	goto	l2158
  7306                           
  7307                           ;Display.c: 160: SEG6COM3 = 1;
  7308  0435  1729               	bsf	41,6
  7309                           
  7310                           ;Display.c: 161: }
  7311  0436  2C3B               	goto	l2161
  7312  0437                     l2162:	
  7313  0437  002F               	movlb	15	; select bank15
  7314  0438  1E12               	btfss	18,4
  7315  0439  2C37               	goto	l2162
  7316                           
  7317                           ;Display.c: 165: SEG6COM3 = 0;
  7318  043A  1329               	bcf	41,6
  7319  043B                     l2161:	
  7320                           
  7321                           ;Display.c: 166: }
  7322                           ;Display.c: 168: if(DpyNum[2]&0x01)
  7323  043B  0020               	movlb	0	; select bank0
  7324  043C  1C6B               	btfss	_DpyNum+2,0
  7325  043D  2C43               	goto	l2170
  7326  043E                     l2166:	
  7327  043E  002F               	movlb	15	; select bank15
  7328  043F  1E12               	btfss	18,4
  7329  0440  2C3E               	goto	l2166
  7330                           
  7331                           ;Display.c: 171: SEG23COM0 = 1;
  7332  0441  17A2               	bsf	34,7
  7333                           
  7334                           ;Display.c: 172: }
  7335  0442  2C47               	goto	l2169
  7336  0443                     l2170:	
  7337  0443  002F               	movlb	15	; select bank15
  7338  0444  1E12               	btfss	18,4
  7339  0445  2C43               	goto	l2170
  7340                           
  7341                           ;Display.c: 176: SEG23COM0 = 0;
  7342  0446  13A2               	bcf	34,7
  7343  0447                     l2169:	
  7344                           
  7345                           ;Display.c: 177: }
  7346                           ;Display.c: 178: if(DpyNum[2]&0x02)
  7347  0447  0020               	movlb	0	; select bank0
  7348  0448  1CEB               	btfss	_DpyNum+2,1
  7349  0449  2C4F               	goto	l2178
  7350  044A                     l2174:	
  7351  044A  002F               	movlb	15	; select bank15
  7352  044B  1E12               	btfss	18,4
  7353  044C  2C4A               	goto	l2174
  7354                           
  7355                           ;Display.c: 181: SEG23COM1 = 1;
  7356  044D  17A5               	bsf	37,7
  7357                           
  7358                           ;Display.c: 182: }
  7359  044E  2C53               	goto	l2177
  7360  044F                     l2178:	
  7361  044F  002F               	movlb	15	; select bank15
  7362  0450  1E12               	btfss	18,4
  7363  0451  2C4F               	goto	l2178
  7364                           
  7365                           ;Display.c: 186: SEG23COM1 = 0;
  7366  0452  13A5               	bcf	37,7
  7367  0453                     l2177:	
  7368                           
  7369                           ;Display.c: 187: }
  7370                           ;Display.c: 188: if(DpyNum[2]&0x04)
  7371  0453  0020               	movlb	0	; select bank0
  7372  0454  1D6B               	btfss	_DpyNum+2,2
  7373  0455  2C5B               	goto	l2186
  7374  0456                     l2182:	
  7375  0456  002F               	movlb	15	; select bank15
  7376  0457  1E12               	btfss	18,4
  7377  0458  2C56               	goto	l2182
  7378                           
  7379                           ;Display.c: 191: SEG23COM2 = 1;
  7380  0459  17A8               	bsf	40,7
  7381                           
  7382                           ;Display.c: 192: }
  7383  045A  2C5F               	goto	l2185
  7384  045B                     l2186:	
  7385  045B  002F               	movlb	15	; select bank15
  7386  045C  1E12               	btfss	18,4
  7387  045D  2C5B               	goto	l2186
  7388                           
  7389                           ;Display.c: 196: SEG23COM2 = 0;
  7390  045E  13A8               	bcf	40,7
  7391  045F                     l2185:	
  7392                           
  7393                           ;Display.c: 197: }
  7394                           ;Display.c: 198: if(DpyNum[2]&0x08)
  7395  045F  0020               	movlb	0	; select bank0
  7396  0460  1DEB               	btfss	_DpyNum+2,3
  7397  0461  2C67               	goto	l2194
  7398  0462                     l2190:	
  7399  0462  002F               	movlb	15	; select bank15
  7400  0463  1E12               	btfss	18,4
  7401  0464  2C62               	goto	l2190
  7402                           
  7403                           ;Display.c: 201: SEG23COM3 = 1;
  7404  0465  17AB               	bsf	43,7
  7405                           
  7406                           ;Display.c: 202: }
  7407  0466  2C6B               	goto	l2193
  7408  0467                     l2194:	
  7409  0467  002F               	movlb	15	; select bank15
  7410  0468  1E12               	btfss	18,4
  7411  0469  2C67               	goto	l2194
  7412                           
  7413                           ;Display.c: 206: SEG23COM3 = 0;
  7414  046A  13AB               	bcf	43,7
  7415  046B                     l2193:	
  7416                           
  7417                           ;Display.c: 207: }
  7418                           ;Display.c: 208: if(DpyNum[2]&0x10)
  7419  046B  0020               	movlb	0	; select bank0
  7420  046C  1E6B               	btfss	_DpyNum+2,4
  7421  046D  2C73               	goto	l2202
  7422  046E                     l2198:	
  7423  046E  002F               	movlb	15	; select bank15
  7424  046F  1E12               	btfss	18,4
  7425  0470  2C6E               	goto	l2198
  7426                           
  7427                           ;Display.c: 211: SEG3COM3 = 1;
  7428  0471  15A9               	bsf	41,3
  7429                           
  7430                           ;Display.c: 212: }
  7431  0472  2C77               	goto	l2201
  7432  0473                     l2202:	
  7433  0473  002F               	movlb	15	; select bank15
  7434  0474  1E12               	btfss	18,4
  7435  0475  2C73               	goto	l2202
  7436                           
  7437                           ;Display.c: 216: SEG3COM3 = 0;
  7438  0476  11A9               	bcf	41,3
  7439  0477                     l2201:	
  7440                           
  7441                           ;Display.c: 217: }
  7442                           ;Display.c: 218: if(DpyNum[2]&0x20)
  7443  0477  0020               	movlb	0	; select bank0
  7444  0478  1EEB               	btfss	_DpyNum+2,5
  7445  0479  2C7F               	goto	l2210
  7446  047A                     l2206:	
  7447  047A  002F               	movlb	15	; select bank15
  7448  047B  1E12               	btfss	18,4
  7449  047C  2C7A               	goto	l2206
  7450                           
  7451                           ;Display.c: 221: SEG3COM1 = 1;
  7452  047D  15A3               	bsf	35,3
  7453                           
  7454                           ;Display.c: 222: }
  7455  047E  2C83               	goto	l2209
  7456  047F                     l2210:	
  7457  047F  002F               	movlb	15	; select bank15
  7458  0480  1E12               	btfss	18,4
  7459  0481  2C7F               	goto	l2210
  7460                           
  7461                           ;Display.c: 226: SEG3COM1 = 0;
  7462  0482  11A3               	bcf	35,3
  7463  0483                     l2209:	
  7464                           
  7465                           ;Display.c: 227: }
  7466                           ;Display.c: 228: if(DpyNum[2]&0x40)
  7467  0483  0020               	movlb	0	; select bank0
  7468  0484  1F6B               	btfss	_DpyNum+2,6
  7469  0485  2C8B               	goto	l2218
  7470  0486                     l2214:	
  7471  0486  002F               	movlb	15	; select bank15
  7472  0487  1E12               	btfss	18,4
  7473  0488  2C86               	goto	l2214
  7474                           
  7475                           ;Display.c: 231: SEG3COM2 = 1;
  7476  0489  15A6               	bsf	38,3
  7477                           
  7478                           ;Display.c: 232: }
  7479  048A  0008               	return
  7480  048B                     l2218:	
  7481  048B  002F               	movlb	15	; select bank15
  7482  048C  1E12               	btfss	18,4
  7483  048D  2C8B               	goto	l2218
  7484                           
  7485                           ;Display.c: 236: SEG3COM2 = 0;
  7486  048E  11A6               	bcf	38,3
  7487  048F  0008               	return
  7488  0490                     __end_of_LcdDisplayNum:	
  7489  0490                     PL4:	
  7490  0490  3E01               	addlw	low (_SegCode| (0+32768))
  7491  0491  0084               	movwf	4
  7492  0492  3090               	movlw	high (_SegCode| (0+32768))
  7493  0493  1803               	skipnc
  7494  0494  3E01               	addlw	1
  7495  0495  0085               	movwf	5
  7496  0496  0800               	movf	0,w	;code access
  7497  0497  00EA               	movwf	_DpyNum+1
  7498  0498  0008               	return
  7499                           
  7500                           	psect	text2005
  7501  002C                     __ptext2005:	
  7502 ;; =============== function _InitGPRS ends ============
  7503                           
  7504                           
  7505 ;; *************** function _DS18X20_ReadMeas *****************
  7506 ;; Defined at:
  7507 ;;		line 144 in file "F:\work\WYP\NBIoT1\DS18x20.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;  bVerify         1    wreg     unsigned char 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  bVerify         1   10[BANK0 ] unsigned char 
  7512 ;;  i               1   11[BANK0 ] unsigned char 
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      unsigned char 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7517 ;; Tracked objects:
  7518 ;;		On entry : 1F/0
  7519 ;;		On exit  : 1E/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7522 ;;      Params:         0       0       0       0       0       0       0       0
  7523 ;;      Locals:         0       2       0       0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0
  7525 ;;      Totals:         0       2       0       0       0       0       0       0
  7526 ;;Total ram usage:        2 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    5
  7529 ;; This function calls:
  7530 ;;		_OneWire_Reset
  7531 ;;		_OneWire_Command
  7532 ;;		_OneWire_ReadByte
  7533 ;;		_GetVerify_CRC8
  7534 ;; This function is called by:
  7535 ;;		_ReadTData
  7536 ;; This function uses a non-reentrant model
  7537 ;;
  7538  002C                     _DS18X20_ReadMeas:	
  7539                           
  7540                           ; Regs used in _DS18X20_ReadMeas: [wreg+fsr1l-status,0+pclath+cstack]
  7541                           ;DS18X20_ReadMeas@bVerify stored from wreg
  7542  002C  00AA               	movwf	DS18X20_ReadMeas@bVerify
  7543                           
  7544                           ;DS18x20.c: 145: unsigned char i;
  7545                           ;DS18x20.c: 146: if(OneWire_Reset())
  7546  002D  2193  3180         	fcall	_OneWire_Reset
  7547  002F  3A00               	xorlw	0
  7548  0030  1D03               	btfss	3,2
  7549                           
  7550                           ;DS18x20.c: 147: return 0x01;
  7551  0031  3401               	retlw	1
  7552                           
  7553                           ;DS18x20.c: 148: if(OneWire_Command(0xBE))
  7554  0032  30BE               	movlw	190
  7555  0033  20B3  3180         	fcall	_OneWire_Command
  7556  0035  3A00               	xorlw	0
  7557  0036  1D03               	btfss	3,2
  7558  0037  3401               	retlw	1
  7559                           
  7560                           ;DS18x20.c: 150: if(bVerify)
  7561  0038  082A               	movf	DS18X20_ReadMeas@bVerify,w
  7562  0039  1903               	btfsc	3,2
  7563  003A  2853               	goto	l32811
  7564                           
  7565                           ;DS18x20.c: 151: {
  7566                           ;DS18x20.c: 152: for ( i=0 ; i< 9; i++ )
  7567  003B  01AB               	clrf	DS18X20_ReadMeas@i
  7568  003C                     l32793:	
  7569                           
  7570                           ;DS18x20.c: 153: DS18X20_Scratchpad[i]=OneWire_ReadByte();
  7571  003C  082B               	movf	DS18X20_ReadMeas@i,w
  7572  003D  3ED3               	addlw	_DS18X20_Scratchpad& (0+255)
  7573  003E  0086               	movwf	6
  7574  003F  0187               	clrf	7
  7575  0040  205B  3180         	fcall	_OneWire_ReadByte
  7576  0042  0081               	movwf	1
  7577  0043  0AAB               	incf	DS18X20_ReadMeas@i,f
  7578  0044  3009               	movlw	9
  7579  0045  022B               	subwf	DS18X20_ReadMeas@i,w
  7580  0046  1C03               	skipc
  7581  0047  283C               	goto	l32793
  7582                           
  7583                           ;DS18x20.c: 154: if ( GetVerify_CRC8( DS18X20_Scratchpad, 9-1 )!=DS18X20_Scratchpad[9-1]
      +                           )
  7584  0048  3008               	movlw	8
  7585  0049  00A0               	movwf	?_GetVerify_CRC8
  7586  004A  01A1               	clrf	?_GetVerify_CRC8+1
  7587  004B  30D3               	movlw	_DS18X20_Scratchpad& (0+255)
  7588  004C  2087  3180         	fcall	_GetVerify_CRC8
  7589  004E  0021               	movlb	1	; select bank1
  7590  004F  065B               	xorwf	(_DS18X20_Scratchpad^(0+128)+8),w
  7591  0050  1D03               	btfss	3,2
  7592                           
  7593                           ;DS18x20.c: 155: return 0x03;
  7594  0051  3403               	retlw	3
  7595                           
  7596                           ;DS18x20.c: 156: return 0x00;
  7597  0052  3400               	retlw	0
  7598  0053                     l32811:	
  7599                           
  7600                           ;DS18x20.c: 158: else
  7601                           ;DS18x20.c: 159: {
  7602                           ;DS18x20.c: 160: DS18X20_Scratchpad[0]=OneWire_ReadByte();
  7603  0053  205B  3180         	fcall	_OneWire_ReadByte
  7604  0055  0021               	movlb	1	; select bank1
  7605  0056  00D3               	movwf	_DS18X20_Scratchpad^(0+128)
  7606                           
  7607                           ;DS18x20.c: 161: DS18X20_Scratchpad[1]=OneWire_ReadByte();
  7608  0057  205B               	fcall	_OneWire_ReadByte
  7609  0058  0021               	movlb	1	; select bank1
  7610  0059  00D4               	movwf	(_DS18X20_Scratchpad^(0+128)+1)
  7611  005A  3400               	retlw	0
  7612  005B                     __end_of_DS18X20_ReadMeas:	
  7613  005B                     __ptext2023:	
  7614 ;; =============== function _OneWire_WriteByte ends ============
  7615                           
  7616                           
  7617 ;; *************** function _OneWire_ReadByte *****************
  7618 ;; Defined at:
  7619 ;;		line 190 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7620 ;; Parameters:    Size  Location     Type
  7621 ;;		None
  7622 ;; Auto vars:     Size  Location     Type
  7623 ;;  i               1    3[BANK0 ] unsigned char 
  7624 ;;  value           1    2[BANK0 ] unsigned char 
  7625 ;;  b               1    1[BANK0 ] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  1    wreg      unsigned char 
  7628 ;; Registers used:
  7629 ;;		wreg, status,2, status,0
  7630 ;; Tracked objects:
  7631 ;;		On entry : 1E/0
  7632 ;;		On exit  : 1F/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7635 ;;      Params:         0       0       0       0       0       0       0       0
  7636 ;;      Locals:         0       3       0       0       0       0       0       0
  7637 ;;      Temps:          0       1       0       0       0       0       0       0
  7638 ;;      Totals:         0       4       0       0       0       0       0       0
  7639 ;;Total ram usage:        4 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    3
  7642 ;; This function calls:
  7643 ;;		Nothing
  7644 ;; This function is called by:
  7645 ;;		_DS18X20_ReadMeas
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648  005B                     _OneWire_ReadByte:	
  7649                           
  7650                           ;OneWire.c: 191: unsigned char i;
  7651                           ;OneWire.c: 192: unsigned char b;
  7652                           ;OneWire.c: 193: unsigned char value=0;
  7653                           
  7654                           ; Regs used in _OneWire_ReadByte: [wreg+status,2+status,0]
  7655  005B  0020               	movlb	0	; select bank0
  7656  005C  01A2               	clrf	OneWire_ReadByte@value
  7657                           
  7658                           ;OneWire.c: 194: for(i=0;i<8;i++)
  7659  005D  01A3               	clrf	OneWire_ReadByte@i
  7660  005E                     l19075:	
  7661                           
  7662                           ;OneWire.c: 195: {
  7663                           ;OneWire.c: 196: (GIE = 0);
  7664  005E  138B               	bcf	11,7
  7665                           
  7666                           ;OneWire.c: 197: TRISB1 = 0;LATB1=0;
  7667  005F  0021               	movlb	1	; select bank1
  7668  0060  108D               	bcf	13,1
  7669  0061  0022               	movlb	2	; select bank2
  7670  0062  108D               	bcf	13,1
  7671                           
  7672                           ;OneWire.c: 198: _delay((unsigned long)((2)*(4000000/4000000.0)));
  7673  0063  2864               	nop2	;2 cycle nop
  7674                           
  7675                           ;OneWire.c: 200: TRISB1=1;
  7676  0064  0021               	movlb	1	; select bank1
  7677  0065  148D               	bsf	13,1
  7678                           
  7679                           ;OneWire.c: 201: _delay((unsigned long)((15-3-9)*(4000000/4000000.0)));
  7680  0066  2867               	nop2	;2 cycle nop
  7681  0067  0064               	clrwdt
  7682                           
  7683                           ;OneWire.c: 202: b=RB1;
  7684  0068  3000               	movlw	0
  7685  0069  0020               	movlb	0	; select bank0
  7686  006A  188D               	btfsc	13,1
  7687  006B  3001               	movlw	1
  7688  006C  00A1               	movwf	OneWire_ReadByte@b
  7689                           
  7690                           ;OneWire.c: 203: (GIE = 1);
  7691  006D  178B               	bsf	11,7
  7692                           
  7693                           ;OneWire.c: 204: _delay((unsigned long)((60)*(4000000/4000000.0)));
  7694  006E  3013               	movlw	19
  7695  006F  00A0               	movwf	??_OneWire_ReadByte
  7696  0070                     u7767:	
  7697  0070  0BA0               	decfsz	??_OneWire_ReadByte,f
  7698  0071  2870               	goto	u7767
  7699  0072  2873               	nop2	;nop
  7700                           
  7701                           ;OneWire.c: 206: if(b)
  7702  0073  0020               	movlb	0	; select bank0
  7703  0074  0821               	movf	OneWire_ReadByte@b,w
  7704  0075  1903               	btfsc	3,2
  7705  0076  2880               	goto	l30913
  7706                           
  7707                           ;OneWire.c: 207: {
  7708                           ;OneWire.c: 208: value|=(0x01<<i);
  7709  0077  3001               	movlw	1
  7710  0078  00A0               	movwf	??_OneWire_ReadByte
  7711  0079  0A23               	incf	OneWire_ReadByte@i,w
  7712  007A  287C               	goto	u4264
  7713  007B                     u4265:	
  7714  007B  35A0               	lslf	??_OneWire_ReadByte,f
  7715  007C                     u4264:	
  7716  007C  0B89               	decfsz	9,f
  7717  007D  287B               	goto	u4265
  7718  007E  0820               	movf	??_OneWire_ReadByte,w
  7719  007F  04A2               	iorwf	OneWire_ReadByte@value,f
  7720  0080                     l30913:	
  7721  0080  0AA3               	incf	OneWire_ReadByte@i,f
  7722  0081  3008               	movlw	8
  7723  0082  0223               	subwf	OneWire_ReadByte@i,w
  7724  0083  1C03               	skipc
  7725  0084  285E               	goto	l19075
  7726                           
  7727                           ;OneWire.c: 210: }
  7728                           ;OneWire.c: 211: }
  7729                           ;OneWire.c: 212: return(value);
  7730  0085  0822               	movf	OneWire_ReadByte@value,w
  7731  0086  0008               	return
  7732  0087                     __end_of_OneWire_ReadByte:	
  7733  0087                     __ptext2050:	
  7734 ;; =============== function _SimI2C_Init ends ============
  7735                           
  7736                           
  7737 ;; *************** function _GetVerify_CRC8 *****************
  7738 ;; Defined at:
  7739 ;;		line 90 in file "F:\work\WYP\NBIoT1\Verify.c"
  7740 ;; Parameters:    Size  Location     Type
  7741 ;;  pBuff           1    wreg     PTR unsigned char 
  7742 ;;		 -> DS18X20_Scratchpad(9), 
  7743 ;;  Count           2    0[BANK0 ] unsigned int 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  pBuff           1    3[BANK0 ] PTR unsigned char 
  7746 ;;		 -> DS18X20_Scratchpad(9), 
  7747 ;;  i               2    6[BANK0 ] unsigned int 
  7748 ;;  crc             1    9[BANK0 ] unsigned char 
  7749 ;;  feedback_bit    1    8[BANK0 ] unsigned char 
  7750 ;;  data            1    5[BANK0 ] unsigned char 
  7751 ;;  bit_counter     1    4[BANK0 ] unsigned char 
  7752 ;; Return value:  Size  Location     Type
  7753 ;;                  1    wreg      unsigned char 
  7754 ;; Registers used:
  7755 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7756 ;; Tracked objects:
  7757 ;;		On entry : 1F/0
  7758 ;;		On exit  : 1F/0
  7759 ;;		Unchanged: FFFE0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7761 ;;      Params:         0       2       0       0       0       0       0       0
  7762 ;;      Locals:         0       7       0       0       0       0       0       0
  7763 ;;      Temps:          0       1       0       0       0       0       0       0
  7764 ;;      Totals:         0      10       0       0       0       0       0       0
  7765 ;;Total ram usage:       10 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    3
  7768 ;; This function calls:
  7769 ;;		Nothing
  7770 ;; This function is called by:
  7771 ;;		_DS18X20_ReadMeas
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774  0087                     _GetVerify_CRC8:	
  7775                           
  7776                           ; Regs used in _GetVerify_CRC8: [wreg+fsr1l-status,0]
  7777                           ;GetVerify_CRC8@pBuff stored from wreg
  7778  0087  00A3               	movwf	GetVerify_CRC8@pBuff
  7779                           
  7780                           ;Verify.c: 91: unsigned char crc;
  7781                           ;Verify.c: 92: unsigned int i;
  7782                           ;Verify.c: 93: unsigned char bit_counter;
  7783                           ;Verify.c: 94: unsigned char data;
  7784                           ;Verify.c: 95: unsigned char feedback_bit;
  7785                           ;Verify.c: 97: crc = 0x00;
  7786  0088  01A9               	clrf	GetVerify_CRC8@crc
  7787                           
  7788                           ;Verify.c: 99: for(i = 0; i != Count; i++)
  7789  0089  01A6               	clrf	GetVerify_CRC8@i
  7790  008A  01A7               	clrf	GetVerify_CRC8@i+1
  7791  008B                     l30497:	
  7792  008B  0821               	movf	GetVerify_CRC8@Count+1,w
  7793  008C  0627               	xorwf	GetVerify_CRC8@i+1,w
  7794  008D  1D03               	skipz
  7795  008E  2891               	goto	u3675
  7796  008F  0820               	movf	GetVerify_CRC8@Count,w
  7797  0090  0626               	xorwf	GetVerify_CRC8@i,w
  7798  0091                     u3675:	
  7799  0091  1903               	btfsc	3,2
  7800  0092  28B1               	goto	l30499
  7801                           
  7802                           ;Verify.c: 100: {
  7803                           ;Verify.c: 101: data = pBuff[i];
  7804  0093  0826               	movf	GetVerify_CRC8@i,w
  7805  0094  0723               	addwf	GetVerify_CRC8@pBuff,w
  7806  0095  00A2               	movwf	??_GetVerify_CRC8
  7807  0096  0086               	movwf	6
  7808  0097  0187               	clrf	7
  7809  0098  0801               	movf	1,w
  7810  0099  00A5               	movwf	GetVerify_CRC8@data
  7811                           
  7812                           ;Verify.c: 102: bit_counter = 8;
  7813  009A  3008               	movlw	8
  7814  009B  00A4               	movwf	GetVerify_CRC8@bit_counter
  7815  009C                     l30477:	
  7816                           
  7817                           ;Verify.c: 104: {
  7818                           ;Verify.c: 105: feedback_bit = (crc ^ data) & 0x01;
  7819  009C  0829               	movf	GetVerify_CRC8@crc,w
  7820  009D  0625               	xorwf	GetVerify_CRC8@data,w
  7821  009E  00A8               	movwf	GetVerify_CRC8@feedback_bit
  7822  009F  3001               	movlw	1
  7823  00A0  05A8               	andwf	GetVerify_CRC8@feedback_bit,f
  7824                           
  7825                           ;Verify.c: 106: if ( feedback_bit == 0x01 )
  7826  00A1  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  7827  00A2  28A5               	goto	l30485
  7828                           
  7829                           ;Verify.c: 107: crc = crc ^ 0x18;
  7830  00A3  3018               	movlw	24
  7831  00A4  06A9               	xorwf	GetVerify_CRC8@crc,f
  7832  00A5                     l30485:	
  7833                           
  7834                           ;Verify.c: 108: crc = (crc >> 1) & 0x7F;
  7835  00A5  36A9               	lsrf	GetVerify_CRC8@crc,f
  7836  00A6  13A9               	bcf	GetVerify_CRC8@crc,7
  7837                           
  7838                           ;Verify.c: 109: if ( feedback_bit == 0x01 )
  7839  00A7  0B28               	decfsz	GetVerify_CRC8@feedback_bit,w
  7840  00A8  28AA               	goto	l25292
  7841                           
  7842                           ;Verify.c: 110: crc = crc | 0x80;
  7843  00A9  17A9               	bsf	GetVerify_CRC8@crc,7
  7844  00AA                     l25292:	
  7845                           
  7846                           ;Verify.c: 111: data = data >> 1;
  7847  00AA  36A5               	lsrf	GetVerify_CRC8@data,f
  7848                           
  7849                           ;Verify.c: 112: bit_counter--;
  7850  00AB  0BA4               	decfsz	GetVerify_CRC8@bit_counter,f
  7851                           
  7852                           ;Verify.c: 113: }while (bit_counter > 0);
  7853  00AC  289C               	goto	l30477
  7854  00AD  0AA6               	incf	GetVerify_CRC8@i,f
  7855  00AE  1903               	skipnz
  7856  00AF  0AA7               	incf	GetVerify_CRC8@i+1,f
  7857  00B0  288B               	goto	l30497
  7858  00B1                     l30499:	
  7859                           
  7860                           ;Verify.c: 114: }
  7861                           ;Verify.c: 115: return crc;
  7862  00B1  0829               	movf	GetVerify_CRC8@crc,w
  7863  00B2  0008               	return
  7864  00B3                     __end_of_GetVerify_CRC8:	
  7865  00B3                     __ptext2007:	
  7866 ;; =============== function _DS18X20_StartMeas ends ============
  7867                           
  7868                           
  7869 ;; *************** function _OneWire_Command *****************
  7870 ;; Defined at:
  7871 ;;		line 126 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  command         1    wreg     unsigned char 
  7874 ;; Auto vars:     Size  Location     Type
  7875 ;;  command         1    4[BANK0 ] unsigned char 
  7876 ;; Return value:  Size  Location     Type
  7877 ;;                  1    wreg      unsigned char 
  7878 ;; Registers used:
  7879 ;;		wreg, status,2, status,0, pclath, cstack
  7880 ;; Tracked objects:
  7881 ;;		On entry : 1F/0
  7882 ;;		On exit  : 1F/0
  7883 ;;		Unchanged: 0/0
  7884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7885 ;;      Params:         0       0       0       0       0       0       0       0
  7886 ;;      Locals:         0       1       0       0       0       0       0       0
  7887 ;;      Temps:          0       0       0       0       0       0       0       0
  7888 ;;      Totals:         0       1       0       0       0       0       0       0
  7889 ;;Total ram usage:        1 bytes
  7890 ;; Hardware stack levels used:    1
  7891 ;; Hardware stack levels required when called:    4
  7892 ;; This function calls:
  7893 ;;		_OneWire_Reset
  7894 ;;		_OneWire_WriteByte
  7895 ;; This function is called by:
  7896 ;;		_DS18X20_StartMeas
  7897 ;;		_DS18X20_ReadMeas
  7898 ;; This function uses a non-reentrant model
  7899 ;;
  7900  00B3                     _OneWire_Command:	
  7901                           
  7902                           ; Regs used in _OneWire_Command: [wreg+status,2+status,0+pclath+cstack]
  7903                           ;OneWire_Command@command stored from wreg
  7904  00B3  00A4               	movwf	OneWire_Command@command
  7905                           
  7906                           ;OneWire.c: 127: if(OneWire_Reset())
  7907  00B4  2193  3180         	fcall	_OneWire_Reset
  7908  00B6  3A00               	xorlw	0
  7909  00B7  1D03               	btfss	3,2
  7910                           
  7911                           ;OneWire.c: 128: return 0x01;
  7912  00B8  3401               	retlw	1
  7913                           
  7914                           ;OneWire.c: 129: OneWire_WriteByte( 0xCC );
  7915  00B9  30CC               	movlw	204
  7916  00BA  20BF  3180         	fcall	_OneWire_WriteByte
  7917                           
  7918                           ;OneWire.c: 130: OneWire_WriteByte( command );
  7919  00BC  0824               	movf	OneWire_Command@command,w
  7920  00BD  20BF               	fcall	_OneWire_WriteByte
  7921                           
  7922                           ;OneWire.c: 131: return 0x00;
  7923  00BE  3400               	retlw	0
  7924  00BF                     __end_of_OneWire_Command:	
  7925  00BF                     __ptext2022:	
  7926 ;; =============== function _SimI2C_Start ends ============
  7927                           
  7928                           
  7929 ;; *************** function _OneWire_WriteByte *****************
  7930 ;; Defined at:
  7931 ;;		line 167 in file "F:\work\WYP\NBIoT1\OneWire.c"
  7932 ;; Parameters:    Size  Location     Type
  7933 ;;  val             1    wreg     unsigned char 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  val             1    1[BANK0 ] unsigned char 
  7936 ;;  i               1    3[BANK0 ] unsigned char 
  7937 ;;  temp            1    2[BANK0 ] unsigned char 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;		None               void
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0
  7942 ;; Tracked objects:
  7943 ;;		On entry : 1F/0
  7944 ;;		On exit  : 1F/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7947 ;;      Params:         0       0       0       0       0       0       0       0
  7948 ;;      Locals:         0       3       0       0       0       0       0       0
  7949 ;;      Temps:          0       1       0       0       0       0       0       0
  7950 ;;      Totals:         0       4       0       0       0       0       0       0
  7951 ;;Total ram usage:        4 bytes
  7952 ;; Hardware stack levels used:    1
  7953 ;; Hardware stack levels required when called:    3
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_OneWire_Command
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960  00BF                     _OneWire_WriteByte:	
  7961                           
  7962                           ; Regs used in _OneWire_WriteByte: [wreg+status,2+status,0]
  7963                           ;OneWire_WriteByte@val stored from wreg
  7964  00BF  00A1               	movwf	OneWire_WriteByte@val
  7965                           
  7966                           ;OneWire.c: 168: unsigned char i;
  7967                           ;OneWire.c: 169: unsigned char temp;
  7968                           ;OneWire.c: 170: for (i=0;i<8;i++)
  7969  00C0  01A3               	clrf	OneWire_WriteByte@i
  7970  00C1                     l30925:	
  7971                           
  7972                           ;OneWire.c: 171: {
  7973                           ;OneWire.c: 172: temp=val>>i;
  7974  00C1  0821               	movf	OneWire_WriteByte@val,w
  7975  00C2  00A0               	movwf	??_OneWire_WriteByte
  7976  00C3  0A23               	incf	OneWire_WriteByte@i,w
  7977  00C4  28C6               	goto	u4284
  7978  00C5                     u4285:	
  7979  00C5  36A0               	lsrf	??_OneWire_WriteByte,f
  7980  00C6                     u4284:	
  7981  00C6  0B89               	decfsz	9,f
  7982  00C7  28C5               	goto	u4285
  7983  00C8  0820               	movf	??_OneWire_WriteByte,w
  7984  00C9  00A2               	movwf	OneWire_WriteByte@temp
  7985                           
  7986                           ;OneWire.c: 173: temp&=0x01;
  7987  00CA  3001               	movlw	1
  7988  00CB  05A2               	andwf	OneWire_WriteByte@temp,f
  7989                           
  7990                           ;OneWire.c: 174: (GIE = 0);
  7991  00CC  138B               	bcf	11,7
  7992                           
  7993                           ;OneWire.c: 175: TRISB1 = 0;LATB1=0;
  7994  00CD  0021               	movlb	1	; select bank1
  7995  00CE  108D               	bcf	13,1
  7996  00CF  0022               	movlb	2	; select bank2
  7997  00D0  108D               	bcf	13,1
  7998                           
  7999                           ;OneWire.c: 176: _delay((unsigned long)((2)*(4000000/4000000.0)));
  8000  00D1  28D2               	nop2	;2 cycle nop
  8001                           
  8002                           ;OneWire.c: 177: if (temp==1)
  8003  00D2  0020               	movlb	0	; select bank0
  8004  00D3  0322               	decf	OneWire_WriteByte@temp,w
  8005  00D4  1D03               	skipz
  8006  00D5  28D8               	goto	l30939
  8007                           
  8008                           ;OneWire.c: 178: {
  8009                           ;OneWire.c: 179: TRISB1=1;
  8010  00D6  0021               	movlb	1	; select bank1
  8011  00D7  148D               	bsf	13,1
  8012  00D8                     l30939:	
  8013                           
  8014                           ;OneWire.c: 180: }
  8015                           ;OneWire.c: 181: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8016  00D8  3018               	movlw	24
  8017  00D9  0020               	movlb	0	; select bank0
  8018  00DA  00A0               	movwf	??_OneWire_WriteByte
  8019  00DB                     u7757:	
  8020  00DB  0BA0               	decfsz	??_OneWire_WriteByte,f
  8021  00DC  28DB               	goto	u7757
  8022  00DD  28DE               	nop2	;nop
  8023                           
  8024                           ;OneWire.c: 182: TRISB1=1;
  8025  00DE  0021               	movlb	1	; select bank1
  8026  00DF  148D               	bsf	13,1
  8027                           
  8028                           ;OneWire.c: 183: (GIE = 1);
  8029  00E0  178B               	bsf	11,7
  8030  00E1  0020               	movlb	0	; select bank0
  8031  00E2  0AA3               	incf	OneWire_WriteByte@i,f
  8032  00E3  3008               	movlw	8
  8033  00E4  0223               	subwf	OneWire_WriteByte@i,w
  8034  00E5  1803               	btfsc	3,0
  8035  00E6  0008               	return
  8036  00E7  28C1               	goto	l30925
  8037  00E8                     __end_of_OneWire_WriteByte:	
  8038  00E8                     __ptext2000:	
  8039 ;; =============== function _CallProc ends ============
  8040                           
  8041                           
  8042 ;; *************** function _InitSystem *****************
  8043 ;; Defined at:
  8044 ;;		line 73 in file "F:\work\WYP\NBIoT1\Init.c"
  8045 ;; Parameters:    Size  Location     Type
  8046 ;;		None
  8047 ;; Auto vars:     Size  Location     Type
  8048 ;;  x               1   13[BANK0 ] unsigned char 
  8049 ;; Return value:  Size  Location     Type
  8050 ;;		None               void
  8051 ;; Registers used:
  8052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8053 ;; Tracked objects:
  8054 ;;		On entry : 17F/0
  8055 ;;		On exit  : 1F/0
  8056 ;;		Unchanged: 0/0
  8057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8058 ;;      Params:         0       0       0       0       0       0       0       0
  8059 ;;      Locals:         0       1       0       0       0       0       0       0
  8060 ;;      Temps:          0       0       0       0       0       0       0       0
  8061 ;;      Totals:         0       1       0       0       0       0       0       0
  8062 ;;Total ram usage:        1 bytes
  8063 ;; Hardware stack levels used:    1
  8064 ;; Hardware stack levels required when called:    7
  8065 ;; This function calls:
  8066 ;;		_InitMCU
  8067 ;;		_InitVariable
  8068 ;;		_DisplayInit
  8069 ;;		_ATCommand_Init
  8070 ;;		_OneWire_Reset
  8071 ;;		_TCN75_Init
  8072 ;;		_TCN75_SetConfig
  8073 ;;		___delay_20ms
  8074 ;;		_ReadTData
  8075 ;; This function is called by:
  8076 ;;		_main
  8077 ;; This function uses a non-reentrant model
  8078 ;;
  8079  00E8                     _InitSystem:	
  8080                           
  8081                           ;Init.c: 74: unsigned char x;
  8082                           ;Init.c: 75: InitMCU();
  8083                           
  8084                           ; Regs used in _InitSystem: [wreg-status,0+pclath+cstack]
  8085  00E8  213E  3180         	fcall	_InitMCU
  8086                           
  8087                           ;Init.c: 76: InitVariable();
  8088  00EA  21C5  3180         	fcall	_InitVariable
  8089                           
  8090                           ;Init.c: 78: DisplayInit();
  8091  00EC  211B  3180         	fcall	_DisplayInit
  8092                           
  8093                           ;Init.c: 81: ATCommand_Init();
  8094  00EE  217C  3180         	fcall	_ATCommand_Init
  8095                           
  8096                           ;Init.c: 83: x=10;
  8097  00F0  300A               	movlw	10
  8098  00F1  00AD               	movwf	InitSystem@x
  8099                           
  8100                           ;Init.c: 84: while(x!=0)
  8101  00F2  28F4               	goto	l4332
  8102  00F3                     l33295:	
  8103                           ;Init.c: 89: break;
  8104                           
  8105                           
  8106                           ;Init.c: 90: }
  8107                           ;Init.c: 91: x--;
  8108  00F3  03AD               	decf	InitSystem@x,f
  8109  00F4                     l4332:	
  8110  00F4  08AD               	movf	InitSystem@x,f
  8111  00F5  1903               	btfsc	3,2
  8112  00F6  28FD               	goto	l33297
  8113                           
  8114                           ;Init.c: 85: {
  8115                           ;Init.c: 86: if(OneWire_Reset()==0)
  8116  00F7  2193  3180         	fcall	_OneWire_Reset
  8117  00F9  3800               	iorlw	0
  8118  00FA  1D03               	skipz
  8119  00FB  28F3               	goto	l33295
  8120                           
  8121                           ;Init.c: 87: {
  8122                           ;Init.c: 88: gFlags.b18B20=1;
  8123  00FC  14E5               	bsf	_gFlags,1
  8124  00FD                     l33297:	
  8125                           
  8126                           ;Init.c: 92: }
  8127                           ;Init.c: 93: if(x==0)
  8128  00FD  08AD               	movf	InitSystem@x,f
  8129  00FE  1D03               	skipz
  8130  00FF  290D               	goto	l33317
  8131                           
  8132                           ;Init.c: 94: {
  8133                           ;Init.c: 95: gFlags.b18B20=0;
  8134  0100  10E5               	bcf	_gFlags,1
  8135                           
  8136                           ;Init.c: 96: TCN75_Init();
  8137  0101  21C4  3180         	fcall	_TCN75_Init
  8138                           
  8139                           ;Init.c: 97: TCN75_Config.bShutdown=1;
  8140  0103  0020               	movlb	0	; select bank0
  8141  0104  1463               	bsf	_TCN75_Config,0
  8142                           
  8143                           ;Init.c: 98: TCN75_Config.COMP_INT=0;
  8144  0105  10E3               	bcf	_TCN75_Config,1
  8145                           
  8146                           ;Init.c: 99: TCN75_Config.Polarity=0;
  8147  0106  1163               	bcf	_TCN75_Config,2
  8148                           
  8149                           ;Init.c: 100: TCN75_Config.FaultQueue=0b00;
  8150  0107  30E7               	movlw	-25
  8151  0108  05E3               	andwf	_TCN75_Config,f
  8152                           
  8153                           ;Init.c: 101: TCN75_Config.Resolution=0b11;
  8154  0109  3060               	movlw	96
  8155  010A  04E3               	iorwf	_TCN75_Config,f
  8156                           
  8157                           ;Init.c: 102: TCN75_Config.OneShot=0;
  8158  010B  13E3               	bcf	_TCN75_Config,7
  8159                           
  8160                           ;Init.c: 103: TCN75_SetConfig();
  8161  010C  220C               	fcall	_TCN75_SetConfig
  8162  010D                     l33317:	
  8163                           
  8164                           ;Init.c: 104: }
  8165                           ;Init.c: 105: __delay_20ms(50);
  8166  010D  3032               	movlw	50
  8167  010E  00A0               	movwf	?___delay_20ms
  8168  010F  01A1               	clrf	?___delay_20ms+1
  8169  0110  318B  2308  3180   	fcall	___delay_20ms
  8170                           
  8171                           ;Init.c: 106: ReadTData();
  8172  0113  3188  20F4         	fcall	_ReadTData
  8173                           
  8174                           ;Init.c: 107: __delay_20ms(250);
  8175  0115  30FA               	movlw	250
  8176  0116  0020               	movlb	0	; select bank0
  8177  0117  00A0               	movwf	?___delay_20ms
  8178  0118  01A1               	clrf	?___delay_20ms+1
  8179  0119  318B  2B08         	ljmp	l12779
  8180  011B                     __end_of_InitSystem:	
  8181  011B                     __ptext2058:	
  8182 ;; =============== function _InitMCU ends ============
  8183                           
  8184                           
  8185 ;; *************** function _DisplayInit *****************
  8186 ;; Defined at:
  8187 ;;		line 334 in file "F:\work\WYP\NBIoT1\Display.c"
  8188 ;; Parameters:    Size  Location     Type
  8189 ;;		None
  8190 ;; Auto vars:     Size  Location     Type
  8191 ;;		None
  8192 ;; Return value:  Size  Location     Type
  8193 ;;		None               void
  8194 ;; Registers used:
  8195 ;;		wreg, status,2
  8196 ;; Tracked objects:
  8197 ;;		On entry : 17F/0
  8198 ;;		On exit  : 17F/F
  8199 ;;		Unchanged: FFE80/0
  8200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8201 ;;      Params:         0       0       0       0       0       0       0       0
  8202 ;;      Locals:         0       0       0       0       0       0       0       0
  8203 ;;      Temps:          0       0       0       0       0       0       0       0
  8204 ;;      Totals:         0       0       0       0       0       0       0       0
  8205 ;;Total ram usage:        0 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    3
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_InitSystem
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214  011B                     _DisplayInit:	
  8215                           
  8216                           ;Display.c: 338: LCDPS = 0b00000011;
  8217                           
  8218                           ; Regs used in _DisplayInit: [wreg+status,2]
  8219  011B  3003               	movlw	3
  8220  011C  002F               	movlb	15	; select bank15
  8221  011D  0092               	movwf	18	;volatile
  8222                           
  8223                           ;Display.c: 339: LCDSE0 = 0;
  8224  011E  0198               	clrf	24	;volatile
  8225                           
  8226                           ;Display.c: 340: LCDSE1 = 0;
  8227  011F  0199               	clrf	25	;volatile
  8228                           
  8229                           ;Display.c: 341: LCDSE2 = 0;
  8230  0120  019A               	clrf	26	;volatile
  8231                           
  8232                           ;Display.c: 342: SEG21=1;
  8233  0121  169A               	bsf	26,5
  8234                           
  8235                           ;Display.c: 343: SEG5=1;
  8236  0122  1698               	bsf	24,5
  8237                           
  8238                           ;Display.c: 344: SEG11=1;
  8239  0123  1599               	bsf	25,3
  8240                           
  8241                           ;Display.c: 345: SEG16=1;
  8242  0124  141A               	bsf	26,0
  8243                           
  8244                           ;Display.c: 346: SEG6=1;
  8245  0125  1718               	bsf	24,6
  8246                           
  8247                           ;Display.c: 347: SEG3=1;
  8248  0126  1598               	bsf	24,3
  8249                           
  8250                           ;Display.c: 348: SEG23=1;
  8251  0127  179A               	bsf	26,7
  8252                           
  8253                           ;Display.c: 349: SEG22=1;
  8254  0128  171A               	bsf	26,6
  8255                           
  8256                           ;Display.c: 351: LCDCON = 0b00001111;
  8257  0129  300F               	movlw	15
  8258  012A  0091               	movwf	17	;volatile
  8259                           
  8260                           ;Display.c: 352: LCDDATA0=0;
  8261  012B  01A0               	clrf	32	;volatile
  8262                           
  8263                           ;Display.c: 353: LCDDATA1=0;
  8264  012C  01A1               	clrf	33	;volatile
  8265                           
  8266                           ;Display.c: 354: LCDDATA2=0;
  8267  012D  01A2               	clrf	34	;volatile
  8268                           
  8269                           ;Display.c: 355: LCDDATA3=0;
  8270  012E  01A3               	clrf	35	;volatile
  8271                           
  8272                           ;Display.c: 356: LCDDATA4=0;
  8273  012F  01A4               	clrf	36	;volatile
  8274                           
  8275                           ;Display.c: 357: LCDDATA5=0;
  8276  0130  01A5               	clrf	37	;volatile
  8277                           
  8278                           ;Display.c: 358: LCDDATA6=0;
  8279  0131  01A6               	clrf	38	;volatile
  8280                           
  8281                           ;Display.c: 359: LCDDATA7=0;
  8282  0132  01A7               	clrf	39	;volatile
  8283                           
  8284                           ;Display.c: 360: LCDDATA8=0;
  8285  0133  01A8               	clrf	40	;volatile
  8286                           
  8287                           ;Display.c: 361: LCDDATA9=0;
  8288  0134  01A9               	clrf	41	;volatile
  8289                           
  8290                           ;Display.c: 362: LCDDATA10=0;
  8291  0135  01AA               	clrf	42	;volatile
  8292                           
  8293                           ;Display.c: 363: LCDDATA11=0;
  8294  0136  01AB               	clrf	43	;volatile
  8295                           
  8296                           ;Display.c: 365: LCDREF = 0b10100000;
  8297  0137  30A0               	movlw	160
  8298  0138  0093               	movwf	19	;volatile
  8299                           
  8300                           ;Display.c: 366: LCDRL = 0b00110000;
  8301  0139  3030               	movlw	48
  8302  013A  0095               	movwf	21	;volatile
  8303                           
  8304                           ;Display.c: 367: LCDCST = 0b00000000;
  8305  013B  0194               	clrf	20	;volatile
  8306                           
  8307                           ;Display.c: 369: LCDEN=1;
  8308  013C  1791               	bsf	17,7
  8309  013D  0008               	return
  8310  013E                     __end_of_DisplayInit:	
  8311  013E                     __ptext2057:	
  8312 ;; =============== function _eeprom_write ends ============
  8313                           
  8314                           
  8315 ;; *************** function _InitMCU *****************
  8316 ;; Defined at:
  8317 ;;		line 3 in file "F:\work\WYP\NBIoT1\Init.c"
  8318 ;; Parameters:    Size  Location     Type
  8319 ;;		None
  8320 ;; Auto vars:     Size  Location     Type
  8321 ;;		None
  8322 ;; Return value:  Size  Location     Type
  8323 ;;		None               void
  8324 ;; Registers used:
  8325 ;;		wreg, status,2
  8326 ;; Tracked objects:
  8327 ;;		On entry : 17F/0
  8328 ;;		On exit  : 17F/0
  8329 ;;		Unchanged: FFE80/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8331 ;;      Params:         0       0       0       0       0       0       0       0
  8332 ;;      Locals:         0       0       0       0       0       0       0       0
  8333 ;;      Temps:          0       0       0       0       0       0       0       0
  8334 ;;      Totals:         0       0       0       0       0       0       0       0
  8335 ;;Total ram usage:        0 bytes
  8336 ;; Hardware stack levels used:    1
  8337 ;; Hardware stack levels required when called:    3
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_InitSystem
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344  013E                     _InitMCU:	
  8345                           
  8346                           ;Init.c: 5: ADCON1=0b00111111;
  8347                           
  8348                           ; Regs used in _InitMCU: [wreg+status,2]
  8349  013E  303F               	movlw	63
  8350  013F  0021               	movlb	1	; select bank1
  8351  0140  009E               	movwf	30	;volatile
  8352                           
  8353                           ;Init.c: 7: ANSELA=0;
  8354  0141  0023               	movlb	3	; select bank3
  8355  0142  018C               	clrf	12	;volatile
  8356                           
  8357                           ;Init.c: 8: ANSELB=0;
  8358  0143  018D               	clrf	13	;volatile
  8359                           
  8360                           ;Init.c: 9: ANSELD=0;
  8361  0144  018F               	clrf	15	;volatile
  8362                           
  8363                           ;Init.c: 10: ANSELE=0;
  8364  0145  0190               	clrf	16	;volatile
  8365                           
  8366                           ;Init.c: 12: LATD5=0;
  8367  0146  0022               	movlb	2	; select bank2
  8368  0147  128F               	bcf	15,5
  8369                           
  8370                           ;Init.c: 13: TRISD5=0;
  8371  0148  0021               	movlb	1	; select bank1
  8372  0149  128F               	bcf	15,5
  8373                           
  8374                           ;Init.c: 14: TRISD4=1;
  8375  014A  160F               	bsf	15,4
  8376                           
  8377                           ;Init.c: 16: nWPUEN=0;
  8378  014B  1395               	bcf	21,7
  8379                           
  8380                           ;Init.c: 17: TRISB7=1;
  8381  014C  178D               	bsf	13,7
  8382                           
  8383                           ;Init.c: 18: WPUB7=1;
  8384  014D  0024               	movlb	4	; select bank4
  8385  014E  178D               	bsf	13,7
  8386                           
  8387                           ;Init.c: 20: LATA4=0;
  8388  014F  0022               	movlb	2	; select bank2
  8389  0150  120C               	bcf	12,4
  8390                           
  8391                           ;Init.c: 21: LATA3=0;
  8392  0151  118C               	bcf	12,3
  8393                           
  8394                           ;Init.c: 23: TRISA4=0;
  8395  0152  0021               	movlb	1	; select bank1
  8396  0153  120C               	bcf	12,4
  8397                           
  8398                           ;Init.c: 24: TRISA3=0;
  8399  0154  118C               	bcf	12,3
  8400                           
  8401                           ;Init.c: 26: TRISB2=1;
  8402  0155  150D               	bsf	13,2
  8403                           
  8404                           ;Init.c: 30: T2CON=0b00111011;
  8405  0156  303B               	movlw	59
  8406  0157  0020               	movlb	0	; select bank0
  8407  0158  009C               	movwf	28	;volatile
  8408                           
  8409                           ;Init.c: 31: PR2=227;
  8410  0159  30E3               	movlw	227
  8411  015A  009B               	movwf	27	;volatile
  8412                           
  8413                           ;Init.c: 32: TMR2ON=0;
  8414  015B  111C               	bcf	28,2
  8415                           
  8416                           ;Init.c: 33: TMR2IE=0;
  8417  015C  0021               	movlb	1	; select bank1
  8418  015D  1091               	bcf	17,1
  8419                           
  8420                           ;Init.c: 34: TMR2IF=0;
  8421  015E  0020               	movlb	0	; select bank0
  8422  015F  1091               	bcf	17,1
  8423                           
  8424                           ;Init.c: 38: T1CON=0b01110000;
  8425  0160  3070               	movlw	112
  8426  0161  0098               	movwf	24	;volatile
  8427                           
  8428                           ;Init.c: 39: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
  8429  0162  303C               	movlw	60
  8430  0163  0097               	movwf	23	;volatile
  8431  0164  30B0               	movlw	176
  8432  0165  0096               	movwf	22	;volatile
  8433                           
  8434                           ;Init.c: 40: TMR1ON=1;
  8435  0166  1418               	bsf	24,0
  8436                           
  8437                           ;Init.c: 41: TMR1IE=1;
  8438  0167  0021               	movlb	1	; select bank1
  8439  0168  1411               	bsf	17,0
  8440                           
  8441                           ;Init.c: 42: TMR1IF=0;
  8442  0169  0020               	movlb	0	; select bank0
  8443  016A  1011               	bcf	17,0
  8444                           
  8445                           ;Init.c: 48: TRISC7=1;
  8446  016B  0021               	movlb	1	; select bank1
  8447  016C  178E               	bsf	14,7
  8448                           
  8449                           ;Init.c: 49: TRISC6=1;
  8450  016D  170E               	bsf	14,6
  8451                           
  8452                           ;Init.c: 50: TXSTA=0b00100110;
  8453  016E  3026               	movlw	38
  8454  016F  0023               	movlb	3	; select bank3
  8455  0170  009E               	movwf	30	;volatile
  8456                           
  8457                           ;Init.c: 51: RCSTA=0b10010000;
  8458  0171  3090               	movlw	144
  8459  0172  009D               	movwf	29	;volatile
  8460                           
  8461                           ;Init.c: 52: SPBRG=25;
  8462  0173  3019               	movlw	25
  8463  0174  009B               	movwf	27	;volatile
  8464                           
  8465                           ;Init.c: 53: RCIE=1;
  8466  0175  0021               	movlb	1	; select bank1
  8467  0176  1691               	bsf	17,5
  8468                           
  8469                           ;Init.c: 54: RCIF=0;
  8470  0177  0020               	movlb	0	; select bank0
  8471  0178  1291               	bcf	17,5
  8472                           
  8473                           ;Init.c: 56: PEIE=1;
  8474  0179  170B               	bsf	11,6
  8475                           
  8476                           ;Init.c: 57: GIE=1;
  8477  017A  178B               	bsf	11,7
  8478  017B  0008               	return
  8479  017C                     __end_of_InitMCU:	
  8480  017C                     __ptext2031:	
  8481 ;; =============== function _OneWire_Reset ends ============
  8482                           
  8483                           
  8484 ;; *************** function _ATCommand_Init *****************
  8485 ;; Defined at:
  8486 ;;		line 17 in file "F:\work\WYP\NBIoT1\ATCommand.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;		None               void
  8493 ;; Registers used:
  8494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8495 ;; Tracked objects:
  8496 ;;		On entry : 17F/F
  8497 ;;		On exit  : 17F/0
  8498 ;;		Unchanged: FFE80/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8500 ;;      Params:         0       0       0       0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    4
  8507 ;; This function calls:
  8508 ;;		_strcpy
  8509 ;; This function is called by:
  8510 ;;		_InitSystem
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513  017C                     _ATCommand_Init:	
  8514                           
  8515                           ;ATCommand.c: 18: ATCommand_WaitACKTimes=50;
  8516                           
  8517                           ; Regs used in _ATCommand_Init: [wreg-status,0+pclath+cstack]
  8518  017C  3032               	movlw	50
  8519  017D  0020               	movlb	0	; select bank0
  8520  017E  00D4               	movwf	_ATCommand_WaitACKTimes
  8521  017F  01D5               	clrf	_ATCommand_WaitACKTimes+1
  8522                           
  8523                           ;ATCommand.c: 19: ATCommand_RetryTimes=3;
  8524  0180  3003               	movlw	3
  8525  0181  00E0               	movwf	_ATCommand_RetryTimes
  8526                           
  8527                           ;ATCommand.c: 20: strcpy(ATCommand_OkString,"OK");
  8528  0182  3063               	movlw	low (STR_36| (0+32768))
  8529  0183  00A0               	movwf	?_strcpy
  8530  0184  3091               	movlw	high (STR_36| (0+32768))
  8531  0185  00A1               	movwf	?_strcpy+1
  8532  0186  30C4               	movlw	_ATCommand_OkString& (0+255)
  8533  0187  318E  262C  3180   	fcall	_strcpy
  8534                           
  8535                           ;ATCommand.c: 21: strcpy(ATCommand_ErrString,"ERROR");
  8536  018A  304A               	movlw	low (STR_21| (0+32768))
  8537  018B  00A0               	movwf	?_strcpy
  8538  018C  3091               	movlw	high (STR_21| (0+32768))
  8539  018D  00A1               	movwf	?_strcpy+1
  8540  018E  30B5               	movlw	_ATCommand_ErrString& (0+255)
  8541  018F  318E  262C         	fcall	_strcpy
  8542                           
  8543                           ;ATCommand.c: 22: ATCommand_Clear='\0';
  8544  0191  01F9               	clrf	_ATCommand_Clear
  8545  0192  0008               	return
  8546  0193                     __end_of_ATCommand_Init:	
  8547  0193                     __ptext2030:	
  8548 ;; =============== function _TCN75_Init ends ============
  8549                           
  8550                           
  8551 ;; *************** function _OneWire_Reset *****************
  8552 ;; Defined at:
  8553 ;;		line 6 in file "F:\work\WYP\NBIoT1\OneWire.c"
  8554 ;; Parameters:    Size  Location     Type
  8555 ;;		None
  8556 ;; Auto vars:     Size  Location     Type
  8557 ;;  r               1    2[BANK0 ] unsigned char 
  8558 ;;  Retry           1    1[BANK0 ] unsigned char 
  8559 ;; Return value:  Size  Location     Type
  8560 ;;                  1    wreg      unsigned char 
  8561 ;; Registers used:
  8562 ;;		wreg, status,2, status,0
  8563 ;; Tracked objects:
  8564 ;;		On entry : 1F/0
  8565 ;;		On exit  : 1F/0
  8566 ;;		Unchanged: 0/0
  8567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8568 ;;      Params:         0       0       0       0       0       0       0       0
  8569 ;;      Locals:         0       2       0       0       0       0       0       0
  8570 ;;      Temps:          0       1       0       0       0       0       0       0
  8571 ;;      Totals:         0       3       0       0       0       0       0       0
  8572 ;;Total ram usage:        3 bytes
  8573 ;; Hardware stack levels used:    1
  8574 ;; Hardware stack levels required when called:    3
  8575 ;; This function calls:
  8576 ;;		Nothing
  8577 ;; This function is called by:
  8578 ;;		_InitSystem
  8579 ;;		_DS18X20_StartMeas
  8580 ;;		_DS18X20_ReadMeas
  8581 ;;		_OneWire_Command
  8582 ;; This function uses a non-reentrant model
  8583 ;;
  8584  0193                     _OneWire_Reset:	
  8585                           
  8586                           ;OneWire.c: 7: unsigned char r,Retry;
  8587                           ;OneWire.c: 8: r=1;
  8588                           
  8589                           ; Regs used in _OneWire_Reset: [wreg+status,2+status,0]
  8590  0193  01A2               	clrf	OneWire_Reset@r
  8591  0194  0AA2               	incf	OneWire_Reset@r,f
  8592                           
  8593                           ;OneWire.c: 9: Retry=5;
  8594  0195  3005               	movlw	5
  8595  0196  00A1               	movwf	OneWire_Reset@Retry
  8596  0197                     l30807:	
  8597                           ;OneWire.c: 10: while(Retry--)
  8598                           
  8599  0197  03A1               	decf	OneWire_Reset@Retry,f
  8600  0198  0821               	movf	OneWire_Reset@Retry,w
  8601  0199  3AFF               	xorlw	255
  8602  019A  1903               	btfsc	3,2
  8603  019B  29C2               	goto	l30809
  8604                           
  8605                           ;OneWire.c: 11: {
  8606                           ;OneWire.c: 12: TRISB1 = 0;LATB1=0;
  8607  019C  0021               	movlb	1	; select bank1
  8608  019D  108D               	bcf	13,1
  8609  019E  0022               	movlb	2	; select bank2
  8610  019F  108D               	bcf	13,1
  8611                           
  8612                           ;OneWire.c: 13: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8613  01A0  309F               	movlw	159
  8614  01A1  0020               	movlb	0	; select bank0
  8615  01A2  00A0               	movwf	??_OneWire_Reset
  8616  01A3                     u7787:	
  8617  01A3  0BA0               	decfsz	??_OneWire_Reset,f
  8618  01A4  29A3               	goto	u7787
  8619  01A5  29A6               	nop2	;nop
  8620                           
  8621                           ;OneWire.c: 14: TRISB1=1;
  8622  01A6  0021               	movlb	1	; select bank1
  8623  01A7  148D               	bsf	13,1
  8624                           
  8625                           ;OneWire.c: 15: (GIE = 0);
  8626  01A8  138B               	bcf	11,7
  8627                           
  8628                           ;OneWire.c: 16: _delay((unsigned long)((75)*(4000000/4000000.0)));
  8629  01A9  3018               	movlw	24
  8630  01AA  0020               	movlb	0	; select bank0
  8631  01AB  00A0               	movwf	??_OneWire_Reset
  8632  01AC                     u7797:	
  8633  01AC  0BA0               	decfsz	??_OneWire_Reset,f
  8634  01AD  29AC               	goto	u7797
  8635  01AE  29AF               	nop2	;nop
  8636                           
  8637                           ;OneWire.c: 17: r=RB1;
  8638  01AF  3000               	movlw	0
  8639  01B0  0020               	movlb	0	; select bank0
  8640  01B1  188D               	btfsc	13,1
  8641  01B2  3001               	movlw	1
  8642  01B3  00A2               	movwf	OneWire_Reset@r
  8643                           
  8644                           ;OneWire.c: 18: (GIE = 1);
  8645  01B4  178B               	bsf	11,7
  8646                           
  8647                           ;OneWire.c: 19: _delay((unsigned long)((480)*(4000000/4000000.0)));
  8648  01B5  309F               	movlw	159
  8649  01B6  00A0               	movwf	??_OneWire_Reset
  8650  01B7                     u7807:	
  8651  01B7  0BA0               	decfsz	??_OneWire_Reset,f
  8652  01B8  29B7               	goto	u7807
  8653  01B9  29BA               	nop2	;nop
  8654                           
  8655                           ;OneWire.c: 20: if(RB1==0)
  8656  01BA  0020               	movlb	0	; select bank0
  8657  01BB  188D               	btfsc	13,1
  8658  01BC  29BF               	goto	l30803
  8659                           
  8660                           ;OneWire.c: 21: r=1;
  8661  01BD  01A2               	clrf	OneWire_Reset@r
  8662  01BE  0AA2               	incf	OneWire_Reset@r,f
  8663  01BF                     l30803:	
  8664                           
  8665                           ;OneWire.c: 22: if(r==0)
  8666  01BF  08A2               	movf	OneWire_Reset@r,f
  8667  01C0  1D03               	skipz
  8668  01C1  2997               	goto	l30807
  8669  01C2                     l30809:	
  8670                           
  8671                           ;OneWire.c: 24: }
  8672                           ;OneWire.c: 25: return r;
  8673  01C2  0822               	movf	OneWire_Reset@r,w
  8674  01C3  0008               	return
  8675  01C4                     __end_of_OneWire_Reset:	
  8676  01C4                     __ptext2029:	
  8677 ;; =============== function ___delay_20ms ends ============
  8678                           
  8679                           
  8680 ;; *************** function _TCN75_Init *****************
  8681 ;; Defined at:
  8682 ;;		line 16 in file "F:\work\WYP\NBIoT1\TCN75.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;		None               void
  8689 ;; Registers used:
  8690 ;;		status,2, status,0, pclath, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 1F/0
  8693 ;;		On exit  : 1F/2
  8694 ;;		Unchanged: FFFE0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8696 ;;      Params:         0       0       0       0       0       0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0
  8698 ;;      Temps:          0       0       0       0       0       0       0       0
  8699 ;;      Totals:         0       0       0       0       0       0       0       0
  8700 ;;Total ram usage:        0 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    4
  8703 ;; This function calls:
  8704 ;;		_SimI2C_Init
  8705 ;; This function is called by:
  8706 ;;		_InitSystem
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709  01C4                     _TCN75_Init:	
  8710                           
  8711                           ;TCN75.c: 17: SimI2C_Init();
  8712                           
  8713                           ; Regs used in _TCN75_Init: [status,2+status,0+pclath+cstack]
  8714  01C4  2AE6               	ljmp	l32177
  8715  01C5                     __end_of_TCN75_Init:	
  8716  01C5                     __ptext2014:	
  8717 ;; =============== function _TCN75_SetConfig ends ============
  8718                           
  8719                           
  8720 ;; *************** function _InitVariable *****************
  8721 ;; Defined at:
  8722 ;;		line 60 in file "F:\work\WYP\NBIoT1\Init.c"
  8723 ;; Parameters:    Size  Location     Type
  8724 ;;		None
  8725 ;; Auto vars:     Size  Location     Type
  8726 ;;		None
  8727 ;; Return value:  Size  Location     Type
  8728 ;;		None               void
  8729 ;; Registers used:
  8730 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8731 ;; Tracked objects:
  8732 ;;		On entry : 17F/0
  8733 ;;		On exit  : 17F/0
  8734 ;;		Unchanged: FFE80/0
  8735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8736 ;;      Params:         0       0       0       0       0       0       0       0
  8737 ;;      Locals:         0       0       0       0       0       0       0       0
  8738 ;;      Temps:          0       0       0       0       0       0       0       0
  8739 ;;      Totals:         0       0       0       0       0       0       0       0
  8740 ;;Total ram usage:        0 bytes
  8741 ;; Hardware stack levels used:    1
  8742 ;; Hardware stack levels required when called:    5
  8743 ;; This function calls:
  8744 ;;		_GetRomData
  8745 ;;		_SaveRomData
  8746 ;; This function is called by:
  8747 ;;		_InitSystem
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750  01C5                     _InitVariable:	
  8751                           
  8752                           ;Init.c: 61: if(GetRomData()==0)
  8753                           
  8754                           ; Regs used in _InitVariable: [wreg+fsr1l-status,0+pclath+cstack]
  8755  01C5  21D6  3180         	fcall	_GetRomData
  8756  01C7  3800               	iorlw	0
  8757  01C8  1D03               	skipz
  8758  01C9  29CD               	goto	l32549
  8759                           
  8760                           ;Init.c: 62: {
  8761                           ;Init.c: 63: RomParams.bWinter=1;
  8762  01CA  01E7               	clrf	_RomParams+1
  8763  01CB  0AE7               	incf	_RomParams+1,f
  8764                           
  8765                           ;Init.c: 64: SaveRomData();
  8766  01CC  22ED               	fcall	_SaveRomData
  8767  01CD                     l32549:	
  8768                           
  8769                           ;Init.c: 65: }
  8770                           ;Init.c: 66: gFlags.AllFlag=0;
  8771  01CD  01E5               	clrf	_gFlags
  8772                           
  8773                           ;Init.c: 67: SystemTick=0;
  8774  01CE  01DC               	clrf	_SystemTick
  8775  01CF  01DD               	clrf	_SystemTick+1
  8776                           
  8777                           ;Init.c: 68: NeedMeasurementTick=6000;
  8778  01D0  3070               	movlw	112
  8779  01D1  00DA               	movwf	_NeedMeasurementTick
  8780  01D2  3017               	movlw	23
  8781  01D3  00DB               	movwf	_NeedMeasurementTick+1
  8782                           
  8783                           ;Init.c: 69: TxErrDataIndex=0;
  8784  01D4  01E8               	clrf	_TxErrDataIndex
  8785  01D5  0008               	return
  8786  01D6                     __end_of_InitVariable:	
  8787  01D6                     __ptext2033:	
  8788 ;; =============== function _SaveRomData ends ============
  8789                           
  8790                           
  8791 ;; *************** function _GetRomData *****************
  8792 ;; Defined at:
  8793 ;;		line 125 in file "F:\work\WYP\NBIoT1\afx.c"
  8794 ;; Parameters:    Size  Location     Type
  8795 ;;		None
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  i               1    7[BANK0 ] unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      unsigned char 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8802 ;; Tracked objects:
  8803 ;;		On entry : 17F/0
  8804 ;;		On exit  : 17F/0
  8805 ;;		Unchanged: FFE80/0
  8806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8807 ;;      Params:         0       0       0       0       0       0       0       0
  8808 ;;      Locals:         0       1       0       0       0       0       0       0
  8809 ;;      Temps:          0       0       0       0       0       0       0       0
  8810 ;;      Totals:         0       1       0       0       0       0       0       0
  8811 ;;Total ram usage:        1 bytes
  8812 ;; Hardware stack levels used:    1
  8813 ;; Hardware stack levels required when called:    4
  8814 ;; This function calls:
  8815 ;;		_eeprom_read
  8816 ;;		_GetVerify_Sum
  8817 ;; This function is called by:
  8818 ;;		_InitVariable
  8819 ;; This function uses a non-reentrant model
  8820 ;;
  8821  01D6                     _GetRomData:	
  8822                           
  8823                           ;afx.c: 126: unsigned char i;
  8824                           ;afx.c: 127: for(i=0;i<2;i++)
  8825                           
  8826                           ; Regs used in _GetRomData: [wreg+fsr1l-status,0+pclath+cstack]
  8827  01D6  01A7               	clrf	GetRomData@i
  8828  01D7                     l32361:	
  8829                           
  8830                           ;afx.c: 128: RomParams.All[i]=eeprom_read(i);
  8831  01D7  0827               	movf	GetRomData@i,w
  8832  01D8  3E66               	addlw	_RomParams& (0+255)
  8833  01D9  0086               	movwf	6
  8834  01DA  0187               	clrf	7
  8835  01DB  0827               	movf	GetRomData@i,w
  8836  01DC  318D  25EE  3180   	fcall	_eeprom_read
  8837  01DF  0081               	movwf	1
  8838  01E0  0020               	movlb	0	; select bank0
  8839  01E1  0AA7               	incf	GetRomData@i,f
  8840  01E2  3002               	movlw	2
  8841  01E3  0227               	subwf	GetRomData@i,w
  8842  01E4  1C03               	skipc
  8843  01E5  29D7               	goto	l32361
  8844                           
  8845                           ;afx.c: 129: i=GetVerify_Sum(&RomParams.All[1],2-1);
  8846  01E6  01A0               	clrf	?_GetVerify_Sum
  8847  01E7  0AA0               	incf	?_GetVerify_Sum,f
  8848  01E8  01A1               	clrf	?_GetVerify_Sum+1
  8849  01E9  3067               	movlw	(_RomParams+1)& (0+255)
  8850  01EA  21F3  3180         	fcall	_GetVerify_Sum
  8851  01EC  00A7               	movwf	GetRomData@i
  8852                           
  8853                           ;afx.c: 130: i+=1;
  8854  01ED  0AA7               	incf	GetRomData@i,f
  8855                           
  8856                           ;afx.c: 131: if(i==RomParams.sum)
  8857  01EE  0866               	movf	_RomParams,w
  8858  01EF  0627               	xorwf	GetRomData@i,w
  8859  01F0  1903               	btfsc	3,2
  8860                           
  8861                           ;afx.c: 132: {
  8862                           ;afx.c: 133: return 1;
  8863  01F1  3401               	retlw	1
  8864                           
  8865                           ;afx.c: 135: else
  8866                           ;afx.c: 136: return 0;
  8867  01F2  3400               	retlw	0
  8868  01F3                     __end_of_GetRomData:	
  8869  01F3                     __ptext2051:	
  8870 ;; =============== function _GetVerify_CRC8 ends ============
  8871                           
  8872                           
  8873 ;; *************** function _GetVerify_Sum *****************
  8874 ;; Defined at:
  8875 ;;		line 79 in file "F:\work\WYP\NBIoT1\Verify.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;  pBuff           1    wreg     PTR unsigned char 
  8878 ;;		 -> RomParams(2), 
  8879 ;;  Count           2    0[BANK0 ] unsigned int 
  8880 ;; Auto vars:     Size  Location     Type
  8881 ;;  pBuff           1    4[BANK0 ] PTR unsigned char 
  8882 ;;		 -> RomParams(2), 
  8883 ;;  i               1    6[BANK0 ] unsigned char 
  8884 ;;  sum             1    5[BANK0 ] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      unsigned char 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8889 ;; Tracked objects:
  8890 ;;		On entry : 17F/0
  8891 ;;		On exit  : 17F/0
  8892 ;;		Unchanged: FFE80/0
  8893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8894 ;;      Params:         0       2       0       0       0       0       0       0
  8895 ;;      Locals:         0       3       0       0       0       0       0       0
  8896 ;;      Temps:          0       2       0       0       0       0       0       0
  8897 ;;      Totals:         0       7       0       0       0       0       0       0
  8898 ;;Total ram usage:        7 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    3
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_GetRomData
  8905 ;;		_SaveRomData
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908  01F3                     _GetVerify_Sum:	
  8909                           
  8910                           ; Regs used in _GetVerify_Sum: [wreg+fsr1l-status,0]
  8911                           ;GetVerify_Sum@pBuff stored from wreg
  8912  01F3  00A4               	movwf	GetVerify_Sum@pBuff
  8913                           
  8914                           ;Verify.c: 80: unsigned char sum,i;
  8915                           ;Verify.c: 81: sum=0;
  8916  01F4  01A5               	clrf	GetVerify_Sum@sum
  8917                           
  8918                           ;Verify.c: 82: for(i=0;i<Count;i++)
  8919  01F5  01A6               	clrf	GetVerify_Sum@i
  8920  01F6                     l30453:	
  8921  01F6  0826               	movf	GetVerify_Sum@i,w
  8922  01F7  00A2               	movwf	??_GetVerify_Sum
  8923  01F8  01A3               	clrf	??_GetVerify_Sum+1
  8924  01F9  0821               	movf	GetVerify_Sum@Count+1,w
  8925  01FA  0223               	subwf	??_GetVerify_Sum+1,w
  8926  01FB  1D03               	skipz
  8927  01FC  29FF               	goto	u3615
  8928  01FD  0820               	movf	GetVerify_Sum@Count,w
  8929  01FE  0222               	subwf	??_GetVerify_Sum,w
  8930  01FF                     u3615:	
  8931  01FF  1803               	btfsc	3,0
  8932  0200  2A0A               	goto	l30455
  8933                           
  8934                           ;Verify.c: 83: {
  8935                           ;Verify.c: 84: sum=(unsigned char)(sum+pBuff[i]);
  8936  0201  0826               	movf	GetVerify_Sum@i,w
  8937  0202  0724               	addwf	GetVerify_Sum@pBuff,w
  8938  0203  00A2               	movwf	??_GetVerify_Sum
  8939  0204  0086               	movwf	6
  8940  0205  0187               	clrf	7
  8941  0206  0801               	movf	1,w
  8942  0207  07A5               	addwf	GetVerify_Sum@sum,f
  8943  0208  0AA6               	incf	GetVerify_Sum@i,f
  8944  0209  29F6               	goto	l30453
  8945  020A                     l30455:	
  8946                           
  8947                           ;Verify.c: 85: }
  8948                           ;Verify.c: 86: return sum;
  8949  020A  0825               	movf	GetVerify_Sum@sum,w
  8950  020B  0008               	return
  8951  020C                     __end_of_GetVerify_Sum:	
  8952  020C                     __ptext2013:	
  8953 ;; =============== function _TCN75_ReadReg ends ============
  8954                           
  8955                           
  8956 ;; *************** function _TCN75_SetConfig *****************
  8957 ;; Defined at:
  8958 ;;		line 47 in file "F:\work\WYP\NBIoT1\TCN75.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;		None
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  bRight          1    4[BANK0 ] unsigned char 
  8963 ;;  ErrTimes        1    3[BANK0 ] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  1    wreg      unsigned char 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, pclath, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 1F/0
  8970 ;;		On exit  : 1F/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8973 ;;      Params:         0       0       0       0       0       0       0       0
  8974 ;;      Locals:         0       2       0       0       0       0       0       0
  8975 ;;      Temps:          0       0       0       0       0       0       0       0
  8976 ;;      Totals:         0       2       0       0       0       0       0       0
  8977 ;;Total ram usage:        2 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; Hardware stack levels required when called:    4
  8980 ;; This function calls:
  8981 ;;		_SimI2C_Start
  8982 ;;		_SimI2C_SendByte
  8983 ;;		_SimI2C_RecAck
  8984 ;;		_SimI2C_Stop
  8985 ;; This function is called by:
  8986 ;;		_InitSystem
  8987 ;;		_ReadTData
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990  020C                     _TCN75_SetConfig:	
  8991                           
  8992                           ;TCN75.c: 48: unsigned char ErrTimes=2;
  8993                           
  8994                           ; Regs used in _TCN75_SetConfig: [wreg+status,2+status,0+pclath+cstack]
  8995  020C  3002               	movlw	2
  8996  020D  00A3               	movwf	TCN75_SetConfig@ErrTimes
  8997                           
  8998                           ;TCN75.c: 49: unsigned char bRight=0;
  8999  020E  01A4               	clrf	TCN75_SetConfig@bRight
  9000  020F                     l32581:	
  9001                           ;TCN75.c: 63: break;
  9002                           
  9003                           ;TCN75.c: 50: while(ErrTimes--)
  9004                           
  9005  020F  03A3               	decf	TCN75_SetConfig@ErrTimes,f
  9006  0210  0823               	movf	TCN75_SetConfig@ErrTimes,w
  9007  0211  3AFF               	xorlw	255
  9008  0212  1903               	btfsc	3,2
  9009  0213  2A30               	goto	l32583
  9010                           
  9011                           ;TCN75.c: 51: {
  9012                           ;TCN75.c: 52: SimI2C_Start();
  9013  0214  229F  3180         	fcall	_SimI2C_Start
  9014                           
  9015                           ;TCN75.c: 53: SimI2C_SendByte(0b10010000&0xfe);
  9016  0216  3090               	movlw	144
  9017  0217  226A  3180         	fcall	_SimI2C_SendByte
  9018                           
  9019                           ;TCN75.c: 54: if(SimI2C_RecAck())
  9020  0219  228B  3180         	fcall	_SimI2C_RecAck
  9021  021B  3A00               	xorlw	0
  9022  021C  1D03               	btfss	3,2
  9023  021D  2A0F               	goto	l32581
  9024                           
  9025                           ;TCN75.c: 56: SimI2C_SendByte(0x01);
  9026  021E  3001               	movlw	1
  9027  021F  226A  3180         	fcall	_SimI2C_SendByte
  9028                           
  9029                           ;TCN75.c: 57: if(SimI2C_RecAck())
  9030  0221  228B  3180         	fcall	_SimI2C_RecAck
  9031  0223  3A00               	xorlw	0
  9032  0224  1D03               	btfss	3,2
  9033  0225  2A0F               	goto	l32581
  9034                           
  9035                           ;TCN75.c: 59: SimI2C_SendByte(TCN75_Config.AllFlag);
  9036  0226  0863               	movf	_TCN75_Config,w
  9037  0227  226A  3180         	fcall	_SimI2C_SendByte
  9038                           
  9039                           ;TCN75.c: 60: if(SimI2C_RecAck())
  9040  0229  228B  3180         	fcall	_SimI2C_RecAck
  9041  022B  3A00               	xorlw	0
  9042  022C  1D03               	btfss	3,2
  9043  022D  2A0F               	goto	l32581
  9044                           
  9045                           ;TCN75.c: 62: bRight=1;
  9046  022E  01A4               	clrf	TCN75_SetConfig@bRight
  9047  022F  0AA4               	incf	TCN75_SetConfig@bRight,f
  9048  0230                     l32583:	
  9049                           
  9050                           ;TCN75.c: 64: }
  9051                           ;TCN75.c: 65: SimI2C_Stop();
  9052  0230  22DC               	fcall	_SimI2C_Stop
  9053                           
  9054                           ;TCN75.c: 66: return bRight;
  9055  0231  0020               	movlb	0	; select bank0
  9056  0232  0824               	movf	TCN75_SetConfig@bRight,w
  9057  0233  0008               	return
  9058  0234                     __end_of_TCN75_SetConfig:	
  9059  0234                     __ptext2012:	
  9060 ;; =============== function _PowerON ends ============
  9061                           
  9062                           
  9063 ;; *************** function _TCN75_ReadReg *****************
  9064 ;; Defined at:
  9065 ;;		line 20 in file "F:\work\WYP\NBIoT1\TCN75.c"
  9066 ;; Parameters:    Size  Location     Type
  9067 ;;  RegPoint        1    wreg     unsigned char 
  9068 ;; Auto vars:     Size  Location     Type
  9069 ;;  RegPoint        1    3[BANK0 ] unsigned char 
  9070 ;;  bRight          1    5[BANK0 ] unsigned char 
  9071 ;;  ErrTimes        1    4[BANK0 ] unsigned char 
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      unsigned char 
  9074 ;; Registers used:
  9075 ;;		wreg, status,2, status,0, pclath, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 1F/0
  9078 ;;		On exit  : 1F/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9081 ;;      Params:         0       0       0       0       0       0       0       0
  9082 ;;      Locals:         0       3       0       0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0
  9084 ;;      Totals:         0       3       0       0       0       0       0       0
  9085 ;;Total ram usage:        3 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    4
  9088 ;; This function calls:
  9089 ;;		_SimI2C_Start
  9090 ;;		_SimI2C_SendByte
  9091 ;;		_SimI2C_RecAck
  9092 ;;		_SimI2C_ReadByte
  9093 ;;		_SimI2C_Ack
  9094 ;;		_SimI2C_NoAck
  9095 ;;		_SimI2C_Stop
  9096 ;; This function is called by:
  9097 ;;		_ReadTData
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100  0234                     _TCN75_ReadReg:	
  9101                           
  9102                           ; Regs used in _TCN75_ReadReg: [wreg+status,2+status,0+pclath+cstack]
  9103                           ;TCN75_ReadReg@RegPoint stored from wreg
  9104  0234  00A3               	movwf	TCN75_ReadReg@RegPoint
  9105                           
  9106                           ;TCN75.c: 21: unsigned char ErrTimes=2;
  9107  0235  3002               	movlw	2
  9108  0236  00A4               	movwf	TCN75_ReadReg@ErrTimes
  9109                           
  9110                           ;TCN75.c: 22: unsigned char bRight=0;
  9111  0237  01A5               	clrf	TCN75_ReadReg@bRight
  9112  0238                     l32623:	
  9113                           ;TCN75.c: 41: break;
  9114                           
  9115                           ;TCN75.c: 23: while(ErrTimes--)
  9116                           
  9117  0238  03A4               	decf	TCN75_ReadReg@ErrTimes,f
  9118  0239  0824               	movf	TCN75_ReadReg@ErrTimes,w
  9119  023A  3AFF               	xorlw	255
  9120  023B  1903               	btfsc	3,2
  9121  023C  2A66               	goto	l32625
  9122                           
  9123                           ;TCN75.c: 24: {
  9124                           ;TCN75.c: 25: SimI2C_Start();
  9125  023D  229F  3180         	fcall	_SimI2C_Start
  9126                           
  9127                           ;TCN75.c: 26: SimI2C_SendByte(0b10010000&0xfe);
  9128  023F  3090               	movlw	144
  9129  0240  226A  3180         	fcall	_SimI2C_SendByte
  9130                           
  9131                           ;TCN75.c: 27: if(SimI2C_RecAck())
  9132  0242  228B  3180         	fcall	_SimI2C_RecAck
  9133  0244  3A00               	xorlw	0
  9134  0245  1D03               	btfss	3,2
  9135  0246  2A38               	goto	l32623
  9136                           
  9137                           ;TCN75.c: 29: SimI2C_SendByte(RegPoint);
  9138  0247  0823               	movf	TCN75_ReadReg@RegPoint,w
  9139  0248  226A  3180         	fcall	_SimI2C_SendByte
  9140                           
  9141                           ;TCN75.c: 30: if(SimI2C_RecAck())
  9142  024A  228B  3180         	fcall	_SimI2C_RecAck
  9143  024C  3A00               	xorlw	0
  9144  024D  1D03               	btfss	3,2
  9145  024E  2A38               	goto	l32623
  9146                           
  9147                           ;TCN75.c: 32: SimI2C_Start();
  9148  024F  229F  3180         	fcall	_SimI2C_Start
  9149                           
  9150                           ;TCN75.c: 33: SimI2C_SendByte(0b10010000|0x01);
  9151  0251  3091               	movlw	145
  9152  0252  226A  3180         	fcall	_SimI2C_SendByte
  9153                           
  9154                           ;TCN75.c: 34: if(SimI2C_RecAck())
  9155  0254  228B  3180         	fcall	_SimI2C_RecAck
  9156  0256  3A00               	xorlw	0
  9157  0257  1D03               	btfss	3,2
  9158  0258  2A38               	goto	l32623
  9159                           
  9160                           ;TCN75.c: 36: TCN75_RegReadResualt.u8H=SimI2C_ReadByte();
  9161  0259  22A9  3180         	fcall	_SimI2C_ReadByte
  9162  025B  00DF               	movwf	_TCN75_RegReadResualt+1
  9163                           
  9164                           ;TCN75.c: 37: SimI2C_Ack();
  9165  025C  22C9  3180         	fcall	_SimI2C_Ack
  9166                           
  9167                           ;TCN75.c: 38: TCN75_RegReadResualt.u8L=SimI2C_ReadByte();
  9168  025E  22A9  3180         	fcall	_SimI2C_ReadByte
  9169  0260  00DE               	movwf	_TCN75_RegReadResualt
  9170                           
  9171                           ;TCN75.c: 39: SimI2C_NoAck();
  9172  0261  22D5  3180         	fcall	_SimI2C_NoAck
  9173                           
  9174                           ;TCN75.c: 40: bRight=1;
  9175  0263  0020               	movlb	0	; select bank0
  9176  0264  01A5               	clrf	TCN75_ReadReg@bRight
  9177  0265  0AA5               	incf	TCN75_ReadReg@bRight,f
  9178  0266                     l32625:	
  9179                           
  9180                           ;TCN75.c: 42: }
  9181                           ;TCN75.c: 43: SimI2C_Stop();
  9182  0266  22DC               	fcall	_SimI2C_Stop
  9183                           
  9184                           ;TCN75.c: 44: return bRight;
  9185  0267  0020               	movlb	0	; select bank0
  9186  0268  0825               	movf	TCN75_ReadReg@bRight,w
  9187  0269  0008               	return
  9188  026A                     __end_of_TCN75_ReadReg:	
  9189  026A                     __ptext2020:	
  9190 ;; =============== function _SimI2C_RecAck ends ============
  9191                           
  9192                           
  9193 ;; *************** function _SimI2C_SendByte *****************
  9194 ;; Defined at:
  9195 ;;		line 71 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  data            1    wreg     unsigned char 
  9198 ;; Auto vars:     Size  Location     Type
  9199 ;;  data            1    0[BANK0 ] unsigned char 
  9200 ;;  i               1    2[BANK0 ] unsigned char 
  9201 ;;  t               1    1[BANK0 ] unsigned char 
  9202 ;; Return value:  Size  Location     Type
  9203 ;;		None               void
  9204 ;; Registers used:
  9205 ;;		wreg, status,2, status,0
  9206 ;; Tracked objects:
  9207 ;;		On entry : 1D/2
  9208 ;;		On exit  : 1F/2
  9209 ;;		Unchanged: 0/0
  9210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9211 ;;      Params:         0       0       0       0       0       0       0       0
  9212 ;;      Locals:         0       3       0       0       0       0       0       0
  9213 ;;      Temps:          0       0       0       0       0       0       0       0
  9214 ;;      Totals:         0       3       0       0       0       0       0       0
  9215 ;;Total ram usage:        3 bytes
  9216 ;; Hardware stack levels used:    1
  9217 ;; Hardware stack levels required when called:    3
  9218 ;; This function calls:
  9219 ;;		Nothing
  9220 ;; This function is called by:
  9221 ;;		_TCN75_ReadReg
  9222 ;;		_TCN75_SetConfig
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225  026A                     _SimI2C_SendByte:	
  9226                           
  9227                           ; Regs used in _SimI2C_SendByte: [wreg+status,2+status,0]
  9228                           ;SimI2C_SendByte@data stored from wreg
  9229  026A  0020               	movlb	0	; select bank0
  9230  026B  00A0               	movwf	SimI2C_SendByte@data
  9231                           
  9232                           ;SimI2C.c: 72: unsigned char i;
  9233                           ;SimI2C.c: 73: unsigned char t;
  9234                           ;SimI2C.c: 74: for(i=0;i<8;i++)
  9235  026C  01A2               	clrf	SimI2C_SendByte@i
  9236  026D                     l27370:	
  9237                           
  9238                           ;SimI2C.c: 75: {
  9239                           ;SimI2C.c: 76: LATD7=0;
  9240  026D  0022               	movlb	2	; select bank2
  9241  026E  138F               	bcf	15,7
  9242                           
  9243                           ;SimI2C.c: 77: t=data&0x80;
  9244  026F  0020               	movlb	0	; select bank0
  9245  0270  0820               	movf	SimI2C_SendByte@data,w
  9246  0271  00A1               	movwf	SimI2C_SendByte@t
  9247  0272  3080               	movlw	128
  9248  0273  05A1               	andwf	SimI2C_SendByte@t,f
  9249                           
  9250                           ;SimI2C.c: 78: if(t==0x00)
  9251  0274  08A1               	movf	SimI2C_SendByte@t,f
  9252  0275  1D03               	skipz
  9253  0276  2A7A               	goto	l27372
  9254                           
  9255                           ;SimI2C.c: 79: LATD6=0;
  9256  0277  0022               	movlb	2	; select bank2
  9257  0278  130F               	bcf	15,6
  9258  0279  2A7C               	goto	l27373
  9259  027A                     l27372:	
  9260                           
  9261                           ;SimI2C.c: 80: else
  9262                           ;SimI2C.c: 81: LATD6=1;
  9263  027A  0022               	movlb	2	; select bank2
  9264  027B  170F               	bsf	15,6
  9265  027C                     l27373:	
  9266                           
  9267                           ;SimI2C.c: 82: data<<=1;
  9268  027C  0020               	movlb	0	; select bank0
  9269  027D  35A0               	lslf	SimI2C_SendByte@data,f
  9270                           
  9271                           ;SimI2C.c: 83: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9272  027E  0064               	clrwdt
  9273                           
  9274                           ;SimI2C.c: 84: LATD7=1;
  9275  027F  0022               	movlb	2	; select bank2
  9276  0280  178F               	bsf	15,7
  9277                           
  9278                           ;SimI2C.c: 85: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9279  0281  0064               	clrwdt
  9280  0282  0020               	movlb	0	; select bank0
  9281  0283  0AA2               	incf	SimI2C_SendByte@i,f
  9282  0284  3008               	movlw	8
  9283  0285  0222               	subwf	SimI2C_SendByte@i,w
  9284  0286  1C03               	skipc
  9285  0287  2A6D               	goto	l27370
  9286                           
  9287                           ;SimI2C.c: 86: }
  9288                           ;SimI2C.c: 87: LATD7=0;
  9289  0288  0022               	movlb	2	; select bank2
  9290  0289  138F               	bcf	15,7
  9291  028A  0008               	return
  9292  028B                     __end_of_SimI2C_SendByte:	
  9293  028B                     __ptext2019:	
  9294 ;; =============== function _SimI2C_ReadByte ends ============
  9295                           
  9296                           
  9297 ;; *************** function _SimI2C_RecAck *****************
  9298 ;; Defined at:
  9299 ;;		line 39 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9300 ;; Parameters:    Size  Location     Type
  9301 ;;		None
  9302 ;; Auto vars:     Size  Location     Type
  9303 ;;  t               1    0[BANK0 ] unsigned char 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  1    wreg      unsigned char 
  9306 ;; Registers used:
  9307 ;;		wreg
  9308 ;; Tracked objects:
  9309 ;;		On entry : 1F/2
  9310 ;;		On exit  : 1F/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9313 ;;      Params:         0       0       0       0       0       0       0       0
  9314 ;;      Locals:         0       1       0       0       0       0       0       0
  9315 ;;      Temps:          0       0       0       0       0       0       0       0
  9316 ;;      Totals:         0       1       0       0       0       0       0       0
  9317 ;;Total ram usage:        1 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    3
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_TCN75_ReadReg
  9324 ;;		_TCN75_SetConfig
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327  028B                     _SimI2C_RecAck:	
  9328                           
  9329                           ;SimI2C.c: 40: unsigned char t;
  9330                           ;SimI2C.c: 41: TRISD6=1;
  9331                           
  9332                           ; Regs used in _SimI2C_RecAck: [wreg]
  9333  028B  0021               	movlb	1	; select bank1
  9334  028C  170F               	bsf	15,6
  9335                           
  9336                           ;SimI2C.c: 42: LATD7=0;
  9337  028D  0022               	movlb	2	; select bank2
  9338  028E  138F               	bcf	15,7
  9339                           
  9340                           ;SimI2C.c: 43: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9341  028F  0064               	clrwdt
  9342                           
  9343                           ;SimI2C.c: 44: LATD7=1;
  9344  0290  0022               	movlb	2	; select bank2
  9345  0291  178F               	bsf	15,7
  9346                           
  9347                           ;SimI2C.c: 45: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9348  0292  0064               	clrwdt
  9349                           
  9350                           ;SimI2C.c: 46: t=RD6;
  9351  0293  3000               	movlw	0
  9352  0294  0020               	movlb	0	; select bank0
  9353  0295  1B0F               	btfsc	15,6
  9354  0296  3001               	movlw	1
  9355  0297  00A0               	movwf	SimI2C_RecAck@t
  9356                           
  9357                           ;SimI2C.c: 47: LATD7=0;
  9358  0298  0022               	movlb	2	; select bank2
  9359  0299  138F               	bcf	15,7
  9360                           
  9361                           ;SimI2C.c: 48: TRISD6=0;
  9362  029A  0021               	movlb	1	; select bank1
  9363  029B  130F               	bcf	15,6
  9364                           
  9365                           ;SimI2C.c: 49: return t;
  9366  029C  0020               	movlb	0	; select bank0
  9367  029D  0820               	movf	SimI2C_RecAck@t,w
  9368  029E  0008               	return
  9369  029F                     __end_of_SimI2C_RecAck:	
  9370  029F                     __ptext2021:	
  9371 ;; =============== function _SimI2C_SendByte ends ============
  9372                           
  9373                           
  9374 ;; *************** function _SimI2C_Start *****************
  9375 ;; Defined at:
  9376 ;;		line 19 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9377 ;; Parameters:    Size  Location     Type
  9378 ;;		None
  9379 ;; Auto vars:     Size  Location     Type
  9380 ;;		None
  9381 ;; Return value:  Size  Location     Type
  9382 ;;		None               void
  9383 ;; Registers used:
  9384 ;;		None
  9385 ;; Tracked objects:
  9386 ;;		On entry : 1F/0
  9387 ;;		On exit  : 1F/2
  9388 ;;		Unchanged: 0/0
  9389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9390 ;;      Params:         0       0       0       0       0       0       0       0
  9391 ;;      Locals:         0       0       0       0       0       0       0       0
  9392 ;;      Temps:          0       0       0       0       0       0       0       0
  9393 ;;      Totals:         0       0       0       0       0       0       0       0
  9394 ;;Total ram usage:        0 bytes
  9395 ;; Hardware stack levels used:    1
  9396 ;; Hardware stack levels required when called:    3
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_TCN75_ReadReg
  9401 ;;		_TCN75_SetConfig
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404  029F                     _SimI2C_Start:	
  9405                           
  9406                           ;SimI2C.c: 20: LATD6=1;
  9407                           
  9408                           ; Regs used in _SimI2C_Start: []
  9409  029F  0022               	movlb	2	; select bank2
  9410  02A0  170F               	bsf	15,6
  9411                           
  9412                           ;SimI2C.c: 21: LATD7=1;
  9413  02A1  178F               	bsf	15,7
  9414                           
  9415                           ;SimI2C.c: 22: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9416  02A2  0064               	clrwdt
  9417                           
  9418                           ;SimI2C.c: 23: LATD6=0;
  9419  02A3  0022               	movlb	2	; select bank2
  9420  02A4  130F               	bcf	15,6
  9421                           
  9422                           ;SimI2C.c: 24: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9423  02A5  0064               	clrwdt
  9424                           
  9425                           ;SimI2C.c: 25: LATD7=0;
  9426  02A6  0022               	movlb	2	; select bank2
  9427  02A7  138F               	bcf	15,7
  9428  02A8  0008               	return
  9429  02A9                     __end_of_SimI2C_Start:	
  9430  02A9                     __ptext2018:	
  9431 ;; =============== function _SimI2C_Ack ends ============
  9432                           
  9433                           
  9434 ;; *************** function _SimI2C_ReadByte *****************
  9435 ;; Defined at:
  9436 ;;		line 90 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;		None
  9439 ;; Auto vars:     Size  Location     Type
  9440 ;;  i               1    1[BANK0 ] unsigned char 
  9441 ;;  data            1    0[BANK0 ] unsigned char 
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      unsigned char 
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0
  9446 ;; Tracked objects:
  9447 ;;		On entry : 1D/0
  9448 ;;		On exit  : 1F/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9451 ;;      Params:         0       0       0       0       0       0       0       0
  9452 ;;      Locals:         0       2       0       0       0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0
  9454 ;;      Totals:         0       2       0       0       0       0       0       0
  9455 ;;Total ram usage:        2 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    3
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_TCN75_ReadReg
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464  02A9                     _SimI2C_ReadByte:	
  9465                           
  9466                           ;SimI2C.c: 91: unsigned char data,i;
  9467                           ;SimI2C.c: 92: TRISD6=1;
  9468                           
  9469                           ; Regs used in _SimI2C_ReadByte: [wreg+status,2+status,0]
  9470  02A9  0021               	movlb	1	; select bank1
  9471  02AA  170F               	bsf	15,6
  9472                           
  9473                           ;SimI2C.c: 93: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9474  02AB  0064               	clrwdt
  9475                           
  9476                           ;SimI2C.c: 94: LATD7=0;
  9477  02AC  0022               	movlb	2	; select bank2
  9478  02AD  138F               	bcf	15,7
  9479                           
  9480                           ;SimI2C.c: 95: data=0;
  9481  02AE  0020               	movlb	0	; select bank0
  9482  02AF  01A0               	clrf	SimI2C_ReadByte@data
  9483                           
  9484                           ;SimI2C.c: 96: for(i=0;i<8;i++)
  9485  02B0  01A1               	clrf	SimI2C_ReadByte@i
  9486  02B1                     l27377:	
  9487                           
  9488                           ;SimI2C.c: 97: {
  9489                           ;SimI2C.c: 98: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9490  02B1  0064               	clrwdt
  9491                           
  9492                           ;SimI2C.c: 99: LATD7=1;
  9493  02B2  0022               	movlb	2	; select bank2
  9494  02B3  178F               	bsf	15,7
  9495                           
  9496                           ;SimI2C.c: 100: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9497  02B4  0064               	clrwdt
  9498                           
  9499                           ;SimI2C.c: 101: data=data<<1;
  9500  02B5  0020               	movlb	0	; select bank0
  9501  02B6  35A0               	lslf	SimI2C_ReadByte@data,f
  9502                           
  9503                           ;SimI2C.c: 102: if(RD6)
  9504  02B7  1B0F               	btfsc	15,6
  9505                           
  9506                           ;SimI2C.c: 103: data=data|0x01;
  9507  02B8  1420               	bsf	SimI2C_ReadByte@data,0
  9508                           
  9509                           ;SimI2C.c: 104: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9510  02B9  0064               	clrwdt
  9511                           
  9512                           ;SimI2C.c: 105: LATD7=0;
  9513  02BA  0022               	movlb	2	; select bank2
  9514  02BB  138F               	bcf	15,7
  9515                           
  9516                           ;SimI2C.c: 106: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9517  02BC  0064               	clrwdt
  9518  02BD  0020               	movlb	0	; select bank0
  9519  02BE  0AA1               	incf	SimI2C_ReadByte@i,f
  9520  02BF  3008               	movlw	8
  9521  02C0  0221               	subwf	SimI2C_ReadByte@i,w
  9522  02C1  1C03               	skipc
  9523  02C2  2AB1               	goto	l27377
  9524                           
  9525                           ;SimI2C.c: 107: }
  9526                           ;SimI2C.c: 108: TRISD6=0;
  9527  02C3  0021               	movlb	1	; select bank1
  9528  02C4  130F               	bcf	15,6
  9529                           
  9530                           ;SimI2C.c: 109: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9531  02C5  0064               	clrwdt
  9532                           
  9533                           ;SimI2C.c: 110: return data;
  9534  02C6  0020               	movlb	0	; select bank0
  9535  02C7  0820               	movf	SimI2C_ReadByte@data,w
  9536  02C8  0008               	return
  9537  02C9                     __end_of_SimI2C_ReadByte:	
  9538  02C9                     __ptext2017:	
  9539 ;; =============== function _SimI2C_NoAck ends ============
  9540                           
  9541                           
  9542 ;; *************** function _SimI2C_Ack *****************
  9543 ;; Defined at:
  9544 ;;		line 53 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;		None               void
  9551 ;; Registers used:
  9552 ;;		None
  9553 ;; Tracked objects:
  9554 ;;		On entry : 1F/0
  9555 ;;		On exit  : 1F/2
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9558 ;;      Params:         0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    3
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_TCN75_ReadReg
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571  02C9                     _SimI2C_Ack:	
  9572                           
  9573                           ;SimI2C.c: 54: LATD6=0;
  9574                           
  9575                           ; Regs used in _SimI2C_Ack: []
  9576  02C9  0022               	movlb	2	; select bank2
  9577  02CA  130F               	bcf	15,6
  9578                           
  9579                           ;SimI2C.c: 55: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9580  02CB  0064               	clrwdt
  9581                           
  9582                           ;SimI2C.c: 56: LATD7=1;
  9583  02CC  0022               	movlb	2	; select bank2
  9584  02CD  178F               	bsf	15,7
  9585                           
  9586                           ;SimI2C.c: 57: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9587  02CE  0064               	clrwdt
  9588                           
  9589                           ;SimI2C.c: 58: LATD7=0;
  9590  02CF  0022               	movlb	2	; select bank2
  9591  02D0  138F               	bcf	15,7
  9592                           
  9593                           ;SimI2C.c: 59: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9594  02D1  0064               	clrwdt
  9595                           
  9596                           ;SimI2C.c: 60: LATD6=1;
  9597  02D2  0022               	movlb	2	; select bank2
  9598  02D3  170F               	bsf	15,6
  9599  02D4  0008               	return
  9600  02D5                     __end_of_SimI2C_Ack:	
  9601  02D5                     __ptext2016:	
  9602 ;; =============== function _SimI2C_Stop ends ============
  9603                           
  9604                           
  9605 ;; *************** function _SimI2C_NoAck *****************
  9606 ;; Defined at:
  9607 ;;		line 64 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9608 ;; Parameters:    Size  Location     Type
  9609 ;;		None
  9610 ;; Auto vars:     Size  Location     Type
  9611 ;;		None
  9612 ;; Return value:  Size  Location     Type
  9613 ;;		None               void
  9614 ;; Registers used:
  9615 ;;		None
  9616 ;; Tracked objects:
  9617 ;;		On entry : 1F/0
  9618 ;;		On exit  : 1F/2
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9621 ;;      Params:         0       0       0       0       0       0       0       0
  9622 ;;      Locals:         0       0       0       0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0
  9624 ;;      Totals:         0       0       0       0       0       0       0       0
  9625 ;;Total ram usage:        0 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:    3
  9628 ;; This function calls:
  9629 ;;		Nothing
  9630 ;; This function is called by:
  9631 ;;		_TCN75_ReadReg
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634  02D5                     _SimI2C_NoAck:	
  9635                           
  9636                           ;SimI2C.c: 65: LATD7=1;
  9637                           
  9638                           ; Regs used in _SimI2C_NoAck: []
  9639  02D5  0022               	movlb	2	; select bank2
  9640  02D6  178F               	bsf	15,7
  9641                           
  9642                           ;SimI2C.c: 66: LATD6=1;
  9643  02D7  170F               	bsf	15,6
  9644                           
  9645                           ;SimI2C.c: 67: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9646  02D8  0064               	clrwdt
  9647                           
  9648                           ;SimI2C.c: 68: LATD7=0;
  9649  02D9  0022               	movlb	2	; select bank2
  9650  02DA  138F               	bcf	15,7
  9651  02DB  0008               	return
  9652  02DC                     __end_of_SimI2C_NoAck:	
  9653  02DC                     __ptext2015:	
  9654 ;; =============== function _InitVariable ends ============
  9655                           
  9656                           
  9657 ;; *************** function _SimI2C_Stop *****************
  9658 ;; Defined at:
  9659 ;;		line 29 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9660 ;; Parameters:    Size  Location     Type
  9661 ;;		None
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;		None               void
  9666 ;; Registers used:
  9667 ;;		None
  9668 ;; Tracked objects:
  9669 ;;		On entry : 1F/0
  9670 ;;		On exit  : 1F/2
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9673 ;;      Params:         0       0       0       0       0       0       0       0
  9674 ;;      Locals:         0       0       0       0       0       0       0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0
  9676 ;;      Totals:         0       0       0       0       0       0       0       0
  9677 ;;Total ram usage:        0 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:    3
  9680 ;; This function calls:
  9681 ;;		Nothing
  9682 ;; This function is called by:
  9683 ;;		_TCN75_ReadReg
  9684 ;;		_TCN75_SetConfig
  9685 ;; This function uses a non-reentrant model
  9686 ;;
  9687  02DC                     _SimI2C_Stop:	
  9688                           
  9689                           ;SimI2C.c: 30: LATD7=0;
  9690                           
  9691                           ; Regs used in _SimI2C_Stop: []
  9692  02DC  0022               	movlb	2	; select bank2
  9693  02DD  138F               	bcf	15,7
  9694                           
  9695                           ;SimI2C.c: 31: LATD6=0;
  9696  02DE  130F               	bcf	15,6
  9697                           
  9698                           ;SimI2C.c: 32: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9699  02DF  0064               	clrwdt
  9700                           
  9701                           ;SimI2C.c: 33: LATD7=1;
  9702  02E0  0022               	movlb	2	; select bank2
  9703  02E1  178F               	bsf	15,7
  9704                           
  9705                           ;SimI2C.c: 34: _delay((unsigned long)((1)*(4000000/4000000.0)));;
  9706  02E2  0064               	clrwdt
  9707                           
  9708                           ;SimI2C.c: 35: LATD6=1;
  9709  02E3  0022               	movlb	2	; select bank2
  9710  02E4  170F               	bsf	15,6
  9711  02E5  0008               	return
  9712  02E6                     __end_of_SimI2C_Stop:	
  9713  02E6                     __ptext2049:	
  9714 ;; =============== function _isdigit ends ============
  9715                           
  9716                           
  9717 ;; *************** function _SimI2C_Init *****************
  9718 ;; Defined at:
  9719 ;;		line 3 in file "F:\work\WYP\NBIoT1\SimI2C.c"
  9720 ;; Parameters:    Size  Location     Type
  9721 ;;		None
  9722 ;; Auto vars:     Size  Location     Type
  9723 ;;		None
  9724 ;; Return value:  Size  Location     Type
  9725 ;;		None               void
  9726 ;; Registers used:
  9727 ;;		None
  9728 ;; Tracked objects:
  9729 ;;		On entry : 1F/0
  9730 ;;		On exit  : 1F/2
  9731 ;;		Unchanged: FFFE0/0
  9732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9733 ;;      Params:         0       0       0       0       0       0       0       0
  9734 ;;      Locals:         0       0       0       0       0       0       0       0
  9735 ;;      Temps:          0       0       0       0       0       0       0       0
  9736 ;;      Totals:         0       0       0       0       0       0       0       0
  9737 ;;Total ram usage:        0 bytes
  9738 ;; Hardware stack levels used:    1
  9739 ;; Hardware stack levels required when called:    3
  9740 ;; This function calls:
  9741 ;;		Nothing
  9742 ;; This function is called by:
  9743 ;;		_TCN75_Init
  9744 ;; This function uses a non-reentrant model
  9745 ;;
  9746  02E6                     _SimI2C_Init:	
  9747  02E6                     l32177:	
  9748                           ; Regs used in _SimI2C_Init: []
  9749                           
  9750                           
  9751                           ;SimI2C.c: 4: TRISD7=0;
  9752  02E6  0021               	movlb	1	; select bank1
  9753  02E7  138F               	bcf	15,7
  9754                           
  9755                           ;SimI2C.c: 5: TRISD6=0;
  9756  02E8  130F               	bcf	15,6
  9757                           
  9758                           ;SimI2C.c: 13: LATD7=1;
  9759  02E9  0022               	movlb	2	; select bank2
  9760  02EA  178F               	bsf	15,7
  9761                           
  9762                           ;SimI2C.c: 14: LATD6=1;
  9763  02EB  170F               	bsf	15,6
  9764  02EC  0008               	return
  9765  02ED                     __end_of_SimI2C_Init:	
  9766  02ED                     __ptext2032:	
  9767 ;; =============== function _ATCommand_Init ends ============
  9768                           
  9769                           
  9770 ;; *************** function _SaveRomData *****************
  9771 ;; Defined at:
  9772 ;;		line 139 in file "F:\work\WYP\NBIoT1\afx.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;  i               1    7[BANK0 ] unsigned char 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;		None               void
  9779 ;; Registers used:
  9780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : 17F/0
  9783 ;;		On exit  : 17F/0
  9784 ;;		Unchanged: FFE80/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9786 ;;      Params:         0       0       0       0       0       0       0       0
  9787 ;;      Locals:         0       1       0       0       0       0       0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0
  9789 ;;      Totals:         0       1       0       0       0       0       0       0
  9790 ;;Total ram usage:        1 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    4
  9793 ;; This function calls:
  9794 ;;		_GetVerify_Sum
  9795 ;;		_eeprom_write
  9796 ;; This function is called by:
  9797 ;;		_InitVariable
  9798 ;; This function uses a non-reentrant model
  9799 ;;
  9800  02ED                     _SaveRomData:	
  9801                           
  9802                           ;afx.c: 140: unsigned char i;
  9803                           ;afx.c: 141: RomParams.sum=GetVerify_Sum(&RomParams.All[1],2-1);
  9804                           
  9805                           ; Regs used in _SaveRomData: [wreg+fsr1l-status,0+pclath+cstack]
  9806  02ED  01A0               	clrf	?_GetVerify_Sum
  9807  02EE  0AA0               	incf	?_GetVerify_Sum,f
  9808  02EF  01A1               	clrf	?_GetVerify_Sum+1
  9809  02F0  3067               	movlw	(_RomParams+1)& (0+255)
  9810  02F1  21F3               	fcall	_GetVerify_Sum
  9811  02F2  00E6               	movwf	_RomParams
  9812                           
  9813                           ;afx.c: 142: RomParams.sum+=1;
  9814  02F3  0AE6               	incf	_RomParams,f
  9815                           
  9816                           ;afx.c: 143: for(i=0;i<2;i++)
  9817  02F4  01A7               	clrf	SaveRomData@i
  9818  02F5                     l32393:	
  9819                           
  9820                           ;afx.c: 144: eeprom_write(i,RomParams.All[i]);
  9821  02F5  0827               	movf	SaveRomData@i,w
  9822  02F6  3E66               	addlw	_RomParams& (0+255)
  9823  02F7  0086               	movwf	6
  9824  02F8  0187               	clrf	7
  9825  02F9  0801               	movf	1,w
  9826  02FA  00A0               	movwf	?_eeprom_write
  9827  02FB  0827               	movf	SaveRomData@i,w
  9828  02FC  318F  2706  3180   	fcall	_eeprom_write
  9829  02FF  0020               	movlb	0	; select bank0
  9830  0300  0AA7               	incf	SaveRomData@i,f
  9831  0301  3002               	movlw	2
  9832  0302  0227               	subwf	SaveRomData@i,w
  9833  0303  1803               	btfsc	3,0
  9834  0304  0008               	return
  9835  0305  2AF5               	goto	l32393
  9836  0306                     __end_of_SaveRomData:	
  9837                           
  9838                           	psect	text2024
  9839  053F                     __ptext2024:	
  9840 ;; =============== function _OneWire_ReadByte ends ============
  9841                           
  9842                           
  9843 ;; *************** function _atoi *****************
  9844 ;; Defined at:
  9845 ;;		line 6 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\atoi.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  9848 ;;		 -> ATCommand_RxList(150), RAM(128), 
  9849 ;; Auto vars:     Size  Location     Type
  9850 ;;  a               2   13[BANK0 ] int 
  9851 ;;  sign            1   12[BANK0 ] unsigned char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  2    6[BANK0 ] int 
  9854 ;; Registers used:
  9855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 1F/0
  9858 ;;		On exit  : 1F/0
  9859 ;;		Unchanged: FFFE0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9861 ;;      Params:         0       2       0       0       0       0       0       0
  9862 ;;      Locals:         0       3       0       0       0       0       0       0
  9863 ;;      Temps:          0       4       0       0       0       0       0       0
  9864 ;;      Totals:         0       9       0       0       0       0       0       0
  9865 ;;Total ram usage:        9 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    4
  9868 ;; This function calls:
  9869 ;;		___wmul
  9870 ;;		_isdigit
  9871 ;; This function is called by:
  9872 ;;		_InitGPRS
  9873 ;; This function uses a non-reentrant model
  9874 ;;
  9875  053F                     _atoi:	
  9876  053F                     l32461:	
  9877                           ; Regs used in _atoi: [wreg+fsr1l-status,0+pclath+cstack]
  9878                           
  9879  053F  0826               	movf	atoi@s,w
  9880  0540  0086               	movwf	6
  9881  0541  0827               	movf	atoi@s+1,w
  9882  0542  0087               	movwf	7
  9883  0543  0801               	movf	1,w
  9884  0544  3A20               	xorlw	32
  9885  0545  1D03               	btfss	3,2
  9886  0546  2D4B               	goto	l32463
  9887  0547                     l32459:	
  9888  0547  0AA6               	incf	atoi@s,f
  9889  0548  1903               	skipnz
  9890  0549  0AA7               	incf	atoi@s+1,f
  9891  054A  2D3F               	goto	l32461
  9892  054B                     l32463:	
  9893  054B  0826               	movf	atoi@s,w
  9894  054C  0086               	movwf	6
  9895  054D  0827               	movf	atoi@s+1,w
  9896  054E  0087               	movwf	7
  9897  054F  0801               	movf	1,w
  9898  0550  3A09               	xorlw	9
  9899  0551  1903               	skipnz
  9900  0552  2D47               	goto	l32459
  9901  0553  01AD               	clrf	atoi@a
  9902  0554  01AE               	clrf	atoi@a+1
  9903  0555  01AC               	clrf	atoi@sign
  9904  0556  0826               	movf	atoi@s,w
  9905  0557  0086               	movwf	6
  9906  0558  0827               	movf	atoi@s+1,w
  9907  0559  0087               	movwf	7
  9908  055A  0801               	movf	1,w
  9909  055B  3A2D               	xorlw	45
  9910  055C  1D03               	skipz
  9911  055D  2D60               	goto	l32471
  9912  055E  0AAC               	incf	atoi@sign,f
  9913  055F  2D8D               	goto	l32473
  9914  0560                     l32471:	
  9915  0560  0826               	movf	atoi@s,w
  9916  0561  0086               	movwf	6
  9917  0562  0827               	movf	atoi@s+1,w
  9918  0563  0087               	movwf	7
  9919  0564  0801               	movf	1,w
  9920  0565  3A2B               	xorlw	43
  9921  0566  1903               	btfsc	3,2
  9922  0567  2D8D               	goto	l32473
  9923  0568                     l32479:	
  9924  0568  0826               	movf	atoi@s,w
  9925  0569  0086               	movwf	6
  9926  056A  0827               	movf	atoi@s+1,w
  9927  056B  0087               	movwf	7
  9928  056C  0801               	movf	1,w
  9929  056D  25A5  3185         	fcall	_isdigit
  9930  056F  1C03               	btfss	3,0
  9931  0570  2D91               	goto	l32481
  9932  0571  0826               	movf	atoi@s,w
  9933  0572  0086               	movwf	6
  9934  0573  0827               	movf	atoi@s+1,w
  9935  0574  0087               	movwf	7
  9936  0575  0801               	movf	1,w
  9937  0576  00A8               	movwf	??_atoi
  9938  0577  01A9               	clrf	??_atoi+1
  9939  0578  082E               	movf	atoi@a+1,w
  9940  0579  00A1               	movwf	?___wmul+1
  9941  057A  082D               	movf	atoi@a,w
  9942  057B  00A0               	movwf	?___wmul
  9943  057C  300A               	movlw	10
  9944  057D  00A2               	movwf	?___wmul+2
  9945  057E  01A3               	clrf	?___wmul+3
  9946  057F  25B3  3185         	fcall	___wmul
  9947  0581  0828               	movf	??_atoi,w
  9948  0582  0720               	addwf	?___wmul,w
  9949  0583  00AA               	movwf	??_atoi+2
  9950  0584  0829               	movf	??_atoi+1,w
  9951  0585  3D21               	addwfc	?___wmul+1,w
  9952  0586  00AB               	movwf	??_atoi+3
  9953  0587  082A               	movf	??_atoi+2,w
  9954  0588  3ED0               	addlw	208
  9955  0589  00AD               	movwf	atoi@a
  9956  058A  30FF               	movlw	255
  9957  058B  3D2B               	addwfc	??_atoi+3,w
  9958  058C  00AE               	movwf	atoi@a+1
  9959  058D                     l32473:	
  9960  058D  0AA6               	incf	atoi@s,f
  9961  058E  1903               	skipnz
  9962  058F  0AA7               	incf	atoi@s+1,f
  9963  0590  2D68               	goto	l32479
  9964  0591                     l32481:	
  9965  0591  082C               	movf	atoi@sign,w
  9966  0592  1903               	btfsc	3,2
  9967  0593  2DA0               	goto	l32487
  9968  0594  092D               	comf	atoi@a,w
  9969  0595  00A8               	movwf	??_atoi
  9970  0596  092E               	comf	atoi@a+1,w
  9971  0597  00A9               	movwf	??_atoi+1
  9972  0598  0AA8               	incf	??_atoi,f
  9973  0599  1903               	skipnz
  9974  059A  0AA9               	incf	??_atoi+1,f
  9975  059B  0828               	movf	??_atoi,w
  9976  059C  00A6               	movwf	?_atoi
  9977  059D  0829               	movf	??_atoi+1,w
  9978  059E  00A7               	movwf	?_atoi+1
  9979  059F  0008               	return
  9980  05A0                     l32487:	
  9981  05A0  082E               	movf	atoi@a+1,w
  9982  05A1  00A7               	movwf	?_atoi+1
  9983  05A2  082D               	movf	atoi@a,w
  9984  05A3  00A6               	movwf	?_atoi
  9985  05A4  0008               	return
  9986  05A5                     __end_of_atoi:	
  9987  05A5                     __ptext2048:	
  9988 ;; =============== function _strlen ends ============
  9989                           
  9990                           
  9991 ;; *************** function _isdigit *****************
  9992 ;; Defined at:
  9993 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isdigit.c"
  9994 ;; Parameters:    Size  Location     Type
  9995 ;;  c               1    wreg     unsigned char 
  9996 ;; Auto vars:     Size  Location     Type
  9997 ;;  c               1    1[BANK0 ] unsigned char 
  9998 ;; Return value:  Size  Location     Type
  9999 ;;		None               void
 10000 ;; Registers used:
 10001 ;;		wreg, status,2, status,0
 10002 ;; Tracked objects:
 10003 ;;		On entry : 1F/0
 10004 ;;		On exit  : 1F/0
 10005 ;;		Unchanged: FFFE0/0
 10006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10007 ;;      Params:         0       0       0       0       0       0       0       0
 10008 ;;      Locals:         0       2       0       0       0       0       0       0
 10009 ;;      Temps:          0       0       0       0       0       0       0       0
 10010 ;;      Totals:         0       2       0       0       0       0       0       0
 10011 ;;Total ram usage:        2 bytes
 10012 ;; Hardware stack levels used:    1
 10013 ;; Hardware stack levels required when called:    3
 10014 ;; This function calls:
 10015 ;;		Nothing
 10016 ;; This function is called by:
 10017 ;;		_atoi
 10018 ;; This function uses a non-reentrant model
 10019 ;;
 10020  05A5                     _isdigit:	
 10021                           
 10022                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10023                           ;isdigit@c stored from wreg
 10024  05A5  00A1               	movwf	isdigit@c
 10025  05A6  01A0               	clrf	_isdigit$31774
 10026  05A7  303A               	movlw	58
 10027  05A8  0221               	subwf	isdigit@c,w
 10028  05A9  1803               	skipnc
 10029  05AA  2DB1               	goto	l32187
 10030  05AB  3030               	movlw	48
 10031  05AC  0221               	subwf	isdigit@c,w
 10032  05AD  1C03               	skipc
 10033  05AE  2DB1               	goto	l32187
 10034  05AF  01A0               	clrf	_isdigit$31774
 10035  05B0  0AA0               	incf	_isdigit$31774,f
 10036  05B1                     l32187:	
 10037  05B1  0C20               	rrf	_isdigit$31774,w
 10038  05B2  0008               	return
 10039  05B3                     __end_of_isdigit:	
 10040  05B3                     __ptext2043:	
 10041 ;; =============== function ___lwdiv ends ============
 10042                           
 10043                           
 10044 ;; *************** function ___wmul *****************
 10045 ;; Defined at:
 10046 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\wmul.c"
 10047 ;; Parameters:    Size  Location     Type
 10048 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10049 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10050 ;; Auto vars:     Size  Location     Type
 10051 ;;  product         2    4[BANK0 ] unsigned int 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  2    0[BANK0 ] unsigned int 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 1F/0
 10058 ;;		On exit  : 1F/0
 10059 ;;		Unchanged: FFFE0/0
 10060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10061 ;;      Params:         0       4       0       0       0       0       0       0
 10062 ;;      Locals:         0       2       0       0       0       0       0       0
 10063 ;;      Temps:          0       0       0       0       0       0       0       0
 10064 ;;      Totals:         0       6       0       0       0       0       0       0
 10065 ;;Total ram usage:        6 bytes
 10066 ;; Hardware stack levels used:    1
 10067 ;; Hardware stack levels required when called:    3
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_atoi
 10072 ;; This function uses a non-reentrant model
 10073 ;;
 10074  05B3                     ___wmul:	
 10075                           
 10076                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10077  05B3  01A4               	clrf	___wmul@product
 10078  05B4  01A5               	clrf	___wmul@product+1
 10079  05B5                     l32209:	
 10080  05B5  1C20               	btfss	___wmul@multiplier,0
 10081  05B6  2DBB               	goto	l32213
 10082  05B7  0822               	movf	___wmul@multiplicand,w
 10083  05B8  07A4               	addwf	___wmul@product,f
 10084  05B9  0823               	movf	___wmul@multiplicand+1,w
 10085  05BA  3DA5               	addwfc	___wmul@product+1,f
 10086  05BB                     l32213:	
 10087  05BB  35A2               	lslf	___wmul@multiplicand,f
 10088  05BC  0DA3               	rlf	___wmul@multiplicand+1,f
 10089  05BD  36A1               	lsrf	___wmul@multiplier+1,f
 10090  05BE  0CA0               	rrf	___wmul@multiplier,f
 10091  05BF  0821               	movf	___wmul@multiplier+1,w
 10092  05C0  0420               	iorwf	___wmul@multiplier,w
 10093  05C1  1D03               	skipz
 10094  05C2  2DB5               	goto	l32209
 10095  05C3  0825               	movf	___wmul@product+1,w
 10096  05C4  00A1               	movwf	?___wmul+1
 10097  05C5  0824               	movf	___wmul@product,w
 10098  05C6  00A0               	movwf	?___wmul
 10099  05C7  0008               	return
 10100  05C8                     __end_of___wmul:	
 10101                           
 10102                           	psect	intentry
 10103  0004                     __pintentry:	
 10104 ;; =============== function _LcdDisplayNum ends ============
 10105                           
 10106                           
 10107 ;; *************** function _highISR *****************
 10108 ;; Defined at:
 10109 ;;		line 85 in file "F:\work\WYP\NBIoT1\Main.c"
 10110 ;; Parameters:    Size  Location     Type
 10111 ;;		None
 10112 ;; Auto vars:     Size  Location     Type
 10113 ;;  rx              1    6[COMMON] unsigned char 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;		None               void
 10116 ;; Registers used:
 10117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+0, btemp+1, pclath, cstack
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/0
 10120 ;;		On exit  : 1E/0
 10121 ;;		Unchanged: FFFE0/0
 10122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10123 ;;      Params:         0       0       0       0       0       0       0       0
 10124 ;;      Locals:         1       0       0       0       0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0
 10126 ;;      Totals:         1       0       0       0       0       0       0       0
 10127 ;;Total ram usage:        1 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    2
 10130 ;; This function calls:
 10131 ;;		_ATCommand_ProcRx
 10132 ;; This function is called by:
 10133 ;;		Interrupt level 1
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136  0004                     _highISR:	
 10137                           
 10138                           ; Regs used in _highISR: [allreg]
 10139  0004  3180               	pagesel	$
 10140                           
 10141                           ;Main.c: 86: unsigned char rx;
 10142                           ;Main.c: 87: if(RCIE&&RCIF)
 10143  0005  0021               	movlb	1	; select bank1
 10144  0006  1E91               	btfss	17,5
 10145  0007  2818               	goto	i1l30339
 10146  0008  0020               	movlb	0	; select bank0
 10147  0009  1E91               	btfss	17,5
 10148  000A  2818               	goto	i1l30339
 10149                           
 10150                           ;Main.c: 88: {
 10151                           ;Main.c: 89: RCIF=0;
 10152  000B  1291               	bcf	17,5
 10153                           
 10154                           ;Main.c: 90: if(OERR==1)
 10155  000C  0023               	movlb	3	; select bank3
 10156  000D  1C9D               	btfss	29,1
 10157  000E  2812               	goto	i1l30335
 10158                           
 10159                           ;Main.c: 91: {
 10160                           ;Main.c: 92: CREN=0;
 10161  000F  121D               	bcf	29,4
 10162                           
 10163                           ;Main.c: 93: OERR=0;
 10164  0010  109D               	bcf	29,1
 10165                           
 10166                           ;Main.c: 94: CREN=1;
 10167  0011  161D               	bsf	29,4
 10168  0012                     i1l30335:	
 10169                           
 10170                           ;Main.c: 95: }
 10171                           ;Main.c: 96: rx=RCREG;
 10172  0012  0819               	movf	25,w	;volatile
 10173  0013  00F6               	movwf	highISR@rx
 10174                           
 10175                           ;Main.c: 97: ATCommand_ProcRx(rx);
 10176  0014  0876               	movf	highISR@rx,w
 10177  0015  3184  2499  3180   	fcall	_ATCommand_ProcRx
 10178  0018                     i1l30339:	
 10179                           
 10180                           ;Main.c: 98: }
 10181                           ;Main.c: 99: if(TMR1IF&& TMR1IE)
 10182  0018  0020               	movlb	0	; select bank0
 10183  0019  1C11               	btfss	17,0
 10184  001A  0009               	retfie
 10185  001B  0021               	movlb	1	; select bank1
 10186  001C  1C11               	btfss	17,0
 10187  001D  0009               	retfie
 10188  001E  0064               	clrwdt	;#
 10189                           
 10190                           ;Main.c: 102: TMR1IF=0;
 10191  001F  0020               	movlb	0	; select bank0
 10192  0020  1011               	bcf	17,0
 10193                           
 10194                           ;Main.c: 103: ((void)(TMR1H=((15536)>>8),TMR1L=((15536)&0xFF)));
 10195  0021  303C               	movlw	60
 10196  0022  0097               	movwf	23	;volatile
 10197  0023  30B0               	movlw	176
 10198  0024  0096               	movwf	22	;volatile
 10199                           
 10200                           ;Main.c: 104: SystemTick++;
 10201  0025  0ADC               	incf	_SystemTick,f
 10202  0026  1903               	skipnz
 10203  0027  0ADD               	incf	_SystemTick+1,f
 10204  0028  0009               	retfie
 10205  0029                     __end_of_highISR:	
 10206                           
 10207                           	psect	text2061
 10208  0499                     __ptext2061:	
 10209 ;; =============== function _highISR ends ============
 10210                           
 10211                           
 10212 ;; *************** function _ATCommand_ProcRx *****************
 10213 ;; Defined at:
 10214 ;;		line 27 in file "F:\work\WYP\NBIoT1\ATCommand.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;  rx              1    wreg     unsigned char 
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  rx              1    5[COMMON] unsigned char 
 10219 ;; Return value:  Size  Location     Type
 10220 ;;		None               void
 10221 ;; Registers used:
 10222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 1F/3
 10225 ;;		On exit  : 1F/3
 10226 ;;		Unchanged: FFFE0/0
 10227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10228 ;;      Params:         0       0       0       0       0       0       0       0
 10229 ;;      Locals:         1       0       0       0       0       0       0       0
 10230 ;;      Temps:          3       0       0       0       0       0       0       0
 10231 ;;      Totals:         4       0       0       0       0       0       0       0
 10232 ;;Total ram usage:        4 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    1
 10235 ;; This function calls:
 10236 ;;		_isgraph
 10237 ;; This function is called by:
 10238 ;;		_highISR
 10239 ;; This function uses a non-reentrant model
 10240 ;;
 10241  0499                     _ATCommand_ProcRx:	
 10242                           
 10243                           ; Regs used in _ATCommand_ProcRx: [wreg+fsr1l-status,0+pclath+cstack]
 10244                           ;ATCommand_ProcRx@rx stored from wreg
 10245  0499  00F5               	movwf	ATCommand_ProcRx@rx
 10246                           
 10247                           ;ATCommand.c: 28: if(ATCommand_Flags.bRx)
 10248  049A  18FA               	btfsc	_ATCommand_Flags,1
 10249  049B  0008               	return
 10250                           
 10251                           ;ATCommand.c: 30: if(ATCommand_Clear!='\0')
 10252  049C  0879               	movf	_ATCommand_Clear,w
 10253  049D  1903               	btfsc	3,2
 10254  049E  2CA6               	goto	i1l14908
 10255                           
 10256                           ;ATCommand.c: 31: {
 10257                           ;ATCommand.c: 32: if(rx==ATCommand_Clear)
 10258  049F  0875               	movf	ATCommand_ProcRx@rx,w
 10259  04A0  0679               	xorwf	_ATCommand_Clear,w
 10260  04A1  1D03               	skipz
 10261  04A2  2CA6               	goto	i1l14908
 10262  04A3                     i1l30355:	
 10263                           
 10264                           ;ATCommand.c: 33: {
 10265                           ;ATCommand.c: 34: ATCommand_RxCount=0;
 10266  04A3  01FB               	clrf	_ATCommand_RxCount
 10267  04A4                     i1l30357:	
 10268                           
 10269                           ;ATCommand.c: 35: ATCommand_RxList[ATCommand_RxCount]='\0';
 10270  04A4  2536               	fcall	PL2	;call to abstracted procedure
 10271  04A5  0008               	return
 10272  04A6                     i1l14908:	
 10273                           
 10274                           ;ATCommand.c: 37: }
 10275                           ;ATCommand.c: 38: }
 10276                           ;ATCommand.c: 39: if(ATCommand_Flags.bChar)
 10277  04A6  1C7A               	btfss	_ATCommand_Flags,0
 10278  04A7  2CB3               	goto	i1l30375
 10279                           
 10280                           ;ATCommand.c: 40: {
 10281                           ;ATCommand.c: 41: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10282  04A8  0875               	movf	ATCommand_ProcRx@rx,w
 10283                           
 10284                           ;ATCommand.c: 42: if(ATCommand_RxCount>=150)
 10285  04A9  24CD  3184         	fcall	PL3	;call to abstracted procedure
 10286  04AB  1C03               	skipc
 10287  04AC  2CAF               	goto	i1l30369
 10288                           
 10289                           ;ATCommand.c: 43: {
 10290                           ;ATCommand.c: 44: ATCommand_RxCount=0;
 10291  04AD  01FB               	clrf	_ATCommand_RxCount
 10292                           
 10293                           ;ATCommand.c: 45: }
 10294  04AE  2CB0               	goto	i1l30371
 10295  04AF                     i1l30369:	
 10296                           
 10297                           ;ATCommand.c: 46: else
 10298                           ;ATCommand.c: 47: {
 10299                           ;ATCommand.c: 48: ATCommand_RxList[ATCommand_RxCount]='\0';
 10300  04AF  2536               	fcall	PL2	;call to abstracted procedure
 10301  04B0                     i1l30371:	
 10302                           
 10303                           ;ATCommand.c: 49: }
 10304                           ;ATCommand.c: 50: if(!ATCommand_Flags.bWaitData)
 10305  04B0  1D7A               	btfss	_ATCommand_Flags,2
 10306                           
 10307                           ;ATCommand.c: 51: {
 10308                           ;ATCommand.c: 52: ;;
 10309                           ;ATCommand.c: 53: ATCommand_RxCount=0;
 10310  04B1  01FB               	clrf	_ATCommand_RxCount
 10311  04B2  0008               	return
 10312  04B3                     i1l30375:	
 10313                           
 10314                           ;ATCommand.c: 56: else
 10315                           ;ATCommand.c: 57: {
 10316                           ;ATCommand.c: 58: if(isgraph(rx)==1)
 10317  04B3  0875               	movf	ATCommand_ProcRx@rx,w
 10318  04B4  24BF  3184         	fcall	_isgraph
 10319  04B6  1C03               	btfss	3,0
 10320  04B7  0008               	return
 10321                           
 10322                           ;ATCommand.c: 59: {
 10323                           ;ATCommand.c: 60: ATCommand_Flags.bChar=1;
 10324  04B8  147A               	bsf	_ATCommand_Flags,0
 10325                           
 10326                           ;ATCommand.c: 61: ATCommand_RxList[ATCommand_RxCount++]=rx;
 10327  04B9  0875               	movf	ATCommand_ProcRx@rx,w
 10328                           
 10329                           ;ATCommand.c: 62: if(ATCommand_RxCount>=150)
 10330  04BA  24CD  3184         	fcall	PL3	;call to abstracted procedure
 10331  04BC  1803               	btfsc	3,0
 10332  04BD  2CA3               	goto	i1l30355
 10333  04BE  2CA4               	goto	i1l30357
 10334  04BF                     __end_of_ATCommand_ProcRx:	
 10335  04BF                     __ptext2062:	
 10336 ;; =============== function _ATCommand_ProcRx ends ============
 10337                           
 10338                           
 10339 ;; *************** function _isgraph *****************
 10340 ;; Defined at:
 10341 ;;		line 13 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.71a\sources\isgraph.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  c               1    wreg     unsigned char 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  c               1    1[COMMON] unsigned char 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;		None               void
 10348 ;; Registers used:
 10349 ;;		wreg, status,2, status,0
 10350 ;; Tracked objects:
 10351 ;;		On entry : 1F/3
 10352 ;;		On exit  : 1F/3
 10353 ;;		Unchanged: FFFE0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10355 ;;      Params:         0       0       0       0       0       0       0       0
 10356 ;;      Locals:         2       0       0       0       0       0       0       0
 10357 ;;      Temps:          0       0       0       0       0       0       0       0
 10358 ;;      Totals:         2       0       0       0       0       0       0       0
 10359 ;;Total ram usage:        2 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_ATCommand_ProcRx
 10365 ;; This function uses a non-reentrant model
 10366 ;;
 10367  04BF                     _isgraph:	
 10368                           
 10369                           ; Regs used in _isgraph: [wreg+status,2+status,0]
 10370                           ;isgraph@c stored from wreg
 10371  04BF  00F1               	movwf	isgraph@c
 10372  04C0  01F0               	clrf	_isgraph$31777
 10373  04C1  307F               	movlw	127
 10374  04C2  0271               	subwf	isgraph@c,w
 10375  04C3  1803               	skipnc
 10376  04C4  2CCB               	goto	i1l30467
 10377  04C5  3021               	movlw	33
 10378  04C6  0271               	subwf	isgraph@c,w
 10379  04C7  1C03               	skipc
 10380  04C8  2CCB               	goto	i1l30467
 10381  04C9  01F0               	clrf	_isgraph$31777
 10382  04CA  0AF0               	incf	_isgraph$31777,f
 10383  04CB                     i1l30467:	
 10384  04CB  0C70               	rrf	_isgraph$31777,w
 10385  04CC  0008               	return
 10386  04CD                     __end_of_isgraph:	
 10387  04CD                     PL3:	
 10388  04CD  00F2               	movwf	??_ATCommand_ProcRx
 10389  04CE  087B               	movf	_ATCommand_RxCount,w
 10390  04CF  3E5A               	addlw	90
 10391  04D0  00F3               	movwf	??_ATCommand_ProcRx+1
 10392  04D1  3021               	movlw	33
 10393  04D2  1803               	skipnc
 10394  04D3  3022               	movlw	34
 10395  04D4  00F4               	movwf	??_ATCommand_ProcRx+2
 10396  04D5  0873               	movf	??_ATCommand_ProcRx+1,w
 10397  04D6  0086               	movwf	6
 10398  04D7  0874               	movf	??_ATCommand_ProcRx+2,w
 10399  04D8  0087               	movwf	7
 10400  04D9  0872               	movf	??_ATCommand_ProcRx,w
 10401  04DA  0081               	movwf	1
 10402  04DB  0AFB               	incf	_ATCommand_RxCount,f
 10403  04DC  3096               	movlw	150
 10404  04DD  027B               	subwf	_ATCommand_RxCount,w
 10405  04DE  0008               	return
 10406  04DF                     __ptext2008:	
 10407 ;; =============== function _OneWire_Command ends ============
 10408                           
 10409                           
 10410 ;; *************** function _ATCommand_WaitData *****************
 10411 ;; Defined at:
 10412 ;;		line 125 in file "F:\work\WYP\NBIoT1\ATCommand.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;  strx            2   20[BANK0 ] PTR unsigned char 
 10417 ;;		 -> ATCommand_RxList(150), RAM(128), 
 10418 ;;  res             1   19[BANK0 ] unsigned char 
 10419 ;; Return value:  Size  Location     Type
 10420 ;;                  1    wreg      unsigned char 
 10421 ;; Registers used:
 10422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10423 ;; Tracked objects:
 10424 ;;		On entry : 1F/0
 10425 ;;		On exit  : 1F/0
 10426 ;;		Unchanged: FFFE0/0
 10427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10428 ;;      Params:         0       0       0       0       0       0       0       0
 10429 ;;      Locals:         0       3       0       0       0       0       0       0
 10430 ;;      Temps:          0       2       0       0       0       0       0       0
 10431 ;;      Totals:         0       5       0       0       0       0       0       0
 10432 ;;Total ram usage:        5 bytes
 10433 ;; Hardware stack levels used:    1
 10434 ;; Hardware stack levels required when called:    5
 10435 ;; This function calls:
 10436 ;;		_strstr
 10437 ;;		_strcpy
 10438 ;; This function is called by:
 10439 ;;		_InteractServer
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442  04DF                     _ATCommand_WaitData:	
 10443                           
 10444                           ;ATCommand.c: 126: unsigned char res=0;
 10445                           
 10446                           ; Regs used in _ATCommand_WaitData: [wreg-status,0+pclath+cstack]
 10447  04DF  01B3               	clrf	ATCommand_WaitData@res
 10448                           
 10449                           ;ATCommand.c: 128: res=ATACK_Null;
 10450  04E0  01B3               	clrf	ATCommand_WaitData@res
 10451                           
 10452                           ;ATCommand.c: 129: ATCommand_Flags.bRx=0;
 10453  04E1  10FA               	bcf	_ATCommand_Flags,1
 10454                           
 10455                           ;ATCommand.c: 130: ATCommand_Flags.bChar=0;
 10456  04E2  107A               	bcf	_ATCommand_Flags,0
 10457                           
 10458                           ;ATCommand.c: 131: ATCommand_WaitACKTick=SystemTick;
 10459  04E3  085D               	movf	_SystemTick+1,w
 10460  04E4  00D3               	movwf	_ATCommand_WaitACKTick+1
 10461  04E5  085C               	movf	_SystemTick,w
 10462  04E6  00D2               	movwf	_ATCommand_WaitACKTick
 10463                           
 10464                           ;ATCommand.c: 132: ATCommand_RxCount=0;
 10465  04E7  01FB               	clrf	_ATCommand_RxCount
 10466                           
 10467                           ;ATCommand.c: 133: ATCommand_Flags.bWaitData=1;
 10468  04E8  157A               	bsf	_ATCommand_Flags,2
 10469                           
 10470                           ;ATCommand.c: 134: ATCommand_RxList[ATCommand_RxCount]='\0';
 10471  04E9  2536               	fcall	PL2	;call to abstracted procedure
 10472  04EA                     l32721:	
 10473                           
 10474                           ;ATCommand.c: 136: {
 10475                           ;ATCommand.c: 137: strx=strstr((const char*)ATCommand_RxList,ATCommand_OkString);
 10476  04EA  305A               	movlw	90
 10477  04EB  00AD               	movwf	?_strstr
 10478  04EC  3021               	movlw	33
 10479  04ED  00AE               	movwf	?_strstr+1
 10480  04EE  30C4               	movlw	_ATCommand_OkString& (0+255)
 10481  04EF  00AF               	movwf	?_strstr+2
 10482  04F0  01B0               	clrf	?_strstr+3
 10483  04F1  318B  231C  3184   	fcall	_strstr
 10484  04F4  082E               	movf	?_strstr+1,w
 10485  04F5  00B5               	movwf	ATCommand_WaitData@strx+1
 10486  04F6  082D               	movf	?_strstr,w
 10487  04F7  00B4               	movwf	ATCommand_WaitData@strx
 10488                           
 10489                           ;ATCommand.c: 138: if(strx!=0)
 10490  04F8  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10491  04F9  1903               	skipnz
 10492  04FA  2CFE               	goto	l32729
 10493                           
 10494                           ;ATCommand.c: 139: {
 10495                           ;ATCommand.c: 140: res=ATACK_OK;
 10496  04FB  01B3               	clrf	ATCommand_WaitData@res
 10497  04FC  0AB3               	incf	ATCommand_WaitData@res,f
 10498  04FD  2D11               	goto	l32735
 10499  04FE                     l32729:	
 10500                           ;ATCommand.c: 142: break;
 10501                           
 10502                           ;ATCommand.c: 141: ATCommand_Flags.bRx=1;
 10503                           
 10504                           
 10505                           ;ATCommand.c: 144: else
 10506                           ;ATCommand.c: 145: {
 10507                           ;ATCommand.c: 146: strx=strstr((const char*)ATCommand_RxList,ATCommand_ErrString);
 10508  04FE  305A               	movlw	90
 10509  04FF  00AD               	movwf	?_strstr
 10510  0500  3021               	movlw	33
 10511  0501  00AE               	movwf	?_strstr+1
 10512  0502  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10513  0503  00AF               	movwf	?_strstr+2
 10514  0504  01B0               	clrf	?_strstr+3
 10515  0505  318B  231C  3184   	fcall	_strstr
 10516  0508  082E               	movf	?_strstr+1,w
 10517  0509  00B5               	movwf	ATCommand_WaitData@strx+1
 10518  050A  082D               	movf	?_strstr,w
 10519  050B  00B4               	movwf	ATCommand_WaitData@strx
 10520                           
 10521                           ;ATCommand.c: 147: if(strx!=0)
 10522  050C  0435               	iorwf	ATCommand_WaitData@strx+1,w
 10523  050D  1903               	skipnz
 10524  050E  2D13               	goto	l32737
 10525                           
 10526                           ;ATCommand.c: 148: {
 10527                           ;ATCommand.c: 149: res=ATACK_Err;
 10528  050F  3002               	movlw	2
 10529  0510  00B3               	movwf	ATCommand_WaitData@res
 10530  0511                     l32735:	
 10531                           
 10532                           ;ATCommand.c: 150: ATCommand_Flags.bRx=1;
 10533  0511  14FA               	bsf	_ATCommand_Flags,1
 10534                           
 10535                           ;ATCommand.c: 151: break;
 10536  0512  2D20               	goto	l14935
 10537  0513                     l32737:	
 10538                           
 10539                           ;ATCommand.c: 152: }
 10540                           ;ATCommand.c: 153: }
 10541                           ;ATCommand.c: 154: if((SystemTick-ATCommand_WaitACKTick)>ATCommand_WaitACKTimes)
 10542  0513  0852               	movf	_ATCommand_WaitACKTick,w
 10543  0514  025C               	subwf	_SystemTick,w
 10544  0515  00B1               	movwf	??_ATCommand_WaitData
 10545  0516  0853               	movf	_ATCommand_WaitACKTick+1,w
 10546  0517  3B5D               	subwfb	_SystemTick+1,w
 10547  0518  00B2               	movwf	??_ATCommand_WaitData+1
 10548  0519  0255               	subwf	_ATCommand_WaitACKTimes+1,w
 10549  051A  1D03               	skipz
 10550  051B  2D1E               	goto	u6825
 10551  051C  0831               	movf	??_ATCommand_WaitData,w
 10552  051D  0254               	subwf	_ATCommand_WaitACKTimes,w
 10553  051E                     u6825:	
 10554  051E  1803               	skipnc
 10555  051F  2CEA               	goto	l32721
 10556  0520                     l14935:	
 10557                           
 10558                           ;ATCommand.c: 156: }
 10559                           ;ATCommand.c: 157: ATCommand_Flags.bWaitData=0;
 10560  0520  117A               	bcf	_ATCommand_Flags,2
 10561                           
 10562                           ;ATCommand.c: 158: strcpy(ATCommand_OkString,"OK");
 10563  0521  3063               	movlw	low (STR_36| (0+32768))
 10564  0522  00A0               	movwf	?_strcpy
 10565  0523  3091               	movlw	high (STR_36| (0+32768))
 10566  0524  00A1               	movwf	?_strcpy+1
 10567  0525  30C4               	movlw	_ATCommand_OkString& (0+255)
 10568  0526  318E  262C  3184   	fcall	_strcpy
 10569                           
 10570                           ;ATCommand.c: 159: strcpy(ATCommand_ErrString,"ERROR");
 10571  0529  304A               	movlw	low (STR_21| (0+32768))
 10572  052A  00A0               	movwf	?_strcpy
 10573  052B  3091               	movlw	high (STR_21| (0+32768))
 10574  052C  00A1               	movwf	?_strcpy+1
 10575  052D  30B5               	movlw	_ATCommand_ErrString& (0+255)
 10576  052E  318E  262C         	fcall	_strcpy
 10577                           
 10578                           ;ATCommand.c: 160: ATCommand_Clear='\0';
 10579  0530  01F9               	clrf	_ATCommand_Clear
 10580                           
 10581                           ;ATCommand.c: 162: ATCommand_WaitACKTimes=50;
 10582  0531  3032               	movlw	50
 10583  0532  00D4               	movwf	_ATCommand_WaitACKTimes
 10584  0533  01D5               	clrf	_ATCommand_WaitACKTimes+1
 10585                           
 10586                           ;ATCommand.c: 163: return res;
 10587  0534  0833               	movf	ATCommand_WaitData@res,w
 10588  0535  0008               	return
 10589  0536                     __end_of_ATCommand_WaitData:	
 10590  0536                     PL2:	
 10591  0536  087B               	movf	_ATCommand_RxCount,w
 10592  0537  3E5A               	addlw	90
 10593  0538  0086               	movwf	6
 10594  0539  3021               	movlw	33
 10595  053A  1803               	skipnc
 10596  053B  3022               	movlw	34
 10597  053C  0087               	movwf	7
 10598  053D  0181               	clrf	1
 10599  053E  0008               	return
 10600                           
 10601                           	psect	text2063
 10602  0000                     __ptext2063:	
 10603 ;; =============== function _isgraph ends ============
 10604                           
 10605  007E                     btemp	set	126	;btemp
 10606  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Thu Apr 18 18:06:37 2019

              ___bmul@product 0021                            _RD 0CA8                            _WA 3C94  
                          _WR 0CA9           ___wmul@multiplicand 0022                           _GIE 005F  
                         _RB1 0069                           _RB2 006A                           _RB7 006F  
                         _CSQ 0061                           _RD6 007E                           _PR2 001B  
     __end_of_TCN75_SetConfig 0234             DS18X20_ReadMeas@i 002B              SimI2C_SendByte@i 0022  
            SimI2C_SendByte@t 0021                           wreg 0009         ATCommand_WaitData@res 0033  
                 ?_TCN75_Init 0070                          l2110 03EA                          l2102 03DE  
                        l2201 0477                          l2121 03FF                          l2113 03F3  
                        l2105 03E7                          l2210 047F                          l2202 0473  
                        l2130 0407                          l2122 03FB                          l2114 03EF  
                        l2106 03E3                          l2050 038F                          l2214 0486  
                        l2206 047A                          l2150 0426                          l2142 041A  
                        l2134 040E                          l2126 0402                          l2118 03F6  
                        l2070 03AE                          l2062 03A2                          l2054 0396  
                        l2046 038A                          l2232 0000                          l2209 0483  
                        l2161 043B                          l2153 042F                          l2145 0423  
                        l2137 0417                          l2129 040B                          l2081 03C3  
                        l2073 03B7                          l2065 03AB                          l2057 039F  
                        l2049 0393                          l2218 048B                          l2170 0443  
                        l2162 0437                          l2154 042B                          l2146 041F  
                        l2138 0413                          l2090 03CB                          l2082 03BF  
                        l2074 03B3                          l2066 03A7                          l2058 039B  
                        l2243 0EC7                          l2236 0EBF                          l2252 0367  
                        l2261 0000                          l2190 0462                          l2182 0456  
                        l2174 044A                          l2166 043E                          l2158 0432  
                        l2094 03D2                          l2086 03C6                          l2078 03BA  
                        l2246 0ECB                          l2239 0EC3                          l2255 036B  
                        l2264 0000                          l2193 046B                          l2185 045F  
                        l2177 0453                          l2169 0447                          l2097 03DB  
                        l2089 03CF                          l2249 0000                          l2194 0467  
                        l2186 045B                          l2178 044F                          l2098 03D7  
                        l2258 0000                          l2198 046E                          l4332 00F4  
                        l4325 0000                          l4329 0000                          l4337 0000  
                        l6410 0892                          l6413 0897                          l6450 0000  
                        l6436 091E                          l6437 08F9                          l8543 0000  
                        l8560 095C                          l8554 0000                          l8619 0000  
                        l8567 0BA1                          l8586 0C54                          STR_1 1067  
                        STR_2 1023                          STR_3 10C8                          STR_4 1047  
                        STR_5 10BC                          STR_6 108F                          STR_7 110B  
                        STR_8 1155                          STR_9 1150                          _CREN 0CEC  
                        u3615 01FF                          u4264 007C                          u4265 007B  
                        _PEIE 005E                          u4284 00C6                          u4285 00C5  
                        _SEG3 3CC3                          _SEG5 3CC5                          _SEG6 3CC6  
                        u3675 0091                          _RCIE 048D                          _RCIF 008D  
                        u3925 0FCB                          u7125 0B9E                          u6255 0E57  
                        u6435 0ED4                          u7155 0BE2                          u6295 0EA5  
                        u7335 0D43                          _OERR 0CE9                          u6825 051E  
                        u6765 0AE6                          u7807 01B7                          u7665 08A7  
                        u7737 0872                          u7747 030C                          u7757 00DB  
                        u7767 0070                          u7777 0B16                          u7787 01A3  
                        u7797 01AC                          _WERR 3C8D                          _TRMT 0CF1  
                        _WREN 0CAA                ??_eeprom_write 0021                 _SimI2C_RecAck 028B  
                        _atoi 053F                          _main 0856                          fsr0h 0005  
                        fsr1h 0007                          fsr0l 0004                          indf0 0000  
                        indf1 0001                          fsr1l 0006                          btemp 007E  
               ?_SimI2C_NoAck 0070                          start 0029                 ??_SimI2C_Init 0020  
               ?_SimI2C_Start 0070                 ??_SimI2C_Stop 0020             ___bmul@multiplier 0022  
      ATCommand_WaitData@strx 0034               __end_of_InitMCU 017C                  InitGPRS@strx 003E  
               ?_InitVariable 0070         __end_of_LcdDisplayAll 0367         __end_of_LcdDisplayNum 0490  
                  _GetRomData 01D6               __end_of_PowerON 0FF2           __end_of_DisplayInit 013E  
                       l10722 033D                         l21137 0000                         l21146 0000  
                       l21155 0000                         l23212 0000                         l32021 0000  
                       l32101 0000                         l23221 0E0F                         l32031 0000  
                       l32023 0000                         l32103 0000                         l32111 0000  
                       l12832 0000                         l32041 0000                         l32033 0000  
                       l32025 0000                         l32105 0000                         l32121 0000  
                       l32113 0000                         l23209 0E07                         l32201 0000  
                       l33001 0BE5                         l32043 0000                         l32035 0000  
                       l32027 0000                         l32019 0000                         l32051 0000  
                       l32123 0000                         l30443 0000                         l30451 0000  
                       l30531 0F60                         l33011 0000                         l23228 0D9F  
                       l32045 0000                         l32037 0000                         l32029 0000  
                       l32061 0000                         l32053 0000                         l32117 0000  
                       l32109 0000                         l32141 0000                         l30445 0E2E  
                       l30453 01F6                         l30517 0000                         l30525 0000  
                       l32213 05BB                         l32301 0000                         l33101 0000  
                       l33021 0000                         l12782 0000                         l32047 0000  
                       l32039 0000                         l32071 0000                         l32063 0000  
                       l32055 0000                         l32119 0000                         l32135 0DBA  
                       l32127 0000                         l30455 020A                         l30447 0000  
                       l30471 0000                         l30519 0F26                         l30535 0F6F  
                       l30543 0000                         l32215 0000                         l32207 0000  
                       l32223 0000                         l32311 0000                         l23239 0000  
                       l33103 0000                         l33015 0000                         l33007 0BEF  
                       l32049 0000                         l32081 0000                         l32073 0000  
                       l32065 0000                         l32057 0000                         l32129 0000  
                       l30481 0000                         l30537 0F41                         l30545 0000  
                       l32217 0000                         l32209 05B5                         l32241 0E5E  
                       l32233 0E4F                         l32225 0000                         l32305 0361  
                       l32313 0000                         l32401 0000                         l33113 0CB1  
                       l33041 0C7A                         l33033 0C6B                         l33017 0BF9  
                       l33009 0000                         l33025 0C4E                         l33201 0B5A  
                       l32091 0000                         l32083 0000                         l32075 0000  
                       l32067 0000                         l32059 0000                         l32163 0000  
                       l32147 0DCA                         l30491 0000                         l30483 0000  
                       l30475 0000                         l30539 0F76                         l32243 0000  
                       l32235 0000                         l32315 0000                         l32331 0000  
                       l32323 0000                         l32403 0000                         l30803 01BF  
                       l12779 0B08                         l32411 0000                         l33203 0D7E  
                       l33123 0CEC                         l33107 0000                         l33051 0C7F  
                       l33115 0CE6                         l33027 0000                         l33019 0C03  
                       l32093 0000                         l32085 0000                         l32077 0000  
                       l32069 0000                         l32157 0DD9                         l32173 0000  
                       l30493 0000                         l30485 00A5                         l30477 009C  
                       l32181 0000                         l32245 0E62                         l32261 0EAB  
                       l30661 0000                         l32317 0000                         l32333 0000  
                       l32325 0000                         l32341 0000                         l32405 0000  
                       l32421 0000                         l30901 0000                         l32501 0000  
                       l33125 0000                         l33109 0000                         l33053 0000  
                       l33029 0000                         l33213 0901                         l33301 0000  
                       l32095 0000                         l32087 0000                         l32079 0000  
                       l30495 0000                         l30487 0000                         l30479 0000  
                       l32191 0000                         l32239 0000                         l32263 0000  
                       l32271 0000                         l30663 0000                         l30655 0000  
                       l32335 0000                         l32327 0000                         l32319 0EB4  
                       l32343 0000                         l32351 0000                         l14903 0000  
                       l30807 0197                         l32407 0000                         l32431 0000  
                       l30911 0000                         l32511 0000                         l33143 0000  
                       l33135 0D06                         l33127 0000                         l33071 0000  
                       l33063 0C99                         l33055 0000                         l33151 0D1C  
                       l33215 0904                         l33207 0000                         l33311 0000  
                       l33303 0000                         l32097 0000                         l32089 0000  
                       l32169 0DEC                         l30489 0000                         l30497 008B  
                       l32177 02E6                         l32193 0E22                         l32257 0E9F  
                       l32265 0EAF                         l32249 0000                         l32273 0000  
                       l30657 0000                         l32337 0000                         l32329 0000  
                       l32345 0000                         l32353 0000                         l32361 01D7  
                       l30809 01C2                         l32417 0000                         l32409 0000  
                       l32433 0000                         l32425 0D8B                         l32441 0000  
                       l30913 0080                         l32505 0000                         l32513 0000  
                       l32521 0000                         l14921 0AB4                         l33153 0D1D  
                       l33145 0000                         l33137 0000                         l33129 0000  
                       l33073 0000                         l33065 0000                         l33057 0000  
                       l33225 0917                         l33217 0000                         l33241 0000  
                       l33321 0000                         l33313 0000                         l33305 0000  
                       l33401 0000                         l14930 0000                         l32099 0000  
                       l30499 00B1                         l32187 05B1                         l32179 0000  
                       l32283 0000                         l32275 0F97                         l30667 0FD8  
                       l30659 0FC8                         l32339 0F04                         l32347 0000  
                       l32371 0000                         l32363 0000                         l32355 0000  
                       l32419 0000                         l32443 0B1D                         l30907 0000  
                       l30931 0000                         l32507 0000                         l32515 0000  
                       l32531 0000                         l32611 0000                         l32603 0000  
                       l14923 0AE8                         l33139 0000                         l33091 0000  
                       l33067 0000                         l33227 091A                         l33251 0000  
                       l33243 0000                         l33315 0000                         l33307 0000  
                       l33323 0000                         l33411 0000                         l33403 0000  
                       l14940 0000                         l32285 0FA4                         l32269 0000  
                       l30669 0000                         l32293 0000                         l32349 0000  
                       l32365 0000                         l32437 0D9B                         l32429 0000  
                       l32453 0B54                         l32445 0000                         l32461 053F  
                       l30909 0000                         l30941 0000                         l30933 0000  
                       l30925 00C1                         l32509 0000                         l32533 0000  
                       l32541 0000                         l32621 0000                         l33181 0000  
                       l33165 0D2E                         l33149 0CE7                         l33093 0000  
                       l33229 0000                         l33253 0000                         l33245 0000  
                       l33309 0000                         l33317 010D                         l33341 0000  
                       l33333 0000                         l33325 0000                         l33421 0881  
                       l33405 0000                         l32199 0000                         l32287 0000  
                       l32279 0000                         l32383 0000                         l30791 0000  
                       l32471 0560                         l32463 054B                         l30943 0000  
                       l30935 0000                         l30927 0000                         l30919 0000  
                       l32519 0000                         l32551 0000                         l32543 0000  
                       l32623 0238                         l32631 0000                         l14935 0520  
                       l32711 0000                         l33191 0000                         l33183 0000  
                       l33175 0D4D                         l33167 0000                         l33159 0000  
                       l33087 0CB6                         l33079 0CAF                         l33239 093D  
                       l33271 096E                         l33263 0000                         l33247 0000  
                       l33319 0000                         l33351 0E8F                         l33343 0000  
                       l33335 0000                         l33415 0000                         l33407 086B  
                       l32289 0FA7                         l32297 035A                         l32369 0000  
                       l32393 02F5                         l32385 0000                         l30793 0000  
                       l32449 0B49                         l32481 0591                         l32473 058D  
                       l32457 0000                         l30945 0000                         l30929 0000  
                       l32529 0000                         l32537 0000                         l32553 0000  
                       l32625 0266                         l32617 0000                         l32609 0000  
                       l32633 0000                         l32641 0000                         l32705 0000  
                       l32721 04EA                         l32713 0000                         l33193 0000  
                       l33185 0000                         l33169 0000                         l33089 0000  
                       l33273 0000                         l33265 0000                         l33249 0000  
                       l33257 0950                         l33281 0000                         l33353 0E90  
                       l33337 0000                         l33345 0E7F                         l33329 0E71  
                       l33361 0000                         l33433 0000                         l33417 0000  
                       l32299 035B                         l32395 0000                         l32387 0000  
                       l30795 0000                         l30787 0000                         l32483 0000  
                       l32467 0000                         l32459 0547                         l30947 0000  
                       l30939 00D8                         l32491 0000                         l32539 0000  
                       l32555 0000                         l32547 0000                         l32571 0000  
                       l32563 0000                         l32627 0000                         l32619 0000  
                       l32635 0000                         l32651 0000                         l32731 0000  
                       l32723 0000                         l32715 0000                         l32707 0000  
                       l32811 0053                         l33187 0000                         l33099 0CD0  
                       l33179 0D50                         l33275 0000                         l33283 0000  
                       l33355 0000                         l33339 0E75                         l33347 0E88  
                       l33371 032E                         l33451 08CA                         l33443 0000  
                       l33435 0000                         l33419 0000                         l25292 00AA  
                       l25285 0000                         l32397 0000                         l30797 0000  
                       l30789 0000                         l32493 0000                         l32549 01CD  
                       l32565 0000                         l32581 020F                         l32557 0000  
                       l32653 0000                         l32645 0000                         l32637 0A96  
                       l32741 0000                         l32717 0000                         l32709 0000  
                       l32821 0000                         l33189 0000                         l33285 0000  
                       l33349 0000                         l33373 0331                         l33365 0000  
                       l33357 0000                         l33461 08D3                         l33453 0000  
                       l33445 0000                         l33437 0000                         l33429 089B  
                       l25295 0000                         l32399 0000                         l30799 0000  
                       l32487 05A0                         l32479 0568                         l32583 0230  
                       l32559 0000                         l32591 0000                         l32671 0ADB  
                       l32663 0AC7                         l32655 0000                         l32647 0000  
                       l32639 0000                         l32743 0000                         l32735 0511  
                       l32719 0000                         l32751 0000                         l32903 0A50  
                       l32911 0A1A                         l33199 0000                         l33279 097B  
                       l33295 00F3                         l33287 0000                         l33383 0000  
                       l33375 0000                         l33367 0000                         l33463 0000  
                       l33455 0000                         l33447 0000                         l33439 0000  
                       l33391 0000                         l19072 0000                         l19057 0000  
                       l32585 0000                         l32577 0000                         l32681 0000  
                       l32665 0000                         l32657 0000                         l32649 0000  
                       l32745 0000                         l32737 0513                         l32729 04FE  
                       l32921 0A61                         l32905 0000                         l32913 0A57  
                       l32833 09A6                         l32817 0000                         l33297 00FD  
                       l33289 0000                         l33377 0000                         l33385 0343  
                       l33473 0000                         l33465 0000                         l33393 0000  
                       l19075 005E                         l32499 0000                         l32595 0000  
                       l32691 0000                         l32675 0000                         l32683 0A9B  
                       l32747 0000                         l32763 0000                         l32931 0A78  
                       l32923 0000                         l32843 0000                         l32835 0000  
                       l32827 099A                         l32819 0000                         l33387 0000  
                       l33379 0000                         l33475 08EC                         l33395 0000  
                       l31973 0387                         l32597 0000                         l32589 0000  
                       l32693 0000                         l32685 0AF3                         l32669 0AD9  
                       l32773 0000                         l32933 0000                         l32941 0A69  
                       l32853 09D3                         l32845 09BA                         l33389 0000  
                       l33477 0000                         l33469 0000                         l33397 0000  
                       l27414 0000                         l19078 0000                         l27415 0F07  
                       l32687 0000                         l32679 0AEC                         l32759 0000  
                       l32943 0A90                         l32871 0000                         l32847 09CD  
                       l32951 0000                         l33479 08EF                         l33399 0000  
                       l27352 0000                         l27441 0000                         l27361 0000  
                       l32689 0000                         l32697 0000                         l32793 003C  
                       l32881 09DC                         l32961 0B7B                         l27506 0F9C  
                       l27370 026D                         l27515 0000                         l27355 0000  
                       l32699 0000                         l32795 0000                         l32787 0000  
                       l32939 0000                         l32883 0A15                         l32867 09FA  
                       l32859 0000                         l32971 0B89                         l32955 0000  
                       l27452 0000                         l27372 027A                         l27380 0000  
                       l27364 0000                         l27509 0000                         l27373 027C  
                       l32797 0000                         l32893 0000                         l32869 0000  
                       l32877 09D6                         l32981 0000                         l32973 0000  
                       l32965 0000                         l32957 0000                         l32949 0000  
                       l27374 0000                         l27358 0000                         l27367 0000  
                       l32895 0000                         l32879 0000                         l32975 0000  
                       l27393 0DEF                         l27473 0000                         l27377 02B1  
                       l32897 0000                         l32889 0000                         l32985 0BBF  
                       l27395 0000                         l32995 0BCD                         l32979 0000  
                       l32997 0000                         l32989 0000                         l27479 0000  
                       l32999 0000                         l27808 0F79                         l27817 0000  
                       l27489 0000                         l27499 0000                         ?_atoi 0026  
                       ?_main 0070               __end_of___lbdiv 0FA9                         STR_10 108F  
                       STR_11 111D                         STR_12 1155                         STR_20 1137  
                       STR_13 1150                         STR_21 114A                         STR_22 1166  
                       STR_30 115A                         STR_14 107E                         STR_23 115F  
                       STR_31 112F                         STR_15 10AF                         STR_40 114A  
                       STR_32 1144                         STR_24 113E                         STR_16 109F  
                       STR_41 1163                         STR_17 1114                         STR_25 10EB  
                       STR_33 10D4                         STR_18 1155                         STR_26 1047  
                       STR_42 114A                         STR_34 10E0                         STR_19 1150  
                       STR_27 10EB                         STR_35 10F6                         STR_36 1163  
                       STR_28 1126                         STR_37 114A                         STR_29 1101  
                       STR_38 1166                         STR_39 1163               __end_of___lbmod 0FDC  
                       _CARRY 0018                         _ICCID 00A0                         _LCDEN 3C8F  
                       _T1CON 0018                         _T2CON 001C                         _LATB1 0869  
                       _LATA3 0863                         _LATA4 0864                         _LATD5 087D  
                       _LATD6 087E                         _LATD7 087F                         _LCDRL 0795  
                       _LCDPS 0792               __end_of___lwdiv 0E67                         _SEG11 3CCB  
                       _SEG21 3CD5                         _SEG22 3CD6                         _SEG23 3CD7  
                       _SEG16 3CD0               __end_of___lwmod 0EB4                         _RCREG 0199  
                       _RCSTA 019D                         _TMR1H 0017                         _TMR1L 0016  
                       _SPBRG 019B                    _TListIndex 0064               _OneWire_Command 00B3  
                       _WPUB7 106F                _LcdDisplay_CSQ 0FA9                         _TXREG 019A  
                       _TXSTA 019E                _LcdDisplay_Err 0367                         _TList 0120  
             __end_of_highISR 0029               __end_of_isdigit 05B3             OneWire_ReadByte@b 0021  
           OneWire_ReadByte@i 0023               __end_of_isgraph 04CD                         atoi@a 002D  
                       atoi@s 0026                         main@i 004D  __size_of_Uart1_PutString_Hex 0010  
             InteractServer@i 0045               InteractServer@j 0043               InteractServer@k 0044  
              ?_SimI2C_RecAck 0070               InteractServer@t 0040              __end_of_CallSend 098C  
            __end_of_CallProc 0E94                 Uart1_PutHex@b 0022                 Uart1_PutHex@c 0021  
              ??_SimI2C_NoAck 0020                         status 0003                         wtemp0 007E  
             __end_of_strncmp 0F79               ___lbdiv@divisor 0020                ??_SimI2C_Start 0020  
      __size_of_TCN75_ReadReg 0036               ___lbdiv@counter 0022                    _SimI2C_Ack 02C9  
                 InitSystem@x 002D                  __end_of_atoi 05A5                  __end_of_main 08F4  
              ??_InitVariable 0028              __end_of_InitGPRS 0A96           __size_of_TCN75_Init 0001  
                  _InitSystem 00E8       __size_of_GetVerify_CRC8 002C           __end_of_SimI2C_Init 02ED  
               InitGPRS@retry 0040           __end_of_SimI2C_Stop 02E6                 ??_SaveRomData 0027  
                      ??_atoi 0028                        ??_main 004A        __end_of_LcdDisplay_CSQ 0FC4  
         GetVerify_CRC8@Count 0020        __end_of_LcdDisplay_Err 0387           GetVerify_CRC8@pBuff 0023  
            ?_TCN75_SetConfig 0070              __end_of_TestProc 0351                        _ADCON1 009E  
                      _EEADRL 0191                        _EEDATA 0193                        _EECON1 0195  
                      _EECON2 0196                _ATCommand_Init 017C                _TxErrDataIndex 0068  
                      _ANSELA 018C                        _ANSELB 018D                        _ANSELD 018F  
                      _ANSELE 0190                        _LCDCON 0791                        _LCDSE0 0798  
                      _LCDCST 0794                        _LCDSE1 0799                        _LCDSE2 079A  
      __size_of_OneWire_Reset 0031                        _LCDREF 0793        OneWire_Command@command 0024  
           ?_DS18X20_ReadMeas 0070            __size_of_ReadTData 004A                        _TMR1IE 0488  
                      _TMR1IF 0088                        _TMR2IE 0489                        _TMR2IF 0089  
                      _TMR1ON 00C0                        _TMR2ON 00E2                        _TRISB1 0469  
                      _TRISA3 0463                        _TRISB2 046A                        _TRISA4 0464  
                      _TRISB7 046F                        _TRISD4 047C                        _TRISC6 0476  
                      _TRISD5 047D                        _TRISC7 0477                        _TRISD6 047E  
                      _TRISD7 047F               _LcdDisplay_CALL 0FDC            ??_DS18X20_ReadMeas 002A  
 __size_of_ATCommand_WaitData 0057                     ??_InitMCU 0020                        _DpyNum 0069  
            _OneWire_ReadByte 005B          __size_of_eeprom_read 0017                        _gFlags 0065  
                 _DisplayInit 011B                     ??_PowerON 0024                        _nWPUEN 04AF  
                      ___bmul 0E20         __end_of_GetVerify_Sum 020C                        ___wmul 05B3  
           ?_ATCommand_ProcRx 0070                     ??___lbdiv 0021                     ??___lbmod 0021  
             _SimI2C_ReadByte 02A9                     ??___lwdiv 0024                     ??___lwmod 0024  
     __end_of_OneWire_Command 00BF                   ?_GetRomData 0070            ??_ATCommand_ProcRx 0072  
             _SimI2C_SendByte 026A          __end_of_eeprom_write 0F22                     ??_highISR 0076  
             ?_LcdDisplay_CSQ 0070                        _strchr 0F79                        clrloop 05C9  
                      _strcpy 0E2C                        _strlen 0F22                        _strstr 0B1C  
             ?_LcdDisplay_Err 0070                 _TCN75_ReadReg 0234           SimI2C_SendByte@data 0020  
                   ??_isdigit 0020                     ??_isgraph 0070        __end_of_ATCommand_Init 0193  
         __end_of_SaveRomData 0306                Uart1_PutChar@c 0020                GetVerify_Sum@i 0026  
             ??_SimI2C_RecAck 0020         InteractServer@i_10583 003A         InteractServer@i_10578 0038  
       InteractServer@j_10590 003C                     ??_strncmp 002C              ___lbdiv@dividend 0021  
  __end_of_LcdDisplay_CurTemp 0F06                 ?_Uart1_PutHex 0070          _ATCommand_RetryTimes 0060  
  Uart1_PutString_Hex@pString 0023               ___lbmod@divisor 0020               ___lbmod@counter 0023  
             eeprom_read@addr 0022         TCN75_ReadReg@ErrTimes 0024         TCN75_ReadReg@RegPoint 0023  
          ATCommand_ProcRx@rx 0075                   _SimI2C_Init 02E6                   ?_SimI2C_Ack 0070  
         ___bmul@multiplicand 0020                   _SimI2C_Stop 02DC                __pcstackCOMMON 0070  
          MakeTxTemperature@T 0020            MakeTxTemperature@x 0022                  __pidataBANK0 0000  
                 ?_InitSystem 0070                 _OneWire_Reset 0193                 _isdigit$31774 0020  
             _MeasurementTick 0058              ___lbdiv@quotient 0023             __end_of_ReadTData 093E  
              ?_TCN75_ReadReg 0070          __end_of_SimI2C_NoAck 02DC                     ?_CallSend 0070  
                   ?_CallProc 0070          __end_of_SimI2C_Start 02A9                    _SystemTick 005C  
           eeprom_write@value 0020               ?_ATCommand_Init 0070                  ??_TCN75_Init 0020  
     __end_of_LcdDisplay_CALL 0FE2                ??_Uart1_PutHex 0021          __end_of_InitVariable 01D6  
          OneWire_Reset@Retry 0021       __size_of_InteractServer 0229                    __pbssBANK0 004E  
                  __pbssBANK1 00A0                    __pbssBANK2 0120                     ?_InitGPRS 0070  
    __size_of_Uart1_PutString 0011           __size_of_GetRomData 001D        __size_of_Uart1_PutChar 000A  
     __end_of_SimI2C_ReadByte 02C9                    __pmaintext 0856       __end_of_SimI2C_SendByte 028B  
                   ?_TestProc 0070                       ?___bmul 0020                ?_OneWire_Reset 0070  
                     ?___wmul 0020                _GetVerify_CRC8 0087                    __pintentry 0004  
          __end_of_TCN75_Init 01C5              ?_OneWire_Command 0070           _Uart1_PutString_Hex 0D9F  
                  __ptext2000 00E8                    __ptext2001 093E                    __ptext2010 0A96  
                  __ptext2002 08F4                    __ptext2011 0FE2                    __ptext2003 0B57  
                  __ptext2020 026A                    __ptext2012 0234                    __ptext2004 098C  
                  __ptext2021 029F                    __ptext2013 020C                    __ptext2005 002C  
                  __ptext2030 0193                    __ptext2022 00BF                    __ptext2014 01C5  
                  __ptext2006 0FF2                    __ptext2031 017C                    __ptext2023 005B  
                  __ptext2015 02DC                    __ptext2007 00B3                    __ptext2040 0F91  
                  __ptext2032 02ED                    __ptext2024 053F                    __ptext2016 02D5  
                  __ptext2008 04DF                    __ptext2041 0E94                    __ptext2033 01D6  
                  __ptext2025 0B1C                    __ptext2017 02C9                    __ptext2009 0D9F  
                  __ptext2050 0087                    __ptext2042 0E42                    __ptext2034 0FDC  
                  __ptext2026 0D80                    __ptext2018 02A9                    __ptext2051 01F3  
                  __ptext2043 05B3                    __ptext2035 0367                    __ptext2027 0E0F  
                  __ptext2019 028B                    __ptext2052 0E2C                    __ptext2044 0E20  
                  __ptext2036 0EB4                    __ptext2028 0B08                    __ptext2061 0499  
                  __ptext2053 0DEE                    __ptext2045 0F79                    __ptext2037 0FA9  
                  __ptext2029 01C4                    __ptext2062 04BF                    __ptext2054 0E05  
                  __ptext2046 0F41                    __ptext2038 0351                    __ptext2063 0000  
                  __ptext2055 0DAF                    __ptext2047 0F22                    __ptext2039 0FC4  
                  __ptext2056 0F06                    __ptext2048 05A5                    __ptext2057 013E  
                  __ptext2049 02E6                    __ptext2058 011B                    __ptext2059 0387  
             _ATCommand_Clear 0079                    __ptext1998 0306                    __ptext1999 0E67  
             _ATCommand_Flags 007A                   _SaveRomData 02ED                       ?_strchr 0020  
                     ?_strcpy 0020                       ?_strlen 0020                       ?_strstr 002D  
                  ??_CallSend 0046                    ??_CallProc 0047                       i1l30335 0012  
                     i1l30327 0000                       i1l30353 0000                       i1l30345 0000  
                     i1l30337 0000                       i1l30371 04B0                       i1l30363 0000  
                     i1l30355 04A3                       i1l30347 0000                       i1l30339 0018  
                     i1l30461 0000                       i1l30381 0000                       i1l30365 0000  
                     i1l30357 04A4                       i1l30349 0000                       i1l30383 0000  
                     i1l30375 04B3                       i1l30369 04AF                       i1l30467 04CB  
                     i1l30459 0000                       i1l30379 0000                       i1l14908 04A6  
                     i1l27446 0000             _DS18X20_ToDecicel 1013           __size_of_SimI2C_Ack 000C  
                  __stringtab 1000          ?_Uart1_PutString_Hex 0023                    ??_InitGPRS 0039  
         __size_of_InitSystem 0033                 _isgraph$31777 0070                       _CurTemp 0056  
                     _InitMCU 013E                       _SegCode 1001             _ATCommand_SendCmd 0A96  
      __end_of_GetVerify_CRC8 00B3                       _PowerON 0FE2                    ??_TestProc 0048  
           _ATCommand_RxCount 007B                       _RunTick 0077         __size_of_eeprom_write 001C  
           _DS18X20_StartMeas 0FF2               __size_of___bmul 000C                       ___lbdiv 0F91  
           _MakeTxTemperature 0DAF                       ___lbmod 0FC4            ?_ATCommand_SendCmd 0031  
             __size_of___wmul 0015                       ___lwdiv 0E42                       ___lwmod 0E94  
                   _LCDDATA10 07AA                     _LCDDATA11 07AB               ??_TCN75_ReadReg 0023  
          ?_DS18X20_StartMeas 0070            ?_MakeTxTemperature 0020         _ATCommand_WaitACKTick 0052  
                     _highISR 0004               __size_of_strchr 0018               __size_of_strcpy 0016  
             __size_of_strlen 001F                 _Uart1_PutChar 0E05           ??_ATCommand_SendCmd 0033  
             __size_of_strstr 003B                       _isdigit 05A5           ??_DS18X20_StartMeas 0025  
                     _isgraph 04BF      __end_of_OneWire_ReadByte 0087           ??_MakeTxTemperature 0022  
                   _SEG11COM0 3D0B                     _SEG11COM1 3D23                     _SEG11COM2 3D3B  
                   _SEG11COM3 3D53                     _SEG21COM1 3D2D                     _SEG21COM2 3D45  
                   _SEG21COM3 3D5D                     _SEG23COM0 3D17                     _SEG23COM1 3D2F  
                   _SEG23COM2 3D47                     _SEG23COM3 3D5F                     _SEG16COM0 3D10  
                   _SEG16COM1 3D28                     _SEG16COM2 3D40                     _SEG16COM3 3D58  
            ?_LcdDisplay_CALL 0070         ??_Uart1_PutString_Hex 0025                       _strncmp 0F41  
       TCN75_SetConfig@bRight 0024          end_of_initialization 0854               GetVerify_CRC8@i 0026  
      __size_of_LcdDisplayAll 0016        __size_of_LcdDisplayNum 0109                  _eeprom_write 0F06  
           InteractServer@res 0037     __end_of_ATCommand_SendCmd 0B08              ?_SimI2C_ReadByte 0070  
           _OneWire_WriteByte 00BF     __end_of_DS18X20_StartMeas 0FFB             ??_Uart1_PutString 0023  
             ??_OneWire_Reset 0020     __end_of_MakeTxTemperature 0DEE                  ?_DisplayInit 0070  
             ?_GetVerify_CRC8 0020              ?_SimI2C_SendByte 0070            ?_OneWire_WriteByte 0070  
            ??_LcdDisplay_CSQ 0025              ??_LcdDisplay_Err 0025         __size_of_SimI2C_NoAck 0007  
                __pstringtext 1000          __end_of_Uart1_PutHex 0D9F                  ??_GetRomData 0027  
   __size_of_DS18X20_ReadMeas 002F         __size_of_SimI2C_Start 000A                       strlen@s 0020  
         ??_OneWire_WriteByte 0020                ?_Uart1_PutChar 0070            OneWire_WriteByte@i 0023  
       __size_of_InitVariable 0011              ___lbmod@dividend 0022                 ?___delay_20ms 0020  
   __size_of_ATCommand_ProcRx 0026                _InteractServer 0B57                     InitGPRS@i 003D  
  __end_of_ATCommand_WaitData 0536      __size_of_TCN75_SetConfig 0028                   ___lbmod@rem 0024  
          __end_of_GetRomData 01F3     __end_of_OneWire_WriteByte 00E8                 ??_eeprom_read 0020  
                _SimI2C_NoAck 02D5                  ?_SimI2C_Init 0070                  ??_SimI2C_Ack 0020  
                _SimI2C_Start 029F                  ?_SimI2C_Stop 0070            _LcdDisplay_CurTemp 0EB4  
                ??_InitSystem 002D                  SaveRomData@i 0027                __end_of___bmul 0E2C  
                _InitVariable 01C5                __end_of___wmul 05C8                 _LcdDisplayAll 0351  
               _LcdDisplayNum 0387           ?_LcdDisplay_CurTemp 0070              ??_ATCommand_Init 0026  
              __end_of_strchr 0F91                __end_of_strcpy 0E42                __end_of_strlen 0F41  
              __end_of_strstr 0B57                ??___delay_20ms 0022           start_initialization 081C  
                   _ReadTData 08F4             __size_of_CallSend 004E             __size_of_CallProc 002D  
      __end_of_InteractServer 0D80            __end_of_SimI2C_Ack 02D5        __size_of_GetVerify_Sum 0019  
         _ATCommand_ErrString 00B5            GetVerify_CRC8@data 0025         __end_of_SimI2C_RecAck 029F  
          __end_of_InitSystem 011B          ??_LcdDisplay_CurTemp 0025             __size_of_InitGPRS 010A  
  GetVerify_CRC8@feedback_bit 0028    __size_of_ATCommand_SendCmd 0072    __size_of_DS18X20_StartMeas 0009  
                   _RomParams 0066    __size_of_MakeTxTemperature 003F          _TCN75_RegReadResualt 005E  
                    ??___bmul 0021                      ??___wmul 0024           __end_of_eeprom_read 0E05  
                _TCN75_Config 0063                ?_LcdDisplayAll 0070                   __pdataBANK0 0069  
              ?_LcdDisplayNum 0070           _NeedMeasurementTick 005A             __size_of_TestProc 004B  
             ??_Uart1_PutChar 0020                  ?_SaveRomData 0070                      ??_strchr 0024  
                    ??_strcpy 0022                      ??_strlen 0022                      ??_strstr 0031  
                 __pbssBIGRAM 215A                   __pbssCOMMON 0077                    ?_ReadTData 0070  
               __pcstackBANK0 0020               ?_InteractServer 0070                OneWire_Reset@r 0022  
            eeprom_write@addr 0021    __size_of_OneWire_WriteByte 0029                      ?_InitMCU 0070  
       __size_of_Uart1_PutHex 001F              ___lwdiv@dividend 0022             ??_TCN75_SetConfig 0023  
                    ?_PowerON 0070                   CallSend@ret 0046                      ?___lbdiv 0020  
                    ?___lbmod 0020                 _GetVerify_Sum 01F3                      ?___lwdiv 0020  
        __size_of_DisplayInit 0023                      ?___lwmod 0020              _DS18X20_ReadMeas 002C  
                    ?_highISR 0070                ReadTData@retry 002C                      ?_isdigit 0070  
                    ?_isgraph 0070      __size_of_OneWire_Command 000C             ?_OneWire_ReadByte 0070  
            _ATCommand_RxList 215A              _ATCommand_ProcRx 0499              ___lwdiv@quotient 0025  
                    _LCDDATA0 07A0                      _LCDDATA1 07A1                      _LCDDATA2 07A2  
                    _LCDDATA3 07A3                      _LCDDATA4 07A4                      _LCDDATA5 07A5  
                    _LCDDATA6 07A6                      _LCDDATA7 07A7                      _LCDDATA8 07A8  
                    _LCDDATA9 07A9            ??_OneWire_ReadByte 0020                      ?_strncmp 0026  
             _Uart1_PutString 0E0F                  _Uart1_PutHex 0D80                 CallProc@retry 0047  
              ___wmul@product 0024              ??_GetVerify_CRC8 0022                      _SEG3COM0 3D03  
                    _SEG3COM1 3D1B                      _SEG3COM2 3D33                      _SEG3COM3 3D4B  
                    _SEG5COM0 3D05                      _SEG5COM1 3D1D                      _SEG5COM2 3D35  
                    _SEG5COM3 3D4D                      _SEG6COM3 3D4E         OneWire_ReadByte@value 0022  
                 _eeprom_read 0DEE                LcdDisplayAll@x 0020          __end_of___delay_20ms 0B1C  
                   highISR@rx 0076               ??_LcdDisplayAll 0020                ?_GetVerify_Sum 0020  
             ??_LcdDisplayNum 0020          __size_of_SimI2C_Init 0007          __size_of_SimI2C_Stop 000A  
              SimI2C_RecAck@t 0020       TCN75_SetConfig@ErrTimes 0023         __end_of_TCN75_ReadReg 026A  
           ___wmul@multiplier 0020                      _CallSend 093E                      _CallProc 0E67  
 __end_of_Uart1_PutString_Hex 0DAF            _DS18X20_Scratchpad 00D3                   ??_ReadTData 002C  
          GetVerify_Sum@Count 0020            GetVerify_Sum@pBuff 0024                      _InitGPRS 098C  
                    _ErrState 0062       DS18X20_ReadMeas@bVerify 002A        Uart1_PutString@pString 0021  
           GetVerify_CRC8@crc 0029      __size_of_LcdDisplay_CALL 0006            _ATCommand_OkString 00C4  
            __size_of_InitMCU 003E                      _TestProc 0306         __end_of_OneWire_Reset 01C4  
          _ATCommand_WaitData 04DF              __size_of_PowerON 0010              __size_of___lbdiv 0018  
            __size_of___lbmod 0018                 _TxTemperature 004E      __size_of_SimI2C_ReadByte 0020  
            __size_of___lwdiv 0025              __size_of___lwmod 0020           TCN75_ReadReg@bRight 0025  
         InteractServer@txLen 003E           InteractServer@retry 0036           ?_ATCommand_WaitData 0070  
    __size_of_SimI2C_SendByte 0021              __size_of_highISR 0025       __end_of_Uart1_PutString 0E20  
        __size_of_SaveRomData 0019     GetVerify_CRC8@bit_counter 0024              __size_of_isdigit 000E  
            __size_of_isgraph 000E               ___lwdiv@divisor 0020        _ATCommand_WaitACKTimes 0054  
             ___lwdiv@counter 0024              __size_of_strncmp 0038                    strcpy@from 0020  
           ??_OneWire_Command 0024                 __size_of_atoi 0066                 __size_of_main 009E  
        ??_ATCommand_WaitData 0031                    strncmp@len 002A          LcdDisplay_CurTemp@t1 0027  
        LcdDisplay_CurTemp@t2 0028                      clear_ram 05C8               ??_GetVerify_Sum 0022  
              ___delay_20ms@x 0020                      atoi@sign 002C                      main@addr 004C  
      ATCommand_SendCmd@retry 0035                   GetRomData@i 0027              ??_InteractServer 0036  
     __size_of_LcdDisplay_CSQ 001B       __size_of_LcdDisplay_Err 0020                    _TCN75_Init 01C4  
                    isdigit@c 0021            InteractServer@addr 0042               _TCN75_SetConfig 020C  
                    isgraph@c 0071      __end_of_DS18X20_ReadMeas 005B                      intlevel1 0000  
            LcdDisplay_CSQ@t1 0025              LcdDisplay_CSQ@t2 0026                     strchr@chr 0022  
            ___lwmod@dividend 0022         __size_of___delay_20ms 0014                     strchr@ptr 0020  
 __size_of_LcdDisplay_CurTemp 0052         OneWire_WriteByte@temp 0022                     strncmp@s1 0026  
                   strncmp@s2 0028      __end_of_ATCommand_ProcRx 04BF           SimI2C_ReadByte@data 0020  
       ATCommand_SendCmd@strx 0036             ??_LcdDisplay_CALL 0020              GetVerify_Sum@sum 0025  
      __size_of_SimI2C_RecAck 0014         __end_of_Uart1_PutChar 0E0F          Uart1_PutString_Hex@c 0025  
        OneWire_WriteByte@val 0021               ___lwmod@divisor 0020              ?_Uart1_PutString 0021  
                    strcpy@cp 0025                      strlen@cp 0024                      strcpy@to 0024  
             ___lwmod@counter 0024             ??_SimI2C_ReadByte 0020                  ___delay_20ms 0B08  
        ATCommand_SendCmd@cmd 0031                      strstr@s1 002D                      strstr@s2 002F  
        ATCommand_SendCmd@res 0038             ??_SimI2C_SendByte 0020       __size_of_ATCommand_Init 0017  
               ?_eeprom_write 0020                  ?_eeprom_read 0070              SimI2C_ReadByte@i 0021  
            Uart1_PutString@c 0023     __size_of_OneWire_ReadByte 002C                 ??_DisplayInit 0020  
